var searchIndex = JSON.parse('{\
"all_combined":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","new_channel_maps","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"all_combined"],[3,"all_combined::infra"],[175,"all_combined::types"],[231,"dyn_clone::sealed"],[232,"dyn_clone::sealed"],[233,"clap_builder::builder::command"],[234,"core::fmt"],[235,"core::fmt"],[236,"clap_builder"],[237,"core::result"],[238,"hotshot_orchestrator::config"],[239,"hotshot_types::traits::node_implementation"],[240,"hotshot::traits::networking::web_server_network"],[241,"hotshot::traits::networking::libp2p_network"],[242,"hotshot::traits::networking::combined_network"],[243,"clap_builder::util::id"],[244,"core::option"],[245,"core::future::future"],[246,"alloc::boxed"],[247,"core::pin"],[248,"core::marker"],[249,"alloc::alloc"],[250,"alloc::sync"],[251,"alloc::rc"],[252,"libp2p_identity::keypair"],[253,"hotshot_types::message"],[254,"hotshot::traits::networking::libp2p_network"],[255,"hotshot_orchestrator::client"],[256,"hotshot::types::handle"],[257,"hotshot_types::block_impl"],[258,"alloc::vec"],[259,"core::any"],[260,"core::hash"],[261,"core::marker"],[262,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,56,57,58,59,56,57,58,59,44,56,57,58,59,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],0,0,0,0,0,0,0,0,[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,0,0,0,0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",231],[3,"Private",231],[8,"Any",232],[3,"Command",233],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",234],[6,"Result",234],[3,"ArgMatches",235],[6,"Error",236],[4,"Result",237],[3,"NetworkConfig",238],[3,"WebServerDARun",3],[8,"NodeType",239],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",240],[3,"Libp2pCommChannel",241],[3,"CombinedCommChannel",242],[3,"Id",243],[4,"Option",244],[8,"Future",245],[3,"Box",246],[3,"Pin",247],[8,"Sync",248],[3,"Global",249],[3,"Arc",250],[3,"Rc",251],[15,"u8"],[15,"array"],[3,"Keypair",252],[3,"Message",253],[3,"Libp2pNetwork",241],[3,"String",254],[3,"ValidatorArgs",255],[3,"SystemContextHandle",256],[3,"VIDTransaction",257],[3,"Vec",258],[3,"TypeId",232],[3,"WebServerNetwork",240],[3,"NodeImpl",175],[8,"Deserializer",259],[15,"bool"],[8,"Hash",260],[8,"Sized",248],[8,"BuildHasher",260],[8,"Hasher",260],[3,"DemoTypes",261],[3,"ChannelMaps",239],[8,"Serializer",262],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]]},\
"all_libp2p":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"all_libp2p"],[3,"all_libp2p::infra"],[175,"all_libp2p::types"],[219,"dyn_clone::sealed"],[220,"dyn_clone::sealed"],[221,"clap_builder::builder::command"],[222,"core::fmt"],[223,"core::fmt"],[224,"clap_builder"],[225,"core::result"],[226,"hotshot_orchestrator::config"],[227,"hotshot_types::traits::node_implementation"],[228,"hotshot::traits::networking::web_server_network"],[229,"hotshot::traits::networking::libp2p_network"],[230,"hotshot::traits::networking::combined_network"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"core::future::future"],[234,"alloc::boxed"],[235,"core::pin"],[236,"core::marker"],[237,"alloc::alloc"],[238,"alloc::sync"],[239,"alloc::rc"],[240,"libp2p_identity::keypair"],[241,"hotshot_types::message"],[242,"hotshot::traits::networking::libp2p_network"],[243,"hotshot_orchestrator::client"],[244,"hotshot::types::handle"],[245,"hotshot_types::block_impl"],[246,"alloc::vec"],[247,"core::any"],[248,"core::hash"],[249,"core::marker"],[250,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",219],[3,"Private",219],[8,"Any",220],[3,"Command",221],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",222],[6,"Result",222],[3,"ArgMatches",223],[6,"Error",224],[4,"Result",225],[3,"NetworkConfig",226],[3,"WebServerDARun",3],[8,"NodeType",227],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",228],[3,"Libp2pCommChannel",229],[3,"CombinedCommChannel",230],[3,"Id",231],[4,"Option",232],[8,"Future",233],[3,"Box",234],[3,"Pin",235],[8,"Sync",236],[3,"Global",237],[3,"Arc",238],[3,"Rc",239],[15,"u8"],[15,"array"],[3,"Keypair",240],[3,"Message",241],[3,"Libp2pNetwork",229],[3,"String",242],[3,"ValidatorArgs",243],[3,"SystemContextHandle",244],[3,"VIDTransaction",245],[3,"Vec",246],[3,"TypeId",220],[3,"WebServerNetwork",228],[3,"NodeImpl",175],[8,"Deserializer",247],[15,"bool"],[8,"Hash",248],[8,"Sized",236],[8,"BuildHasher",248],[8,"Hasher",248],[3,"DemoTypes",249],[3,"ChannelMaps",227],[8,"Serializer",250],[8,"RunDA",3],[6,"ThisRun",175]]},\
"all_webserver":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"all_webserver"],[3,"all_webserver::infra"],[175,"all_webserver::types"],[219,"dyn_clone::sealed"],[220,"dyn_clone::sealed"],[221,"clap_builder::builder::command"],[222,"core::fmt"],[223,"core::fmt"],[224,"clap_builder"],[225,"core::result"],[226,"hotshot_orchestrator::config"],[227,"hotshot_types::traits::node_implementation"],[228,"hotshot::traits::networking::web_server_network"],[229,"hotshot::traits::networking::libp2p_network"],[230,"hotshot::traits::networking::combined_network"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"core::future::future"],[234,"alloc::boxed"],[235,"core::pin"],[236,"core::marker"],[237,"alloc::alloc"],[238,"alloc::sync"],[239,"alloc::rc"],[240,"libp2p_identity::keypair"],[241,"hotshot_types::message"],[242,"hotshot::traits::networking::libp2p_network"],[243,"hotshot_orchestrator::client"],[244,"hotshot::types::handle"],[245,"hotshot_types::block_impl"],[246,"alloc::vec"],[247,"core::any"],[248,"core::hash"],[249,"core::marker"],[250,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",219],[3,"Private",219],[8,"Any",220],[3,"Command",221],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",222],[6,"Result",222],[3,"ArgMatches",223],[6,"Error",224],[4,"Result",225],[3,"NetworkConfig",226],[3,"WebServerDARun",3],[8,"NodeType",227],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",228],[3,"Libp2pCommChannel",229],[3,"CombinedCommChannel",230],[3,"Id",231],[4,"Option",232],[8,"Future",233],[3,"Box",234],[3,"Pin",235],[8,"Sync",236],[3,"Global",237],[3,"Arc",238],[3,"Rc",239],[15,"u8"],[15,"array"],[3,"Keypair",240],[3,"Message",241],[3,"Libp2pNetwork",229],[3,"String",242],[3,"ValidatorArgs",243],[3,"SystemContextHandle",244],[3,"VIDTransaction",245],[3,"Vec",246],[3,"TypeId",220],[3,"WebServerNetwork",228],[3,"NodeImpl",175],[8,"Deserializer",247],[15,"bool"],[8,"Hash",248],[8,"Sized",236],[8,"BuildHasher",248],[8,"Hasher",248],[3,"DemoTypes",249],[3,"ChannelMaps",227],[8,"Serializer",250],[8,"RunDA",3],[6,"ThisRun",175]]},\
"counter":{"doc":"","t":"F","n":["main"],"q":[[0,"counter"],[1,"core::result"]],"d":[""],"i":[0],"f":[[[],[[2,[1,1]]]]],"c":[],"p":[[15,"tuple"],[4,"Result",1]]},\
"hotshot":{"doc":"Provides a generic rust implementation of the <code>HotShot</code> BFT …","t":"NNNNRRDEDINNNDNNDNDDNNRLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMKLMLLMMALLLLLLLLLLLLLLLALLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLMLMMCKLLLLLLLLLLLLLMLALLLLLALLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLMMMMMMMMMMMMGDDDLLLLLLMLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLMLLLNENLLFFFFFFFLLLLLLLLLLLLLLLLLLLLLQIQNNQQNQNQQNNNNQEININQNIIQGIQNQNNNKKLLLLLKLLLLKKKKLLLLAAKLLLLKKKKKKLALLKLLLLKAKAKLLLLLKALKLLKLKLMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLADGDLLLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLDDDDDDDDDGDDMMMMMMMMMMMMMMMMMMMMNNDNDNDNDDNNEIDDNDNDNNNNRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAAMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLAMMMMMMMDDDLLLLLLLLLLLLLLLLLLLMFMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLENDDDGRLLLLLMLLLLLLLLMMLLLLLLLLLLMMLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLMMLLMMMLLMLMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLNENDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLMLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIDIDDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLMLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLKLKKLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLMLLLLMLLMLLLLLLLLLLLLLLLLMMLLLLLMMMMLLLLLMLLQQIQQIKKKKKKKKKNNGIKLKKKADDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLMLLLLLLLLLNNDEDNQQQQNIQDNLLLLLLLLLLLLKALLLLLLKLLLLLLLLLLLLLLLLLLLLLAMLLLLLLKKKLKKKKLALMLLLMLLLLLLLLLLLLMMLMMLKMKLLLLLLLLLLLLKMLLLMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLNNDENNNMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLMMLLLLLMLLLLLLL","n":["BlockError","Continue","FailedToBroadcast","FailedToMessageLeader","H_256","H_512","HotShotConsensusApi","HotShotError","HotShotInitializer","HotShotType","InsufficientValidSignatures","InvalidState","LeafNotFound","Memberships","Misc","NetworkFault","Networks","StorageError","SystemContext","SystemContextInner","TimeoutError","ViewTimeoutError","_DERIVE_core_fmt_Debug_FOR_HotShotConsensusApi","__clone_box","__clone_box","__clone_box","__clone_box","_metrics","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","channel_maps","clone","clone","clone_into","clone_into","config","consensus","consensus","consensus","create_or_obtain_chan_from_read","create_or_obtain_chan_from_write","da_membership","da_network","demo","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","documentation","drop","drop","drop","drop","drop","drop","drop","event_sender","fmt","fmt","fmt","from","from","from","from","from","from","from","from_genesis","from_reload","get_consensus","get_decided_leaf","get_next_view_timeout","get_state","header","id","in_current_span","init","init","init","init","init","init","init","init","inner","inner","inner","internal_event_stream","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_transactions","memberships","min_transactions","networks","new","output_event_stream","private_key","private_key","propose_max_round_time","propose_min_round_time","public_key","public_key","publish_transaction_async","quorum_membership","quorum_network","rand","run_tasks","run_tasks","send_broadcast_message","send_broadcast_message","send_da_broadcast","send_direct_da_message","send_direct_message","send_direct_message","send_event","send_transaction","should_start_round","shut_down_networks","source","start_consensus","storage","store_leaf","tasks","timeout_view","to_owned","to_owned","to_string","total_nodes","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","vid_membership","view_sync_membership","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_networks_ready","context","context","num_valid_signatures","source","source","source","source","source","source","state","threshold","view_number","DemoMembership","DemoNode","DemoState","DemoTypes","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_type_phantom","append","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","commit","committee_nodes_with_stake","compare","create_random_transaction","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_hash","get_hash","hash","hash","init","init","init","initialize","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","nodes_with_stake","on_commit","partial_cmp","prev_state_commitment","serialize","serialize","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_block","view_number","vzip","vzip","vzip","Dummy","GlobalEvent","Shutdown","__clone_box","__clone_box","add_consensus_task","add_da_task","add_network_event_task","add_network_message_task","add_transaction_task","add_vid_task","add_view_sync_task","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","BlockHeader","BlockPayload","BlockPayload","CentralizedServer","ChannelSend","CommitteeElectionConfig","CommitteeNetwork","CouldNotDeliver","Encode","Err","Error","Error","FailedToDeserialize","FailedToSerialize","Libp2p","MemoryNetwork","Metadata","NetworkError","NetworkReliability","NoSuchNode","NodeImplementation","Ok","QuorumNetwork","ShutDown","State","Storage","Storage","StorageResult","TestableNodeImplementation","Time","Timeout","Transaction","UnableToCancel","UnimplementedFeature","WebServer","append","append","append_single_view","as_any","as_any_mut","as_error_source","backtrace","block_genesis","borrow","borrow_mut","cause","chaos_send_msg","cleanup_storage_up_to_view","commit","committee_election_config_generator","construct_tmp_storage","deref","deref_mut","description","drop","dummy","election","encode","fmt","fmt","from","from","from_bytes","from_transactions","gen_comm_channels","genesis","get_anchored_view","get_full_state","header","implementations","in_current_span","init","initialize","into","into_any","into_any_arc","into_any_rc","leaf_create_random_transaction","networking","new_channel_maps","node_implementation","on_commit","sample_delay","sample_keep","sample_repeat","scramble","source","state_create_random_transaction","storage","to_string","transaction_commitments","try_from","try_into","txn_count","type_id","validate_block","vzip","source","source","source","source","source","source","source","DummyState","__clone_box","__clone_box","append","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","commit","create_random_transaction","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","initialize","into","into_any","into_any_arc","into_any_rc","nonce","on_commit","random","serialize","tag","to_owned","try_from","try_into","type_id","validate_block","vzip","static_committee","GeneralStaticCommittee","StaticCommittee","StaticElectionConfig","__clone_box","__clone_box","__clone_box","__clone_box","_type_phantom","_type_phantom","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committee_nodes_with_stake","committee_nodes_with_stake","create_election","default","default_election_config","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","failure_threshold","fmt","fmt","from","from","get_committee","get_committee_qc_stake_table","get_hash","get_leader","get_stake","has_stake","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","nodes_with_stake","nodes_with_stake","num_nodes","serialize","success_threshold","to_owned","to_owned","total_nodes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CombinedCommChannel","CombinedNetworks","Libp2pCommChannel","Libp2pNetwork","MasterMap","MemoryCommChannel","MemoryNetwork","MemoryStorage","NetworkingMetricsValue","PeerInfoVec","WebCommChannel","WebServerNetwork","alloc","connected_peers","id","incoming_broadcast_message_count","incoming_direct_message_count","inner","inner","inner","inner","map","message_cache","message_failed_to_send","networks","outgoing_broadcast_message_count","outgoing_direct_message_count","phantom","primary_down","ptr","server_shutdown_signal","values","CentralizedServer","ChannelSend","ChannelSendSnafu","CouldNotDeliver","CouldNotDeliverSnafu","FailedToDeserialize","FailedToDeserializeSnafu","FailedToSerialize","FailedToSerializeSnafu","InnerNetworkingMetrics","Libp2p","MemoryNetwork","NetworkError","NetworkReliability","NetworkingMetrics","NetworkingMetricsValue","NoSuchNode","NoSuchNodeSnafu","ShutDown","ShutDownSnafu","Timeout","UnableToCancel","UnimplementedFeature","WebServer","_DERIVE_core_fmt_Debug_FOR_InnerNetworkingMetrics","_DERIVE_core_fmt_Debug_FOR_NetworkingMetrics","_DERIVE_core_fmt_Debug_FOR_NetworkingMetricsValue","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","chaos_send_msg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combined_network","connected_peers","counters","create_counter","create_gauge","create_histogram","create_label","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","gauges","histograms","incoming_broadcast_message_count","incoming_direct_message_count","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","labels","libp2p_network","memory_network","message_failed_to_send","new","outgoing_broadcast_message_count","outgoing_direct_message_count","prefix","sample_delay","sample_keep","sample_repeat","scramble","set","set","sub","subgroup","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","values","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","web_server_network","source","source","source","source","source","source","source","Cache","CombinedCommChannel","CombinedNetworks","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast_message","cache","calculate_hash_of","capacity","clone","clone","clone","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref_mut","deref_mut","deref_mut","direct_message","drop","drop","drop","fmt","fmt","fmt","from","from","from","generate_network","generator","generator","hashes","in_flight_message_count","in_flight_message_count","init","init","init","inject_consensus_info","insert","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_ready","message_cache","networks","new","new","pause","primary","primary_down","queue_node_lookup","recv_msgs","resume","secondary","shut_down","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_ready","Empty","Empty","Libp2pCommChannel","Libp2pNetwork","Libp2pNetworkInner","PeerInfoVec","QC_TOPIC","__clone_box","__clone_box","__clone_box","__clone_box","_add_known_peers","alloc","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap_addrs","bootstrap_addrs_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","broadcast_recv","broadcast_send","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dht_timeout","direct_message","direct_message","direct_recv","direct_send","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","generate_network","generator","generator","handle","in_flight_message_count","in_flight_message_count","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_bootstrapped","is_da","is_ready","is_ready","is_ready","latest_seen_view","metrics","new","new","node_lookup_send","pause","phantom","pk","ptr","queue_node_lookup","queue_node_lookup","recv_msgs","recv_msgs","resume","serialize","shut_down","shut_down","spawn_connect","spawn_event_generator","spawn_node_lookup","to_owned","to_owned","topic_map","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","wait_for_ready","Broadcast","Combo","Direct","MasterMap","MemoryCommChannel","MemoryNetwork","MemoryNetworkInner","_DERIVE_core_fmt_Debug_FOR_MasterMap","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_input","broadcast_input","broadcast_message","broadcast_message","broadcast_output","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direct_input","direct_input","direct_message","direct_message","direct_output","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_network","generator","generator","id","in_flight_message_count","in_flight_message_count","in_flight_message_count","init","init","init","init","init","inner","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_ready","is_ready","map","master_map","metrics","new","new","new","pause","recv_msgs","recv_msgs","reliability_config","resume","shut_down","shut_down","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","Inner","RecvMsg","RecvMsgTrait","SendMsg","SendMsgTrait","WebCommChannel","WebServerNetwork","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_own_key","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","broadcast_poll_queue","client","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connected","create","dac_task_map","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","direct_message","direct_message","direct_poll_queue","drop","drop","drop","drop","drop","endpoint","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_network","generator","generator","get_endpoint","get_endpoint","get_message","get_message","get_message","get_message","get_message_from_web_server","get_txs_from_web_server","in_flight_message_count","in_flight_message_count","init","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_da","is_ready","is_ready","message","message","new","parse_post_message","pause","pause","poll_web_server","post_message_to_web_server","proposal_task_map","recv_msgs","recv_msgs","resume","resume","running","serialize","serialize","server_shutdown_signal","shut_down","shut_down","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_index","txn_task_map","type_id","type_id","type_id","type_id","type_id","vid_disperse_task_map","view_sync_cert_task_map","view_sync_vote_task_map","vote_task_map","vzip","vzip","vzip","vzip","vzip","wait_between_polls","wait_for_ready","wait_for_ready","CommitteeElectionConfig","CommitteeNetwork","NodeImplementation","QuorumNetwork","Storage","TestableNodeImplementation","block_genesis","committee_election_config_generator","construct_tmp_storage","gen_comm_channels","get_full_state","leaf_create_random_transaction","new_channel_maps","state_create_random_transaction","txn_count","Err","Ok","Result","Storage","append","append_single_view","cleanup_storage_up_to_view","commit","get_anchored_view","memory_storage","MemoryStorage","MemoryStorageInternal","__clone_box","__clone_box","append","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cleanup_storage_up_to_view","clone","clone_into","commit","construct_tmp_storage","deref","deref","deref_mut","deref_mut","drop","drop","empty","failed","from","from","get_anchored_view","get_full_state","init","init","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","stored","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Decide","Error","Event","EventType","Message","NextLeaderViewTimeout","PrivateKey","PureAssembledSignatureType","QCParams","QCType","ReplicaViewTimeout","SignatureKey","StakeTableEntry","SystemContextHandle","ViewFinished","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assemble","bn254","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","event","event","fmt","fmt","fmt","from","from","from","from_bytes","from_private","generated_from_seed_indexed","get_hash","get_public_key","get_public_parameter","get_sig_proof","get_stake_table_entry","get_view_number","handle","hash","hotshot","init","init","init","internal_event_stream","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","kind","output_event_stream","purpose","registry","sender","serialize","sign","storage","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","view_number","vzip","vzip","vzip","block_size","error","leaf_chain","qc","view_number","view_number","view_number","BLSPrivKey","BLSPubKey","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","assemble","borrow","borrow","borrow_mut","borrow_mut","check","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_bytes","from_private","generate","generate_from_seed","generated_from_seed_indexed","generated_from_seed_indexed","get_hash","get_hash","get_public_key","get_public_parameter","get_seed_from_seed_indexed","get_sig_proof","get_stake_table_entry","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","priv_key","pub_key","serialize","serialize","sign","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate","vzip","vzip","Decide","Error","Event","EventType","NextLeaderViewTimeout","ReplicaViewTimeout","ViewFinished","event","view_number","block_size","error","leaf_chain","qc","view_number","view_number","view_number","SystemContextHandle","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","get_consensus","get_current_view","get_decided_leaf","get_event_stream","get_event_stream_known_impl","get_internal_event_stream_known_impl","get_leader","get_next_leader_receiver_channel_len","get_next_view_timeout","get_public_key","get_replica_receiver_channel_len","get_state","hotshot","init","internal_event_stream","into","into_any","into_any_arc","into_any_rc","maybe_do_genesis_init","output_event_stream","registry","send_broadcast_consensus_message","send_direct_consensus_message","shut_down","start_consensus_deprecated","storage","storage","submit_transaction","to_owned","try_from","try_into","type_id","vzip","wait_for_networks_ready"],"q":[[0,"hotshot"],[228,"hotshot::HotShotError"],[240,"hotshot::demo"],[351,"hotshot::tasks"],[384,"hotshot::traits"],[481,"hotshot::traits::NetworkError"],[488,"hotshot::traits::dummy"],[531,"hotshot::traits::election"],[532,"hotshot::traits::election::static_committee"],[609,"hotshot::traits::implementations"],[641,"hotshot::traits::networking"],[925,"hotshot::traits::networking::NetworkError"],[932,"hotshot::traits::networking::combined_network"],[1032,"hotshot::traits::networking::libp2p_network"],[1171,"hotshot::traits::networking::memory_network"],[1313,"hotshot::traits::networking::web_server_network"],[1493,"hotshot::traits::node_implementation"],[1508,"hotshot::traits::storage"],[1518,"hotshot::traits::storage::memory_storage"],[1569,"hotshot::types"],[1688,"hotshot::types::EventType"],[1695,"hotshot::types::bn254"],[1785,"hotshot::types::event"],[1794,"hotshot::types::event::EventType"],[1801,"hotshot::types::handle"],[1849,"dyn_clone::sealed"],[1850,"dyn_clone::sealed"],[1851,"core::error"],[1852,"snafu::backtrace_shim"],[1853,"core::option"],[1854,"hotshot_types::traits::node_implementation"],[1855,"core::clone"],[1856,"hotshot_types::consensus"],[1857,"async_lock::rwlock"],[1858,"alloc::sync"],[1859,"hotshot_types::traits::node_implementation"],[1860,"core::fmt"],[1861,"core::fmt"],[1862,"color_eyre::section"],[1863,"core::fmt"],[1864,"core::marker"],[1865,"hotshot_types::consensus"],[1866,"hotshot_task::event_stream"],[1867,"alloc::alloc"],[1868,"alloc::boxed"],[1869,"alloc::rc"],[1870,"core::num::nonzero"],[1871,"core::time"],[1872,"core::future::future"],[1873,"core::pin"],[1874,"hotshot_types::message"],[1875,"core::convert"],[1876,"hotshot_types::message"],[1877,"alloc::string"],[1878,"core::any"],[1879,"core::cmp"],[1880,"commit"],[1881,"rand_core"],[1882,"serde::de"],[1883,"core::hash"],[1884,"core::marker"],[1885,"hotshot_task::task_launcher"],[1886,"hotshot_task_impls::network"],[1887,"hotshot_types::traits::network"],[1888,"hotshot_types::traits::storage"],[1889,"alloc::vec"],[1890,"hotshot_types::traits::storage"],[1891,"hotshot_types::traits::storage"],[1892,"core::iter::traits::iterator"],[1893,"core::iter::traits::collect"],[1894,"hotshot_types::traits::node_implementation"],[1895,"core::cmp"],[1896,"hotshot_types::traits::metrics"],[1897,"hotshot_types::traits::metrics"],[1898,"libp2p_identity::peer_id"],[1899,"multiaddr"],[1900,"hotshot_types::traits::network"],[1901,"async_compatibility_layer::channel::unbounded::inner"],[1902,"url"],[1903,"hotshot_types::traits::network"],[1904,"bitvec::slice"],[1905,"hotshot_types::traits::signature_key"],[1906,"primitive_types"],[1907,"bitvec::vec"],[1908,"hotshot_types::traits::signature_key"],[1909,"futures_core::stream"],[1910,"hotshot_task::event_stream"]],"d":["Failure in the block.","Internal value used to drive the state machine","Failed to broadcast a message on the network","Failed to Message the leader in the given stage","Length, in bytes, of a 256 bit hash","Length, in bytes, of a 512 bit hash","A handle that exposes the interface that hotstuff needs to …","Reexport error type Error type for <code>HotShot</code>","initializer struct for creating starting block","[<code>HotShot</code>] implementations that depend on […","Not enough valid signatures for a quorum","Invalid state machine state","Item was not present in storage","Bundle of all the memberships a consensus instance uses","Miscelaneous error TODO fix this with #181 …","Failure in networking layer","Bundle of the networks used in consensus","Error accesing storage","Thread safe, shared view of a <code>HotShot</code>","Holds the state needed to participate in <code>HotShot</code> consensus","HotShot timed out waiting for msgs","HotShot timed out during round","","","","","","the metrics that the implementor is using.","Phantom for TYPES and I","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channels for sending/recv-ing proposals and votes for …","","","","","Configuration items for this hotshot instance","Get the [<code>hotstuff</code>] field of [<code>HotShot</code>].","","The hotstuff implementation","given a view number and a upgradable read lock on a …","given a view number and a write lock on a channel map, …","DA","Network for reaching the DA committee","Sequencing consensus demo","","","","","","","","","","","","","","","","HotShot: A linear time, committee electing, BFT Protocol.","","","","","","","","Sender for <code>Event</code>s","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","initialize from genesis","reload previous state based on most recent leaf","Returns a copy of the consensus struct","Returns a copy of the last decided leaf","return the timeout for a view for <code>self</code>","Returns a copy of the state","","uid for instrumentation","","","","","","","Initializes a new hotshot and does the work of setting up …","","","the leaf specified initialization","Handle to internal hotshot implementation","Reference to the <code>SystemContextInner</code>","access to the internal event stream, in case we need to, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Memberships used by consensus","","Networks used by the instance of hotshot","Creates a new hotshot with the given configuration options …","Access to the output event stream.","","The private key of this node","","","","The public key of this node","Publishes a transaction asynchronously to the network","Quorum Membership","Newtork for reaching all nodes","Reexport rand crate","Spawn all tasks that operate on the given [<code>HotShot</code>].","","Send a broadcast message.","","","","Send a direct message to a given recipient.","","","","Generates and encodes a vote token","shut down all networks","","“Starts” consensus by sending a <code>QCFormed</code> event","This <code>HotShot</code> instance’s storage backend","","Provides a number of tasks that run continuously on a […","Marks a given view number as timed out. This should be …","","","","","Contains traits consumed by [<code>HotShot</code>]","","","","","","","","","","","","","","","","","","","","","","Contains types used by the crate","VID","View Sync","","","","","","","","wait for all networks to be ready","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","The underlying block error.","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","Alias for the static committee used in the Demo apps","The node implementation for the sequencing demo","sequencing demo entry state","Implementation of <code>NodeType</code> for [<code>VDemoNode</code>]","","","","","","","Node type phantom","","","","","","","","the block height","","","","","","","","","","","","","","","The nodes on the static committee and their stake","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Create a new <code>DemoNode</code>","All the nodes participating and their stake","","","the previous state commitment","","","","","","","","","","","","","","","","","the view number","","","","dummy (TODO delete later)","event for global event stream","shut everything down","","","add the consensus task","add the Data Availability task","Add the network task to handle events and send messages.","Add the network task to handle messages and publish events.","add the Transaction Handling task","add the VID task","add the view sync task","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","The type of block header this state is associated with","Abstraction over the full contents of a block","The type of block payload this state is associated with","Centralized server specific errors","Error sending output to consumer of …","Election config for the DA committee","Network for those in the DA committee","Could not deliver a message to a specified recipient","Encoded payload.","Contains the error value","The error type for this type of block","The error type for this particular type of ledger state","Failed to deserealize a network message","Failed to serialize a network message","Libp2p specific errors","memory network specific errors","Data created during block building which feeds into the …","Error type for networking","interface describing how reliable the network is","Attempted to deliver a message to an unknown node","Node implementation aggregate trait","Contains the success value","Network for all nodes","The underlying connection has been shut down","Abstraction over the state that blocks modify","Abstraction over on disk persistence of node state","Storage type for this consensus implementation","Result for a storage type","extra functions required on a node implementation to be …","Time compatibility needed for reward collection","A timeout occurred","The type of the transitions we are applying","unable to cancel a request, the request has already been …","unimplemented functionality","Web server specific errors","Appends the given block header to this state, returning an …","Append the list of views to this storage","Insert a single view. Shorthand for","","","","","generate a genesis block","","","","given a message and a way to send the message, decide …","Cleans up the storage up to the given view. The given view …","Commit this storage.","Generates a committee-specific election","Create ephemeral storage Will be deleted/lost immediately …","","","","","Dummy testing implementations","Sortition trait elections used for consensus","Encode the payload","","","Returns the argument unchanged.","","Build a payload with the encoded transaction bytes and …","Build a payload and associated metadata with the …","Generate the communication channels for testing","Build the genesis payload and metadata.","Get the latest anchored view","Return the full internal state. This is useful for …","","Module for publicly usable implementations of the traits","","","Initialize the state.","Calls <code>U::from(self)</code>.","","","","Creates random transaction if possible otherwise panics …","Network access compatibility","Create channels for sending/recv-ing proposals and votes …","Composite trait for node behavior","Gets called to notify the persistence backend that this …","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","number of times to repeat the packet","scramble the packet","","Creates random transaction if possible otherwise panics …","Abstraction over on-disk storage of node state","","List of transaction commitments.","","","the number of transactions in a block","","Returns true if and only if the provided block header is …","","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","The dummy state","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","Generate a random <code>DummyState</code>","","","","","","","","","static (round robin) committee election","Dummy implementation of <code>Membership</code>","static committee using a vrf kp","configuration for static committee. stub for now","","","","","Node type phantom","Node type phantom","","","","","","","","","","","","","The nodes on the static committee and their stake","The nodes on the static committee and their stake","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Clone the public key and corresponding stake table for …","","Index the vector of public keys with the current view …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new dummy elector","All the nodes participating and their stake","All the nodes participating and their stake","Number of nodes on the committee","","","","","","","","","","","","","","A communication channel with 2 networks, where we can fall …","Wrapper for the tuple of <code>WebServerNetwork</code> and <code>Libp2pNetwork</code>","libp2p identity communication channel","Networking implementation that uses libp2p generic over <code>M</code> …","Shared state for in-memory mock networking.","memory identity communication channel","In memory only network simulator.","In memory, ephemeral, storage for a <code>HotShot</code> instance","Contains several <code>NetworkingMetrics</code> that we’re interested …","Type alias for a shared collection of peerid, multiaddrs","Represents the communication channel abstraction for the …","The web server network state","","A <code>Gauge</code> which tracks how many peers are connected","The id of this <code>MemoryNetwork</code> cluster","A <code>Counter</code> which tracks how many messages have been …","A <code>Counter</code> which tracks how many messages have been …","holds the state of the libp2p network","The actual internal state","The inner, core state of the web server network","The inner state of this <code>MemoryStorage</code>","The list of <code>MemoryNetwork</code>s","Last n seen messages to prevent processing duplicates","A <code>Counter</code> which tracks how many messages failed to send","The two networks we’ll use for send/recv","A <code>Counter</code> which tracks how many messages have been send by …","A <code>Counter</code> which tracks how many messages have been send …","","If the primary network is down (0) or not, and for how …","","An optional shutdown signal. This is only used when this …","The values that are being tracked","Centralized server specific errors","Error sending output to consumer of …","SNAFU context selector for the <code>NetworkError::ChannelSend</code> …","Could not deliver a message to a specified recipient","SNAFU context selector for the …","Failed to deserealize a network message","SNAFU context selector for the …","Failed to serialize a network message","SNAFU context selector for the …","the set of counters and gauges for the networking metrics","Libp2p specific errors","memory network specific errors","Error type for networking","interface describing how reliable the network is","The wrapper with a string name for the networking metrics","Contains several <code>NetworkingMetrics</code> that we’re interested …","Attempted to deliver a message to an unknown node","SNAFU context selector for the <code>NetworkError::NoSuchNode</code> …","The underlying connection has been shut down","SNAFU context selector for the <code>NetworkError::ShutDown</code> …","A timeout occurred","unable to cancel a request, the request has already been …","unimplemented functionality","Web server specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","given a message and a way to send the message, decide …","","","","","","","","","","","","","","","","","","","Networking Implementation that has a primary and a …","A <code>Gauge</code> which tracks how many peers are connected","All the counters of the networking metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All the gauges of the networking metrics","All the histograms of the networking metrics","A <code>Counter</code> which tracks how many messages have been …","A <code>Counter</code> which tracks how many messages have been …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the labels of the networking metrics","Libp2p based/production networking implementation This …","In memory network simulator","A <code>Counter</code> which tracks how many messages failed to send","Create a new instance of this <code>NetworkingMetricsValue</code> …","A <code>Counter</code> which tracks how many messages have been send by …","A <code>Counter</code> which tracks how many messages have been send …","a prefix which tracks the name of the metric","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","number of times to repeat the packet","scramble the packet","","","For the creation and naming of gauge, counter, histogram …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The values that are being tracked","a map of values","","","","","","","","","","A network implementation that connects to a web server.","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","A cache to keep track of the last n messages we’ve seen, …","A communication channel with 2 networks, where we can fall …","Wrapper for the tuple of <code>WebServerNetwork</code> and <code>Libp2pNetwork</code>","","","","","","","","","","","","","","","","","","","","The cache itself","Helper function to calculate a hash of a type that …","The maximum number of items to store in the cache","","","","","","","Check if the cache contains a hash","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The hashes of the messages in the cache, in order of …","Get the number of messages in-flight.","Get the number of messages in-flight.","","","","","Insert a hash into the cache","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Last n seen messages to prevent processing duplicates","The two networks we’ll use for send/recv","Create a new cache with the given capacity","Constructor","","Get a ref to the primary network","If the primary network is down (0) or not, and for how …","","","","Get a ref to the backup network","","","","","","","","","","","","","","","","","","Stubbed out Ack","Empty value","libp2p identity communication channel","Networking implementation that uses libp2p generic over <code>M</code> …","The underlying state of the libp2p network","Type alias for a shared collection of peerid, multiaddrs","hardcoded topic of QC used","","","","","make network aware of known peers","","","","","","","","","","this is really cheating to enable local tests hashset of …","bootstrap","","","","","","","","","","","map of known replica peer ids to public keys","Sender for broadcast messages","","","","","","","","","","","","","max time before dropping message due to DHT error","","","Receiver for direct messages","Sender for direct messages (only used for sending messages …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a boxed function …","Returns a boxed function …","handle to control the network","","","","","","","","","holds the state of the libp2p network","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","whether or not we’ve bootstrapped into the DHT yet","if we’re a member of the DA committee or not","","","whether or not the network is ready to send","the latest view number (for node lookup purposes) NOTE: …","The networking metrics we’re keeping track of","Constructs new network for a node. Note that this network …","create a new libp2p communication channel","Sender for node lookup (relevant view number, key of node) …","","","this node’s public key","","","","","","","","","","Initiates connection to the outside world","task to propagate messages to handlers terminates on shut …","Spawns task for looking up nodes pre-emptively","","","topic map hash(hashset) -&gt; topic btreemap ordered so is …","","","","","","","","","","","","","","","","","","Returns when network is ready","","Broadcast message","Internal enum for combining streams","Direct message","Shared state for in-memory mock networking.","memory identity communication channel","In memory only network simulator.","Internal state for a <code>MemoryNetwork</code> instance","","","","","","","","","","","","","","","","","","","","","","","","","","Send a <code>Vec&lt;u8&gt;</code> message to the inner <code>broadcast_input</code>","Input for broadcast messages","","","Output for broadcast messages","","","","","","","","","","","","","","","Send a <code>Vec&lt;u8&gt;</code> message to the inner <code>direct_input</code>","Input for direct messages","","","Output for direct messages","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The id of this <code>MemoryNetwork</code> cluster","","","Count of messages that are in-flight (send but not …","","","","","","The actual internal state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The list of <code>MemoryNetwork</code>s","The master map","The networking metrics we’re keeping track of","Create a new, empty, <code>MasterMap</code>","Creates a new <code>MemoryNetwork</code> and hooks it up to the group …","create new communication channel","","","","config to introduce unreliability to the network","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the core of web server networking","A message being received from the web server","Trait for messages being received from the web server","A message being sent to the web server","Trait for messages being sent to the web server","Represents the communication channel abstraction for the …","The web server network state","","","","","","","","","Our own key","","","","","","","","","","","","","","","","","","","","","broadcast message to those listening on the communication …","broadcast message to some subset of nodes blocking","Queue for broadcasted messages","The connectioni to the web server","","","","","","","","","The web server connection is ready","Creates a new instance of the <code>WebServerNetwork</code>","Task map for DACs.","","","","","","","","","","","","","Sends a direct message to a specific node blocking","Sends a direct message to a specific node blocking","Queue for direct messages","","","","","","The endpoint to send the message to","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the endpoint to send the message to","","Returns the actual message being sent","Returns the actual message being received","","","Sends a GET request to the webserver for some specified …","Fetches transactions from web server","","","","","","","","","","The inner, core state of the web server network","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Whether we are connecting to a DA server","checks if the network is ready nonblocking","checks if the network is ready nonblocking","The optional message, or body, to send","The optional message being received","Create new communication channel","Parses a message to find the appropriate endpoint Returns …","","Pauses the underlying network","Pull a web server.","Post a message to the web server and return the result","Task map for quorum proposals.","Moves out the entire queue of received messages of ’…","Moves out the entire queue of received messages of ’…","","Resumes the underlying network","Client is running","","","An optional shutdown signal. This is only used when this …","Shut down this network. Afterwards this network should no …","Blocks until the network is shut down then returns true","","","","","","","","","","","","","","","The last tx_index we saw from the web server","Task map for transactions","","","","","","Task map for VID disperse data","Task map for view sync certificates.","Task map for view sync votes.","Task map for quorum votes.","","","","","","The duration to wait between poll attempts","Blocks until node is successfully initialized into the …","Blocks until the network is successfully initialized","Election config for the DA committee","Network for those in the DA committee","Node implementation aggregate trait","Network for all nodes","Storage type for this consensus implementation","extra functions required on a node implementation to be …","generate a genesis block","Generates a committee-specific election","Create ephemeral storage Will be deleted/lost immediately …","Generate the communication channels for testing","Return the full internal state. This is useful for …","Creates random transaction if possible otherwise panics …","Create channels for sending/recv-ing proposals and votes …","Creates random transaction if possible otherwise panics …","the number of transactions in a block","Contains the error value","Contains the success value","Result for a storage type","Abstraction over on disk persistence of node state","Append the list of views to this storage","Insert a single view. Shorthand for","Cleans up the storage up to the given view. The given view …","Commit this storage.","Get the latest anchored view","<code>HashMap</code> and <code>Vec</code> based implementation of the storage trait","In memory, ephemeral, storage for a <code>HotShot</code> instance","Internal state for a <code>MemoryStorage</code>","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of the memory storage with the given …","The views that have failed","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The inner state of this <code>MemoryStorage</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The views that have been stored","","","","","","","","","","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","Incoming message","A next leader task was canceled by a timeout interrupt","The private key type for this signature algorithm","The type of the assembled signature, without <code>BitVec</code>","The type of the quorum certificate parameters used for …","The type of the assembled qc: assembled signature + <code>BitVec</code>","A replica task was canceled by a timeout interrupt","Trait for abstracting public key signatures","The type of the entry that contain both public key and …","Event streaming handle for a <code>SystemContext</code> instance …","The view has finished.  If values were decided on, a <code>Decide</code>…","","","","","","","","","","","","","assemble the signature from the partial signature and the …","Demonstration implementation of the <code>SignatureKey</code> trait …","","","","","","","check the quorum certificate for the assembled signature","","","","","","","","","","","","","","","","","","","","","","Events that a <code>HotShot</code> instance can emit","The underlying event","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a public key from bytes","Produce a public key from a private key","Generate a new key pair","","only get the public key from the stake table entry","get the public parameter for the assembled signature …","get the assembled signature and the <code>BitVec</code> separately from …","get the stake table entry from the public key and stake …","get the view number out of a message","Provides an event-streaming handle for a [<code>HotShot</code>] running …","","Internal reference to the underlying [<code>HotShot</code>]","","","","access to the internal ev ent stream, in case we need to, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The message kind","The sender for the output stream from the background …","","registry for controlling tasks","The sender of this message","","Produce a signature","Our copy of the <code>Storage</code> view for a hotshot","Serialize a public key to bytes","","","","","","","","","","","","","Validate a signature","The view number that this event originates from","","","","Optional information of the number of transactions in the …","The underlying error","The chain of Leafs that were committed by this decision","The QC signing the most recent leaf in <code>leaf_chain</code>.","The view that timed out","The view that timed out","The view number that has just finished","Private key type for a bn254 keypair","Public key type for an bn254 <code>SignatureKey</code> pair","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Generate a new private key from scratch","Generate a new private key from a seed","Generate a new private key from a seed and a number","","","","","","Get real seed used for random key generation function","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","A next leader task was canceled by a timeout interrupt","A replica task was canceled by a timeout interrupt","The view has finished.  If values were decided on, a <code>Decide</code>…","The underlying event","The view number that this event originates from","Optional information of the number of transactions in the …","The underlying error","The chain of Leafs that were committed by this decision","The QC signing the most recent leaf in <code>leaf_chain</code>.","The view that timed out","The view that timed out","The view number that has just finished","Event streaming handle for a <code>SystemContext</code> instance …","","","","","","","","","","","","Returns the argument unchanged.","Get the underlying consensus state for this <code>SystemContext</code>","Wrapper to get this node’s current view","Gets most recent decided leaf","obtains a stream to expose to the user","HACK so we can know the types when running tests… there …","HACK so we can know the types when running tests… there …","Wrapper for <code>HotShotConsensusApi</code>’s <code>get_leader</code> function","Get length of the next leaders’s receiver channel","return the timeout for a view of the underlying …","Wrapper to get this node’s public key","Get length of the replica’s receiver channel","Gets the current committed state of the [<code>HotShot</code>] instance","Internal reference to the underlying [<code>HotShot</code>]","","access to the internal ev ent stream, in case we need to, …","Calls <code>U::from(self)</code>.","","","","performs the genesis initializaiton","The sender for the output stream from the background …","registry for controlling tasks","Wrapper around <code>HotShotConsensusApi</code>’s …","Wrapper around <code>HotShotConsensusApi</code>’s …","Shut down the the inner hotshot and wait until all …","begin consensus by sending a genesis event Use …","Provides a reference to the underlying storage for this …","Our copy of the <code>Storage</code> view for a hotshot","Submits a transaction to the backing [<code>HotShot</code>] instance.","","","","","","Block the underlying quorum (and committee) networking …"],"i":[6,6,6,6,0,0,0,0,0,0,6,6,6,0,6,6,0,6,0,0,6,6,0,10,10,13,13,160,37,37,36,160,28,6,10,13,37,36,160,28,6,10,13,6,6,37,36,160,28,6,10,13,37,36,160,28,6,10,13,6,160,10,13,10,13,160,161,10,160,10,10,36,37,0,37,36,160,28,6,10,13,37,36,160,28,6,10,13,6,0,37,36,160,28,6,10,13,160,6,6,13,37,36,160,28,6,10,13,28,28,10,10,10,10,6,160,6,37,36,160,28,6,10,10,13,28,10,13,160,37,36,160,28,6,10,13,37,36,160,28,6,10,13,37,36,160,28,6,10,13,37,36,160,28,6,10,13,13,160,13,160,10,160,13,160,13,13,13,160,10,36,37,0,161,10,10,13,13,13,10,13,13,13,13,37,6,10,160,13,0,10,10,13,6,13,0,37,36,160,28,6,10,13,37,36,160,28,6,10,13,37,36,160,28,6,10,13,0,36,36,37,36,160,28,6,10,13,37,162,163,164,165,166,167,168,169,170,171,164,171,0,0,0,0,59,59,60,60,61,61,172,59,59,60,61,59,60,61,59,59,60,61,59,60,61,59,60,61,59,60,61,60,59,172,60,59,59,60,61,59,60,61,59,60,61,59,60,59,60,61,59,60,59,59,59,59,60,60,60,60,59,60,61,59,60,61,59,60,59,60,59,60,61,59,59,60,61,59,60,61,59,60,61,59,60,61,61,172,59,60,59,59,60,59,59,60,61,59,60,61,59,60,61,59,60,61,59,59,59,60,61,76,0,76,76,76,0,0,0,0,0,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,173,0,173,49,49,174,12,49,175,145,175,173,49,49,49,49,175,0,0,49,0,145,12,49,0,0,12,0,0,173,49,175,49,49,49,173,176,176,49,49,49,49,174,49,49,49,135,176,176,174,174,49,49,49,49,0,0,175,49,49,49,49,175,175,174,175,176,174,49,0,49,49,173,49,49,49,49,174,0,12,0,173,135,135,135,135,49,174,0,49,175,49,49,174,49,173,49,177,178,179,180,181,182,183,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,89,89,91,91,184,89,89,91,89,91,89,91,89,91,89,91,89,91,184,89,89,91,89,89,91,89,91,91,89,91,89,89,89,89,89,89,89,91,89,91,89,89,89,89,89,89,89,89,91,89,91,89,91,89,91,89,91,89,184,89,91,91,89,89,91,89,89,91,89,91,89,91,89,91,0,0,0,0,0,0,0,0,0,0,0,0,185,102,133,102,102,121,130,117,144,133,112,102,112,102,102,185,112,185,117,102,49,49,0,49,0,49,0,49,0,0,49,49,0,0,0,0,49,0,49,0,49,49,49,49,0,0,0,102,102,96,96,103,103,98,98,99,99,104,104,105,105,100,100,101,101,96,96,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,98,99,100,101,135,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,0,102,103,96,96,96,96,102,103,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,98,99,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,103,103,102,102,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,98,99,104,105,100,101,103,0,0,102,102,102,102,96,135,135,135,135,96,96,96,96,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,102,96,103,98,99,104,105,100,101,96,102,96,102,96,103,98,99,104,105,100,101,0,177,178,179,180,181,182,183,0,0,0,114,114,112,112,115,115,114,112,115,114,112,115,114,112,115,114,112,115,112,114,0,114,114,112,115,114,112,115,114,114,112,115,114,112,115,112,114,112,115,114,112,115,114,112,115,112,112,115,114,112,115,114,112,115,112,114,114,112,115,114,112,115,114,112,115,114,112,115,112,112,112,114,112,112,112,112,112,112,112,112,112,114,112,115,114,112,115,114,112,115,114,112,115,114,112,115,112,0,128,0,0,0,0,0,121,121,125,125,121,185,128,126,121,125,128,126,121,125,126,126,128,126,121,125,128,126,121,125,121,125,126,126,121,125,121,125,128,126,121,125,128,126,121,125,126,121,125,126,126,128,126,121,125,126,121,125,128,126,121,125,125,121,125,126,121,125,128,126,121,125,121,125,121,128,126,121,125,128,126,121,125,128,126,121,125,128,126,121,125,126,126,121,125,126,126,126,121,125,126,125,185,126,185,121,125,121,125,125,128,121,125,121,121,121,121,125,126,128,126,121,125,128,126,121,125,128,126,121,125,128,126,121,125,121,121,125,186,0,186,0,0,0,0,0,130,130,132,132,186,133,134,130,132,186,133,134,130,132,186,133,134,130,132,186,133,134,130,132,130,134,130,132,134,130,132,130,132,186,133,134,130,132,186,133,134,130,132,130,134,130,132,134,186,133,134,130,132,133,134,130,132,186,133,134,130,132,132,130,132,133,130,132,134,186,133,134,130,132,130,186,133,134,130,132,186,133,134,130,132,186,133,134,130,132,186,133,134,130,132,130,132,133,134,134,133,130,132,132,130,132,134,132,130,132,130,132,186,133,134,130,132,186,133,134,130,132,186,133,134,130,132,186,133,134,130,132,130,132,0,0,0,0,0,0,0,136,136,117,117,137,137,138,138,140,136,117,140,137,138,136,117,140,137,138,136,117,140,137,138,136,117,140,137,138,136,117,140,140,136,117,137,138,136,117,137,138,140,117,140,136,117,140,137,138,136,117,140,137,138,137,138,136,117,140,136,117,140,137,138,137,137,138,136,117,140,137,138,136,117,140,137,138,136,136,117,187,137,187,188,137,138,140,140,136,117,136,117,140,137,138,136,117,117,136,117,140,137,138,136,117,140,137,138,136,117,140,137,138,136,117,140,137,138,140,136,117,137,138,136,117,136,117,140,117,140,136,117,136,117,140,137,138,117,136,117,136,117,137,138,136,117,140,137,138,136,117,140,137,138,140,140,136,117,140,137,138,140,140,140,140,136,117,140,137,138,140,136,117,174,12,0,12,12,0,174,174,174,174,174,174,12,174,174,145,145,0,0,176,176,176,176,176,0,0,0,144,144,144,189,144,189,144,189,144,189,144,144,144,144,144,144,189,144,189,144,189,144,144,189,189,144,144,144,189,144,144,189,144,189,144,189,144,189,144,189,144,189,144,189,144,189,144,189,144,148,148,0,0,0,148,90,90,90,90,148,0,90,0,148,53,53,148,148,113,113,53,148,113,53,148,113,90,0,53,148,113,53,148,113,90,53,148,113,53,148,113,53,148,113,53,148,113,113,53,148,113,113,113,113,113,113,0,53,53,148,113,53,148,113,90,90,90,113,90,90,90,90,113,0,113,39,53,148,113,39,53,148,113,53,148,113,53,148,113,53,148,113,113,39,113,39,113,113,90,39,90,53,148,113,53,148,113,53,148,113,53,148,113,90,53,53,148,113,190,191,190,190,192,193,194,0,0,154,154,155,155,154,155,154,155,155,154,155,154,155,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,154,154,154,155,155,155,155,154,155,154,155,155,155,154,154,154,155,154,155,155,155,154,155,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,154,155,155,155,154,155,154,155,154,155,154,155,155,154,155,148,148,0,0,148,148,148,53,53,190,191,190,190,192,193,194,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[[[6,[-1]]],[[8,[7]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[8,[5]]],9],0,[[[10,[-1,-2]]],[[10,[-1,-2]]],[11,9],[11,[12,[-1]]]],[[[13,[-1,-2]]],[[13,[-1,-2]]],[11,9],[11,[12,[-1]]]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[-1,[[16,[[15,[[14,[-2]]]]]]],[],[]],[[[10,[-1,-2]]],[[16,[[15,[[14,[-1]]]]]]],9,[[12,[-1]]]],0,[[[18,[[17,[-1]]]]],[[19,[-1]]],9],[[[20,[[17,[-1]]]]],[[19,[-1]]],9],0,0,0,[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[6,[-1]]],22,9],0,[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],0,[[[6,[-1]],23],[[25,[2,24]]],9],[[[6,[-1]],23],[[25,[2,24]]],[26,9]],[[[13,[-1,-2]],23],27,9,[[12,[-1]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[25,[[28,[-1]],[6,[-1]]]]],9],[[[29,[-1]]],[[28,[-1]]],9],[[[10,[-1,-2]]],[[16,[[15,[[14,[-1]]]]]]],9,[[12,[-1]]]],[[[10,[-1,-2]]],[[29,[-1]]],9,[[12,[-1]]]],[[[10,[-1,-2]]],30,9,[[12,[-1]]]],[[[10,[-1,-2]]],2,9,[[12,[-1]]]],[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],0,[-1,[],[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[30,35,[36,[-1]],[37,[-1,-2]],[28,[-1]],38],[[25,[[2,[[39,[-1,-2]],[41,[[40,[-1]]]]]],[6,[-1]]]]],9,[[12,[-1]]]],[[],21],[[],21],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[13,[-1,-2]]],45,9,[[12,[-1]]]],0,[[[13,[-1,-2]]],21,9,[[12,[-1]]]],0,[[30,35,[36,[-1]],[37,[-1,-2]],[28,[-1]],38],[[25,[[10,[-1,-2]],[6,[-1]]]]],9,[[12,[-1]]]],0,[[[13,[-1,-2]]],[],9,[[12,[-1]]]],0,[[[13,[-1,-2]]],46,9,[[12,[-1]]]],[[[13,[-1,-2]]],46,9,[[12,[-1]]]],[[[13,[-1,-2]]],[],9,[[12,[-1]]]],0,[[[10,[-1,-2]]],[[25,[2,[6,[-1]]]]],9,[[12,[-1]]]],0,0,0,[-1,[[48,[[43,[47]]]]],[]],[[[10,[-1,-2]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[10,[-1,-2]],-3],[[25,[2,49]]],9,[[12,[-1]]],[[51,[[50,[-1]]]]]],[[[13,[-1,-2]],[52,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[13,[-1,-2]],[52,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[13,[-1,-2]],[52,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[10,[-1,-2]],-3],[[25,[2,49]]],9,[[12,[-1]]],[[51,[[50,[-1]]]]]],[[[13,[-1,-2]],[52,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[13,[-1,-2]],[53,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[13,[-1,-2]],[54,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[13,[-1,-2]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],[[[37,[-1,-2]]],2,9,[[12,[-1]]]],[[[6,[-1]]],[[8,[5]]],9],[[[10,[-1,-2]]],2,9,[[12,[-1]]]],0,[[[13,[-1,-2]],[29,[-1]]],[[48,[[43,[47]]]]],9,[[12,[-1]]]],0,[[[10,[-1,-2]],[56,[[55,[-1]]]],[8,[[56,[[55,[-1]]]]]]],2,9,[[12,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,57,[]],[[[13,[-1,-2]]],45,9,[[12,[-1]]]],0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1,-2]]],2,9,[[12,[-1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[59,[[25,[59]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,59],[60,60],[[[61,[-1]]],[[61,[-1]]],[[62,[60]],26]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[60,60],63],[59,[[64,[59]]]],0,[[-1,-2],63,[],[]],[[[8,[59]],65,30]],[[],59],[[],60],[[],[[61,[-1]]],[[62,[60]],26]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[25,[59]]],66],[-1,[[25,[60]]],66],[21,2],[21,2],[21,2],[[59,59],67],[[60,60],67],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[59,23],27],[[60,23],27],[[[61,[-1]],23],27,[[62,[60]],26]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],30,[68,69],70],[[-1,-2],30,[68,69],70],[[59,-1],2,71],[[60,-1],2,71],[[],21],[[],21],[[],21],[[],59],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[],[[61,[-1]]],[[62,[60]],26]],0,[59,2],[[60,60],[[8,[63]]]],0,[[59,-1],25,72],[[60,-1],25,72],[[],57],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[59,67],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[73,[41,[[40,[-1]]]],[41,[[53,[-1]]]],[39,[-1,-2]]],73,9,[[12,[-1]]]],[[73,[41,[[40,[-1]]]],[39,[-1,-2]]],73,9,[[12,[-1]]]],[[73,[41,[[40,[-1]]]],-2,74],73,9,[[75,[-1]]]],[[73,[41,[[40,[-1]]]],-2],73,9,[[75,[-1]]]],[[73,[41,[[40,[-1]]]],[39,[-1,-2]]],73,9,[[12,[-1]]]],[[73,[41,[[40,[-1]]]],[39,[-1,-2]]],73,9,[[12,[-1]]]],[[73,[41,[[40,[-1]]]],[39,[-1,-2]]],73,9,[[12,[-1]]]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],2,[],[]],[21,-1,[]],[21,-1,[]],[21,2],[[76,23],27],[-1,-1,[]],[[],21],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[25,[-1]]],[]],[[-1,[78,[[77,[-2]],42]]],[[48,[[43,[47,42]]]]],[],[]],[[-1,[79,[-2]]],[[48,[[43,[47,42]]]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[49,[[8,[7]]]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,[[8,[5]]]],[[-1,[78,[80,42]],[16,[81,42]]],[[48,[[43,[47,42]]]]],[]],[-1,[[48,[[43,[47,42]]]]],[]],[-1,[[48,[[43,[47,42]]]]],[]],[[],[[43,[81,42]]]],[[],[[25,[82]]]],[21,-1,[]],[21,-1,[]],[49,22],[21,2],0,0,[-1,25,[]],[[49,23],[[25,[2,24]]]],[[49,23],[[25,[2,24]]]],[-1,-1,[]],[83,49],[-1,-2,84,[]],[-1,[[25,[[2,[-2]]]]],85,[]],[[21,21,21],[[43,[81,42]]]],[[],[[2,[-1]]],[]],[-1,[[48,[[43,[47,42]]]]],[]],[[],[[48,[[43,[47,42]]]]]],[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],0,[-1,[],[]],[[],21],[[],-1,[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[29,[-1]],65,30],[],[]],0,[[],[[2,[[86,[-1]],[8,[[86,[-1]]]]]]],[]],0,[-1,2,[]],[-1,46,[]],[-1,67,[]],[-1,21,[]],[[-1,[78,[80,42]]],[[78,[80,42]]],[]],[49,[[8,[5]]]],[[8,65,30]],0,[-1,57,[]],[-1,[[78,[64,42]]],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[[],30],[-1,58,[]],[-1,67,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[87,[[25,[87]]]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[87,87],[[-1,-2],2,[],[]],[87,[[64,[87]]]],[[[8,[87]],65,30],88],[[],87],[21,-1,[]],[21,-1,[]],[-1,[[25,[87]]],66],[21,2],[[87,87],67],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[87,23],[[25,[2,24]]]],[-1,-1,[]],[[-1,-2],30,[68,69],70],[[87,-1],2,71],[[],21],[[],87],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],0,[87,2],[65,87],[[87,-1],25,72],[[],57],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[87,67],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1,-2]]],[[89,[-1,-2]]],11,[11,90]],[91,91],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[78,[[89,[-1,-2]]],9,90],[[],91],[30],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[25,[91]]],66],[21,2],[21,2],[[[89,[-1,-2]],[89,[-1,-2]]],67,92,[92,90]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[[89,[-1,-2]]],93,9,90],[[[89,[-1,-2]],23],27,26,[26,90]],[[91,23],27],[-1,-1,[]],[-1,-1,[]],[[[89,[-1,-2]]],94,9,90],[[[89,[-1,-2]]],78,9,90],[[-1,-2],30,[68,69],70],[[[89,[-1,-2]]],-2,9,90],[[[89,[-1,-2]]],8,9,90],[[[89,[-1,-2]],-2],67,9,90],[[[89,[-1,-2]],-3],2,68,[68,90],71],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[95,[-1]],78],[[89,[-2,-1]]],90,[]],0,0,0,[[91,-1],25,72],[[[89,[-1,-2]]],93,9,90],[-1,-2,[],[]],[-1,-2,[],[]],[[[89,[-1,-2]]],21,9,90],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[96,21],2],[[96,97],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,49],[99,49],[100,49],[101,49],[[-1,[78,[80,42]],[16,[81,42]]],[[48,[[43,[47,42]]]]],[]],[102,102],[96,96],[103,103],[98,98],[99,99],[104,104],[105,105],[100,100],[101,101],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[96,57,[8,[57]]],[[43,[106]]]],[[96,57,[8,[57]]],[[43,[107]]]],[[96,57,[8,[57]]],[[43,[108]]]],[[96,57],[[43,[109]]]],[[],102],[[],103],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[21,2],[98,[[25,[-1,49]]],[]],[99,[[25,[-1,49]]],[]],[100,[[25,[-1,49]]],[]],[101,[[25,[-1,49]]],[]],[[102,23],27],[[96,23],27],[[103,23],27],[[98,23],[[25,[2,24]]]],[[99,23],[[25,[2,24]]]],[[104,23],[[25,[2,24]]]],[[105,23],[[25,[2,24]]]],[[100,23],[[25,[2,24]]]],[[101,23],[[25,[2,24]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[98,49],[99,49],[104,49],[105,49],[100,49],[101,49],0,0,0,0,[[],102],0,0,0,[-1,46,[]],[-1,67,[]],[-1,21,[]],[[-1,[78,[80,42]]],[[78,[80,42]]],[]],[[96,57],2],[[96,21],2],[[96,57],96],[[96,57],[[43,[110]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[96,111],2],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],0,[-1,30,68],0,[114,114],[[[112,[-1]]],[[112,[-1]]],[11,9]],[[[115,[-1]]],[[115,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[114,30],67],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[112,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],[21,2],[21,2],[21,2],[[114,23],27],[[[112,[-1]],23],27,[26,9]],[[[115,[-1]],23],27,[26,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],0,[[[112,[-1]]],[[8,[21]]],9],[[[115,[-1]]],[[8,[21]]],9],[[],21],[[],21],[[],21],[[[112,[-1]],116],[[48,[[43,[47]]]]],9],[[114,30],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[112,[-1]]],[[48,[[43,[47]]]]],9],0,0,[21,114],[[[16,[[115,[-1]]]]],[[112,[-1]]],9],[[[112,[-1]]],2,9],[[[112,[-1]]],[[117,[-1]]],9],0,[[[112,[-1]],118],[[48,[[43,[47]]]]],9],[[[112,[-1]],119],[[120,[[25,[[78,[[113,[-1]]]],49]]]]],9],[[[112,[-1]]],2,9],[[[112,[-1]]],[[121,[[113,[-1]]]]],9],[[[112,[-1]]],[[120,[2]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]]],[[48,[[43,[47]]]]],9],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[[121,[-1,-2]],[78,[[2,[[8,[122]],123]]]]],[[25,[2,49]]],124,90],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[121,[-1,-2]],-1,[94,[-2]]],[[48,[[43,[47]]]]],124,90],[[[125,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],0,0,[[[121,[-1,-2]]],[[121,[-1,-2]]],[11,124],[11,90]],[[[125,[-1]]],[[125,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],0,[[[121,[-1,-2]],-1,-2],[[48,[[43,[47]]]]],124,90],[[[125,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],0,0,[21,2],[21,2],[21,2],[21,2],[[[126,[-1,-2]],23],27,[26,124],[26,90]],[[[121,[-1,-2]],23],27,124,90],[[[125,[-1]],23],27,[26,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],0,[[[121,[[113,[-1]]]]],[[8,[21]]],9],[[[125,[-1]]],[[8,[21]]],9],[[],21],[[],21],[[],21],[[],21],[[[121,[-1,-2]],[116,[-2]]],[[48,[[43,[47]]]]],124,90],[[[125,[-1]],116],[[48,[[43,[47]]]]],9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],0,0,[[[121,[-1,-2]]],[[48,[[43,[47]]]]],124,90],[[[125,[-1]]],[[48,[[43,[47]]]]],9],0,0,0,[[102,127,-1,[16,[[15,[[78,[[2,[[8,[122]],123]]]]]]]],21,21,[94,[-1]],[94,[-1]],67],[[25,[[121,[-2,-1]],49]]],90,124],[[[16,[[121,[[113,[-1]]]]]]],[[125,[-1]]],9],0,[[[125,[-1]]],2,9],0,0,0,[[[121,[-1,-2]],118,-2],[[48,[[43,[47]]]]],124,90],[[[125,[-1]],118],[[48,[[43,[47]]]]],9],[[[121,[-1,-2]],119],[[120,[[25,[[78,[-1]],49]]]]],124,90],[[[125,[-1]],119],[[120,[[25,[[78,[[113,[-1]]]],49]]]]],9],[[[125,[-1]]],2,9],[[128,-1],25,72],[[[121,[-1,-2]]],[[120,[2]]],124,90],[[[125,[-1]]],[[120,[2]]],9],[[[121,[-1,-2]],21],2,124,90],[[[121,[-1,-2]],[56,[-1]],[56,[-1]]],2,124,90],[[[121,[-1,-2]],[129,[[8,[[2,[118,-2]]]]]]],2,124,90],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[121,[-1,-2]]],[[48,[[43,[47]]]]],124,90],[[[121,[-1,-2]]],2,124,90],[[[125,[-1]]],[[48,[[43,[47]]]]],9],0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1,-2]],[78,[80]]],[[25,[2,[131,[[78,[80]]]]]]],124,90],0,[[[130,[-1,-2]],-1,[94,[-2]]],[[48,[[43,[47]]]]],124,90],[[[132,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],0,[[[130,[-1,-2]]],[[130,[-1,-2]]],[11,124],[11,90]],[[[132,[-1]]],[[132,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[[[130,[-1,-2]],[78,[80]]],[[25,[2,[131,[[78,[80]]]]]]],124,90],0,[[[130,[-1,-2]],-1,-2],[[48,[[43,[47]]]]],124,90],[[[132,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],0,[21,2],[21,2],[21,2],[21,2],[21,2],[[[133,[-1,-2]],23],27,124,90],[[[134,[-1,-2]],23],27,[26,124],[26,90]],[[[130,[-1,-2]],23],27,124,90],[[[132,[-1]],23],27,[26,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],0,[[[130,[[113,[-1]]]]],[[8,[21]]],9],[[[132,[-1]]],[[8,[21]]],9],0,[[],21],[[],21],[[],21],[[],21],[[],21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[130,[-1,-2]]],[[48,[[43,[47]]]]],124,90],[[[132,[-1]]],[[48,[[43,[47]]]]],9],0,0,0,[[],[[16,[[133,[-1,-2]]]]],124,90],[[-1,102,[16,[[133,[-2,-1]]]],[8,[[16,[[15,[135]]]]]]],[[130,[-2,-1]]],90,124],[[[16,[[130,[[113,[-1]]]]]]],[[132,[-1]]],9],[[[132,[-1]]],2,9],[[[130,[-1,-2]],119],[[120,[[25,[[78,[-1]],49]]]]],124,90],[[[132,[-1]],119],[[120,[[25,[[78,[[113,[-1]]]],49]]]]],9],0,[[[132,[-1]]],2,9],[[[130,[-1,-2]]],[[120,[2]]],124,90],[[[132,[-1]]],[[120,[2]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1,-2]]],[[48,[[43,[47]]]]],124,90],[[[132,[-1]]],[[48,[[43,[47]]]]],9],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[136,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],[[[117,[-1]],[113,[-1]],94],[[48,[[43,[47]]]]],9],0,0,[[[136,[-1]]],[[136,[-1]]],[11,9]],[[[117,[-1]]],[[117,[-1]]],[11,9]],[[[137,[-1]]],[[137,[-1]]],[11,124]],[[[138,[-1]]],[[138,[-1]]],[11,124]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[139,46,67],[[117,[-1]]],9],0,[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[25,[[137,[-2]]]]],66,124],[-1,[[25,[[138,[-2]]]]],66,124],[[[136,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],[[[117,[-1]],[113,[-1]]],[[48,[[43,[47]]]]],9],0,[21,2],[21,2],[21,2],[21,2],[21,2],0,[[[137,[-1]],[137,[-1]]],67,[92,124]],[[[138,[-1]],[138,[-1]]],67,[92,124]],[[[136,[-1]],23],27,[26,9]],[[[117,[-1]],23],27,[26,9]],[[[140,[-1]],23],27,[26,9]],[[[137,[-1]],23],27,[26,124]],[[[138,[-1]],23],27,[26,124]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],[[21,21,21,21,67],[[43,[81]]]],[-1,57,[]],[[[137,[-1]]],57,124],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[137,[-1]]],[[8,[-1]]],124],[[[138,[-1]]],[[8,[-1]]],124],[[[140,[-1]],57],[[25,[[8,[[78,[[138,[[113,[-1]]]]]]]],49]]],9],[[[140,[-1]],57],[[25,[[8,[[2,[30,[78,[[138,[[113,[-1]]]]]]]]]],49]]],9],[[[136,[-1]]],[[8,[21]]],9],[[[117,[-1]]],[[8,[21]]],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[[136,[-1]],116],[[48,[[43,[47]]]]],9],[[[117,[-1]],116],[[48,[[43,[47]]]]],9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],0,[[[136,[-1]]],[[48,[[43,[47]]]]],9],[[[117,[-1]]],[[48,[[43,[47]]]]],9],0,0,[[[16,[[117,[-1]]]]],[[136,[-1]]],9],[[[113,[-1]]],[[25,[[137,[[113,[-1]]]],141]]],9],[[[136,[-1]]],2,9],[[[117,[-1]]],2,9],[[[140,[-1]],[129,[116]],142,30],[[25,[2,49]]],9],[[[117,[-1]],[137,[[113,[-1]]]]],[[25,[2,49]]],9],0,[[[136,[-1]],119],[[120,[[25,[[78,[[113,[-1]]]],49]]]]],9],[[[117,[-1]],119],[[120,[[25,[[78,[[113,[-1]]]],49]]]]],9],[[[136,[-1]]],2,9],[[[117,[-1]]],2,9],0,[[[137,[-1]],-2],25,[143,124],72],[[[138,[-1]],-2],25,[143,124],72],0,[[[136,[-1]]],[[120,[2]]],9],[[[117,[-1]]],[[120,[2]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],0,0,[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[136,[-1]]],[[48,[[43,[47]]]]],9],[[[117,[-1]]],[[48,[[43,[47]]]]],9],0,0,0,0,0,0,[[]],[[],[[43,[81,42]]]],[[],[[25,[82]]]],[[21,21,21],[[43,[81,42]]]],[[],[[48,[[43,[47,42]]]]]],[[[29,[-1]],65,30],[],[]],[[],[[2,[[86,[-1]],[8,[[86,[-1]]]]]]],[]],[[8,65,30]],[[],30],0,0,0,0,[[-1,[78,[[77,[-2]],42]]],[[48,[[43,[47,42]]]]],[],[]],[[-1,[79,[-2]]],[[48,[[43,[47,42]]]]],[],[]],[-1,[[48,[[43,[47,42]]]]],[]],[-1,[[48,[[43,[47,42]]]]],[]],[-1,[[48,[[43,[47,42]]]]],[]],0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[[144,[-1]],[78,[[77,[-1]]]]],[[48,[[43,[47]]]]],9],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[144,[-1]]],[[48,[[43,[47]]]]],9],[[[144,[-1]]],[[144,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[[144,[-1]]],[[48,[[43,[47]]]]],9],[[],[[145,[[144,[-1]]]]],9],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,2],[21,2],[[],[[144,[-1]]],9],0,[-1,-1,[]],[-1,-1,[]],[[[144,[-1]]],[[48,[[43,[47]]]]],9],[[[144,[-1]]],[[48,[[43,[47]]]]],9],[[],21],[[],21],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],0,[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[147,[21,146]],95]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[80]]],67],[[[53,[-1]]],[[53,[-1]]],[11,9]],[[[148,[-1]]],[[148,[-1]]],[11,9]],[[[113,[-1]]],[[113,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[25,[[113,[-2]]]]],66,9],[21,2],[21,2],[21,2],[[[113,[-1]],[113,[-1]]],67,[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],0,0,[[[53,[-1]],23],[[25,[2,24]]],[26,9]],[[[148,[-1]],23],[[25,[2,24]]],[26,9]],[[[113,[-1]],23],[[25,[2,24]]],[26,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[149,[[8,[-1]]],[]],[[],-1,[]],[[[150,[80]],30],[[2,[-1]]],[]],[[-1,-2],30,[68,69],70],[[],-1,[]],[[[78,[42]],151]],[[],[[2,[[152,[21,146]]]]]],[[-1,30],[],[]],[[[113,[-1]]],[],9],0,[[[113,[-1]],-2],2,[68,9],71],0,[[],21],[[],21],[[],21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],0,0,[[[113,[-1]]],142,9],0,0,[[[113,[-1]],-2],25,9,72],[[[95,[80]]],153],0,[-1,149,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[-1,58,[]],[[-1,153,[95,[80]]],67,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[147,[21,146]],95]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[95,[80]]],67],[154,154],[155,155],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[154,154],63],[[155,155],63],[[-1,-2],63,[],[]],[[-1,-2],63,[],[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[25,[154]]],66],[-1,[[25,[155]]],66],[21,2],[21,2],[[154,154],67],[[155,155],67],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[-1,-2],67,[],[]],[[154,23],[[25,[2,24]]]],[[155,23],[[25,[2,24]]]],[-1,-1,[]],[-1,-1,[]],[149,[[8,[155]]]],[[],155],[[],154],[[[150,[80]]],154],[[[150,[80]],30],154],[[[150,[80]],30],[[2,[155]]]],[[-1,-2],30,[68,69],70],[[-1,-2],30,[68,69],70],[[],155],[[[78,[42]],151]],[[[150,[80]],30],[[150,[80]]]],[[],[[2,[[152,[21,146]]]]]],[[155,30]],[[154,-1],2,71],[[155,-1],2,71],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[154,154],[[8,[63]]]],[[155,155],[[8,[63]]]],0,0,[[154,-1],25,72],[[155,-1],25,72],[[[95,[80]]],153],[155,149],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,58,[]],[[155,153,[95,[80]]],67],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1,-2]]],[[39,[-1,-2]]],9,[[12,[-1]]]],[[-1,-2],2,[],[]],[21,-1,[]],[21,-1,[]],[21,2],[-1,-1,[]],[[[39,[-1,-2]]],[[16,[[15,[[14,[-1]]]]]]],9,[[12,[-1]]]],[[[39,[-1,-2]]],[],9,[[12,[-1]]]],[[[39,[-1,-2]]],[[29,[-1]]],9,[[12,[-1]]]],[[[39,[-1,-2]],[156,[[53,[-1]]]]],[[2,[[0,[157]],158]]],9,[[12,[-1]]]],[[[39,[-1,-2]],[156,[[53,[-1]]]]],[[2,[[159,[[53,[-1]]]],158]]],9,[[12,[-1]]]],[[[39,[-1,-2]],[156,[[40,[-1]]]]],[[2,[[159,[[40,[-1]]]],158]]],9,[[12,[-1]]]],[[[39,[-1,-2]]],[],9,[[12,[-1]]]],[[[39,[-1,-2]]],[[8,[21]]],9,[[12,[-1]]]],[[[39,[-1,-2]]],30,9,[[12,[-1]]]],[[[39,[-1,-2]]],[],9,[[12,[-1]]]],[[[39,[-1,-2]]],[[8,[21]]],9,[[12,[-1]]]],[[[39,[-1,-2]]],2,9,[[12,[-1]]]],0,[[],21],0,[-1,-2,[],[]],[[[43,[-1,42]]],[[43,[4,42]]],[]],[[[16,[-1,42]]],[[16,[4,42]]],[]],[[[44,[-1,42]]],[[44,[4,42]]],[]],[[[39,[-1,-2]]],2,9,[[12,[-1]]]],0,0,[[[39,[-1,-2]],[52,[-1]]],2,9,[[12,[-1]]]],[[[39,[-1,-2]],[52,[-1]]],2,9,[[12,[-1]]]],[[[39,[-1,-2]]],[[120,[2]]],9,[[12,[-1]]]],[[[39,[-1,-2]]],2,9,[[12,[-1]]]],[[[39,[-1,-2]]],[],9,[[12,[-1]]]],0,[[[39,[-1,-2]]],[[25,[2,[6,[-1]]]]],9,[[12,[-1]]]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,58,[]],[-1,-2,[],[]],[[[39,[-1,-2]]],2,9,[[12,[-1]]]]],"c":[1839],"p":[[3,"Private",1849],[15,"tuple"],[3,"Private",1849],[8,"Any",1850],[8,"Error",1851],[4,"HotShotError",0],[3,"Backtrace",1852],[4,"Option",1853],[8,"NodeType",1854],[3,"SystemContext",0],[8,"Clone",1855],[8,"NodeImplementation",384],[3,"HotShotConsensusApi",0],[3,"Consensus",1856],[3,"RwLock",1857],[3,"Arc",1858],[3,"SendToTasks",1854],[3,"RwLockUpgradableReadGuard",1857],[3,"ViewQueue",1854],[3,"RwLockWriteGuard",1857],[15,"usize"],[15,"str"],[3,"Formatter",1859],[3,"Error",1859],[4,"Result",1860],[8,"Debug",1859],[6,"Result",1859],[3,"HotShotInitializer",0],[3,"Leaf",1861],[15,"u64"],[3,"IndentedSection",1862],[8,"Display",1859],[8,"Send",1863],[8,"Sync",1863],[3,"HotShotConfig",1864],[3,"Memberships",0],[3,"Networks",0],[3,"ConsensusMetricsValue",1856],[3,"SystemContextHandle",1801],[4,"HotShotEvent",1865],[3,"ChannelStream",1866],[3,"Global",1867],[3,"Box",1868],[3,"Rc",1869],[3,"NonZeroUsize",1870],[3,"Duration",1871],[8,"Future",1872],[3,"Pin",1873],[4,"NetworkError",384],[4,"MessageKind",1874],[8,"Into",1875],[3,"SequencingMessage",1874],[3,"Event",1569],[4,"DataMessage",1874],[4,"ProcessedGeneralConsensusMessage",1874],[3,"UnboundedSender",1876],[3,"String",1877],[3,"TypeId",1850],[3,"DemoState",240],[3,"DemoTypes",240],[3,"DemoNode",240],[8,"Membership",1878],[4,"Ordering",1879],[3,"Commitment",1880],[8,"RngCore",1881],[8,"Deserializer",1882],[15,"bool"],[8,"Hash",1883],[8,"Sized",1863],[8,"BuildHasher",1883],[8,"Hasher",1883],[8,"Serializer",1884],[3,"TaskRunner",1885],[4,"NetworkTaskKind",1886],[8,"CommunicationChannel",1887],[4,"GlobalEvent",351],[4,"ViewEntry",1888],[3,"Vec",1889],[3,"StoredView",1888],[15,"u8"],[8,"Fn",1890],[4,"StorageError",1888],[4,"NetworkNodeHandleError",1891],[8,"Iterator",1892],[8,"IntoIterator",1893],[3,"ChannelMaps",1854],[3,"DummyState",488],[3,"VIDTransaction",1894],[3,"GeneralStaticCommittee",532],[8,"SignatureKey",1569],[3,"StaticElectionConfig",532],[8,"PartialEq",1879],[3,"NonZeroU64",1870],[3,"BTreeSet",1895],[15,"slice"],[3,"NetworkingMetrics",641],[15,"f64"],[3,"CouldNotDeliverSnafu",641],[3,"NoSuchNodeSnafu",641],[3,"ChannelSendSnafu",641],[3,"ShutDownSnafu",641],[3,"NetworkingMetricsValue",641],[3,"InnerNetworkingMetrics",641],[3,"FailedToSerializeSnafu",641],[3,"FailedToDeserializeSnafu",641],[8,"Counter",1896],[8,"Gauge",1896],[8,"Histogram",1896],[8,"Label",1896],[8,"Metrics",1896],[15,"i64"],[3,"CombinedCommChannel",932],[3,"Message",1569],[3,"Cache",932],[3,"CombinedNetworks",932],[4,"ConsensusIntentEvent",1887],[3,"WebServerNetwork",1313],[3,"ViewNumber",1861],[4,"TransmitType",1887],[6,"BoxSyncFuture",1897],[3,"Libp2pNetwork",1032],[3,"PeerId",1898],[3,"Multiaddr",1899],[8,"NetworkMsg",1887],[3,"Libp2pCommChannel",1032],[3,"Libp2pNetworkInner",1032],[3,"NetworkNodeConfig",1900],[4,"Empty",1032],[3,"UnboundedReceiver",1876],[3,"MemoryNetwork",1171],[3,"SendError",1901],[3,"MemoryCommChannel",1171],[3,"MasterMap",1171],[3,"MemoryNetworkInner",1171],[8,"NetworkReliability",384],[3,"WebCommChannel",1313],[3,"SendMsg",1313],[3,"RecvMsg",1313],[3,"Url",1902],[3,"Inner",1313],[4,"WebServerNetworkError",1887],[4,"MessagePurpose",1874],[8,"Serialize",1884],[3,"MemoryStorage",1518],[6,"StorageResult",384],[3,"Lsb0",1903],[3,"BitSlice",1904],[4,"EventType",1569],[3,"EncodedPublicKey",1905],[15,"array"],[3,"U256",1906],[3,"BitVec",1907],[3,"EncodedSignature",1905],[3,"BLSPrivKey",1695],[3,"BLSPubKey",1695],[3,"FilterEvent",1908],[8,"Stream",1909],[6,"StreamId",1866],[3,"UnboundedStream",1876],[3,"SystemContextInner",0],[8,"HotShotType",0],[13,"Misc",228],[13,"InvalidState",228],[13,"InsufficientValidSignatures",228],[13,"StorageError",228],[13,"TimeoutError",228],[13,"FailedToMessageLeader",228],[13,"FailedToBroadcast",228],[13,"BlockError",228],[13,"NetworkFault",228],[13,"ViewTimeoutError",228],[6,"DemoMembership",240],[8,"State",384],[8,"TestableNodeImplementation",384],[8,"BlockPayload",384],[8,"Storage",384],[13,"Libp2p",925],[13,"MemoryNetwork",925],[13,"CentralizedServer",925],[13,"WebServer",925],[13,"FailedToSerialize",925],[13,"FailedToDeserialize",925],[13,"Timeout",925],[6,"StaticCommittee",532],[6,"PeerInfoVec",1032],[4,"Combo",1171],[8,"SendMsgTrait",1313],[8,"RecvMsgTrait",1313],[3,"MemoryStorageInternal",1518],[13,"Decide",1794],[13,"Error",1794],[13,"ReplicaViewTimeout",1794],[13,"NextLeaderViewTimeout",1794],[13,"ViewFinished",1794]]},\
"hotshot_constants":{"doc":"configurable constants for hotshot","t":"RRRRRRR","n":["ASYNC_STD_LIBP2P_LISTENER_SPINDOWN_TIME","COMBINED_NETWORK_CACHE_SIZE","COMBINED_NETWORK_MIN_PRIMARY_FAILURES","COMBINED_NETWORK_PRIMARY_CHECK_INTERVAL","GENESIS_PROPOSER_ID","KAD_DEFAULT_REPUB_INTERVAL_SEC","LOOK_AHEAD"],"q":[[0,"hotshot_constants"]],"d":["the amount of time to wait for async_std tests to spin …","the number of messages to cache in the combined network","the number of messages to attempt to send over the primary …","the number of messages to send over the secondary network …","the ID of the genesis block proposer","the default kademlia record republication interval (in …","the number of views to gather information for ahead of time"],"i":[0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0],"c":[],"p":[]},\
"hotshot_orchestrator":{"doc":"","t":"IDLLLLLLAMLLAMLFLLLLKLLLLLLMFLMKLKLKLKLFMLLLLLDDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLMMMMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMM","n":["OrchestratorApi","OrchestratorState","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","client","client","clone","clone_into","config","config","default","define_api","deref","deref_mut","drop","from","get_start","get_start","init","into","into_any","into_any_arc","into_any_rc","latest_index","libp2p_generate_indexed_identity","new","nodes_connected","post_getconfig","post_getconfig","post_identity","post_identity","post_ready","post_ready","post_run_results","post_run_results","run_orchestrator","start","to_owned","try_from","try_into","type_id","vzip","OrchestratorClient","ValidatorArgs","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","command","command_for_update","connect_to_orchestrator","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_arg_matches","from_arg_matches_mut","get_config_from_orchestrator","group_id","identify_with_orchestrator","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","port","public_ip","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","url","vzip","vzip","wait_for_all_nodes_ready","wait_for_fn_from_orchestrator","HotShotConfigFile","Libp2pConfig","Libp2pConfigFile","NetworkConfig","NetworkConfigFile","ValidatorConfigFile","WebServerConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","base_port","base_port","bootstrap_mesh_n","bootstrap_mesh_n","bootstrap_mesh_n_high","bootstrap_mesh_n_high","bootstrap_mesh_n_low","bootstrap_mesh_n_low","bootstrap_mesh_outbound_min","bootstrap_mesh_outbound_min","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_nodes","config","config","da_web_server_config","da_web_server_config","default","default","default","default_rounds","default_start_delay_seconds","default_transaction_size","default_transactions_per_round","default_web_server_config","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","election_config_type_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_file","index_ports","index_ports","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_type_name","known_nodes_with_stake","libp2p_config","libp2p_config","max_transactions","mesh_n","mesh_n","mesh_n_high","mesh_n_high","mesh_n_low","mesh_n_low","mesh_outbound_min","mesh_outbound_min","min_transactions","my_own_validator_config","next_view_timeout","next_view_timeout","next_view_timeout","node_id","node_index","node_index","node_index","num_bootrap","num_bootstrap","num_bootstrap_nodes","num_txn_per_round","online_time","online_time","propose_max_round_time","propose_max_round_time","propose_max_round_time","propose_min_round_time","propose_min_round_time","propose_min_round_time","public_ip","round_start_delay","rounds","rounds","seed","seed","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start_delay","start_delay_seconds","start_delay_seconds","timeout_ratio","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_nodes","transaction_size","transaction_size","transactions_per_round","transactions_per_round","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_between_polls","web_server_config","web_server_config"],"q":[[0,"hotshot_orchestrator"],[46,"hotshot_orchestrator::client"],[106,"hotshot_orchestrator::config"],[371,"dyn_clone::sealed"],[372,"dyn_clone::sealed"],[373,"core::clone"],[374,"hotshot_types::traits::signature_key"],[375,"hotshot_types::traits::election"],[376,"core::default"],[377,"tide_disco::error"],[378,"tide_disco::api"],[379,"tide_disco::api"],[380,"core::marker"],[381,"core::marker"],[382,"tide_disco::method"],[383,"alloc::alloc"],[384,"alloc::boxed"],[385,"alloc::sync"],[386,"alloc::rc"],[387,"libp2p_identity::keypair"],[388,"core::net::ip_addr"],[389,"url"],[390,"std::io::error"],[391,"core::any"],[392,"core::fmt"],[393,"core::fmt"],[394,"clap_builder"],[395,"clap_builder::util::id"],[396,"core::option"],[397,"alloc::string"],[398,"core::ops::function"],[399,"serde::de"],[400,"core::fmt"]],"d":["","","","","","","","","","connection to the web server","","","","The network configuration","","Sets up all API routes","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Tracks the latest node index we have generated a …","","","The total nodes that have posted they are ready to start","","","","","","","","","Runs the orchestrator","Whether nodes should start their HotShot instances Will be …","","","","","","Holds the client connection to the orchestrator","Arguments passed to the validator","","","","","","","","","","","","","","","","","","Creates the client that connects to the orchestrator","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the run configuration from the orchestrator Will …","","Sends an identify message to the server Returns this …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","","","","","","","","","","The address the orchestrator runs on","","","Tells the orchestrator this validator is ready to start …","Generic function that waits for the orchestrator to return …","Holds configuration for a <code>HotShot</code>","","","","","Holds configuration for a validator node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of committee nodes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The known nodes’ public key and stake value","","","Maximum transactions per block","","","","","","","","","Minimum transactions per block","My own public key, secret key, stake value","","","Base duration for next-view timeout, in milliseconds","The validator’s index, which can be treated as another …","","","","","Number of network bootstrap nodes","","","","","","","The maximum amount of time a leader can wait to start a …","","","The minimum amount of time a leader has to wait to start a …","","The delay a leader inserts before starting pre-commit, in …","","","","","The validator’s seed","","","","","","","","Delay after init before starting consensus, in milliseconds","","","The exponential backoff ration for the next-view timeout","","","","","","","","Total number of nodes in the network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,5,5,5,5,5,5,0,5,5,5,0,5,5,0,5,5,5,5,56,5,5,5,5,5,5,5,0,5,5,56,5,56,5,56,5,56,5,0,5,5,5,5,5,5,0,0,36,36,37,36,37,36,36,36,37,36,37,36,37,36,36,36,36,37,37,36,37,36,37,36,36,37,36,36,36,37,36,37,37,36,37,36,37,36,37,36,37,36,36,36,36,37,36,37,36,37,36,36,36,36,37,36,37,37,0,0,0,0,0,0,0,46,46,47,47,48,48,29,29,49,49,50,50,51,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,46,47,46,47,46,47,46,47,46,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,50,29,49,29,49,29,50,51,0,0,0,0,0,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,29,46,47,48,29,49,50,51,46,47,48,29,29,49,50,51,51,46,47,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,29,50,29,49,50,46,47,46,47,46,47,46,47,50,50,46,29,50,51,46,29,49,29,50,46,46,46,47,46,29,50,46,29,50,46,50,29,49,29,49,51,46,47,48,29,49,50,51,50,29,49,50,46,47,48,29,49,50,51,50,29,49,29,49,46,47,48,29,49,50,51,46,47,48,29,49,50,51,46,47,48,29,49,50,51,48,46,47,48,29,49,50,51,48,29,49],"f":[0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[5,[-1,-2]]],[[5,[-1,-2]]],[6,7],[6,8]],[[-1,-2],2,[],[]],0,0,[[],[[5,[-1,-2]]],[9,7],[9,8]],[[],[[13,[[11,[-1,10]],12]]],[14,15,16,17]],[18,-1,[]],[18,-1,[]],[18,2],[-1,-1,[]],[-1,[[13,[19,10]]],[]],[[[5,[-1,-2]]],[[13,[19,10]]],[20,6,7],[20,6,14,8]],[[],18],[-1,-2,[],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],0,[[[26,[25]],27],28],[[[29,[-1,-2]]],[[5,[-1,-2]]],7,8],0,[[-1,30],[[13,[[29,[-2,-3]],10]]],[],[],[]],[[[5,[-1,-2]],30],[[13,[[29,[-1,-2]],10]]],[20,6,7],[20,6,14,8]],[[-1,31],[[13,[30,10]]],[]],[[[5,[-1,-2]],31],[[13,[30,10]]],[20,6,7],[20,6,14,8]],[-1,[[13,[2,10]]],[]],[[[5,[-1,-2]]],[[13,[2,10]]],[20,6,7],[20,6,14,8]],[-1,[[13,[2,10]]],[]],[[[5,[-1,-2]]],[[13,[2,10]]],[20,6,7],[20,6,14,8]],[[[29,[-1,-2]],32],[[33,[2]]],[7,20],[8,20]],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,34,[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[35,35],[35,35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[36,36],[[-1,-2],2,[],[]],[[],35],[[],35],[36,37],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[[36,38],39],[-1,-1,[]],[-1,-1,[]],[40,[[13,[36,41]]]],[40,[[13,[36,41]]]],[[37,30],29],[[],[[43,[42]]]],[[37,44],30],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],0,0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[[36,40],[[13,[2,41]]]],[[36,40],[[13,[2,41]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[37,27],19],[[37,-1],-2,45,[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[47,47],[48,48],[[[29,[-1,-2]]],[[29,[-1,-2]]],[6,7],[6,8]],[[[49,[-1]]],[[49,[-1]]],[6,7]],[[[50,[-1]]],[[50,[-1]]],[6,7]],[51,51],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,0,[[],[[29,[-1,-2]]],7,8],[[],[[50,[-1]]],7],[[],51],[[],18],[[],27],[[],18],[[],18],[[],[[43,[48]]]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[13,[46]]],52],[-1,[[13,[47]]],52],[-1,[[13,[48]]],52],[-1,[[13,[[29,[-2,-3]]]]],52,7,8],[-1,[[13,[[49,[-2]]]]],52,7],[-1,[[13,[[50,[-2]]]]],52,7],[-1,[[13,[51]]],52],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],0,[[46,38],39],[[47,38],39],[[48,38],39],[[[29,[-1,-2]],38],39,[53,7],[53,8]],[[[49,[-1]],38],39,[53,7]],[[[50,[-1]],38],39,[53,7]],[[51,38],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[49,[-1]]],[[29,[-1,-2]]],7,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[54,51],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[22,[-1,21]]],[[22,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[23,[-1,21]]],[[23,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],[[[24,[-1,21]]],[[24,[4,21]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[46,-1],13,55],[[47,-1],13,55],[[48,-1],13,55],[[[29,[-1,-2]],-3],13,[20,7],[20,8],55],[[[49,[-1]],-2],13,[20,7],55],[[[50,[-1]],-2],13,7,55],[[51,-1],13,55],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0],"c":[],"p":[[3,"Private",371],[15,"tuple"],[3,"Private",371],[8,"Any",372],[3,"OrchestratorState",0],[8,"Clone",373],[8,"SignatureKey",374],[8,"ElectionConfig",375],[8,"Default",376],[3,"ServerError",377],[3,"Api",378],[4,"ApiError",378],[4,"Result",379],[8,"Send",380],[8,"Sync",380],[8,"ReadState",381],[8,"WriteState",381],[15,"usize"],[15,"bool"],[8,"Serialize",382],[3,"Global",383],[3,"Box",384],[3,"Arc",385],[3,"Rc",386],[15,"u8"],[15,"array"],[15,"u64"],[3,"Keypair",387],[3,"NetworkConfig",106],[15,"u16"],[4,"IpAddr",388],[3,"Url",389],[6,"Result",390],[3,"TypeId",372],[3,"Command",391],[3,"ValidatorArgs",46],[3,"OrchestratorClient",46],[3,"Formatter",392],[6,"Result",392],[3,"ArgMatches",393],[6,"Error",394],[3,"Id",395],[4,"Option",396],[3,"String",397],[8,"Fn",398],[3,"Libp2pConfig",106],[3,"Libp2pConfigFile",106],[3,"WebServerConfig",106],[3,"NetworkConfigFile",106],[3,"HotShotConfigFile",106],[3,"ValidatorConfigFile",106],[8,"Deserializer",399],[8,"Debug",392],[15,"str"],[8,"Serializer",382],[8,"OrchestratorApi",0]]},\
"hotshot_qc":{"doc":"This crates offer implementations of quorum certificates …","t":"AAADDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLDDDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLAQIIKKKKFKKK","n":["bit_vector","bit_vector_old","snarked","BitVectorQC","QCParams","agg_sig_pp","as_any","as_any","as_any_mut","as_any_mut","assemble","borrow","borrow","borrow_mut","borrow_mut","check","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","serialize","sign","stake_table","threshold","trace","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BitVectorQC","QCParams","StakeTableEntry","__clone_box","__clone_box","__clone_box","__clone_box","agg_sig_pp","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assemble","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","get_stake","hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","serialize","serialize","serialize","sign","stake_amount","stake_entries","stake_key","threshold","to_owned","to_owned","trace","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","circuit","KeyType","QCKeyAggregateGadget","VerKeyVar","aggregate_with_selectors","check_aggregate_vk","check_stake_table_digest","check_threshold","compute_stake_table_hash","enforce_equal","is_equal","native_vars"],"q":[[0,"hotshot_qc"],[3,"hotshot_qc::bit_vector"],[50,"hotshot_qc::bit_vector_old"],[139,"hotshot_qc::snarked"],[140,"hotshot_qc::snarked::circuit"],[151,"core::any"],[152,"bitvec::slice"],[153,"jf_primitives::errors"],[154,"core::result"],[155,"generic_array"],[156,"serde::de"],[157,"jf_primitives::signatures"],[158,"serde::de"],[159,"core::cmp"],[160,"core::fmt"],[161,"core::fmt"],[162,"alloc::boxed"],[163,"alloc::sync"],[164,"alloc::rc"],[165,"serde::ser"],[166,"serde::ser"],[167,"rand_core"],[168,"core::any"],[169,"dyn_clone::sealed"],[170,"primitive_types"],[171,"core::hash"],[172,"core::hash"],[173,"jf_relation::constraint_system"],[174,"ark_ff::fields::prime"],[175,"jf_relation::gadgets::emulated"],[176,"jf_relation::constraint_system"],[177,"jf_relation::gadgets::emulated"]],"d":["Implementation for BitVectorQC that uses BLS signature + …","Implementation for BitVectorQC that uses BLS signature + …","This is a SNARKed QC implemenation, see more in HotShot …","An implementation of QC using BLS signature and a …","Public parameters of <code>BitVectorQC</code>","public parameter for the aggregated signature scheme","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","the stake table (snapshot) this QC is verified against","threshold for the accumulated “weight” of votes to …","","","","","","","","","","An implementation of QC using BLS signature and a …","Public parameters of <code>BitVectorQC</code>","Stake table entry","","","","","public parameter for the aggregated signature scheme","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Stake table value","the stake table (snapshot) this QC is verified against","Stake table key","threshold for the accumulated “weight” of votes to …","","","","","","","","","","","","","","","","Circuit implementation of stake key aggregation for quorum …","","Plonk circuit gadget for stake key aggregation for quorum …","Traits for verification keys","Aggregate the verification keys with Boolean selectors.","Key aggregation circuit","Stake table commitment checking circuit","Quorum threshold checking circuit","Digest a list of verification keys and their associated …","Enforce that two input verification key variables are …","Check whether two input verification key variables are …","Returns a list of variables associated with this key …"],"i":[0,0,0,0,0,8,47,8,47,8,47,47,8,47,8,47,47,8,47,8,8,47,8,8,8,47,8,47,8,47,8,47,8,47,8,47,8,8,47,8,8,47,47,8,47,8,47,8,47,8,0,0,0,31,31,33,33,33,34,31,33,34,31,33,34,34,31,33,34,31,33,34,31,33,31,33,34,31,33,34,31,33,34,31,33,34,31,33,31,33,31,31,31,31,33,34,31,33,31,31,33,34,31,33,34,31,33,34,31,33,34,31,33,34,31,33,34,31,33,34,31,33,31,33,31,33,34,34,31,33,34,31,33,34,31,33,34,31,33,0,43,0,0,43,48,48,48,0,43,43,43],"f":[0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[2,3],[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,[[5,[4]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[5,[[8,[-2,-3]]]]],9,10,[11,12]],[7,13],[7,13],[[[8,[-1,-2]],[8,[-1,-2]]],14,[15,10],[15,12]],[[[8,[-1,-2]],16],17,[18,10],[18,12]],[-1,-1,[]],[-1,-1,[]],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,19]]],[[20,[1,19]]],[]],[[[20,[-1,19]]],[[20,[1,19]]],[]],[[[21,[-1,19]]],[[21,[1,19]]],[]],[[[21,[-1,19]]],[[21,[1,19]]],[]],[[[22,[-1,19]]],[[22,[1,19]]],[]],[[[22,[-1,19]]],[[22,[1,19]]],[]],[[[8,[-1,-2]],-3],5,10,[23,12],24],[[6,-1],[[5,[4]]],[25,26]],0,0,[6,[[5,[27,4]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,29],13,[]],[[-1,30],13,[]],[[-1,30],13,[]],[[-1,29],13,[]],0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[2,3],[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,[[5,[4]]]],[[[31,[-1]]],[[31,[-1]]],32],[[[33,[-1,-2]]],[[33,[-1,-2]]],32,32],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[-1,[[5,[[34,[-2]]]]],9,[10,23,11]],[-1,[[5,[[31,[-2]]]]],9,11],[-1,[[5,[[33,[-2,-3]]]]],9,11,11],[7,13],[7,13],[7,13],[[[31,[-1]],[31,[-1]]],14,15],[[[33,[-1,-2]],[33,[-1,-2]]],14,15,15],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[[31,[-1]],16],17,18],[[[33,[-1,-2]],16],17,18,18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[31,[-1]]],35,[]],[[[31,[-1]],-2],13,36,37],[[[33,[-1,-2]],-3],13,36,36,37],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,19]]],[[20,[1,19]]],[]],[[[20,[-1,19]]],[[20,[1,19]]],[]],[[[20,[-1,19]]],[[20,[1,19]]],[]],[[[21,[-1,19]]],[[21,[1,19]]],[]],[[[21,[-1,19]]],[[21,[1,19]]],[]],[[[21,[-1,19]]],[[21,[1,19]]],[]],[[[22,[-1,19]]],[[22,[1,19]]],[]],[[[22,[-1,19]]],[[22,[1,19]]],[]],[[[22,[-1,19]]],[[22,[1,19]]],[]],[[[34,[-1]],-2],5,[10,23,11],24],[[[31,[-1]],-2],5,23,24],[[[33,[-1,-2]],-3],5,23,23,24],[[6,-1],[[5,[4]]],[25,26]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[6,[[5,[27,4]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[[38,[-1]],[3,[-2]],[3,[39]],-3],[[5,[-2,40]]],41,[],[[42,[-1]]]],[[-1,[3,[-4]],[3,[39]],-4,-3],[[5,[13,40]]],[],[],[[42,[-2]]],[[43,[-3]]]],[[-1,[3,[-4]],[3,[44]],44],[[5,[13,40]]],[],[],[[42,[-2]]],[[43,[-3]]]],[[-1,[3,[44]],[3,[39]],44],[[5,[13,40]]],[]],[[[3,[-1]],[3,[-2]]],-1,45,[[46,[-1]]]],[[[38,[-1]],-2,-2],[[5,[13,40]]],41,[]],[[[38,[-1]],-2,-2],[[5,[39,40]]],41,[]],[-1,[[27,[44]]],[]]],"c":[],"p":[[8,"Any",151],[3,"BitSlice",152],[15,"slice"],[4,"PrimitivesError",153],[4,"Result",154],[3,"GenericArray",155],[15,"usize"],[3,"QCParams",3],[8,"Deserializer",156],[8,"AggregateableSignatureSchemes",157],[8,"Deserialize",156],[8,"StakeTableScheme",158],[15,"tuple"],[15,"bool"],[8,"PartialEq",159],[3,"Formatter",160],[6,"Result",160],[8,"Debug",160],[3,"Global",161],[3,"Box",162],[3,"Arc",163],[3,"Rc",164],[8,"Serialize",165],[8,"Serializer",165],[8,"CryptoRng",166],[8,"RngCore",166],[3,"Vec",167],[3,"TypeId",151],[3,"Private",168],[3,"Private",168],[3,"StakeTableEntry",50],[8,"Clone",169],[3,"QCParams",50],[3,"BitVectorQC",50],[3,"U256",170],[8,"Hash",171],[8,"Hasher",171],[3,"PlonkCircuit",172],[3,"BoolVar",172],[4,"CircuitError",173],[8,"PrimeField",174],[8,"EmulationConfig",175],[8,"VerKeyVar",140],[6,"Variable",172],[8,"RescueParameter",176],[8,"SerializableEmulatedStruct",175],[3,"BitVectorQC",3],[8,"QCKeyAggregateGadget",140]]},\
"hotshot_signature_key":{"doc":"This crates offer implementations of quorum certificates …","t":"ADDAAMMDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLL","n":["bn254","BLSPrivKey","BLSPubKey","bn254_priv","bn254_pub","priv_key","pub_key","BLSPrivKey","_DERIVE_core_fmt_Debug_FOR_BLSPrivKey","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","generate","generate_from_seed","generated_from_seed_indexed","get_seed_from_seed_indexed","hash","init","into","into_any","into_any_arc","into_any_rc","partial_cmp","priv_key","serialize","to_owned","try_from","try_into","type_id","vzip","BLSPubKey","__clone_box","__clone_box","as_any","as_any_mut","assemble","borrow","borrow_mut","check","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","from_bytes","from_private","generated_from_seed_indexed","get_public_key","get_public_parameter","get_sig_proof","get_stake_table_entry","hash","init","into","into_any","into_any_arc","into_any_rc","partial_cmp","pub_key","serialize","sign","to_bytes","to_owned","try_from","try_into","type_id","validate","vzip"],"q":[[0,"hotshot_signature_key"],[1,"hotshot_signature_key::bn254"],[7,"hotshot_signature_key::bn254::bn254_priv"],[46,"hotshot_signature_key::bn254::bn254_pub"],[92,"dyn_clone::sealed"],[93,"dyn_clone::sealed"],[94,"core::cmp"],[95,"core::result"],[96,"serde::de"],[97,"core::fmt"],[98,"core::fmt"],[99,"alloc::alloc"],[100,"alloc::boxed"],[101,"alloc::sync"],[102,"alloc::rc"],[103,"core::option"],[104,"serde::ser"],[105,"core::any"],[106,"hotshot_types::traits::signature_key"],[107,"alloc::vec"],[108,"primitive_types"],[109,"bitvec::vec"],[110,"hotshot_types::traits::signature_key"]],"d":["Demonstration implementation of the <code>SignatureKey</code> trait …","Private key type for a bn254 keypair","Public key type for an bn254 <code>SignatureKey</code> pair","<code>BLSPrivKey</code> implementation","<code>BLSPubKey</code> implementation","The private key for  this keypair","The public key for this keypair","Private key type for a bn254 keypair","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Generate a new private key from scratch","Generate a new private key from a seed","Generate a new private key from a seed and a number","Get real seed used for random key generation function","","","Calls <code>U::from(self)</code>.","","","","","The private key for  this keypair","","","","","","","Public key type for an bn254 <code>SignatureKey</code> pair","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","The public key for this keypair","","","","","","","","",""],"i":[0,0,0,0,0,5,26,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],"f":[0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],2,[],[]],[[5,5],6],[7,-1,[]],[7,-1,[]],[-1,[[8,[5]]],9],[7,2],[[5,5],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[5,11],12],[-1,-1,[]],[[],5],[[[14,[13]]],5],[[[14,[13]],15],5],[[[14,[13]],15],[[14,[13]]]],[[5,-1],2,16],[[],7],[-1,-2,[],[]],[[[18,[-1,17]]],[[18,[4,17]]],[]],[[[19,[-1,17]]],[[19,[4,17]]],[]],[[[20,[-1,17]]],[[20,[4,17]]],[]],[[5,5],[[21,[6]]]],0,[[5,-1],8,22],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,23,[]],[-1,-2,[],[]],0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[[24,25]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[13]]],10],[26,26],[[-1,-2],2,[],[]],[[26,26],6],[7,-1,[]],[7,-1,[]],[-1,[[8,[26]]],9],[7,2],[[26,26],10],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[26,11],12],[-1,-1,[]],[27,[[21,[26]]]],[[],26],[[[14,[13]],15],[[2,[26]]]],[[],26],[[28,29]],[[],[[2,[30]]]],[[26,15]],[[26,-1],2,16],[[],7],[-1,-2,[],[]],[[[18,[-1,17]]],[[18,[4,17]]],[]],[[[19,[-1,17]]],[[19,[4,17]]],[]],[[[20,[-1,17]]],[[20,[4,17]]],[]],[[26,26],[[21,[6]]]],0,[[26,-1],8,22],[[[25,[13]]],31],[26,27],[-1,-2,[],[]],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[-1,23,[]],[[26,31,[25,[13]]],10],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",92],[15,"tuple"],[3,"Private",92],[8,"Any",93],[3,"BLSPrivKey",7],[4,"Ordering",94],[15,"usize"],[4,"Result",95],[8,"Deserializer",96],[15,"bool"],[3,"Formatter",97],[6,"Result",97],[15,"u8"],[15,"array"],[15,"u64"],[8,"Hasher",98],[3,"Global",99],[3,"Box",100],[3,"Arc",101],[3,"Rc",102],[4,"Option",103],[8,"Serializer",104],[3,"TypeId",93],[3,"BitSlice",105],[15,"slice"],[3,"BLSPubKey",46],[3,"EncodedPublicKey",106],[3,"Vec",107],[3,"U256",108],[3,"BitVec",109],[3,"EncodedSignature",106]]},\
"hotshot_stake_table":{"doc":"This crate contains some stake table implementations for …","t":"AAAARDLLLLLLLLLLALLLLLLMLLLLLLLMMLALLLLMLLLLMLLLLLLLLLLLLLGGRNNNDINNDGEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLMLFLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMMMMMMMMSIKFDDLLLLLLLLLMMLLLLLLLLLLALLLLLLLLLLLLMMMLLLLLLLLLLLLLMMLLLLLLLLLLMMMLLLLLLLLMLLLMLLLLLLLLLLLLLGDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["config","mt_based","utils","vec_based","STAKE_TABLE_CAPACITY","StakeTable","__clone_box","__clone_box","advance","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","commitment","config","contains_key","deref","deref_mut","deregister","deserialize","drop","epoch_start","eq","equivalent","equivalent","equivalent","fmt","from","get_root","head","height","init","internal","into","into_any","into_any_arc","into_any_rc","last_epoch_start","len","lookup","lookup_with_aux_and_proof","lookup_with_proof","mapping","new","register","sample","serialize","set_value","to_owned","total_stake","try_from","try_into","try_iter","type_id","update","vzip","Digest","FieldType","TREE_BRANCH","Branch","Branch","Empty","IntoIter","Key","Leaf","Leaf","MerkleCommitment","MerklePath","MerklePathEntry","MerkleProof","PersistentMerkleNode","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch_check","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","comm","commitment","compute_root","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_with_mode","digest","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_merkle_path","from_str","get_key","get_key_by_stake","get_key_value","get_value","hash","hash","hash","hash","header","height","index","index","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","len","lookup","multiunzip","new","new","next","num_keys","path","register","serialize","serialize","serialize","serialize","serialize_with_mode","serialized_size","set_value","simple_lookup","size","size","tag","to_merkle_path","to_owned","to_owned","to_owned","to_owned","to_string","total_stakes","tree_height","tree_height","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unvisited","update","verify","vzip","vzip","vzip","vzip","vzip","key","pos","siblings","value","children","comm","comm","key","num_keys","total_stakes","value","SIZE","ToFields","to_fields","u256_to_field","StakeTable","StakeTableSnapshot","__clone_box","__clone_box","__clone_box","__clone_box","advance","as_any","as_any","as_any_mut","as_any_mut","bls_keys","bls_mapping","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commitment","compute_head_comm","config","contains_key","default","default","deref","deref","deref_mut","deref_mut","deregister","deserialize","deserialize","drop","drop","epoch_start","epoch_start_comm","epoch_start_total_stake","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_version","head","head_total_stake","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","last_epoch_start","last_epoch_start_comm","last_epoch_start_total_stake","len","lookup","lookup_pos","lookup_with_aux_and_proof","lookup_with_proof","new","register","sample","schnorr_keys","serialize","serialize","set_value","stake_amount","to_owned","to_owned","total_stake","try_from","try_from","try_into","try_into","try_iter","type_id","type_id","update","vzip","vzip","FieldType","QCVerKey","StateVerKey","__clone_box","__clone_box","as_any","as_any_mut","batch_check","borrow","borrow_mut","check","clone","clone_into","deref","deref_mut","deserialize","deserialize_with_mode","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_str","hash","header","init","internal","into","into_any","into_any_arc","into_any_rc","serialize","serialize_with_mode","serialized_size","tag","to_affine","to_fields","to_fields","to_fields","to_owned","to_string","try_from","try_from","try_from","try_into","type_id","verify","vzip","zeroize"],"q":[[0,"hotshot_stake_table"],[4,"hotshot_stake_table::config"],[5,"hotshot_stake_table::mt_based"],[58,"hotshot_stake_table::mt_based::config"],[61,"hotshot_stake_table::mt_based::internal"],[257,"hotshot_stake_table::mt_based::internal::MerklePathEntry"],[261,"hotshot_stake_table::mt_based::internal::PersistentMerkleNode"],[268,"hotshot_stake_table::utils"],[272,"hotshot_stake_table::vec_based"],[365,"hotshot_stake_table::vec_based::config"],[418,"dyn_clone::sealed"],[419,"dyn_clone::sealed"],[420,"core::clone"],[421,"hotshot_types::traits::stake_table"],[422,"hotshot_types::traits::stake_table"],[423,"serde::de"],[424,"core::cmp"],[425,"core::fmt"],[426,"core::fmt"],[427,"alloc::alloc"],[428,"alloc::boxed"],[429,"alloc::rc"],[430,"core::option"],[431,"rand_core"],[432,"rand_core"],[433,"primitive_types"],[434,"core::any"],[435,"core::iter::traits::iterator"],[436,"core::marker"],[437,"ark_bn254::fields::fq"],[438,"serde::de"],[439,"ark_serialize"],[440,"core::hash"],[441,"core::hash"],[442,"core::fmt"],[443,"alloc::vec"],[444,"tagged_base64"],[445,"ark_ff::fields::prime"],[446,"jf_primitives::rescue"],[447,"core::cmp"],[448,"core::fmt"],[449,"ark_ec::models::short_weierstrass::group"],[450,"ark_ec::models::short_weierstrass::affine"],[451,"jf_primitives::signatures::bls_over_bn254"],[452,"core::convert"]],"d":["Configuration file for stake table","A stake table implementation that’s based on Append-only …","Utilities to help building a stake table.","A vector based stake table implementation. The commitment …","Capacity of a stake table","Locally maintained stake table, generic over public key …","","","Update the stake table when the epoch number advances, …","","","","","","","","Config file for stake table","","","","","","","The snapshot of stake table at the beginning of the …","","","","","","Returns the argument unchanged.","","The most up-to-date stake table, where the incoming …","Height of the underlying merkle tree, determines the …","","Utilities and internals for maintaining a local stake table","Calls <code>U::from(self)</code>.","","","","The stake table used for leader election.","","","","","The mapping from public keys to their location in the …","Initiating an empty stake table. Overall capacity is …","","Almost uniformly samples a key weighted by its stake from …","","Set the stake withheld by <code>key</code> to be <code>value</code>. Return the …","","","","","","","","","Hash algorithm used in Merkle tree, using a RATE-3 rescue","Internal type of Merkle node value(commitment)","Branch of merkle tree. Set to 3 because we are currently …","","","","An owning iterator over the (key, value) entries of a …","Common trait bounds for generic key type <code>K</code> for …","","","A succint commitment for Merkle tree","Path from a Merkle root to a leaf","A compressed Merkle node for Merkle path","An existential proof","A persistent merkle tree tailored for the stake table. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Merkle tree digest","Returns the succint commitment of this subtree","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a list of Merkle path branches back to an index","","","Imagine that the keys in this subtree is sorted, returns …","","","","","","","","Height of a tree","","Index for the given key","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a Merkle proof to the given location","","create a new merkle tree iterator from a <code>root</code>. This …","","","Returns the total number of keys in this subtree","A Merkle path for the given leaf","Insert a new <code>key</code> into the Merkle tree","","","","","","","Set the stake of <code>key</code> to be <code>value</code>. Return the previous stake","Returns the stakes withhelded by a public key, None if the …","","Number of leaves","","Convert an index to a list of Merkle path branches","","","","","","Returns the total stakes in this subtree","","","","","","","","","","","","","","","","","","","","","Update the stake of the <code>key</code> with …","","","","","","","","","","","","","","","","","","The number of field elements needed to represent the given …","A trait that converts into a field element.","Convert the given struct into a list of field elements.","convert a U256 to a field element.","Locally maintained stake table, generic over public key …","","","","","","Update the stake table when the epoch number advances, …","","","","","","The mapping from public keys to their location in the …","","","","","","","","","","Helper function to recompute the stake table commitment …","Config file for stake table","","","","","","","","","","","","","The snapshot of stake table at the beginning of the …","We only support committing the finalized versions. …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","The most up-to-date stake table, where the incoming …","Total stakes for different versions","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The stake table used for leader election.","","","","","Return the index of a given key. Err if the key doesn’t …","","","Initiating an empty stake table.","","","","","","Set the stake withheld by <code>key</code> to be <code>value</code>. Return the …","","","","","","","","","","","","","","","Type for commitment","BLS verification key as indexing key Signature public …","Schnorr verification key as auxiliary information …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Get the internal of verifying key, namely a curve Point","Calls <code>U::from(self)</code>.","","","","","","","","Convert the verification key into the affine form.","","","","","","","","","","","Signature verification function","",""],"i":[0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,18,33,18,0,0,18,33,0,0,0,0,0,18,18,33,33,34,34,32,32,47,18,33,34,32,47,18,33,34,32,32,47,18,33,34,32,47,18,33,34,32,71,32,18,33,34,32,18,33,34,32,32,18,34,47,18,33,34,32,47,18,33,34,32,18,33,34,32,32,32,47,18,33,34,32,18,33,34,32,18,18,18,33,33,33,34,34,34,32,32,32,18,33,34,32,32,47,18,33,34,32,0,32,34,18,34,34,18,33,34,32,32,32,34,34,47,18,33,34,32,47,18,33,34,32,47,18,33,34,32,47,18,33,34,32,47,18,33,34,32,47,18,71,18,47,47,32,47,18,34,18,18,33,34,32,32,32,18,18,32,32,32,0,18,33,34,32,32,18,34,32,47,18,33,34,32,32,32,47,18,33,34,32,47,18,33,34,32,47,18,34,47,18,33,34,32,72,73,73,72,74,74,75,75,74,74,75,57,0,57,0,0,0,59,59,54,54,54,59,54,59,54,59,54,59,54,59,54,59,54,59,54,54,54,0,54,59,54,59,54,59,54,54,59,54,59,54,54,54,54,59,54,59,59,59,54,54,54,59,54,59,54,54,54,54,59,54,59,54,59,54,59,54,59,54,54,54,54,54,54,54,54,54,54,54,54,59,59,54,54,59,59,54,54,59,54,59,54,54,59,54,54,59,54,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,65,60,60,60,60,60,60,60,60,60,60,60,60],"f":[0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[[4,[-1]]],2,5],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],[[4,[-1]]],[7,5]],[[-1,-2],2,[],[]],[[[4,[-1]],8],[[10,[9]]],5],0,[[[4,[-1]]],11,5],[12,-1,[]],[12,-1,[]],[[[4,[-1]]],[[10,[2,9]]],5],[-1,[[10,[[4,[-2]]]]],13,5],[12,2],0,[[[4,[-1]],[4,[-1]]],11,[14,5]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[4,[-1]],15],16,[17,5]],[-1,-1,[]],[[[4,[-1]],8],[[10,[[19,[[18,[-1]]]],9]]],5],0,0,[[],12],0,[-1,-2,[],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],0,[[[4,[-1]],8],[[10,[12,9]]],5],[[[4,[-1]],8,-1],[[10,[9]]],5],[[[4,[-1]],8],[[10,[2,9]]],5],[[[4,[-1]],8],[[10,[2,9]]],5],0,[12,[[4,[-1]]],5],[[[4,[-1]]],[[10,[2,9]]],5],[[[4,[-1]],-2],[[23,[2]]],5,[24,25]],[[[4,[-1]],-2],10,5,26],[[[4,[-1]],-1,27],[[10,[27,9]]],5],[-1,-2,[],[]],[[[4,[-1]],8],[[10,[9]]],5],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[4,[-1]],8],[[10,[9]]],5],[-1,28,[]],[[[4,[-1]],11],[[10,[9]]],5],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,[[10,[2,29]]],[30,31]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[32,[[10,[2,29]]]],[[[18,[-1]]],[[18,[-1]]],[7,5]],[[[33,[-1]]],[[33,[-1]]],7],[[[34,[-1]]],[[34,[-1]]],7],[32,32],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[[18,[-1]]],35,5],[[[34,[-1]]],[[10,[35,9]]],5],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[-1,[[10,[[18,[-2]]]]],13,5],[-1,[[10,[[33,[-2]]]]],13,36],[-1,[[10,[[34,[-2]]]]],13,36],[-1,[[10,[32]]],13],[[-1,37,38],[[10,[32,29]]],39],[32,35],[12,2],[12,2],[12,2],[12,2],[12,2],[[[18,[-1]],[18,[-1]]],11,[14,5]],[[[33,[-1]],[33,[-1]]],11,14],[[[34,[-1]],[34,[-1]]],11,14],[[32,32],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[18,[-1]],15],16,[17,5]],[[[33,[-1]],15],16,17],[[[34,[-1]],15],16,17],[[32,15],16],[[32,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[40,[12]]],12],[41,[[10,[32]]]],[[[34,[-1]]],[[23,[-1]]],5],[[[18,[-1]],27],[[23,[[2,[-1,27]]]]],5],[[[34,[-1]]],[[23,[[2,[-1,27]]]]],5],[[[34,[-1]]],[[23,[27]]],5],[[[18,[-1]],-2],2,[42,5],43],[[[33,[-1]],-2],2,42,43],[[[34,[-1]],-2],2,42,43],[[32,-1],2,43],[[-1,-2],[[44,[-2,-3]]],[],[45,31,46],[]],0,[[[34,[-1]]],12,5],0,[[],12],[[],12],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[-1,-2,[],[]],[[[18,[-1]]],[],5],0,[[[18,[-1]],12,[40,[12]]],[[10,[[34,[-1]],9]]],5],[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[[[19,[[18,[-1]]]]],[[47,[-1]]],5],[[35,12,12],32],[[[47,[-1]]],23,5],[[[18,[-1]]],12,5],0,[[[18,[-1]],12,[40,[12]],-1,27],[[10,[[19,[[18,[-1]]]],9]]],5],[[[18,[-1]],-2],10,5,26],[[[33,[-1]],-2],10,48,26],[[[34,[-1]],-2],10,48,26],[[32,-1],10,26],[[32,-1,37],[[10,[2,29]]],49],[[32,37],12],[[[18,[-1]],12,[40,[12]],-1,27],[[10,[[2,[[19,[[18,[-1]]]],27]],9]]],5],[[[18,[-1]],12,[40,[12]]],[[10,[27,9]]],5],[32,12],0,[[],50],[[12,12],[[51,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,50,[]],[[[18,[-1]]],27,5],[[[34,[-1]]],12,5],[32,12],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[52,[[10,[32]]]],[52,[[10,[32]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[[[18,[-1]],12,[40,[12]],-1,27,11],[[10,[[2,[[19,[[18,[-1]]]],27]],9]]],5],[[[34,[-1]],32],[[10,[2,9]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[51,[-2]]],[],[]],[27,-1,53],0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[[54,[-2,-3,-1]]],2,55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[59,[-1,-2]]],[[59,[-1,-2]]],7,7],[[[54,[-2,-3,-1]]],[[54,[-2,-3,-1]]],[55,7],[56,42,7,[57,[-1]],7],[56,42,7,58,[57,[-1]],7]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[54,[-2,-3,-1]],8],[[10,[9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]]],[[2,[-1,-1,-1]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],0,[[[54,[-2,-3,-1]]],11,55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[],[[59,[-1,-2]]],[],[]],[[],[[54,[-2,-3,-1]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[[[54,[-2,-3,-1]]],[[10,[2,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[-1,[[10,[[59,[-2,-3]]]]],13,36,36],[-1,[[10,[[54,[-3,-4,-2]]]]],13,[55,36],[56,42,7,[57,[-2]],36,58],[56,42,7,58,[57,[-2]],36]],[12,2],[12,2],0,0,0,[[[59,[-1,-2]],[59,[-1,-2]]],11,14,14],[[[54,[-2,-3,-1]],[54,[-2,-3,-1]]],11,[55,14],[56,42,7,[57,[-1]],14],[56,42,7,58,[57,[-1]],14]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[59,[-1,-2]],15],16,17,17],[[[54,[-2,-3,-1]],15],16,[55,17],[56,42,7,[57,[-1]],17],[56,42,7,58,[57,[-1]],17]],[-1,-1,[]],[-1,-1,[]],[[[54,[-2,-3,-1]],8],[[10,[[59,[-2,-3]],9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],0,0,[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],0,0,0,[[[54,[-2,-3,-1]],8],[[10,[12,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]],8],[[10,[9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]],-2],[[10,[12,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]],8],[[10,[2,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]],8],[[10,[2,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[],[[54,[-2,-3,-1]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]]],[[10,[2,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[[[54,[-2,-3,-1]],-4],[[23,[2]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]],[24,25]],0,[[[59,[-1,-2]],-3],10,48,48,26],[[[54,[-2,-3,-1]],-4],10,[55,48],[56,42,7,[57,[-1]],48],[56,42,7,58,[57,[-1]],48],26],[[[54,[-2,-3,-1]],-2,27],[[10,[27,9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-2,-3,-1]],8],[[10,[9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[54,[-2,-3,-1]],8],[[10,[9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[-1,28,[]],[-1,28,[]],[[[54,[-2,-3,-1]],11],[[10,[9]]],55,[56,42,7,[57,[-1]]],[56,42,7,58,[57,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,6,[]],[-1,6,[]],[-1,[[10,[2,29]]],[30,31]],[-1,-2,[],[]],[-1,-2,[],[]],[60,[[10,[2,29]]]],[60,60],[[-1,-2],2,[],[]],[12,-1,[]],[12,-1,[]],[-1,[[10,[60]]],13],[[-1,37,38],[[10,[60,29]]],39],[12,2],[[60,60],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[60,15],[[10,[2,61]]]],[[60,15],[[10,[2,61]]]],[62,60],[-1,-1,[]],[41,[[10,[60]]]],[[60,-1],2,43],[[-1,-2],[[44,[-2,-3]]],[],[45,31,46],[]],[[],12],[60,63],[-1,-2,[],[]],[[[21,[-1,20]]],[[21,[6,20]]],[]],[[[19,[-1,20]]],[[19,[6,20]]],[]],[[[22,[-1,20]]],[[22,[6,20]]],[]],[[60,-1],10,26],[[60,-1,37],[[10,[2,29]]],49],[[60,37],12],[[],50],[60,64],[65,[[51,[66]]]],[60,[[51,[35]]]],[60,[[51,[66]]]],[-1,-2,[],[]],[-1,50,[]],[52,[[10,[60]]]],[-1,[[10,[-2]]],[],[]],[52,[[10,[60]]]],[-1,[[10,[-2]]],[],[]],[-1,28,[]],[[60,[40,[67]],68,-1],[[10,[2,69]]],[[70,[[40,[67]]]]]],[-1,-2,[],[]],[60,2]],"c":[],"p":[[3,"Private",418],[15,"tuple"],[3,"Private",418],[3,"StakeTable",5],[8,"Key",61],[8,"Any",419],[8,"Clone",420],[4,"SnapshotVersion",421],[4,"StakeTableError",421],[4,"Result",422],[15,"bool"],[15,"usize"],[8,"Deserializer",423],[8,"PartialEq",424],[3,"Formatter",425],[6,"Result",425],[8,"Debug",425],[4,"PersistentMerkleNode",61],[3,"Arc",426],[3,"Global",427],[3,"Box",428],[3,"Rc",429],[4,"Option",430],[8,"SeedableRng",431],[8,"CryptoRngCore",431],[8,"Serializer",432],[3,"U256",433],[3,"TypeId",419],[4,"SerializationError",434],[8,"Iterator",435],[8,"Send",436],[3,"MerkleCommitment",61],[4,"MerklePathEntry",61],[3,"MerkleProof",61],[6,"Fq",437],[8,"Deserialize",423],[4,"Compress",438],[4,"Validate",438],[8,"Read",439],[15,"slice"],[15,"str"],[8,"Hash",440],[8,"Hasher",440],[3,"IndentedSection",441],[8,"Display",425],[8,"Sync",436],[3,"IntoIter",61],[8,"Serialize",432],[8,"Write",439],[3,"String",442],[3,"Vec",443],[3,"TaggedBase64",444],[8,"PrimeField",445],[3,"StakeTable",272],[8,"RescueParameter",446],[8,"Eq",424],[8,"ToFields",268],[8,"Default",447],[3,"StakeTableSnapshot",272],[3,"QCVerKey",365],[3,"Error",425],[3,"SignKey",448],[3,"Projective",449],[3,"Affine",450],[6,"StateVerKey",365],[6,"FieldType",365],[15,"u8"],[3,"Signature",448],[4,"PrimitivesError",451],[8,"AsRef",452],[6,"MerklePath",61],[13,"Leaf",257],[13,"Branch",257],[13,"Branch",261],[13,"Leaf",261]]},\
"hotshot_state_prover":{"doc":"SNARK-assisted light client state update verification in …","t":"GGGDGGLLLLLMLLLALLMLLLLMLLLLLLLLLLFMLLLLLLLLMMMMMMMMMMMFMMMLLLMMMMLLLLLLLLLLLLMLMLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLMMLLLLLLLLLLLLLLLLLLLFMLLLLLL","n":["BaseField","Proof","ProvingKey","QCVerKey","UniversalSrs","VerifyingKey","__clone_box","__clone_box","as_any","as_any_mut","batch_check","beta_h","borrow","borrow_mut","check","circuit","clone","clone_into","commit_key","deref","deref_mut","deserialize","deserialize_with_mode","domain_size","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_str","generate_state_update_proof","h","hash","header","init","internal","into","into_any","into_any_arc","into_any_rc","is_merged","k","num_inputs","open_key","opening_proof","plookup_pk","plookup_proof","plookup_vk","poly_evals","powers_of_g","powers_of_h","preprocess","prod_perm_poly_comm","selector_comms","selectors","serialize","serialize_with_mode","serialized_size","shifted_opening_proof","sigma_comms","sigmas","split_quot_poly_comms","tag","to_affine","to_fields","to_fields","to_owned","to_string","try_from","try_from","try_from","try_into","type_id","verify","vk","vzip","wires_poly_comms","zeroize","LightClientStateVar","PublicInput","StakeTableCommVar","StakeTableEntryVar","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bits","as_bits","as_ref","as_ref","block_comm_root","block_comm_root","block_height","block_height","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_for_preprocessing","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_hex","encode_hex_upper","fee_ledger_comm","fee_ledger_comm","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","new","qc_key_comm","qc_keys_comm","stake_amount","stake_amount_comm","stake_amount_comm","stake_table_comm","stake_table_comm","state_key_comm","state_keys_comm","state_ver_key","threshold","to_owned","to_owned","to_owned","to_owned","try_as_bits","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u256_to_field","vars","view_number","view_number","vzip","vzip","vzip","vzip"],"q":[[0,"hotshot_state_prover"],[82,"hotshot_state_prover::circuit"],[211,"dyn_clone::sealed"],[212,"dyn_clone::sealed"],[213,"ark_serialize::error"],[214,"core::result"],[215,"core::iter::traits::iterator"],[216,"core::marker"],[217,"serde::de"],[218,"ark_serialize"],[219,"ark_serialize"],[220,"core::fmt"],[221,"core::fmt"],[222,"hotshot_types::light_client"],[223,"primitive_types"],[224,"jf_plonk::errors"],[225,"rand_core"],[226,"rand_core"],[227,"core::iter::traits::collect"],[228,"core::hash"],[229,"color_eyre::section"],[230,"core::fmt"],[231,"alloc::alloc"],[232,"alloc::boxed"],[233,"alloc::sync"],[234,"alloc::rc"],[235,"serde::ser"],[236,"std::io"],[237,"ark_ec::models::short_weierstrass::affine"],[238,"ark_bn254::fields::fr"],[239,"ark_ff::fields::models::fp::montgomery_backend"],[240,"ark_ff::fields::models::fp"],[241,"alloc::vec"],[242,"ark_bn254::fields::fq"],[243,"tagged_base64"],[244,"core::any"],[245,"core::convert"],[246,"bitvec::slice"],[247,"bitvec::order"],[248,"jf_relation::constraint_system"],[249,"ark_ff::fields::prime"],[250,"jf_relation::constraint_system"],[251,"core::clone"],[252,"core::iter::traits::collect"],[253,"bitvec::ptr::span"]],"d":["BLS verification key, base field and Schnorr verification …","Proof","Proving key","BLS verification key, base field and Schnorr verification …","Universal SRS","Verifying key","","","","","","\\\\beta times the above generator of G2.","","","","State verifier circuit builder Circuit implementation for …","","","","","","","","The size of the evaluation domain. Should be a power of …","","","","","","","","","Returns the argument unchanged.","","Given a proving key and","TODO: remove h and beta_h The generator of G2.","","","","Get the internal of verifying key, namely a curve Point","Calls <code>U::from(self)</code>.","","","","A flag indicating whether the key is a merged key.","The constants K0, …, K_num_wire_types that ensure wire …","The number of public inputs.","KZG PCS opening key.","(Aggregated) proof of evaluations at challenge point <code>zeta</code>.","","The partial proof for Plookup argument","Plookup verifying key, None if not support lookup.","Polynomial evaluations.","Group elements of the form <code>{ \\\\beta^i G }</code>, where <code>i</code> ranges …","powers of \\\\beta time the generator h of G2","Given a SRS, returns the proving key and verifying key for …","The polynomial commitment for the wire permutation …","The selector polynomial commitments. The commitments are …","","","","","(Aggregated) proof of evaluation at challenge point …","The permutation polynomial commitments. The commitments …","","Splitted quotient polynomial commitments.","","Convert the verification key into the affine form.","","","","","","","","","","Signature verification function","The verifying key. It is used by prover to initialize …","","Wire witness polynomials commitments.","","Light client state Variable","","Light client state Variable The stake table commitment is …","Variable for stake table entry","","","","","","","","","","","","","","","","","","","","","","Return the block commitment root of the light client state","","Return the block height of the light client state","","","","","","","","","A function that takes as input:","Internal function to build a dummy circuit","","","","","","","","","","","","","","","","","","","","","","","","Return the fee ledger commitment of the light client state","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Return the qc key commitment of the light client state","Commitment for QC verification keys","Stake amount","Return the stake amount commitment of the light client …","Commitment for stake amount","","Return the stake table commitment of the light client state","Return the state key commitment of the light client state","Commitment for state verification keys","state verification keys","Return the threshold","","","","","","","","","","","","","","","","","","","Lossy conversion of a U256 into a field element.","Private list holding all variables vars[0]: view number …","","Return the view number of the light client state","","","",""],"i":[0,0,0,0,0,0,9,9,9,9,9,40,9,9,9,0,9,9,20,9,9,9,9,41,9,9,9,9,9,9,9,9,9,9,0,40,9,9,9,9,9,9,9,9,41,41,41,41,24,20,24,41,24,40,40,0,24,41,20,9,9,9,24,41,20,24,9,9,9,9,9,9,9,9,9,9,9,9,20,9,24,9,0,0,0,0,65,65,66,66,60,60,25,25,65,66,60,25,65,66,60,25,60,25,60,25,60,25,60,25,65,66,60,25,65,66,60,25,0,0,65,66,60,25,65,66,60,25,65,66,60,25,65,66,60,25,65,66,60,25,25,25,60,25,65,66,60,25,65,66,60,25,25,65,66,60,25,65,66,60,25,65,66,60,25,65,66,60,25,65,66,60,25,60,25,66,65,25,66,60,25,25,66,65,25,65,66,60,25,60,25,65,66,60,25,65,66,60,25,65,66,60,25,0,60,60,25,65,66,60,25],"f":[0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,[[6,[2,5]]],[7,8]],0,[-1,-2,[],[]],[-1,-2,[],[]],[9,[[6,[2,5]]]],0,[9,9],[[-1,-2],2,[],[]],0,[10,-1,[]],[10,-1,[]],[-1,[[6,[9]]],11],[[-1,12,13],[[6,[9,5]]],14],0,[10,2],[[9,9],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[9,16],[[6,[2,17]]]],[[9,16],[[6,[2,17]]]],[18,9],[-1,-1,[]],[19,[[6,[9]]]],[[-1,20,-2,-3,-4,[22,[21]],23],[[6,[[2,[24,[25,[21]]]],26]]],[27,28],29,30,30],0,[[9,-1],2,31],[[-1,-2],[[32,[-2,-3]]],[],[33,8,34],[]],[[],10],[9,35],[-1,-2,[],[]],[[[37,[-1,36]]],[[37,[4,36]]],[]],[[[38,[-1,36]]],[[38,[4,36]]],[]],[[[39,[-1,36]]],[[39,[4,36]]],[]],0,0,0,0,0,0,0,0,0,0,0,[40,[[6,[[2,[20,41]],26]]]],0,0,0,[[9,-1],6,42],[[9,-1,12],[[6,[2,5]]],43],[[9,12],10],0,0,0,0,[[],44],[9,45],[9,[[49,[[48,[[47,[46]]]],36]]]],[9,[[49,[[48,[[47,[50]]]],36]]]],[-1,-2,[],[]],[-1,44,[]],[51,[[6,[9]]]],[51,[[6,[9]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,52,[]],[[9,[54,[53]],55,-1],[[6,[2,56]]],[[57,[[54,[53]]]]]],0,[-1,-2,[],[]],0,[9,2],0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,[[58,[-2,-3]]],[],[],59],[-1,[[58,[-2,-3]]],[],[],59],[60,[[54,[61]]]],[[[25,[-1]]],[[54,[-1]]],62],[60,61],[[[25,[-1]]],-1,62],[60,61],[[[25,[-1]]],-1,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3,[22,[-4]],23],[[6,[[2,[[63,[-4]],[25,[-4]]]],26]]],30,30,30,64],[[],[[6,[[2,[[63,[-1]],[25,[-1]]]],26]]],64],[65,65],[66,66],[60,60],[[[25,[-1]]],[[25,[-1]]],[67,62]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,2],[10,2],[10,2],[10,2],[-1,-2,[],[[69,[68]]]],[-1,-2,[],[[69,[68]]]],[60,61],[[[25,[-1]]],-1,62],[[65,16],70],[[66,16],70],[[60,16],70],[[[25,[-1]],16],70,[71,62]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[49,[-1]]],[[25,[-1]]],62],[-1,-1,[]],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[37,[-1,36]]],[[37,[4,36]]],[]],[[[37,[-1,36]]],[[37,[4,36]]],[]],[[[37,[-1,36]]],[[37,[4,36]]],[]],[[[37,[-1,36]]],[[37,[4,36]]],[]],[[[38,[-1,36]]],[[38,[4,36]]],[]],[[[38,[-1,36]]],[[38,[4,36]]],[]],[[[38,[-1,36]]],[[38,[4,36]]],[]],[[[38,[-1,36]]],[[38,[4,36]]],[]],[[[39,[-1,36]]],[[39,[4,36]]],[]],[[[39,[-1,36]]],[[39,[4,36]]],[]],[[[39,[-1,36]]],[[39,[4,36]]],[]],[[[39,[-1,36]]],[[39,[4,36]]],[]],[[[63,[-1]],[22,[-1]]],[[6,[60,72]]],62],[[[25,[-1]]],-1,62],0,0,[[[25,[-1]]],-1,62],0,[60,66],[[[25,[-1]]],[[2,[-1,-1,-1]]],62],[[[25,[-1]]],-1,62],0,0,[[[25,[-1]]],-1,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[[58,[-2,-3]],[73,[-2]]]]],[],[],59],[-1,[[6,[[58,[-2,-3]],[73,[-2]]]]],[],[],59],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[23,-1,62],0,[60,61],[[[25,[-1]]],-1,62],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",211],[15,"tuple"],[3,"Private",211],[8,"Any",212],[4,"SerializationError",213],[4,"Result",214],[8,"Iterator",215],[8,"Send",216],[3,"QCVerKey",0],[15,"usize"],[8,"Deserializer",217],[4,"Compress",218],[4,"Validate",218],[8,"Read",219],[15,"bool"],[3,"Formatter",220],[3,"Error",220],[3,"SignKey",221],[15,"str"],[6,"ProvingKey",0],[6,"BaseField",0],[3,"LightClientState",222],[3,"U256",223],[6,"Proof",0],[3,"PublicInput",82],[4,"PlonkError",224],[8,"CryptoRng",225],[8,"RngCore",225],[8,"StakeTableScheme",226],[8,"IntoIterator",227],[8,"Hasher",228],[3,"IndentedSection",229],[8,"Display",220],[8,"Sync",216],[3,"Projective",230],[3,"Global",231],[3,"Box",232],[3,"Arc",233],[3,"Rc",234],[6,"UniversalSrs",0],[6,"VerifyingKey",0],[8,"Serializer",235],[8,"Write",219],[3,"String",236],[3,"Affine",237],[3,"FrConfig",238],[3,"MontBackend",239],[3,"Fp",240],[3,"Vec",241],[3,"FqConfig",242],[3,"TaggedBase64",243],[3,"TypeId",212],[15,"u8"],[15,"slice"],[3,"Signature",221],[4,"PrimitivesError",244],[8,"AsRef",245],[3,"BitSlice",246],[8,"BitOrder",247],[3,"LightClientStateVar",82],[6,"Variable",248],[8,"PrimeField",249],[3,"PlonkCircuit",248],[8,"RescueParameter",250],[3,"StakeTableEntryVar",82],[3,"StakeTableCommVar",82],[8,"Clone",251],[15,"char"],[8,"FromIterator",227],[6,"Result",220],[8,"Debug",220],[4,"CircuitError",252],[4,"BitSpanError",253]]},\
"hotshot_task":{"doc":"Abstractions meant for usage with long running consensus …","t":"GDDDDMMFMLLLLLLLLFALLLLMMFAMMMLLLLLLLLLLFLLLLLLLLLLMAAAALLLLLLLLLLLLLDDDIQIGQLLLLLLLLLLLKLLLLLMLLLLLMLKLLKLLMLLLLLLLLLLLKLLDGDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLNQQQDNDDNDNEEINNGQQNNIDNNNQNIILLLLLLLLLLLLLLLKLLLLLLLLLLLLLMMLLLLLLLLMMMMMMMMLLLLLLLLLLLLMMMMLLLLMMLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLDDDIIDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLMMLLLDNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLL","n":["BoxSyncFuture","GeneratedStream","Merge","MergeN","ProjectedStreamableThing","a","a_first","assert_future","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_sync","event_stream","from","from","from","from","generator","generator","get_pin_mut_from_vec","global_registry","idx","in_progress_fut","in_progress_fut","into","into","into","into","into_stream","into_stream","into_stream","new","new","new","poll_next","poll_next","poll_next","poll_next","project","project","project","project_ref","project_ref","project_ref","size_hint","streams","task","task_impls","task_launcher","task_state","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","ChannelStream","ChannelStreamInner","DummyStream","EventStream","EventType","SendableStream","StreamId","StreamType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","direct_message","direct_message","direct_message","from","from","from","inner","into","into","into","into_stream","new","next_stream_id","poll_next","publish","publish","publish","subscribe","subscribe","subscribe","subscribers","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsubscribe","unsubscribe","unsubscribe","GlobalRegistry","HotShotTaskId","Modifier","ShutdownFn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","fmt","from","from","from","get_task_state","into","into","into","is_shutdown","new","operate_on_task","pause_task","register","run_task","shutdown_all","shutdown_task","state_cache","state_list","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_cache","Error","Error","Event","EventStream","FilterEvent","FilterEvent","HST","HandleEvent","HandleEvent","HandleMessage","HandleMessage","HotShotTaskCompleted","HotShotTaskHandler","HotShotTaskTypes","LostReturnValue","LostState","MaybePinnedEventStream","Message","MessageStream","MissingHandler","None","PassType","ProjectedHST","ShutDown","Shutdown","Some","State","StreamsDied","TS","TaskErr","base_check","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","check_event_stream","check_ip_shutdown_fut","check_message_stream","clone","clone_into","create_shutdown_fut","default","default","deref","deref","deref","eq","event_check","event_stream","event_stream","fmt","from","from","from","from","from","from","from","handle_event","handle_event","handle_message","handle_message","in_progress_fut","in_progress_fut","in_progress_shutdown_fut","in_progress_shutdown_fut","into","into","into","into","into","into","into","into_future","into_future","launch","launch_shutdown_fut","message_check","message_stream","message_stream","name","name","new","poll","project","project_ref","r_val","r_val","register_event_stream","register_handler","register_message_stream","register_registry","register_state","shutdown_fns","shutdown_fns","state","state","status","status","stream_id","stream_id","tid","tid","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","HSTWithEvent","HSTWithEventAndMessage","HSTWithMessage","ImplEventStream","ImplMessageStream","TaskBuilder","_pd","_pd","_pd","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","from","from","from","from","get_stream_id","get_task_id","into","into","into","into","new","register_event_handler","register_event_stream","register_message_handler","register_message_stream","register_registry","register_state","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","TaskRunner","add_task","borrow","borrow_mut","default","from","into","launch","new","registry","tasks","try_from","try_into","type_id","AtomicTaskStatus","Completed","NotStarted","Paused","Running","TaskState","TaskStatus","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare_and_swap","compare_exchange","compare_exchange_weak","default","deserialize","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_status","from_usize","get","get_status","into","into","into","into_inner","load","new","new","next","partial_cmp","prev","serialize","set","set_state","store","swap","swap_mut","to_owned","to_owned","to_usize","try_from","try_from","try_from","try_into","try_into","try_into","try_next","type_id","type_id","type_id"],"q":[[0,"hotshot_task"],[69,"hotshot_task::event_stream"],[123,"hotshot_task::global_registry"],[169,"hotshot_task::task"],[305,"hotshot_task::task_impls"],[354,"hotshot_task::task_launcher"],[368,"hotshot_task::task_state"],[433,"core::future::future"],[434,"core::marker"],[435,"core::marker"],[436,"core::pin"],[437,"core::option"],[438,"core::slice::index"],[439,"futures_core::stream"],[440,"core::ops::function"],[441,"alloc::sync"],[442,"core::task::wake"],[443,"either"],[444,"core::task::poll"],[445,"core::result"],[446,"core::any"],[447,"core::clone"],[448,"alloc::boxed"],[449,"core::fmt"],[450,"core::fmt"],[451,"alloc::string"],[452,"core::cmp"],[453,"core::sync::atomic"],[454,"serde::de"],[455,"serde::ser"]],"d":["gotta make the futures sync","may be treated as a stream","Stream returned by the <code>merge</code> method.","merge <code>N</code> streams of the same type","","first stream to merge","When <code>true</code>, poll <code>a</code> first, otherwise, <code>poll</code> b`.","yoinked from futures crate","second stream to merge","","","","","","","","","yoinked from futures crate, adds sync bound that we need","mpmc streamable to all subscribed tasks","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Stream generator.","Get a pinned mutable pointer from a list.","the global registry storing the status of all tasks as …","idx to start polling","","Optional in-progress future.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","create a new stream","create a new Merged stream","create a generator","poll the next item in the merged stream","","","","","","","","","","","Streams to be merged.","The <code>HotShot</code> Task. The main point of this library. Uses all …","the task implementations with different features","The hotshot task launcher. Useful for constructing tasks","Astractions over the state of a task and a stream …","","","","","","","","","","","","","","Event stream implementation using channels as the …","trick to make the event stream clonable","a stream that does nothing. it’s immediately closed","Async pub sub event stream NOTE: static bound indicates …","the type of event to process","a stream that plays nicely with async","this is only used for indexing","the type of stream to use","","","","","","","","","","","","send direct message to node","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","inner field. Useful for having the stream itself be clone","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","construct a new event stream","the next unused assignable id","","publish an event to the event stream","","publish an event to the event stream","subscribe to a particular set of events specified by <code>filter</code>…","","","the subscribers to the channel","","","","","","","","","","","","unsubscribe from the stream","","","the global registry provides a place to:","id of task. Usize instead of u64 because used for …","function to modify state","function to shut down gobal registry","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","if the <code>uid</code> is registered with the global registry return …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","checks if all registered tasks have completed","create new registry","internal function to run <code>modifier</code> on <code>uid</code> if it exists","set <code>uid</code>’s state to paused returns true upon success and …","register with the global registry return a function to the …","set <code>uid</code>’s state to running returns true upon success and …","shut down all tasks in registry","shut down a task from a different thread returns true if …","possibly stale read version of state NOTE: must include …","up-to-date shared list of statuses only used if <code>state_cache</code>…","","","","","","","","","","","","update the cache","the task encountered an error","the error to return","the event type from the event stream","the global event stream","Return <code>true</code> if the event should be filtered","filter an event","hot shot task","Type wrapper for handling an event","handle an event","Type wrapper for handling a message","handle a message","enum describing how the tasks completed","ADT for wrapping all possible handler types","group of types needed for a hotshot task","lost the return value somehow","we somehow lost the state this is definitely a bug.","an option of a pinned boxed fused event stream","the message stream to receive","the steam of messages from other tasks","Stream exists but missing handler","No value.","restrictions on types we wish to pass around. Includes …","","the task shut down successfully","deregister with the registry","Some value of type <code>T</code>.","the state of the task","the streams the task was listening for died","the task state","a task error that has nice qualities","Do a consistency check on the <code>HST</code> construction","","","","","","","","","","","","","","","build a task NOTE: done here and not on <code>TaskBuilder</code> because","check the event stream returns either a poll if there’s …","checks the in progress shutdown future, <code>fut</code>","check the message stream returns either a poll if there’…","","","creates the shutdown future and returns it","","","","","","","perform event sanity checks","","shared stream","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","handler for events","","handler for messages","","the in progress future","","if we have a future for tracking shutdown progress","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","launch the task NOTE: the only way to get a <code>HST</code> is by usage","launches the shutdown future","perform message sanity checks","","stream of messages","","name of task","create a new task","","","","","the eventual return value, post-cleanup","register an event stream with the task","register a handler with the task","register a message with the task","register with the registry","register state with the task","","functions performing cleanup one should shut down the task …","","state","","state of the task TODO make this boxed. We don’t want to …","","Optional ID of the stream.","","task id","","","","","","","","","","","","","","","","","","","","","","","a hotshot task with an event stream","hotshot task with even and message","a hotshot task with a message","trait to specify features","trait to specify features","builder for task","phantom data","phantom data","phantom data","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","obtains stream id if it exists","get the task id in the global registry","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new task builder","register an event handler","register an event stream","register a message handler","register a message stream","register with the global registry","register the state","","","","","","","","","","","","","runner for tasks <code>N</code> specifies the number of tasks to ensure …","to support builder pattern","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","returns a <code>Vec</code> because type isn’t known","create new runner","global registry","internal set of tasks to launch","","","","A wrapper around <code>TaskStatus</code> which can be safely shared …","the task completed","the task hasn’t started running","NOTE: not useful generally, but VERY useful for byzantine …","the task is running","The state of a task <code>AtomicTaskStatus</code> + book keeping to …","Nit: wish this was for u8 but sadly no Represents the …","","","","","","","","","","","","Stores a value into the atomic if the current value is the …","Stores a value into the atomic if the current value is the …","Stores a value into the atomic if the current value is the …","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","create a task state from a task status","","Gets the value of the atomic without performing an atomic …","gets a possibly stale version of the state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","Loads a value from the atomic.","Creates a new atomic <code>TaskStatus</code>.","create a new state","next status","","previous status","","Sets the value of the atomic without performing an atomic …","sets the state","Stores a value into the atomic.","Stores a value into the atomic, returning the previous …","Stores a value into the atomic, returning the previous …","","","","","","","","","","Try to get the next task status.","","",""],"i":[0,0,0,0,0,13,13,0,13,11,13,21,16,11,13,21,16,0,0,11,13,21,16,21,16,0,0,11,21,16,11,13,21,16,11,13,16,11,13,16,0,11,13,16,11,13,16,11,13,16,13,11,0,0,0,0,11,13,21,16,11,13,21,16,16,11,13,21,16,0,0,0,0,54,0,0,54,67,26,27,67,26,27,26,27,26,27,27,54,26,27,67,26,27,27,67,26,27,26,27,67,26,54,26,27,54,26,27,67,26,27,67,26,27,67,26,27,67,26,27,54,26,27,0,0,0,0,39,33,34,39,33,34,33,34,33,34,34,33,34,39,33,34,34,39,33,34,34,34,34,34,34,34,34,34,34,34,33,34,39,33,34,39,33,34,39,33,34,34,46,43,43,43,0,51,0,0,51,0,51,0,0,0,46,46,0,43,43,46,68,0,0,46,51,68,43,46,0,0,42,51,47,48,46,45,42,32,51,47,48,46,45,42,32,43,45,45,45,32,32,45,47,32,47,48,32,46,42,45,42,46,51,47,48,46,45,42,32,45,42,45,42,45,42,45,42,51,47,48,46,45,42,32,42,42,42,45,42,45,42,45,42,42,42,42,42,45,42,42,42,42,42,42,45,42,45,42,45,42,45,42,45,42,32,51,47,48,46,45,42,32,51,47,48,46,45,42,32,51,47,48,46,45,42,32,0,0,0,0,0,0,52,56,58,44,52,56,58,44,52,56,58,52,56,58,44,52,56,58,44,44,44,52,56,58,44,44,44,44,44,44,44,44,52,56,58,44,52,56,58,44,52,56,58,0,61,61,61,61,61,61,61,61,61,61,61,61,61,0,38,38,38,38,0,0,63,38,41,63,38,41,38,41,38,41,38,63,63,63,41,38,38,38,63,38,41,63,63,38,41,41,63,63,41,63,38,41,63,63,63,41,41,38,41,38,63,41,63,63,63,38,41,63,63,38,41,63,38,41,41,63,38,41],"f":[0,0,0,0,0,0,0,[-1,-1,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[1,3,4,5]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[[7,[[6,[-1]]]],-2],[[8,[7]]],[],[[10,[[9,[-1]]]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[11,[-1]]],12],[[-1,-2],[[13,[-1,-2]]],12,12],[[[15,[14]]],[[16,[-1]]],[]],[[[7,[-1]],[7,[-2]],17,18],[[20,[[8,[19]]]]],12,12],[[[7,[[11,[-1]]]],17],[[20,[8]]],12],[[[7,[[13,[-1,-2]]]],17],[[20,[8]]],12,12],[[[7,[[16,[-1]]]],17],[[20,[8]]],[]],[[[7,[[11,[-1]]]]],[[0,[-1]]],12],[[[7,[[13,[-1,-2]]]]],[[0,[-1,-2]]],[],[]],[[[7,[[16,[-1]]]]],[[21,[-1]]],[]],[[[7,[[11,[-1]]]]],[[0,[-1]]],12],[[[7,[[13,[-1,-2]]]]],[[0,[-1,-2]]],[],[]],[[[7,[[16,[-1]]]]],[[0,[-1]]],[]],[[[13,[-1,-2]]],[[23,[22,[8,[22]]]]],12,12],0,0,0,0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[7,[-1]],17],[[20,[[8,[24]]]]],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,26],[[[27,[-1]]],[[27,[-1]]],[28,29]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[],[[27,[-1]]],29],[[-1,30],[[7,[[31,[1]]]]],[]],[[26,30],[[7,[[31,[1]]]]]],[[[27,[-1]],30],[[7,[[31,[1]]]]],29],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[27,[-1]]],29],0,[[[7,[26]],17],[[20,[8]]]],[-1,[[7,[[31,[1]]]]],[]],[26,[[7,[[31,[1]]]]]],[[[27,[-1]]],[[7,[[31,[1]]]]],29],[[-1,32],[[7,[[31,[1]]]]],[]],[[26,32],[[7,[[31,[1]]]]]],[[[27,[-1]],32],[[7,[[31,[1]]]]],29],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[-1,30],[[7,[[31,[1]]]]],[]],[[26,30],[[7,[[31,[1]]]]]],[[[27,[-1]],30],[[7,[[31,[1]]]]],29],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[34,34],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[],34],[33],[[34,35],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[34,37],[[8,[38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,18],[[],34],[[34,37,39],[[19,[38,18]]]],[[34,37],18],[[34,40,41],[[23,[33,37]]]],[[34,37],18],[34,23],[[34,22],18],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[34,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[42,[-1]]],23,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],[[42,[-1]]],3],[[[45,[-1]],17],[[19,[[20,[46]],18]]],43],[[[45,[-1]],[7,[[31,[1]]]],17],[[20,[46]]],43],[[[45,[-1]],17],[[19,[[20,[46]],18]]],43],[[[32,[-1]]],[[32,[-1]]],[28,29]],[[-1,-2],23,[],[]],[[[45,[-1]]],[[7,[[31,[1]]]]],43],[[],[[47,[-1]]],43],[[],[[32,[-1]]],29],[[[47,[-1]]],[],43],[[[48,[-1]]],[],43],[[[32,[-1]]],[],29],[[46,46],18],[[[42,[-1]]],23,43],0,0,[[46,35],36],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[]],[-1,[],[]],[[[42,[-1]]],[[49,[46]]],43],[[[45,[-1]],17],[[20,[46]]],43],[[[42,[-1]]],23,43],0,0,0,0,[50,[[42,[-1]]],43],[[[7,[[42,[-1]]]],17],20,43],[[[7,[[42,[-1]]]]],[[45,[-1]]],43],[[[7,[[42,[-1]]]]],[[0,[-1]]],43],0,0,[[[42,[-1]],32],[[42,[-1]]],43],[[[42,[-1]],[51,[-1]]],[[42,[-1]]],43],[[[42,[-1]]],[[42,[-1]]],43],[[[42,[-1]],34],[[42,[-1]]],43],[[[42,[-1]]],[[42,[-1]]],43],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[[52,[-1,-2,-3,-4]]]]],[[42,[[52,[-1,-2,-3,-4]]]]],53,29,54,55],[[[44,[[56,[-1,-2,-3,-4]]]]],[[42,[[56,[-1,-2,-3,-4]]]]],53,29,57,55],[[[44,[[58,[-1,-2,-3,-4,-5,-6]]]]],[[42,[[58,[-1,-2,-3,-4,-5,-6]]]]],53,29,54,29,57,55],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[44,[-1]]],[[8,[30]]],43],[[[44,[-1]]],[[8,[37]]],43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,[[44,[-1]]],43],[[[44,[-1]],[47,[-1]]],[[44,[-1]]],[59,43]],[[[44,[-1]],32],[[44,[-1]]],[59,43]],[[[44,[-1]],[48,[-1]]],[[44,[-1]]],[60,43]],[[[44,[-1]]],[[44,[-1]]],[60,43]],[[[44,[-1]],34],[[44,[-1]]],43],[[[44,[-1]]],[[44,[-1]]],43],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,[[61,37,50,[49,[46]]],61],[-1,-2,[],[]],[-1,-2,[],[]],[[],61],[-1,-1,[]],[-1,-2,[],[]],[61,[[6,[[23,[50,46]]]]]],[[],61],0,0,[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,25,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[38,38],[41,41],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[38,38],62],[[63,38,38,64],38],[[63,38,38,64,64],[[24,[38,38]]]],[[63,38,38,64,64],[[24,[38,38]]]],[[],41],[-1,[[24,[38]]],65],[[38,38],18],[[-1,-2],18,[],[]],[[63,35],36],[[38,35],36],[[41,35],36],[-1,-1,[]],[38,63],[-1,-1,[]],[-1,-1,[]],[[[15,[63]]],41],[22,38],[63,38],[41,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,38],[[63,64],38],[38,63],[[],41],0,[[38,38],[[8,[62]]]],0,[[38,-1],24,66],[[63,38],23],[[41,38],23],[[63,38,64],23],[[63,38,64],38],[[63,38],38],[-1,-2,[],[]],[-1,-2,[],[]],[38,22],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[-1,[[24,[-2]]],[],[]],[[[7,[41]]],[[8,[38]]]],[-1,25,[]],[-1,25,[]],[-1,25,[]]],"c":[386],"p":[[8,"Future",433],[6,"BoxSyncFuture",0],[8,"Sized",434],[8,"Send",434],[8,"Sync",434],[3,"Vec",435],[3,"Pin",436],[4,"Option",437],[15,"slice"],[8,"SliceIndex",438],[3,"MergeN",0],[8,"Stream",439],[3,"Merge",0],[8,"Fn",440],[3,"Arc",441],[3,"GeneratedStream",0],[3,"Context",442],[15,"bool"],[4,"Either",443],[4,"Poll",444],[3,"ProjectedStreamableThing",0],[15,"usize"],[15,"tuple"],[4,"Result",445],[3,"TypeId",446],[3,"DummyStream",69],[3,"ChannelStream",69],[8,"Clone",447],[8,"PassType",169],[6,"StreamId",69],[3,"Box",448],[3,"FilterEvent",169],[3,"ShutdownFn",123],[3,"GlobalRegistry",123],[3,"Formatter",449],[6,"Result",449],[6,"HotShotTaskId",123],[4,"TaskStatus",368],[3,"Modifier",123],[15,"str"],[3,"TaskState",368],[3,"HST",169],[8,"HotShotTaskTypes",169],[3,"TaskBuilder",305],[3,"ProjectedHST",169],[4,"HotShotTaskCompleted",169],[3,"HandleEvent",169],[3,"HandleMessage",169],[6,"BoxFuture",450],[3,"String",451],[4,"HotShotTaskHandler",169],[3,"HSTWithEvent",305],[8,"TaskErr",169],[8,"EventStream",69],[8,"TS",169],[3,"HSTWithMessage",305],[8,"SendableStream",69],[3,"HSTWithEventAndMessage",305],[8,"ImplEventStream",305],[8,"ImplMessageStream",305],[3,"TaskRunner",354],[4,"Ordering",452],[3,"AtomicTaskStatus",368],[4,"Ordering",453],[8,"Deserializer",454],[8,"Serializer",455],[3,"ChannelStreamInner",69],[6,"MaybePinnedEventStream",169]]},\
"hotshot_task_impls":{"doc":"The consensus layer for hotshot. This currently implements …","t":"AAAAAAAAAGDDDGLLMMMLLLLLLLLLLLLLLLLLLMMMFMMMLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMLMMMFLMMMMLLLLLLLLLLLLMMLLLLDDDGLLMMLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLLNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDGLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLFLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLNDGDGDEDNNNLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLGDDDGLLMMLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMMLLLMLLLLLLLLLLLLLDDDGLLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLMLLLNNNNEDGDGDDDDGLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDIGIGGGGGDDDGLLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLKLLLLLLLLLLLLLKKLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLKMMMMMMMMMMMMMMMMMLFLLLLLLLLLLLLLLMMMMMMMMLLLL","n":["consensus","da","events","harness","network","transactions","vid","view_sync","vote","CommitmentAndMetadata","ConsensusTaskError","ConsensusTaskSnafu","ConsensusTaskState","ConsensusTaskTypes","__clone_box","__clone_box","_pd","_pd","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","committee_membership","committee_network","consensus","consensus_event_filter","cur_view","current_proposal","da_certs","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","event_stream","fail","fmt","fmt","fmt","from","from","from","genesis_leaf","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","output_event_stream","payload_commitment_and_metadata","private_key","public_key","publish_proposal_if_able","quorum_membership","quorum_network","registry","sequencing_consensus_handle","source","timeout","timeout_membership","timeout_task","timeout_vote_collector","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_view","vid_shares","vote_collector","vote_if_able","vzip","vzip","vzip","ConsensusTaskError","ConsensusTaskSnafu","DATaskState","DATaskTypes","__clone_box","__clone_box","_pd","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","consensus","cur_view","da_membership","da_network","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","event_stream","fail","filter","fmt","fmt","fmt","from","from","from","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","private_key","public_key","registry","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_collector","vzip","vzip","vzip","BlockReady","DACRecv","DACSend","DAProposalRecv","DAProposalSend","DAVoteRecv","DAVoteSend","HotShotEvent","LeafDecided","QCFormed","QuorumProposalRecv","QuorumProposalSend","QuorumVoteRecv","QuorumVoteSend","SendPayloadCommitmentAndMetadata","Shutdown","Timeout","TimeoutVoteRecv","TimeoutVoteSend","TransactionSend","TransactionsRecv","TransactionsSequenced","VidDisperseRecv","VidDisperseSend","ViewChange","ViewSyncCommitCertificate2Recv","ViewSyncCommitCertificate2Send","ViewSyncCommitVoteRecv","ViewSyncCommitVoteSend","ViewSyncFinalizeCertificate2Recv","ViewSyncFinalizeCertificate2Send","ViewSyncFinalizeVoteRecv","ViewSyncFinalizeVoteSend","ViewSyncPreCommitCertificate2Recv","ViewSyncPreCommitCertificate2Send","ViewSyncPreCommitVoteRecv","ViewSyncPreCommitVoteSend","ViewSyncTimeout","ViewSyncTrigger","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","TestHarnessState","TestHarnessTaskError","TestHarnessTaskSnafu","TestHarnessTaskTypes","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","expected_output","fail","fmt","fmt","fmt","from","from","from","handle_event","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","run_harness","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Committee","NetworkEventTaskState","NetworkEventTaskTypes","NetworkMessageTaskState","NetworkMessageTaskTypes","NetworkTaskError","NetworkTaskKind","NetworkTaskSnafu","Quorum","VID","ViewSync","__clone_box","__clone_box","__clone_box","__clone_box","_pd","_pd","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","channel","clone","clone","clone_into","clone_into","committee_filter","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","event_stream","event_stream","fail","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","handle_event","handle_messages","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","quorum_filter","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vid_filter","view","view_sync_filter","vzip","vzip","vzip","vzip","vzip","CommitmentMap","ConsensusTaskError","ConsensusTaskSnafu","TransactionTaskState","TransactionsTaskTypes","__clone_box","__clone_box","_pd","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","base","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","consensus","cur_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","event_stream","fail","filter","fmt","fmt","fmt","from","from","from","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","membership","network","private_key","public_key","registry","seen_transactions","source","to_owned","to_string","transactions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_transactions","ConsensusTaskError","ConsensusTaskSnafu","VIDTaskState","VIDTaskTypes","__clone_box","__clone_box","_pd","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","consensus","cur_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","event_stream","fail","filter","fmt","fmt","fmt","from","from","from","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","membership","network","private_key","public_key","registry","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_collector","vzip","vzip","vzip","Commit","Finalize","None","PreCommit","ViewSyncPhase","ViewSyncRelayTaskState","ViewSyncRelayTaskStateTypes","ViewSyncReplicaTaskState","ViewSyncReplicaTaskStateTypes","ViewSyncTaskError","ViewSyncTaskInfo","ViewSyncTaskSnafu","ViewSyncTaskState","ViewSyncTaskStateTypes","__clone_box","__clone_box","__clone_box","__clone_box","_pd","_pd","_pd","accumulator","api","api","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","current_view","current_view","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","event_stream","event_stream","event_stream","event_stream_id","fail","filter","finalized","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","handle_event","handle_event","hash","header","id","id","id","in_current_span","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","last_garbage_collected_view","membership","membership","membership","network","network","network","next_view","next_view","num_timeouts_tracked","partial_cmp","phase","private_key","private_key","private_key","public_key","public_key","public_key","registry","relay","relay_task_map","replica_task_map","sent_view_change_event","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_sync_timeout","view_sync_timeout","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccumulatorInfo","AggregatableVote","DAVoteState","HandleVoteEvent","QuorumVoteState","TimeoutVoteState","ViewSyncCommitVoteState","ViewSyncFinalizeVoteState","ViewSyncPreCommitState","VoteCollectionTaskState","VoteTaskError","VoteTaskSnafu","VoteTaskStateTypes","__clone_box","__clone_box","_pd","accumulate_vote","accumulator","accumulator","accumulator","accumulator","accumulator","accumulator","accumulator","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","event_stream","event_stream","event_stream","event_stream","event_stream","event_stream","event_stream","event_stream","fail","filter","filter","filter","filter","filter","filter","filter","fmt","fmt","fmt","from","from","from","from","get_leader","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","header","id","id","id","id","id","id","id","id","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","make_cert_event","membership","membership","membership","membership","membership","membership","membership","membership","public_key","public_key","public_key","public_key","public_key","public_key","public_key","public_key","registry","source","spawn_vote_accumulator","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view","view","view","view","view","view","view","view","vzip","vzip","vzip","vzip"],"q":[[0,"hotshot_task_impls"],[9,"hotshot_task_impls::consensus"],[115,"hotshot_task_impls::da"],[203,"hotshot_task_impls::events"],[270,"hotshot_task_impls::harness"],[348,"hotshot_task_impls::network"],[482,"hotshot_task_impls::transactions"],[574,"hotshot_task_impls::vid"],[662,"hotshot_task_impls::view_sync"],[870,"hotshot_task_impls::vote"],[1037,"dyn_clone::sealed"],[1038,"dyn_clone::sealed"],[1039,"core::error"],[1040,"snafu::backtrace_shim"],[1041,"core::option"],[1042,"hotshot_types::traits::node_implementation"],[1043,"core::result"],[1044,"core::fmt"],[1045,"core::fmt"],[1046,"hotshot_types::traits::node_implementation"],[1047,"color_eyre::section"],[1048,"core::fmt"],[1049,"core::marker"],[1050,"alloc::boxed"],[1051,"alloc::sync"],[1052,"alloc::rc"],[1053,"hotshot_types::simple_certificate"],[1054,"hotshot_types::simple_certificate"],[1055,"alloc::string"],[1056,"core::any"],[1057,"core::cmp"],[1058,"core::fmt"],[1059,"core::hash"],[1060,"std::collections::hash::map"],[1061,"hotshot_task::event_stream"],[1062,"core::ops::function"],[1063,"hotshot_task::task"],[1064,"hotshot_types::message"],[1065,"core::cmp"],[1066,"core::pin"],[1067,"hotshot_types::simple_vote"],[1068,"hotshot_types::simple_certificate"],[1069,"hotshot_types::vote"]],"d":["the task which implements the main parts of consensus","The task which implements the main parts of data …","Defines the events passed between tasks","Defines the types to run unit tests for a task.","The task which implements the network.","The task which implements all transaction handling","The task which implements verifiable information dispersal","The task which implements view synchronization","Generic task for collecting votes","Alias for the block payload commitment and the associated …","Error returned by the consensus task","SNAFU context selector for the <code>ConsensusTaskError</code> error","The state for the consensus task.  Contains all of the …","Type alias for Consensus task","","","needed to typecheck","","Consensus api","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Membership for DA committee Votes/certs","Network for DA committee","Reference to consensus. The replica will require a write …","Filter for consensus, returns true for event types the …","View number this view is executing in.","The most recent proposal we have, will correspond to the …","All the DA certs we’ve received for current and future …","","","","","","","","","","","Global events stream to publish events","Consume the selector and return a <code>Result</code> with the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Handles a consensus event received on the event stream","","The node’s id","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Event stream to publish events to the application layer","The commitment to the current block payload and its …","Our Private Key","Our public key","Sends a proposal if possible from the high qc we have","Membership for Quorum Certs/votes","Network for all nodes","The global task registry","Event handle for consensus","","View timeout from config.","Membership for Timeout votes/certs","timeout task handle","Current timeout vote collection task with its view","","","","","","","","","","","","Must only update the view and GC if the view actually …","All the VID shares we’ve received for current and future …","Current Vote collection task, with it’s view.","","","","","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","Tracks state of a DA task","Type alias for DA Task Types","","","","The state’s api","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Reference to consensus. Leader will require a read lock on …","View number this view is executing in.","Membership for the DA committee","Network for DA","","","","","","","","","","","Global events stream to publish events","Consume the selector and return a <code>Result</code> with the …","Filter the DA event.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This Nodes private key","This Nodes public key","Global registry task for the state","","","","","","","","","","","","","The view and ID of the current vote collection task, if …","","","","Event when the transactions task has a block formed","A Data Availability Certificate (DAC) has been recieved by …","The DA leader has collected enough votes to form a DAC; …","A DA proposal has been received from the network; handled …","Send a DA proposal to the DA committee; emitted by the DA …","A DA vote has been received by the network; handled by the …","Send a DA vote to the DA leader; emitted by DA committee …","All of the possible events that can be passed between …","Event when consensus decided on a leaf","The next leader has collected enough votes to form a QC; …","A quorum proposal has been received from the network; …","Send a quorum proposal to the network; emitted by the …","A quorum vote has been received from the network; handled …","Send a quorum vote to the next leader; emitted by a …","Event to send block payload commitment and metadata from …","Shutdown the task","A consensus view has timed out; emitted by a replica in …","A timeout vote recevied from the network; handled by …","Send a timeout vote to the network; emitted by consensus …","Send transactions to the network","Receive transactions from the network","Event when the transactions task has sequenced …","Vid disperse data has been received from the network; …","Send VID shares to VID storage nodes; emitted by the DA …","The current view has changed; emitted by the replica in …","Receive a <code>ViewSyncCommitCertificate2</code> from the network; …","Send a <code>ViewSyncCommitCertificate2</code> from the network; …","Receive a <code>ViewSyncCommitVote</code> from the network; received by …","Send a <code>ViewSyncCommitVote</code> from the network; emitted by a …","Receive a <code>ViewSyncFinalizeCertificate2</code> from the network; …","Send a <code>ViewSyncFinalizeCertificate2</code> from the network; …","Receive a <code>ViewSyncFinalizeVote</code> from the network; received …","Send a <code>ViewSyncFinalizeVote</code> from the network; emitted by a …","Receive a <code>ViewSyncPreCommitCertificate2</code> from the network; …","Send a <code>ViewSyncPreCommitCertificate2</code> from the network; …","Receive a <code>ViewSyncPreCommitVote</code> from the network; received …","Send a <code>ViewSyncPreCommitVote</code> from the network; emitted by …","Timeout for the view sync protocol; emitted by a replica …","Trigger the start of the view sync protocol; emitted by …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","The state for the test harness task. Keeps track of which …","Error emitted if the test harness task fails","SNAFU context selector for the <code>TestHarnessTaskError</code> error","Type alias for the Test Harness Task","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","The expected events we get from the test.  Maps an event …","Consume the selector and return a <code>Result</code> with the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handles an event for the Test Harness Task.  If the event …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Runs a test by building the task using <code>build_fn</code> and then …","","","","","","","","","","","","","","","","da committee","network event task state","network event task types","the network message task state","networking message task types","network error (no errors right now, only stub)","the type of network task","SNAFU context selector for the <code>NetworkTaskError</code> error","quorum: the normal “everyone” committee","vid","view sync","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","comm channel","","","","","committee filter","","","","","","","","","","","","","","","","","event stream (used for publishing)","event stream","Consume the selector and return a <code>Result</code> with the …","network filter","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handle the given event.","Handle the message.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","quorum filter","","","","","","","","","","","","","","","","","","","","vid filter","view number","view sync filter","","","","","","A type alias for <code>HashMap&lt;Commitment&lt;T&gt;, T&gt;</code>","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","Tracks state of a Transaction task","Type alias for DA Task Types","","","","The state’s api","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Reference to consensus. Leader will require a read lock on …","View number this view is executing in.","","","","","","","","","","","Global events stream to publish events","Consume the selector and return a <code>Result</code> with the …","Event filter for the transaction task","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Membership for teh quorum","Network for all nodes","Our Private Key","This Nodes Public Key","Global registry task for the state","A list of transactions we’ve seen decided, but didn’t …","","","","A list of undecided transactions","","","","","","","","","","","","","","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","Tracks state of a VID task","Type alias for VID Task Types","","","","The state’s api","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Reference to consensus. Leader will require a read lock on …","View number this view is executing in.","","","","","","","","","","","Global events stream to publish events","Consume the selector and return a <code>Result</code> with the …","Filter the VID event.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Membership for teh quorum","Network for all nodes","Our Private Key","This Nodes Public Key","Global registry task for the state","","","","","","","","","","","","","The view and ID of the current vote collection task, if …","","","","Commit phase","Finalize phase","No phase; before the protocol has begun","PreCommit phase","Phases of view sync","State of a view sync relay task","Types used by the view sync relay task","State of a view sync replica task","Types for view sync replica state","Stub of a view sync error","Information about view sync sub-tasks","SNAFU context selector for the <code>ViewSyncTaskError</code> error","Main view sync task state","Types for the main view sync task","","","","","","","","Vote accumulator","HotShot consensus API","HotShot consensus API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","View HotShot is currently in","Current round HotShot is in","","","","","","","","","","","","","","","","","","","","","","","","","","","","Event stream to publish events to","Event stream to publish events to","Event stream to publish events to","Id of the event stream of a certain task","Consume the selector and return a <code>Result</code> with the …","Filter view sync related events.","Whether we have seen a finalized certificate","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handles incoming events for the main view sync task","Handle incoming events for the view sync replica task","","","Our node id; for logging","Our node id; for logging","Our node id; for logging","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Last view we garbage collected old tasks","Membership for teh quorum","Membership for teh quorum","Membership for teh quorum","Network for all nodes","Network for all nodes","Network for all nodes","View HotShot wishes to be in","Round HotShot wishes to be in","How many timeouts we’ve seen in a row; is reset upon a …","","The last seen phase of the view sync protocol","Our Private Key","Our Private Key","Our Private Key","This Nodes Public Key","This Nodes Public Key","This Nodes Public Key","Registry to register sub tasks","The relay index we are currently on","Map of running relay tasks","Map of running replica tasks","Whether we have already sent a view change event for …","","","","","","","","","","","","","","","","","","","","","","","","","","Timeout duration for view sync rounds","Timeout for view sync rounds","","","","","","","","Info needed to create a vote accumulator task","Describes the functions a vote must implement for it to be …","Alias for DA vote accumulator","Trait for types which will handle a vote event.","Alias for Quorum vote accumulator","Alias for Timeout vote accumulator","Alias for View Sync Commit vote accumulator","Alias for View Sync Finalize vote accumulator","Alias for View Sync Pre Commit vote accumulator","Task state for collecting votes of one type and emiting a …","Stub of a vote error","SNAFU context selector for the <code>VoteTaskError</code> error","Types for a vote accumulator Task","","","","Take one vote and accumultate it. Returns either the cert …","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","global event stream","Global event stream shared by all consensus tasks","global event stream","global event stream","global event stream","global event stream","global event stream","global event stream","Consume the selector and return a <code>Result</code> with the …","Event filter to use for this event","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","return the leader for this votes","Handle a vote event","","","","","","","","Node id","This nodes id","Node id","Node id","Node id","Node id","Node id","Node id","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","return the Hotshot event for the completion of this CERT","Membership for voting","Membership we are accumulation votes for","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Public key for this node.","This nodes Pub Key","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","Task Registry for all tasks used by this node","","Generic function for spawnnig a vote task.  Returns the …","","","","","","","","","","","","","","","The view which we are collecting votes for","View of the votes we are collecting","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,18,90,18,18,6,9,18,6,9,6,6,18,6,9,18,6,9,9,6,9,9,18,18,18,0,18,18,18,18,6,9,18,6,9,6,18,6,9,18,9,6,6,9,18,6,9,18,18,6,18,6,18,6,9,18,6,9,18,6,9,18,6,9,18,6,9,9,18,18,18,18,18,18,18,18,0,6,18,18,18,18,9,6,18,6,9,18,6,9,18,6,9,18,18,18,18,18,6,9,0,0,0,0,36,36,91,37,37,35,36,37,35,36,35,35,37,35,36,37,35,36,36,35,36,36,37,37,37,37,37,35,36,37,35,36,35,37,35,36,37,36,37,35,35,36,37,35,36,37,35,37,35,37,35,36,37,35,36,37,35,36,37,35,36,37,35,36,36,37,37,37,35,36,35,37,35,36,37,35,36,37,35,36,37,37,35,36,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,44,44,92,45,43,44,45,43,44,43,43,45,43,44,45,43,44,44,43,44,44,45,43,44,45,43,44,43,45,43,44,45,44,43,43,44,45,43,44,0,43,43,45,43,44,45,43,44,45,43,44,45,43,44,45,43,44,44,0,43,44,43,45,43,44,45,43,44,45,43,44,45,43,44,52,0,0,0,0,0,0,0,52,52,52,52,52,51,51,93,94,56,54,52,50,51,56,54,52,50,51,50,50,56,54,52,50,51,56,54,52,50,51,51,50,54,52,51,52,51,54,56,54,52,50,51,56,54,52,50,51,50,56,54,52,50,51,56,54,51,54,52,50,50,51,56,54,52,50,51,54,56,50,50,56,54,52,50,51,56,54,52,50,51,56,54,52,50,51,56,54,52,50,51,56,54,52,50,51,51,54,50,52,51,50,56,54,52,50,51,56,54,52,50,51,56,54,52,50,51,54,54,54,56,54,52,50,51,0,0,0,0,0,59,59,95,60,60,58,59,60,58,59,58,58,96,60,58,59,60,58,59,59,58,59,59,60,60,60,58,59,60,58,59,58,60,58,59,60,59,60,58,58,59,60,58,59,60,58,60,58,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,59,60,60,60,60,60,60,58,59,58,60,60,58,59,60,58,59,60,58,59,60,58,59,60,0,0,0,0,62,62,97,63,63,61,62,63,61,62,61,61,63,61,62,63,61,62,62,61,62,62,63,63,63,61,62,63,61,62,61,63,61,62,63,62,63,61,61,62,63,61,62,63,61,63,61,63,61,62,63,61,62,63,61,62,63,61,62,63,61,62,62,63,63,63,63,63,61,62,61,63,61,62,63,61,62,63,61,62,63,63,61,62,66,66,66,66,0,0,0,0,0,0,0,0,0,0,66,66,65,65,98,99,100,101,68,69,68,69,101,66,67,64,65,68,69,101,66,67,64,65,64,64,68,69,101,66,67,64,65,68,69,101,66,67,64,65,65,64,66,65,66,65,68,69,67,68,69,101,66,67,64,65,68,69,101,66,67,64,65,64,68,69,101,66,67,64,65,66,66,66,66,68,69,101,67,65,68,69,66,64,64,65,68,69,101,66,67,64,65,68,69,66,64,68,69,101,64,68,69,101,66,67,64,65,68,69,101,66,67,64,65,68,69,101,66,67,64,65,68,69,101,66,67,64,65,68,69,101,66,67,64,65,65,68,68,69,101,68,69,101,68,69,68,66,69,68,69,101,68,69,101,68,69,68,68,69,64,66,65,64,68,69,101,66,67,64,65,68,69,101,66,67,64,65,68,69,101,66,67,64,65,68,69,68,69,101,66,67,64,65,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,102,71,71,103,104,105,106,107,108,71,86,72,73,71,86,72,73,72,72,71,86,72,73,71,86,72,73,73,72,73,73,71,86,72,73,71,86,72,73,72,71,86,72,73,71,86,103,104,105,106,107,108,73,109,71,71,71,71,71,71,72,72,73,71,86,72,73,88,109,71,71,71,71,71,71,72,71,86,103,104,105,106,107,108,72,71,86,72,73,71,86,72,73,71,86,72,73,71,86,72,73,71,86,72,73,73,88,71,86,103,104,105,106,107,108,71,86,103,104,105,106,107,108,86,72,0,73,72,71,86,72,73,71,86,72,73,71,86,72,73,71,86,103,104,105,106,107,108,71,86,72,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,6],[6,[[8,[5]]]],[9,9],[[-1,-2],2,[],[]],0,0,0,[[[10,[-1]]],11,12],0,0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[6,14],[13,2],[13,2],[13,2],0,[9,[[15,[-1,6]]],[]],[[6,16],17],[[6,16],17],[[9,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[18,[-1,-2,-3]]],[[8,[[19,[-1]]]]],12,[[20,[-1]]],[[21,[-1,-2]]]],[[[18,[-1,-2,-3]],[10,[-1]]],2,12,[[20,[-1]]],[[21,[-1,-2]]]],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],0,[-1,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[9,6],0,0,0,0,[[[18,[-1,-2,-3]],[30,[-1]],[8,[[31,[-1]]]]],11,12,[[20,[-1]]],[[21,[-1,-2]]]],0,0,0,[[[10,[-1]],[18,[-1,-2,-3]]],[[2,[[8,[32]],[18,[-1,-2,-3]]]]],12,[[20,[-1]]],[[21,[-1,-2]]]],[6,[[8,[5]]]],0,0,0,0,[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[[18,[-1,-2,-3]]],11,12,[[20,[-1]]],[[21,[-1,-2]]]],0,0,[[[18,[-1,-2,-3]]],11,12,[[20,[-1]]],[[21,[-1,-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[35,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,35],[35,[[8,[5]]]],[36,36],[[-1,-2],2,[],[]],0,0,0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[35,14],[13,2],[13,2],[13,2],0,[36,[[15,[-1,35]]],[]],[[[10,[-1]]],11,12],[[35,16],17],[[35,16],17],[[36,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[37,[-1,-2,-3]],[10,[-1]]],[[8,[32]]],12,[[20,[-1]]],[[21,[-1,-2]]]],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],0,[-1,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[36,35],0,0,0,[35,[[8,[5]]]],[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1]]],[[10,[-1]]],[38,12]],[[-1,-2],2,[],[]],[13,-1,[]],[13,-1,[]],[13,2],[[[10,[-1]],[10,[-1]]],11,[39,12]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[10,[-1]],16],17,[40,12]],[-1,-1,[]],[[[10,[-1]],-2],2,[41,12],42],[[],13],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,-2,[],[]],0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[43,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,43],[43,[[8,[5]]]],[44,44],[[-1,-2],2,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[43,14],[13,2],[13,2],[13,2],0,[44,[[15,[-1,43]]],[]],[[43,16],17],[[43,16],17],[[44,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[10,[-1]],[45,[-1]]],[[2,[[8,[32]],[45,[-1]]]]],12],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],[-1,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[44,43],[[[46,[[10,[-1]]]],[47,[[10,[-1]],13]],[8,[[48,[[10,[-1]]]]]],-2],2,12,49],[43,[[8,[5]]]],[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[50,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,50],[50,[[8,[5]]]],0,[52,52],[51,51],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[10,[-1]]],11,12],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[50,14],[13,2],[13,2],[13,2],[13,2],[13,2],0,0,[51,[[15,[-1,50]]],[]],[52,[[53,[[10,[-1]]]]],12],[[52,16],17],[[50,16],17],[[50,16],17],[[51,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[54,[-1,-2]],[10,[-1]]],[[8,[32]]],12,[[55,[-1]]]],[[[56,[-1]],[46,[[57,[-1]]]]],2,12],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],[-1,[],[]],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[51,50],[[[10,[-1]]],11,12],[50,[[8,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[[[10,[-1]]],11,12],0,[[[10,[-1]]],11,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[58,[[8,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,58],[58,[[8,[5]]]],[59,59],[[-1,-2],2,[],[]],0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[58,14],[13,2],[13,2],[13,2],0,[59,[[15,[-1,58]]],[]],[[[10,[-1]]],11,12],[[58,16],17],[[58,16],17],[[59,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[60,[-1,-2,-3]],[10,[-1]]],[[8,[32]]],12,[[20,[-1]]],[[21,[-1,-2]]]],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],0,[-1,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[59,58],0,0,0,0,0,0,[58,[[8,[5]]]],[-1,-2,[],[]],[-1,33,[]],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[60,[-1,-2,-3]],[19,[-1]]],[[8,[46]]],12,[[20,[-1]]],[[21,[-1,-2]]]],0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[61,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,61],[61,[[8,[5]]]],[62,62],[[-1,-2],2,[],[]],0,0,[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[61,14],[13,2],[13,2],[13,2],0,[62,[[15,[-1,61]]],[]],[[[10,[-1]]],11,12],[[61,16],17],[[61,16],17],[[62,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[63,[-1,-2,-3]],[10,[-1]]],[[8,[32]]],12,[[20,[-1]]],[[21,[-1,-2]]]],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],0,[-1,[],[]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[62,61],0,0,0,0,0,[61,[[8,[5]]]],[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[64,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,64],[64,[[8,[5]]]],[66,66],[65,65],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[],67],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[64,14],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[13,2],[[66,66],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],0,0,0,0,[65,[[15,[-1,64]]],[]],[[[10,[-1]]],11,12],0,[[66,16],17],[[64,16],17],[[64,16],17],[[65,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[68,[-1,-2,-3]],[10,[-1]]],2,12,[[20,[-1]]],[[21,[-1,-2]],38]],[[[69,[-1,-2,-3]],[10,[-1]]],[[2,[[8,[32]],[69,[-1,-2,-3]]]]],12,[[20,[-1]]],[[21,[-1,-2]]]],[[66,-1],2,42],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],0,0,0,[-1,[],[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[65,64],0,0,0,0,0,0,0,0,0,0,[[66,66],[[8,[70]]]],0,0,0,0,0,0,0,0,0,0,0,0,[64,[[8,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,[[[71,[-1,-2,-3]],-2],[[2,[[8,[32]],[71,[-1,-2,-3]]]]],12,[],[]],0,0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[72,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,72],[72,[[8,[5]]]],[73,73],[[-1,-2],2,[],[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[72,14],[13,2],[13,2],[13,2],[13,2],0,0,0,0,0,0,0,0,[73,[[15,[-1,72]]],[]],[[[10,[-1]]],11,[]],[[[10,[-1]]],11,12],[[[10,[-1]]],11,12],[[[10,[-1]]],11,12],[[[10,[-1]]],11,12],[[[10,[-1]]],11,12],[[[10,[-1]]],11,12],[[72,16],17],[[72,16],17],[[73,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[[-1,[10,[-2]]],[[75,[[27,[74]]]]],[],[]],[[[71,[-1,[76,[-1]],[77,[-1]]]],[10,[-1]]],[[75,[[27,[74]]]]],12],[[[71,[-1,[78,[-1]],[30,[-1]]]],[10,[-1]]],[[75,[[27,[74]]]]],12],[[[71,[-1,[79,[-1]],[31,[-1]]]],[10,[-1]]],[[75,[[27,[74]]]]],12],[[[71,[-1,[80,[-1]],[81,[-1]]]],[10,[-1]]],[[75,[[27,[74]]]]],12],[[[71,[-1,[82,[-1]],[83,[-1]]]],[10,[-1]]],[[75,[[27,[74]]]]],12],[[[71,[-1,[84,[-1]],[85,[-1]]]],[10,[-1]]],[[75,[[27,[74]]]]],12],[[-1,-2],[[22,[-2,-3]]],[],[23,24,25],[]],0,0,0,0,0,0,0,0,[-1,[],[]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[27,[-1,26]]],[[27,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[28,[-1,26]]],[[28,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[[[29,[-1,26]]],[[29,[4,26]]],[]],[73,72],[-1,[[10,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[72,[[8,[5]]]],[[[86,[-1]],-2,[10,[-1]],33],[[8,[[2,[13,13]]]]],12,[87,88,24,25],[89,40,24,25]],[-1,-2,[],[]],[-1,33,[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",1037],[15,"tuple"],[3,"Private",1037],[8,"Any",1038],[8,"Error",1039],[3,"ConsensusTaskError",9],[3,"Backtrace",1040],[4,"Option",1041],[3,"ConsensusTaskSnafu",9],[4,"HotShotEvent",203],[15,"bool"],[8,"NodeType",1042],[15,"usize"],[15,"str"],[4,"Result",1043],[3,"Formatter",1044],[6,"Result",1044],[3,"ConsensusTaskState",9],[3,"Leaf",1045],[8,"NodeImplementation",1042],[8,"ConsensusApi",1046],[3,"IndentedSection",1047],[8,"Display",1044],[8,"Send",1048],[8,"Sync",1048],[3,"Global",1049],[3,"Box",1050],[3,"Arc",1051],[3,"Rc",1052],[6,"QuorumCertificate",1053],[6,"TimeoutCertificate",1053],[4,"HotShotTaskCompleted",1054],[3,"String",1055],[3,"TypeId",1038],[3,"ConsensusTaskError",115],[3,"ConsensusTaskSnafu",115],[3,"DATaskState",115],[8,"Clone",1056],[8,"PartialEq",1057],[8,"Debug",1044],[8,"Hash",1058],[8,"Hasher",1058],[3,"TestHarnessTaskError",270],[3,"TestHarnessTaskSnafu",270],[3,"TestHarnessState",270],[3,"Vec",1059],[3,"HashMap",1060],[3,"ChannelStream",1061],[8,"FnOnce",1062],[3,"NetworkTaskError",348],[3,"NetworkTaskSnafu",348],[4,"NetworkTaskKind",348],[3,"FilterEvent",1054],[3,"NetworkEventTaskState",348],[8,"CommunicationChannel",1063],[3,"NetworkMessageTaskState",348],[3,"Message",1064],[3,"ConsensusTaskError",482],[3,"ConsensusTaskSnafu",482],[3,"TransactionTaskState",482],[3,"ConsensusTaskError",574],[3,"ConsensusTaskSnafu",574],[3,"VIDTaskState",574],[3,"ViewSyncTaskError",662],[3,"ViewSyncTaskSnafu",662],[4,"ViewSyncPhase",662],[3,"ViewSyncTaskInfo",662],[3,"ViewSyncTaskState",662],[3,"ViewSyncReplicaTaskState",662],[4,"Ordering",1057],[3,"VoteCollectionTaskState",870],[3,"VoteTaskError",870],[3,"VoteTaskSnafu",870],[8,"Future",1065],[3,"Pin",1066],[6,"ViewSyncCommitVote",1067],[6,"ViewSyncCommitCertificate2",1053],[6,"QuorumVote",1067],[6,"TimeoutVote",1067],[6,"DAVote",1067],[6,"DACertificate",1053],[6,"ViewSyncFinalizeVote",1067],[6,"ViewSyncFinalizeCertificate2",1053],[6,"ViewSyncPreCommitVote",1067],[6,"ViewSyncPreCommitCertificate2",1053],[3,"AccumulatorInfo",870],[8,"Vote",1068],[8,"AggregatableVote",870],[8,"Certificate",1068],[6,"ConsensusTaskTypes",9],[6,"DATaskTypes",115],[6,"TestHarnessTaskTypes",270],[6,"NetworkMessageTaskTypes",348],[6,"NetworkEventTaskTypes",348],[6,"TransactionsTaskTypes",482],[6,"CommitmentMap",482],[6,"VIDTaskTypes",574],[6,"ViewSyncTaskStateTypes",662],[6,"ViewSyncReplicaTaskStateTypes",662],[6,"ViewSyncRelayTaskStateTypes",662],[3,"ViewSyncRelayTaskState",662],[6,"VoteTaskStateTypes",870],[6,"QuorumVoteState",870],[6,"DAVoteState",870],[6,"TimeoutVoteState",870],[6,"ViewSyncPreCommitState",870],[6,"ViewSyncCommitVoteState",870],[6,"ViewSyncFinalizeVoteState",870],[8,"HandleVoteEvent",870]]},\
"hotshot_testing":{"doc":"","t":"ENNENGLLMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLAAAAAAALLLLLALLLLDEDDGNDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLDDDGGGGGGGGGGGDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDNDNDNDNDNDDEGDDGNDELLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDNNNDDDDGGNELLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFFFFFDDLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLMLLLLMLLLLGGGGDGDGLLLLLLLLLMMMLLLLLLLLMLLLLLLLLLLMLMMMMLLLLMLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMMMLMLLLLLLLLLNNDEDDGLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLL","n":["GlobalTestEvent","SafetyViolation","ShutDown","ShutDownReason","SuccessfullyCompleted","TestTask","__clone_box","__clone_box","_pd","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","completion_task","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","node_types","overall_safety_task","spinning_task","task_helpers","test_builder","test_launcher","test_runner","to_owned","try_from","try_from","try_into","try_into","txn_task","type_id","type_id","vzip","vzip","CompletionTask","CompletionTaskDescription","CompletionTaskErr","CompletionTaskErrSnafu","CompletionTaskTypes","TimeBasedCompletionTaskBuilder","TimeBasedCompletionTaskDescription","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_and_launch","build_and_launch","cause","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","duration","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","handles","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","source","test_event_stream","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CombinedImpl","Libp2pImpl","MemoryImpl","StaticCombinedDAComm","StaticCombinedQuorumComm","StaticLibp2pDAComm","StaticLibp2pQuorumComm","StaticMembership","StaticMemoryDAComm","StaticMemoryQuorumComm","StaticMemoryVIDComm","StaticMemoryViewSyncComm","StaticWebDAComm","StaticWebQuorumComm","TestTypes","WebImpl","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_type_phantom","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","committee_nodes_with_stake","compare","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","message_cache","message_cache","networks","networks","new_channel_maps","new_channel_maps","new_channel_maps","new_channel_maps","nodes_with_stake","partial_cmp","primary_down","primary_down","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Err","Failed","InProgress","InconsistentBlocks","InconsistentBlocksSnafu","InconsistentStates","InconsistentStatesSnafu","InconsistentTxnsNum","InconsistentTxnsNumSnafu","MismatchedLeaf","MismatchedLeafSnafu","NotEnoughDecides","NotEnoughDecidesSnafu","Ok","OverallSafetyPropertiesDescription","OverallSafetyTask","OverallSafetyTaskErr","OverallSafetyTaskTypes","RoundCtx","RoundResult","StateAndBlock","TooManyFailures","TooManyFailuresSnafu","ViewStatus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","cause","check_block","check_leaf","check_state","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","ctx","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","expected","expected","fail","fail","fail","fail","fail","fail","failed_nodes","failed_views","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","gen_leaves","got","got","handles","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","insert_error_to_context","insert_into_result","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","leaf_map","map","num_failed_views","num_successful_views","num_txns_map","round_results","source","state_map","status","success_nodes","successful_views","test_event_stream","threshold_calculator","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_threshold","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected","expected","got","got","map","ChangeNode","Down","NetworkDown","NetworkUp","SpinningTask","SpinningTaskDescription","SpinningTaskErr","SpinningTaskErrSnafu","SpinningTaskTypes","StateAndBlock","Up","UpDown","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","changes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","handles","header","idx","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","late_start","latest_view","node_changes","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","updown","vzip","vzip","vzip","vzip","vzip","vzip","build_quorum_proposal","build_quorum_proposal_and_signature","build_system_handle","key_pair_for_id","vid_init","TestMetadata","TimingData","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","completion_task_description","da_committee_size","default","default","default_more_nodes","default_multiple_rounds","default_stress","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","gen_launcher","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","min_transactions","next_view_timeout","num_bootstrap_nodes","overall_safety_properties","propose_max_round_time","propose_min_round_time","round_start_delay","spinning_properties","start_delay","start_nodes","timeout_ratio","timing_data","to_owned","to_owned","total_nodes","try_from","try_from","try_into","try_into","txn_description","type_id","type_id","vzip","vzip","CommitteeNetworkGenerator","Generator","Hook","Networks","ResourceGenerators","TaskGenerator","TestLauncher","ViewSyncNetworkGenerator","add_hook","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","channel_generator","completion_task_generator","config","deref","deref","deref_mut","deref_mut","drop","drop","from","from","hooks","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","launch","metadata","modify_default_config","overall_safety_task_generator","resource_generator","spinning_task_generator","storage","try_from","try_from","try_into","try_into","txn_task_generator","type_id","type_id","vzip","vzip","with_completion_task_generator","with_hooks","with_overall_safety_task_generator","with_resource_generator","with_spinning_task_generator","with_txn_task_generator","Node","TestRunner","__clone_box","__clone_box","add_node_with_config","add_nodes","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","handle","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","late_start","launcher","networks","next_node_id","node_id","nodes","run_test","task_runner","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DistributionBased","RoundRobinTimeBased","TxnTask","TxnTaskDescription","TxnTaskErr","TxnTaskErrSnafu","TxnTaskTypes","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","from","from","from","from","handles","header","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","next_node_idx","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"hotshot_testing"],[56,"hotshot_testing::completion_task"],[185,"hotshot_testing::node_types"],[378,"hotshot_testing::overall_safety_task"],[723,"hotshot_testing::overall_safety_task::OverallSafetyTaskErr"],[728,"hotshot_testing::spinning_task"],[888,"hotshot_testing::task_helpers"],[893,"hotshot_testing::test_builder"],[963,"hotshot_testing::test_launcher"],[1023,"hotshot_testing::test_runner"],[1074,"hotshot_testing::txn_task"],[1178,"dyn_clone::sealed"],[1179,"dyn_clone::sealed"],[1180,"core::fmt"],[1181,"core::fmt"],[1182,"alloc::boxed"],[1183,"alloc::sync"],[1184,"alloc::rc"],[1185,"core::result"],[1186,"core::any"],[1187,"snafu::backtrace_shim"],[1188,"core::option"],[1189,"hotshot_types::traits::node_implementation"],[1190,"hotshot_types::traits::node_implementation"],[1191,"core::fmt"],[1192,"core::marker"],[1193,"core::cmp"],[1194,"serde::de"],[1195,"core::hash"],[1196,"core::marker"],[1197,"std::collections::hash::map"],[1198,"core::convert"],[1199,"core::clone"],[1200,"core::fmt"],[1201,"hotshot_types::error"],[1202,"alloc::vec"],[1203,"hotshot_types::simple_certificate"],[1204,"hotshot::types::handle"],[1205,"hotshot_types::data"],[1206,"hotshot_types::traits::signature_key"],[1207,"hotshot_task_impls::events"],[1208,"hotshot_task::event_stream"],[1209,"hotshot_signature_key::bn254::bn254_pub"],[1210,"hotshot_types::data"],[1211,"hotshot"],[1212,"hotshot_types"],[1213,"hotshot_types"]],"d":["","","","","","","","","","","","","","","","","","","","task that decides when things are complete","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","node types","task that’s consuming events and asserting safety","task to spin nodes up and down","Helpers for initializing system context handle and …","builder","launcher","runner","","","","","","task that’s submitting transactions to the stream","","","","","Data availability task state","Description for a completion task.","the idea here is to run as long as we want Data …","SNAFU context selector for the <code>CompletionTaskErr</code> error","Completion task types","Time-based completion task.","Description for a time-based completion task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","create the task and launch it","Build and launch a completion task.","","","","","","","","","","","","","","","","","","","","","","","","Duration of the task.","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","safety violation","failure","in progress","mismatched blocks for a view","SNAFU context selector for the …","mismatched states for a view","SNAFU context selector for the …","inconsistent txn nums","SNAFU context selector for the …","mismatched leaves for a view","SNAFU context selector for the …","not enough decides","SNAFU context selector for the …","success","cross node safety properties","Data availability task state","possible errors","overall types for safety task","context for a round TODO eventually we want these to just …","Result of running a round of consensus","","too many failed  views","SNAFU context selector for the …","the status of a view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block -&gt; # entries decided on that block","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","build a task","","whether or not to check the block","whether or not to check the leaf","whether or not to check the state","","","","","","","","","","","","","","","","","","","ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Nodes that failed to commit this round","during the run view refactor","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generate leaves","","","handles","","","","","","","","","","","","","","","inserts an error into the context","insert into round result","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NOTE: technically a map is not needed left one anyway for …","","num of total rounds allowed to fail","required number of successful views","","results from previous rounds view number -&gt; round result","","state -&gt; # entries decided on that state","whether or not the round succeeded (for a custom defn of …","Transactions that were submitted Nodes that committed this …","successful views","event stream for publishing safety violations","threshold calculator. Given number of live and total …","","","","","","","","","","","whether or not to check that we have threshold amounts of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","determines whether or not the round passes also do a …","","","","","","","","","","","","","expected number of failures","expected number of decides","actual number of failures","acutal number of decides","","denotes a change in node state","spin the node down","spin the node’s network down","spin the node’s network up","Spinning task state","","","SNAFU context selector for the <code>SpinningTaskErr</code> error","types for safety task","","spin the node up","Spin the node up or down","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","build a task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","the index of the node","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","spin the node or node’s network up or down","","","","","","","","","","","","metadata describing a test","data describing how a round should be timed.","","","","","","","","","","","","","","","","","","Size of the DA committee for the test","","by default, just a single round","Default setting with 20 nodes and 8 views of successful …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Minimum transactions required for a block","Base duration for next-view timeout, in milliseconds","number of bootstrap nodes (libp2p usage only)","","The maximum amount of time a leader can wait to start a …","The minimum amount of time a leader has to wait to start a …","The delay a leader inserts before starting pre-commit, in …","spinning properties","Delay after init before starting consensus, in milliseconds","nodes available at start","The exponential backoff ration for the next-view timeout","timing data","","","Total number of nodes in the test","","","","","","","","","","Wrapper Type for committee function that takes a …","Wrapper for a function that takes a <code>node_id</code> and returns an …","Wrapper type for a hook.","","generators for resources used by each node","Wrapper type for a task generator.","test launcher","","add a hook","","","","","","","","","","overrideable timeout task generator function","configuration used to generate each hotshot node","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","launch the test","metadasta used for tasks","Modifies the config used when generating nodes with <code>f</code>","overall safety task generator","generator for resources","","generate a new storage for each node","","","","","overrideable txn task generator function","","","","","overridde the completion task generator","overwrite hooks with more hooks","override the safety task generator","override resource generators","override the safety task generator","override the txn task generator","","The runner of a test network spin up and down nodes, …","","","add a specific node with a config","add nodes","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","excecute test","","","","","","","","","","","TODO","submit transactions in a round robin style using every …","state of task that decides when things are completed","build the transaction task","Data Availability task error","SNAFU context selector for the <code>TxnTaskErr</code> error","types for task that deices when things are completed","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","build a task","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handles for all nodes.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Optional index of the next node.","","","","","","","","","","","","","","","","","","","",""],"i":[0,100,5,0,100,0,5,5,101,100,5,100,5,100,5,100,5,5,5,0,100,5,100,5,100,5,5,100,5,100,5,100,5,100,5,100,5,100,5,0,0,0,0,0,0,0,5,100,5,100,5,0,100,5,100,5,0,0,0,0,0,25,0,19,19,20,20,25,25,102,21,16,19,20,25,21,16,19,20,25,16,16,21,16,19,20,25,21,16,19,20,25,19,20,25,16,19,20,25,19,20,25,21,16,19,20,25,21,16,19,20,25,16,21,16,19,20,25,20,19,16,16,19,20,25,21,16,19,20,25,21,16,16,21,16,19,20,25,21,16,19,20,25,21,16,19,20,25,21,16,19,20,25,21,16,19,20,25,19,16,21,19,20,25,16,21,16,19,20,25,21,16,19,20,25,21,16,19,20,25,21,16,19,20,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,33,33,34,34,35,35,36,36,103,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,103,32,32,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,104,105,104,105,33,34,35,36,103,32,104,105,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,32,33,34,35,36,58,58,58,47,0,47,0,47,0,47,0,47,0,58,0,0,0,0,0,0,0,47,0,0,58,58,47,47,48,48,51,51,52,52,53,53,54,54,55,55,56,56,106,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,47,47,60,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,48,51,52,53,54,55,56,47,56,56,56,58,47,48,51,52,53,54,55,56,58,47,48,51,52,53,54,55,56,57,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,47,57,58,47,48,51,52,53,54,55,60,61,56,51,52,48,51,52,53,54,55,60,61,58,47,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,60,51,52,57,47,47,57,58,47,48,51,52,53,54,55,60,61,56,61,60,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,48,51,52,53,54,55,60,48,56,56,60,61,47,60,60,60,61,57,56,58,47,48,51,52,53,54,55,56,47,56,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,57,58,47,48,51,52,53,54,55,60,61,56,60,57,58,47,48,51,52,53,54,55,60,61,56,107,108,107,108,109,0,71,71,71,0,0,0,0,0,0,71,0,68,68,71,71,72,72,69,69,110,70,67,68,71,72,69,70,67,68,71,72,69,67,67,70,67,68,71,72,69,70,67,68,71,72,69,68,69,67,70,68,71,72,69,68,71,72,69,70,67,68,71,72,69,70,67,68,71,72,69,67,70,67,68,71,72,69,68,67,67,68,71,72,69,70,67,68,71,72,69,70,67,72,67,70,67,68,71,72,69,70,67,68,71,72,69,70,67,68,71,72,69,70,67,68,71,72,69,70,67,68,71,72,69,68,70,70,69,67,68,71,72,69,67,70,67,68,71,72,69,70,67,68,71,72,69,70,67,68,71,72,69,72,70,67,68,71,72,69,0,0,0,0,0,0,0,81,81,82,82,81,82,81,82,81,82,81,82,81,82,81,82,82,82,81,82,82,82,82,81,82,81,82,81,82,81,82,81,82,82,81,82,81,82,81,82,81,82,81,82,82,81,82,82,81,81,81,82,81,82,81,82,81,82,82,81,82,81,82,82,81,82,81,82,0,0,0,0,0,0,0,0,83,88,83,88,83,88,83,88,83,88,83,88,88,83,88,83,88,83,88,83,83,88,83,88,83,88,83,88,88,83,83,83,83,83,83,83,88,88,83,88,83,83,88,83,88,83,83,83,83,83,83,83,0,0,96,96,86,86,86,96,86,96,86,96,86,96,96,96,86,96,86,96,86,96,86,96,96,86,96,86,96,86,96,96,86,96,86,86,96,86,96,86,86,86,96,86,96,86,96,86,96,86,96,99,99,0,0,0,0,0,98,98,99,99,111,89,97,98,99,89,97,98,99,97,97,89,97,98,99,89,97,98,99,98,99,97,98,99,98,99,89,97,98,99,89,97,98,99,97,89,97,98,99,98,97,97,98,99,89,97,98,99,89,97,97,89,97,98,99,89,97,98,99,89,97,98,99,89,97,98,99,89,97,98,99,98,89,97,98,99,97,89,97,98,99,89,97,98,99,89,97,98,99,89,97,98,99],"f":[0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[[5,7],8],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,15,[]],[16,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,16],[20,[[22,[[21,[-1,-2]]]]],23,[[24,[-1]]]],[25,[[22,[[21,[-1,-2]]]]],23,[[24,[-1]]]],[16,[[18,[15]]]],[19,19],[20,20],[25,25],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[16,26],[6,2],[6,2],[6,2],[6,2],[6,2],0,[19,[[13,[-1,16]]],[]],[[16,7],8],[[16,7],8],[[19,7],8],[[20,7],8],[[25,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[19,16],[16,[[18,[15]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[32,32],[33,33],[34,34],[35,35],[36,36],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[32,32],37],0,[[-1,-2],37,[],[]],[[],32],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[13,[32]]],38],[-1,[[13,[33]]],38],[-1,[[13,[34]]],38],[-1,[[13,[35]]],38],[-1,[[13,[36]]],38],[6,2],[6,2],[6,2],[6,2],[6,2],[[32,32],39],[[33,33],39],[[34,34],39],[[35,35],39],[[36,36],39],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[-1,-2],39,[],[]],[[32,7],8],[[33,7],8],[[34,7],8],[[35,7],8],[[36,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[-1,-2],40,[41,42],43],[[32,-1],2,44],[[33,-1],2,44],[[34,-1],2,44],[[35,-1],2,44],[[36,-1],2,44],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],0,0,0,0,[[],[[2,[[45,[32]],[18,[[45,[32]]]]]]]],[[],[[2,[[45,[32]],[18,[[45,[32]]]]]]]],[[],[[2,[[45,[32]],[18,[[45,[32]]]]]]]],[[],[[2,[[45,[32]],[18,[[45,[32]]]]]]]],0,[[32,32],[[18,[37]]]],0,0,[[32,-1],13,46],[[33,-1],13,46],[[34,-1],13,46],[[35,-1],13,46],[[36,-1],13,46],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,15,[]],[47,[[18,[17]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[48,[-1]]],47,[[50,[[49,[40,6]]]]]],[[[51,[-1,-2]]],47,[[50,[6]]],[[50,[6]]]],[[[52,[-1,-2]]],47,[[50,[6]]],[[50,[6]]]],[53,47],[54,47],[55,47],[56,[[22,[[57,[-1,-2]]]]],23,[[24,[-1]]]],[47,[[18,[15]]]],0,0,0,[58,58],[47,47],[[[48,[-1]]],[[48,[-1]]],59],[[[51,[-1,-2]]],[[51,[-1,-2]]],59,59],[[[52,[-1,-2]]],[[52,[-1,-2]]],59,59],[53,53],[54,54],[55,55],[56,56],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],[[60,[-1]]],23],[[],[[61,[-1]]],23],[[],56],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[47,26],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],0,0,[[[48,[-1]]],[[13,[-2,47]]],[[50,[[49,[40,6]]]]],[]],[[[51,[-1,-2]]],[[13,[-3,47]]],[[50,[6]]],[[50,[6]]],[]],[[[52,[-1,-2]]],[[13,[-3,47]]],[[50,[6]]],[[50,[6]]],[]],[53,[[13,[-1,47]]],[]],[54,[[13,[-1,47]]],[]],[55,[[13,[-1,47]]],[]],0,0,[[58,7],8],[[47,7],8],[[47,7],8],[[[48,[-1]],7],8,62],[[[51,[-1,-2]],7],8,62,62],[[[52,[-1,-2]],7],8,62,62],[[53,7],8],[[54,7],8],[[55,7],8],[[[60,[-1]],7],8,[62,23]],[[[61,[-1]],7],8,[62,23]],[[56,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[60,[-1]]],[[49,[[63,[-1]],6]]],23],0,0,0,[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[61,[-1]],[11,[[64,[-1]]]]],2,23],[[[60,[-1]],6,[2,[[65,[[63,[-1]]]],[66,[-1]]]],[18,[40]]],[[18,[[63,[-1]]]]],23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[48,[-1]]],47,[[50,[[49,[40,6]]]]]],[[[51,[-1,-2]]],47,[[50,[6]]],[[50,[6]]]],[[[52,[-1,-2]]],47,[[50,[6]]],[[50,[6]]]],[53,47],[54,47],[55,47],0,0,0,0,0,0,[47,[[18,[15]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[[[60,[-1]],6,6,[63,[-1]],39,39,39,40],2,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,15,[]],[67,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,67],[69,[[22,[[70,[-1,-2]]]]],23,[[24,[-1]]]],[67,[[18,[15]]]],0,[68,68],[71,71],[72,72],[69,69],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[67,26],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[68,[[13,[-1,67]]],[]],[[67,7],8],[[67,7],8],[[68,7],8],[[71,7],8],[[72,7],8],[[69,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],0,[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[68,67],0,0,0,[67,[[18,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[32,33]],40],[[75,[32,[74,[32]]]]]],[[[73,[32,33]],40],[[2,[[74,[32]],76]]]],[40,[[2,[[73,[32,33]],[78,[[77,[32]]]]]]]],[40,[[2,[79]]]],[[],80],0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[82,82],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[],81],[[],82],[[],82],[[],82],[[],82],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[[81,7],8],[[82,7],8],[-1,-1,[]],[-1,-1,[]],[[82,40],[[83,[-1,-2]]],23,[[84,[-1]],[24,[-1]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[83,[-1,-2]],85],[[83,[-1,-2]]],23,[[24,[-1]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[83,[-1,-2]]],[[86,[-1,-2]]],23,[[24,[-1]]]],0,[[[83,[-1,-2]],-3],[[83,[-1,-2]]],23,[[24,[-1]]],87],0,0,0,0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],0,[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[83,[-1,-2]],[22,[[21,[-1,-2]]]]],[[83,[-1,-2]]],23,[[24,[-1]]]],[[[83,[-1,-2]],[65,[85]]],[[83,[-1,-2]]],23,[[24,[-1]]]],[[[83,[-1,-2]],[22,[[57,[-1,-2]]]]],[[83,[-1,-2]]],23,[[24,[-1]]]],[[[83,[-1,-2]],[88,[-1,-2]]],[[83,[-1,-2]]],23,[[24,[-1]]]],[[[83,[-1,-2]],[22,[[70,[-1,-2]]]]],[[83,[-1,-2]]],23,[[24,[-1]]]],[[[83,[-1,-2]],[22,[[89,[-1,-2]]]]],[[83,[-1,-2]]],23,[[24,[-1]]]],0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[[86,[-1,-2]],[90,[-1,-2]],[91,[-1]],92,93],[[94,[-1,-2]]],23,[[24,[-1]],[24,[-1]]]],[[[86,[-1,-2]],6,[95,[40]]],[[65,[40]]],23,[[24,[-1]],[24,[-1]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[96,[-1,-2]]],[[96,[-1,-2]]],[59,23],[59,[24,[-1]]]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],0,0,0,0,0,0,[[[86,[-1,-2]]],2,23,[[24,[-1]],[24,[-1]]]],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,15,[]],[97,[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98,97],[99,[[22,[[89,[-1,-2]]]]],23,[[84,[-1]],[24,[-1]]]],[97,[[18,[15]]]],[98,98],[99,99],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[97,26],[6,2],[6,2],[6,2],[6,2],[98,[[13,[-1,97]]],[]],[[97,7],8],[[97,7],8],[[98,7],8],[[99,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[10,[-1,9]]],[[10,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[11,[-1,9]]],[[11,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[[[12,[-1,9]]],[[12,[4,9]]],[]],[98,97],0,[97,[[18,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,31,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",1178],[15,"tuple"],[3,"Private",1178],[8,"Any",1179],[4,"GlobalTestEvent",0],[15,"usize"],[3,"Formatter",1180],[6,"Result",1180],[3,"Global",1181],[3,"Box",1182],[3,"Arc",1183],[3,"Rc",1184],[4,"Result",1185],[3,"TypeId",1179],[8,"Error",1186],[3,"CompletionTaskErr",56],[3,"Backtrace",1187],[4,"Option",1188],[3,"CompletionTaskErrSnafu",56],[3,"TimeBasedCompletionTaskDescription",56],[3,"CompletionTask",56],[6,"TaskGenerator",963],[8,"NodeType",1189],[8,"TestableNodeImplementation",1189],[4,"CompletionTaskDescription",56],[15,"str"],[3,"IndentedSection",1190],[8,"Display",1180],[8,"Send",1191],[8,"Sync",1191],[3,"String",1192],[3,"TestTypes",185],[3,"MemoryImpl",185],[3,"Libp2pImpl",185],[3,"WebImpl",185],[3,"CombinedImpl",185],[4,"Ordering",1193],[8,"Deserializer",1194],[15,"bool"],[15,"u64"],[8,"Hash",1195],[8,"Sized",1191],[8,"BuildHasher",1195],[8,"Hasher",1195],[3,"ChannelMaps",1189],[8,"Serializer",1196],[4,"OverallSafetyTaskErr",378],[3,"InconsistentTxnsNumSnafu",378],[3,"HashMap",1197],[8,"Into",1198],[3,"TooManyFailuresSnafu",378],[3,"NotEnoughDecidesSnafu",378],[3,"MismatchedLeafSnafu",378],[3,"InconsistentStatesSnafu",378],[3,"InconsistentBlocksSnafu",378],[3,"OverallSafetyPropertiesDescription",378],[3,"OverallSafetyTask",378],[4,"ViewStatus",378],[8,"Clone",1199],[3,"RoundResult",378],[3,"RoundCtx",378],[8,"Debug",1180],[3,"Leaf",1200],[4,"HotShotError",1201],[3,"Vec",1202],[6,"QuorumCertificate",1203],[3,"SpinningTaskErr",728],[3,"SpinningTaskErrSnafu",728],[3,"SpinningTaskDescription",728],[3,"SpinningTask",728],[4,"UpDown",728],[3,"ChangeNode",728],[3,"SystemContextHandle",1204],[3,"QuorumProposal",1200],[3,"Proposal",1205],[3,"EncodedSignature",1206],[4,"HotShotEvent",1207],[3,"ChannelStream",1208],[3,"BLSPubKey",1209],[6,"VidScheme",1200],[3,"TimingData",893],[3,"TestMetadata",893],[3,"TestLauncher",963],[8,"NodeImplementation",1189],[6,"Hook",963],[3,"TestRunner",1023],[8,"FnMut",1210],[3,"ResourceGenerators",963],[3,"TxnTask",1074],[6,"Networks",963],[3,"HotShotInitializer",1211],[3,"HotShotConfig",1212],[3,"ValidatorConfig",1212],[3,"SystemContext",1211],[3,"HashSet",1213],[3,"Node",1023],[3,"TxnTaskErr",1074],[3,"TxnTaskErrSnafu",1074],[4,"TxnTaskDescription",1074],[4,"ShutDownReason",0],[6,"TestTask",0],[6,"CompletionTaskTypes",56],[6,"StaticMembership",185],[6,"StaticCombinedDAComm",185],[6,"StaticCombinedQuorumComm",185],[6,"OverallSafetyTaskTypes",378],[13,"TooManyFailures",723],[13,"NotEnoughDecides",723],[13,"InconsistentTxnsNum",723],[6,"SpinningTaskTypes",728],[6,"TxnTaskTypes",1074]]},\
"hotshot_types":{"doc":"Types and Traits for the <code>HotShot</code> consensus module","t":"NEDNDRRLLLLLLLLLLLLALLLLLLLLLLLLAMALLLLLLLLLLLLLMAAMLLLLLLLLLLLLLLLLLLLLLLLLMAMAMMMMMMMMMLLLAAMMMMLLLLMALLLLLLLLLAALLLDDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLGDDDDDCCCRRLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLMMMMMMLMMLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLEQQDIQNDNDNDDQDQIGGGDGIDRRLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLFKLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLMKMMMFKMLLLLLFLLMLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKMMMMMLLLLLLLLLNDNDNDNDENDNDNNNNNNDNDNDNNNNENDNNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMMMMMMMNNDENNNLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMMDMDGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLMLLENNNNNNNNNNNEENENNNDEEDEEGDNNNNDNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDGGGGLLMMMMMMMLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLMMMMMMMLLLLLLMMMMMMMMMMMMMMLDGDGDDGDDGDGDGILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMALLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMMMMMMMLLLLLLLLICCAAAAAAAAAAAIIQQQRRQIQKKKKKKKKKKFIIKKKKKKKKLKKKLLKLLKKKIENDINDLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLKLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLIIIIIDLLKLKLLLLLLLLKLKLKLKLLLLLLLLLLLLKKLLKLLLLLKLLDNNNNNNNNNEDNDDNDNDIIENDNNDNDNDNDNDNEDQEEIINDNDNNDDNNNNNNNNNNDNDDIINDENDNDINEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMLLLKKLLKKKLLLLLLLLLLLKKLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMMMMMQQDQQQQIIQDQQQIQQDLLLLLLLLLLKLLLLLLMLLLLKKMLLLLLLLLLLLLLKKMLLLLLLLLLLLLLLLKLLKMMMKLLLLLLLLKLLLMLLLQQQQIQKKKKDDQQQQIQIRRLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLKKKKKKLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLKLLQQNQNNNNQQNNQNNNNENEINRLLLLLLLLLLLLKKLLLLKLLLLLLLLLLLLLLLLLLKKKKKKLKLLLLKLLKLLQQIQIIIQKKAKLKKKKKKDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLNNNDNGIEDDNIELLLLLLKLLLLLLLLLLLLLMMLLLLLLLLLLLLKLLLLLLKKLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLLLLLLLLLLLLLLLLLLLMLLLLLNNNNNDEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMIQIIDGQLLLMLLKLLLLKKKKKKKLLLLLKMMMKLLLML","n":["Continuous","ExecutionType","HotShotConfig","Incremental","ValidatorConfig","_DERIVE_Display_FOR_ValidatorConfig","_DERIVE_core_fmt_Debug_FOR_HotShotConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_impl","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus","da_committee_size","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","election_config","error","event","execution_type","fmt","fmt","fmt","fmt","from","from","from","generated_from_seed_indexed","header","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","known_nodes_with_stake","light_client","max_transactions","message","min_transactions","my_own_validator_config","next_view_timeout","num_bootstrap","private_key","propose_max_round_time","propose_min_round_time","public_key","round_start_delay","serialize","serialize","serialize","simple_certificate","simple_vote","stake_value","start_delay","state_key_pair","timeout_ratio","to_owned","to_owned","to_owned","to_string","total_nodes","traits","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vote","vzip","vzip","vzip","VIDBlockHeader","VIDBlockPayload","VIDTransaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_number","block_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","commit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","encode","encode","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_transactions","genesis","genesis","genesis","genesis","hash","hash","hash","header","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","metadata","new","payload_commitment","payload_commitment","payload_commitment","serialize","serialize","serialize","tag","to_owned","to_owned","to_owned","to_string","transaction_commitments","transactions","try_from","try_from","try_from","try_into","try_into","try_into","txn_count","type_id","type_id","type_id","vzip","vzip","vzip","CommitmentMap","Consensus","ConsensusMetrics","ConsensusMetricsValue","InnerConsensusMetrics","PayloadStore","View","ViewInner","ViewQueue","_DERIVE_Display_FOR_InnerConsensusMetrics","_DERIVE_core_fmt_Debug_FOR_Consensus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","base","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_garbage","counters","create_counter","create_gauge","create_histogram","create_label","cur_view","current_view","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","gauges","get","get_decided_leaf","header","high_qc","histograms","increment_view","init","init","init","init","init","insert","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalid_qc","labels","last_decided_view","last_decided_view","last_synced_block_height","locked_view","metrics","new","number_of_timeouts","number_of_views_per_decide_event","number_of_views_since_last_decide","outstanding_transactions","outstanding_transactions_memory_size","prefix","remove","saved_leaves","saved_payloads","set","set","state_map","sub","subgroup","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","values","values","visit_leaf_ancestors","vzip","vzip","vzip","vzip","vzip","BlockError","Commit","Common","DAProposal","DeltasType","Error","InconsistentPayloadCommitment","InconsistentPayloadCommitmentSnafu","InvalidBlockHeader","InvalidBlockHeaderSnafu","InvalidTransactionLength","InvalidTransactionLengthSnafu","Leaf","NodeType","QuorumProposal","Share","TestableLeaf","Transaction","TxnCommitment","VidCommitment","VidDisperse","VidScheme","VidSchemeTrait","ViewNumber","_DERIVE_core_fmt_Debug_FOR_DAProposal","_DERIVE_core_fmt_Debug_FOR_QuorumProposal","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","batch_check","block_header","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","check","ck","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit","commit","commit_only","common","create_random_transaction","create_random_transaction","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_with_mode","disperse","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoded_transactions","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval_domain","fail","fail","fail","fake_commitment","fill","fill_block_payload","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_stored_view","genesis","genesis","genesis_proposer_id","get_block_header","get_block_payload","get_height","get_justify_qc","get_parent_commitment","get_payload_commitment","get_proposer_id","get_rejected","get_state","get_timestamp","get_u64","get_view_number","get_view_number","get_view_number","get_view_number","hash","hash","hash","hash","hash","header","header","in_current_span","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","justify_qc","justify_qc","metadata","multi_open_domain","new","num_storage_nodes","parent_commitment","partial_cmp","payload_chunk_size","payload_commitment","payload_commitment","proposer_id","proposer_id","random_commitment","recover_payload","rejected","serialize","serialize","serialize","serialize","serialize","serialize_signature2","serialize_with_mode","serialized_size","shares","source","sub","test_srs","timeout_certificate","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_share","view_number","view_number","view_number","view_number","vk","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockError","BlockSnafu","Continue","ContinueSnafu","FailedToBroadcast","FailedToBroadcastSnafu","FailedToMessageLeader","FailedToMessageLeaderSnafu","HotShotError","InsufficientValidSignatures","InsufficientValidSignaturesSnafu","InvalidState","InvalidStateSnafu","LeaderMinRoundTimeNotReached","LeaderWaitingForCommitVotes","LeaderWaitingForHighQC","LeaderWaitingForPreCommitVotes","LeaderWaitingForPrepareVotes","LeafNotFound","LeafNotFoundSnafu","Misc","MiscSnafu","NetworkFault","NetworkFaultSnafu","ReplicaWaitingForCommit","ReplicaWaitingForDecide","ReplicaWaitingForPreCommit","ReplicaWaitingForPrepare","RoundTimedoutState","StorageError","StorageSnafu","TestCollectRoundEventsTimedOut","TimeoutError","TimeoutSnafu","ViewTimeoutError","ViewTimeoutSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","num_valid_signatures","source","state","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","context","context","num_valid_signatures","source","source","source","source","source","source","state","threshold","view_number","Decide","Error","Event","EventType","NextLeaderViewTimeout","ReplicaViewTimeout","ViewFinished","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","event","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view_number","vzip","vzip","block_size","error","leaf_chain","qc","view_number","view_number","view_number","LightClientState","R","StateKeyPair","StateSignKey","StateSignature","StateVerKey","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","block_comm_root","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fee_ledger_comm","fmt","fmt","from","from","from","generate","generate_from_seed","generate_from_seed_indexed","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","s","serialize","serialize","stake_table_comm","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view_number","vzip","vzip","CommitteeConsensusMessage","Consensus","CurrentProposal","DAC","DACertificate","DACertificate","DAProposal","DAProposal","DAVote","DAVote","Data","Data","DataMessage","GeneralConsensusMessage","Internal","InternalTrigger","InternalTrigger","InternalTrigger","Left","Message","MessageKind","MessagePurpose","Messages","ProcessedCommitteeConsensusMessage","ProcessedGeneralConsensusMessage","ProcessedSequencingMessage","Proposal","Proposal","Proposal","Proposal","Right","SequencingMessage","SubmitTransaction","Timeout","TimeoutVote","VidDisperse","VidDisperseMsg","VidDisperseMsg","ViewSyncCommitCertificate","ViewSyncCommitVote","ViewSyncFinalizeCertificate","ViewSyncFinalizeVote","ViewSyncPreCommitCertificate","ViewSyncPreCommitVote","ViewSyncProposal","ViewSyncVote","Vote","Vote","Vote","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_consensus_message","get_view_number","get_view_number","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kind","new","new","purpose","purpose","purpose","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DACertificate","QuorumCertificate","SimpleCertificate","TimeoutCertificate","ViewSyncCommitCertificate2","ViewSyncFinalizeCertificate2","ViewSyncPreCommitCertificate2","__clone_box","__clone_box","_pd","_pd","_pd","_pd","_pd","_pd","_pd","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","create_signed_certificate","data","data","data","data","data","data","data","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","genesis","genesis","get_data","get_data_commitment","get_view_number","hash","header","init","into","into_any","into_any_arc","into_any_rc","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_valid_cert","serialize","signatures","signatures","signatures","signatures","signatures","signatures","signatures","threshold","to_owned","to_string","try_from","try_into","type_id","view_number","view_number","view_number","view_number","view_number","view_number","view_number","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vzip","DAData","DAVote","QuorumData","QuorumVote","SimpleVote","TimeoutData","TimeoutVote","VIDData","ViewSyncCommitData","ViewSyncCommitVote","ViewSyncFinalizeData","ViewSyncFinalizeVote","ViewSyncPreCommitData","ViewSyncPreCommitVote","Voteable","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commit","commit","commit","commit","commit","commit","create_signed_vote","data","data","data","data","data","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_data","get_data_commitment","get_signature","get_signing_key","get_view_number","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leaf_commit","payload_commit","payload_commit","relay","relay","relay","round","round","round","sealed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signature","signature","signature","signature","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view_and_relay_commit","view_number","view_number","view_number","view_number","view_number","view_number","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Sealed","BlockPayload","State","block_contents","consensus_api","election","metrics","network","node_implementation","qc","signature_key","stake_table","state","storage","BlockHeader","BlockPayload","Encode","Error","Metadata","NUM_CHUNKS","NUM_STORAGE_NODES","Payload","Transaction","Transaction","block_number","encode","from_bytes","from_transactions","genesis","genesis","metadata","new","payload_commitment","transaction_commitments","vid_commitment","ConsensusApi","ConsensusSharedApi","max_transactions","min_transactions","private_key","propose_max_round_time","propose_min_round_time","public_key","send_broadcast_message","send_da_broadcast","send_decide","send_direct_da_message","send_direct_message","send_event","send_next_leader_timeout","send_replica_timeout","send_transaction","send_view_error","send_view_finished","should_start_round","store_leaf","total_nodes","ElectionConfig","ElectionError","MathError","MathSnafu","Membership","StubError","StubSnafu","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone_into","clone_into","create_election","default_election_config","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","fail","failure_threshold","fmt","fmt","fmt","fmt","from","from","from","get_committee","get_committee_qc_stake_table","get_leader","get_stake","has_stake","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","source","success_threshold","to_owned","to_owned","to_string","total_nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Counter","Gauge","Histogram","Label","Metrics","NoMetrics","__clone_box","__clone_box","add","add","add_point","add_point","as_any","as_any_mut","borrow","borrow_mut","boxed","clone","clone_into","create_counter","create_counter","create_gauge","create_gauge","create_histogram","create_histogram","create_label","create_label","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","set","set","set","set","subgroup","subgroup","to_owned","try_from","try_into","type_id","update","update","vzip","AsynchronousNetwork","Broadcast","CancelPollForDAC","CancelPollForProposal","CancelPollForTransactions","CancelPollForVIDDisperse","CancelPollForViewSyncCertificate","CancelPollForViewSyncVotes","CancelPollForVotes","CentralizedServer","CentralizedServerNetworkError","CentralizedServerSnafu","ChannelSend","ChannelSendSnafu","ChaosNetwork","ClientDisconnected","ClientDisconnectedSnafu","ClientError","ClientSnafu","CommunicationChannel","ConnectedNetwork","ConsensusIntentEvent","CouldNotDeliver","CouldNotDeliverSnafu","Direct","EndpointError","EndpointSnafu","FailedToDeserialize","FailedToDeserializeSnafu","FailedToSerialize","FailedToSerializeSnafu","IncorrectConsensusData","IncorrectConsensusDataSnafu","Libp2p","Libp2pSnafu","MemoryNetwork","MemoryNetworkError","MemoryNetworkSnafu","NETWORK","NetworkChange","NetworkError","NetworkMsg","NetworkReliability","NoMessagesInQueue","NoMessagesInQueueSnafu","NoSuchNode","NoSuchNodeSnafu","NodeConnected","NodeDisconnected","PartiallySynchronousNetwork","PerfectNetwork","PollForCurrentProposal","PollForDAC","PollForProposal","PollForTransactions","PollForVIDDisperse","PollForViewSyncCertificate","PollForViewSyncVotes","PollForVotes","PollFutureLeader","ShutDown","ShutDownSnafu","Stub","StubSnafu","SynchronousNetwork","TestableChannelImplementation","TestableNetworkingImplementation","Timeout","TimeoutSnafu","TransmitType","UnableToCancel","UnableToCancelSnafu","UnimplementedFeature","UnimplementedFeatureSnafu","ViewMessage","WebServer","WebServerNetworkError","WebServerSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","as_error_source","as_error_source","asynchronous","backtrace","backtrace","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","build","build","build","build","build","build","build","build","build","build","build","build","cause","cause","cause","cause","chaos_send_msg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","delay_high_ms","delay_low_ms","delay_low_ms","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","direct_message","direct_message","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_network","generator","get_view_number","gst","header","header","header","header","in_current_span","in_current_span","in_current_span","in_current_span","in_flight_message_count","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_ready","is_ready","keep_denominator","keep_numerator","new","new","new","pause","purpose","queue_node_lookup","queue_node_lookup","recv_msgs","recv_msgs","resume","sample_delay","sample_delay","sample_delay","sample_delay","sample_keep","sample_keep","sample_keep","sample_keep","sample_repeat","scramble","serialize","shut_down","shut_down","source","source","source","source","start","synchronous","timeout_ms","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","source","source","source","source","source","source","source","BlockHeader","BlockPayload","ChannelMaps","CommitteeElectionConfig","CommitteeNetwork","ElectionConfigType","Membership","NodeImplementation","NodeType","QuorumNetwork","SendToTasks","SignatureKey","StateType","Storage","TestableNodeImplementation","Time","Transaction","ViewQueue","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_genesis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_map","clone","clone","clone_into","clone_into","committee_election_config_generator","construct_tmp_storage","cur_view","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","gen_comm_channels","get_full_state","has_received_proposal","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","leaf_create_random_transaction","new","new","new_channel_maps","proposal_channel","receiver_chan","sender_chan","state_create_random_transaction","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","txn_count","type_id","type_id","type_id","vote_channel","vzip","vzip","vzip","MessageLength","QC","QCProverParams","QCVerifierParams","QuorumCertificate","QuorumSize","assemble","check","sign","trace","EncodedPublicKey","EncodedSignature","PrivateKey","PureAssembledSignatureType","QCParams","QCType","SignatureKey","StakeTableEntry","StakeTableEntryType","_DERIVE_core_fmt_Debug_FOR_EncodedPublicKey","_DERIVE_core_fmt_Debug_FOR_EncodedSignature","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","as_bits","as_ref","assemble","batch_check","borrow","borrow","borrow_mut","borrow_mut","check","check","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_with_mode","drop","drop","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from_bytes","from_private","from_str","generated_from_seed_indexed","get_public_key","get_public_parameter","get_sig_proof","get_stake","get_stake_table_entry","hash","hash","header","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","serialize","serialize","serialize_with_mode","serialized_size","sign","tag","to_bytes","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","validate","vzip","vzip","Amount","Aux","BlockNum","Commitment","EpochStart","ExistingKey","Head","InsufficientFund","IntoIter","Key","KeyNotFound","LastEpochStart","LookupProof","MalformedProof","MismatchedKey","RescueError","SnapshotUnsupported","SnapshotVersion","StakeOverflow","StakeTableError","StakeTableScheme","VerificationError","_DERIVE_Display_FOR_StakeTableError","as_any","as_any","as_any_mut","as_any_mut","as_error_source","batch_deregister","batch_register","batch_update","borrow","borrow","borrow_mut","borrow_mut","commitment","contains_key","deref","deref","deref_mut","deref_mut","deregister","drop","drop","fmt","fmt","from","from","header","in_current_span","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","len","lookup","lookup_with_aux_and_proof","lookup_with_proof","register","sample","to_string","total_stake","try_from","try_from","try_into","try_into","try_iter","type_id","type_id","update","vzip","vzip","BlockHeader","BlockPayload","ConsensusTime","Error","State","TestableBlock","TestableState","Time","append","create_random_transaction","dummy","genesis","genesis","get_u64","initialize","new","on_commit","txn_count","validate_block","DummyError","DummyState","__clone_box","__clone_box","append","as_any","as_any","as_any_mut","as_any_mut","as_error_source","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","commit","create_random_transaction","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","header","in_current_span","init","init","initialize","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","nonce","on_commit","random","serialize","tag","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate_block","vzip","vzip","Err","Failed","NoGenesisView","NoGenesisViewSnafu","Ok","Result","Storage","StorageError","StorageState","StoredView","Success","TestableStorage","ViewEntry","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","append","append_single_view","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","cleanup_storage_up_to_view","clone","clone","clone","clone_into","clone_into","clone_into","commit","construct_tmp_storage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","eq","eq","eq","fail","failed","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_qc_block_and_state","get_anchored_view","get_full_state","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","justify_qc","parent","proposer_id","rejected","source","stored","timestamp","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","DA","Exclusive","Failed","Inclusive","Leaf","RoundFinishedEvent","Terminator","View","ViewInner","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_leaf_commitment","get_payload_commitment","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view_inner","view_number","vzip","vzip","vzip","vzip","leaf","payload_commitment","Certificate","Commitment","HasViewNumber","Vote","VoteAccumulator","VoteMap2","Voteable","accumulate","as_any","as_any_mut","base","borrow","borrow_mut","create_signed_certificate","deref","deref_mut","drop","from","get_data","get_data","get_data_commitment","get_data_commitment","get_signature","get_signing_key","get_view_number","init","into","into_any","into_any_arc","into_any_rc","is_valid_cert","phantom","sig_lists","signers","threshold","try_from","try_into","type_id","vote_outcomes","vzip"],"q":[[0,"hotshot_types"],[118,"hotshot_types::block_impl"],[235,"hotshot_types::consensus"],[406,"hotshot_types::data"],[764,"hotshot_types::error"],[1156,"hotshot_types::error::HotShotError"],[1168,"hotshot_types::event"],[1223,"hotshot_types::event::EventType"],[1230,"hotshot_types::light_client"],[1299,"hotshot_types::message"],[1704,"hotshot_types::simple_certificate"],[1794,"hotshot_types::simple_vote"],[2095,"hotshot_types::simple_vote::sealed"],[2096,"hotshot_types::traits"],[2109,"hotshot_types::traits::block_contents"],[2130,"hotshot_types::traits::consensus_api"],[2152,"hotshot_types::traits::election"],[2248,"hotshot_types::traits::metrics"],[2299,"hotshot_types::traits::network"],[3193,"hotshot_types::traits::network::NetworkError"],[3200,"hotshot_types::traits::node_implementation"],[3298,"hotshot_types::traits::qc"],[3308,"hotshot_types::traits::signature_key"],[3413,"hotshot_types::traits::stake_table"],[3491,"hotshot_types::traits::state"],[3510,"hotshot_types::traits::state::dummy"],[3575,"hotshot_types::traits::storage"],[3729,"hotshot_types::utils"],[3825,"hotshot_types::utils::ViewInner"],[3827,"hotshot_types::vote"],[3867,"dyn_clone::sealed"],[3868,"dyn_clone::sealed"],[3869,"core::clone"],[3870,"core::result"],[3871,"serde::de"],[3872,"core::fmt"],[3873,"core::fmt"],[3874,"core::fmt"],[3875,"core::marker"],[3876,"alloc::boxed"],[3877,"alloc::sync"],[3878,"alloc::rc"],[3879,"serde::ser"],[3880,"serde::ser"],[3881,"core::any"],[3882,"alloc::vec"],[3883,"core::iter::traits::iterator"],[3884,"core::iter::traits::collect"],[3885,"core::hash"],[3886,"core::option"],[3887,"core::ops::function"],[3888,"core::error"],[3889,"snafu::backtrace_shim"],[3890,"ark_serialize::error"],[3891,"core::cmp"],[3892,"jf_primitives::vid"],[3893,"core::convert"],[3894,"rand_core"],[3895,"ark_serialize"],[3896,"ark_serialize"],[3897,"jf_primitives::vid"],[3898,"ark_ff::fields::prime"],[3899,"core::default"],[3900,"serde::de"],[3901,"jf_primitives::signatures::schnorr"],[3902,"serde::de"],[3903,"core::future::future"],[3904,"core::pin"],[3905,"alloc::collections::btree::set"],[3906,"hotshot_task"],[3907,"libp2p_networking::network::node::handle"],[3908,"core::ops::function"],[3909,"jf_primitives::errors"],[3910,"generic_array"],[3911,"rand_core"],[3912,"core::iter::traits::collect"],[3913,"bitvec::vec"],[3914,"bitvec::ptr::span"],[3915,"tagged_base64"],[3916,"rand_core"]],"d":["constantly increment view as soon as view finishes","the type of consensus to run. Either: wait for a signal to …","Holds configuration for a <code>HotShot</code>","wait for a signal","config for validator, including public key, private key, …","","","","","","","","","","","","","","","This module provides implementations of block traits for …","","","","","","","","","","","","","Provides the core consensus types","List of DA committee nodes for static DA committe","Provides types useful for representing <code>HotShot</code>’s data …","","","","","","","","","","","","","","the election configuration","Error type for <code>HotShot</code>","Events that a <code>HotShot</code> instance can emit","Whether to run one view or continuous views","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generate validator config from input seed, index and stake …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","List of known node’s public keys and stake value for …","Types and structs associated with light client state","Maximum transactions per block","Network message types","Minimum transactions per block","My own validator config, including my public key, private …","Base duration for next-view timeout, in milliseconds","Number of network bootstrap nodes","The validator’s private key, should be in the mempool, …","The maximum amount of time a leader can wait to start a …","The minimum amount of time a leader has to wait to start a …","The validator’s public key and stake value","The delay a leader inserts before starting pre-commit, in …","","","","Implementations of the simple certificate type.  Used for …","Implementations of the simple vote types.","The validator’s stake","Delay after init before starting consensus, in milliseconds","the validator’s key pairs for state signing/verification","The exponential backoff ration for the next-view timeout","","","","","Total number of nodes in the network","Common traits for the <code>HotShot</code> protocol","","","","","","","","","","Utility functions, type aliases, helper structs and enum …","Vote, Accumulator, and Certificate Types","","","","A <code>BlockHeader</code> that commits to <code>VIDBlockPayload</code>.","A <code>BlockPayload</code> that contains a list of <code>VIDTransaction</code>.","The transaction in a <code>VIDBlockPayload</code>.","","","","","","","","","","","","","","Block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode a list of transactions into bytes.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create a genesis block payload with transaction bytes …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","VID commitment to the block payload.","VID commitment to the payload.","","","","","","","","","","List of transactions.","","","","","","","","","","","","","","A type alias for <code>HashMap&lt;Commitment&lt;T&gt;, T&gt;</code>","A reference to the consensus algorithm","The wrapper with a string name for the networking metrics","Contains several <code>ConsensusMetrics</code> that we’re interested …","the set of counters and gauges for the networking metrics","Mapping from block payload commitments to the encoded …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Garbage collects based on state change right now, this …","All the counters of the networking metrics","","","","","cur_view from pseudocode","The current view","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All the gauges of the networking metrics","Get the saved encoded transactions, if available.","Gets the last decided state","","the highqc per spec","All the histograms of the networking metrics","increment the current view NOTE may need to do gc here","","","","","","Save the encoded transactions for later retrieval.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Number of invalid QCs we’ve seen since the last commit.","All the labels of the networking metrics","last view had a successful decide event","The number of last decided view","The number of last synced synced block height","The <code>locked_qc</code> view number","A reference to the metrics trait","Create a new instance of this <code>ConsensusMetricsValue</code> …","Number of views that timed out","Number of views that are in-flight since the last anchor …","Number of views that are in-flight since the last decided …","Number of outstanding transactions","Memory size in bytes of the serialized transactions still …","a prefix which tracks the name of the metric","Drop a reference to the saved encoded transactions.","Map of leaf hash -&gt; leaf","Saved payloads.","","","The phases that are currently loaded in memory","For the creation and naming of gauge, counter, histogram …","","","","","","","","","","","","","","","","","","","","","","","The values that are being tracked","a map of values","gather information from the parent chain of leafs","","","","","","The error type for block and its transactions.","Payload commitment.","Common data sent to all storage nodes.","A proposal to start providing data availability for a …","A state change encoded in a leaf.","Errors reported by this type.","Inconsistent payload commitment.","SNAFU context selector for the …","Invalid block header.","SNAFU context selector for the …","Invalid transaction length.","SNAFU context selector for the …","This is the consensus-internal analogous concept to a …","Type of nodes participating in the network.","Proposal to append a block.","Share-specific data sent to a storage node.","Additional functions required to use a <code>Leaf</code> with …","The <code>Transaction</code> type associated with a <code>State</code>, as a …","<code>Commitment</code> to the <code>Transaction</code> type associated with a <code>State</code>…","VID commitment.","VID dispersal data","The VID scheme type used in <code>HotShot</code>.","VID: Verifiable Information Dispersal","Type-safe wrapper around <code>u64</code> so we know the thing we’re …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block header to append","Block header.","Optional block payload.","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","Compute a payload commitment","VID common data sent to all storage nodes","Create a transaction that can be added to the block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute shares to send to the storage nodes","","","","","","","","","","Encoded transactions in the block to be applied.","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Fake the thing a genesis block points to. Needed to avoid …","Fill this <code>DeltasType</code> by providing a complete block.","Fill this leaf with the block payload.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a leaf from information stored about a view.","Create a genesis view number (0)","Create a new leaf from its components.","Generate the genesis block proposer ID from the defined …","The block header contained in this leaf.","Optional block payload.","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Commitment to this leaf’s parent.","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Transactions rejected or invalidated by the application of …","The blockchain state after appending this leaf.","Real-world time when this leaf was created.","Returen the u64 format","","","","Time when this leaf was created.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","Per spec, justification","Metadata of the block to be applied.","","Create a new <code>ViewNumber</code> with the given value.","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","","Get a cryptographic commitment to the block represented by …","Block payload commitment","the propser id","the proposer id of the leaf","create a random commitment","Recover payload from shares. Do not verify shares or check …","Transactions that were marked for rejection while …","","","","","","Serialization for the QC assembled signature","","","VID shares dispersed among storage nodes","","","Trusted KZG setup for VID.","Possible timeout certificate.  Only present if the …","the timestamp the leaf was constructed at, in nanoseconds. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the full block if it is available, otherwise return …","","","","","","","","","","Verify a share. Used by both storage node and retrieval …","View this proposal applies to","The view number for which this VID data is intended","CurView from leader when proposing leaf","CurView from leader when proposing leaf","","","","","","","","","","","Failure in the block.","SNAFU context selector for the <code>HotShotError::BlockError</code> …","Internal value used to drive the state machine","SNAFU context selector for the <code>HotShotError::Continue</code> …","Failed to broadcast a message on the network","SNAFU context selector for the …","Failed to Message the leader in the given stage","SNAFU context selector for the …","Error type for <code>HotShot</code>","Not enough valid signatures for a quorum","SNAFU context selector for the …","Invalid state machine state","SNAFU context selector for the <code>HotShotError::InvalidState</code> …","Leader is in a Prepare phase and timed out before the …","Leader is waiting for commit votes","Leader is in a Prepare phase and is waiting for a HighQC","Leader is waiting for precommit votes","Leader is waiting for prepare votes","Item was not present in storage","SNAFU context selector for the <code>HotShotError::LeafNotFound</code> …","Miscelaneous error TODO fix this with #181 …","SNAFU context selector for the <code>HotShotError::Misc</code> variant","Failure in networking layer","SNAFU context selector for the <code>HotShotError::NetworkFault</code> …","Replica is waiting for a commit message","Replica is waiting for a decide message","Replica is waiting for a pre-commit message","Replica is waiting for a prepare message","Contains information about what the state of the …","Error accesing storage","SNAFU context selector for the <code>HotShotError::StorageError</code> …","HotShot-testing tried to collect round events, but it …","HotShot timed out waiting for msgs","SNAFU context selector for the <code>HotShotError::TimeoutError</code> …","HotShot timed out during round","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","The underlying block error.","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","A next leader task was canceled by a timeout interrupt","A replica task was canceled by a timeout interrupt","The view has finished.  If values were decided on, a <code>Decide</code>…","","","","","","","","","","","","","","","","","","","","","","","The underlying event","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The view number that this event originates from","","","Optional information of the number of transactions in the …","The underlying error","The chain of Leafs that were committed by this decision","The QC signing the most recent leaf in <code>leaf_chain</code>.","The view that timed out","The view that timed out","The view number that has just finished","A serialized light client state for proof generation","","Key pairs for signing/verifying a light client state","Signing key for signing a light client state","Signatures","Verification key for verifying state signatures","","","","","","","","","Root of the block commitment tree","Current block height","","","","","","","","","","","","","","","","","","","","Commitment for fee ledger","","","Returns the argument unchanged.","Returns the argument unchanged.","","Generate key pairs from <code>thread_rng()</code>","Generate key pairs from seed","Generate key pairs from an index and a seed","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Commitment for the stake table","","","","","","","","","Current view number","","","Messages related to the sequencing consensus protocol for …","Messages related to the consensus protocol","Message with most recent proposal the server has","Message with a DAC.","Certificate for the DA.","Certificate data is available","Proposal for the DA committee.","Proposal for data availability committee","Vote from the DA committee.","vote for data availability committee","Data message","Messages relating to sharing data between nodes","Messages related to sending data between nodes","Messages related to both validating and sequencing …","Message for internal use","Internal triggers sent by consensus messages.","Internal ONLY message indicating a view interrupt.","Internal ONLY message indicating a view interrupt.","A value of type <code>L</code>.","Incoming message","Enum representation of any message type","A message type agnostic description of a message’s …","A wrapper type for implementing <code>PassType</code> on a vector of …","A processed consensus message for the DA committee in …","A processed consensus message for both validating and …","A processed consensus message for sequencing consensus.","Prepare qc from the leader","Message with a quorum proposal.","Message with a quorum proposal.","Message with a quorum proposal.","A value of type <code>R</code>.","Messages for sequencing consensus.","Contains a transaction to be submitted TODO rethink this …","Internal timeout at the specified view number.","Message with a Timeout vote","VID disperse, like <code>Proposal</code>.","VID dispersal data. Like <code>DAProposal</code>","Initiate VID dispersal.","Message with a view sync commit certificate","Message with a view sync commit vote","Message with a view sync finalize certificate","Message with a view sync finalize vote","Message with a view sync pre-commit certificate","Message with a view sync pre-commit vote","Message with a view sync proposal.","Message with a view sync vote.","Message with a quorum vote.","Message with a quorum vote.","Message with a quorum vote.","","","","","","","","","","","","","","","","","","","","","","","","","Phantom for TYPES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data being proposed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a <code>MessageKind</code> from [<code>I::ConsensusMessage</code>].","get the view number out of a message","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The message kind","Create a <code>ProcessedGeneralConsensusMessage</code> from a …","Create a <code>ProcessedCommitteeConsensusMessage</code> from a …","","","Get the message purpos","The sender of this message","","","","","","","","","","","The proposal must be signed by the view leader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the view number this message relates to","","","","","","","","","","","","","Type alias for a DA certificate over <code>DAData</code>","Type alias for a <code>QuorumCertificate</code>, which is a …","A certificate which can be created by aggregating many …","Type alias for a Timeout certificate over a view number","Type alias for a <code>ViewSyncCommit</code> certificate over a view …","Type alias for a <code>ViewSyncFinalize</code> certificate over a view …","Type alias for a <code>ViewSyncPreCommit</code> certificate over a view …","","","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","phantom data for <code>MEMBERSHIP</code> and <code>TYPES</code>","","","","","","","","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","","","","","","","","","","","Returns the argument unchanged.","Creat the Genisis certificate","Creat the Genisis certificate","","","","","","","Calls <code>U::from(self)</code>.","","","","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","","","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","","","","","","","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","","Data used for a DA vote.","DA vote type alias","Data used for a yes vote.","Quorum vote Alias","A simple yes vote over some votable type.  ","Data used for a timeout vote.","Timeout Vote type alias","Data used for a VID vote.","Data used for a Commit vote.","View Sync Commit Vote type alias","Data used for a Finalize vote.","View Sync Finalize Vote type alias","Data used for a Pre Commit vote.","View Sync Pre Commit Vote type alias","Marker trait for data or commitments that can be voted on. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates and signs a simple vote","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Commitment to the leaf","Commitment to a block payload","Commitment to the block payload the VID vote is on.","The relay this vote is intended for","The relay this vote is intended for","The relay this vote is intended for","The view number we are trying to sync on","The view number we are trying to sync on","The view number we are trying to sync on","Sealed is used to make sure no other files can implement …","","","","","","","","","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","View the timeout is for","This implements commit for all the types which contain a …","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","","","","","","","","","Only structs in this file can impl <code>Sealed</code>","","","Abstraction over the contents of a block","Contains the <code>ConsensusApi</code> trait.","The election trait, used to decide which node is the …","The <code>Metrics</code> trait is used to collect information from …","Network access compatibility","Composite trait for node behavior","The quorum certificate (QC) trait is a certificate of a …","Minimal compatibility over public key signatures","Trait for stake table data structures","Abstraction over the global state that blocks modify","Abstraction over on-disk storage of node state","Header of a block, which commits to a <code>BlockPayload</code>.","Abstraction over the full contents of a block","Encoded payload.","The error type for this type of block","Data created during block building which feeds into the …","Number of chunks for VID initiation.","Number of storage nodes for VID initiation.","Block payload associated with the commitment.","Abstraction over any type of transaction. Used by …","The type of the transitions we are applying","Get the block number.","Encode the payload","Build a payload with the encoded transaction bytes and …","Build a payload and associated metadata with the …","Build the genesis payload and metadata.","Build the genesis header, payload, and metadata.","Get the metadata.","Build a header with the payload commitment, metadata, and …","Get the payload commitment.","List of transaction commitments.","Compute the VID payload commitment.","The API that [<code>HotStuff</code>] needs to talk to the system, for …","The API that [<code>HotStuff</code>] needs to talk to the system, …","Retuns the maximum transactions allowed in a block","Returns the minimum transactions that must be in a block","Get a reference to the private key.","The maximum amount of time a leader can wait before …","The minimum amount of time a leader has to wait before …","Get a reference to the public key.","Send a broadcast message to the entire network.","Send a broadcast to the DA comitee, stub for now","sends a decide event down the channel","send a direct message using the DA communication channel","Send a direct message to the given recipient","Notify the system of an event within <code>hotshot-consensus</code>.","notifies client of a next leader timeout","notifies client of a replica timeout","Send a message with a transaction. This function is …","notifies client of an error","Sends a <code>ViewFinished</code> event","Returns <code>true</code> if hotstuff should start the given round. A …","Store a leaf in the storage","Total number of nodes in the network. Also known as <code>n</code>.","election config","Error for election problems","Math error doing something NOTE: it would be better to …","SNAFU context selector for the <code>ElectionError::MathError</code> …","A protocol for determining membership in and participating …","stub error to be filled in","SNAFU context selector for the <code>ElectionError::StubError</code> …","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","create an election TODO may want to move this to a …","generate a default election configuration","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Returns the threshold for a specific <code>Membership</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The members of the committee for view <code>view_number</code>.","Clone the public key and corresponding stake table for …","The leader of the committee for view <code>view_number</code>.","Get the stake table entry for a public key, returns <code>None</code> …","Check if a key has stake","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the threshold for a specific <code>Membership</code> …","","","","Returns the number of total nodes in the committee","","","","","","","","","","","","","An ever-incrementing counter","A gauge that stores the latest value.","A histogram which will record a series of points.","A label that stores the last string value.","The metrics type.","Use this if you’re not planning to use any metrics. All …","","","Add a value to the counter","","Add a point to this histogram.","","","","","","Create a new <code>Box&lt;dyn Metrics&gt;</code> with this <code>NoMetrics</code>","","","Create a <code>Counter</code> with an optional <code>unit_label</code>.","","Create a <code>Gauge</code> with an optional <code>unit_label</code>.","","Create a <code>Histogram</code> with an optional <code>unit_label</code>.","","Create a <code>Label</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Set the gauge value","Set the label value","","","Create a subgroup with a specified prefix.","","","","","","Update the guage value","","","An asynchronous network. Packets may be dropped entirely …","broadcast the message to all","Cancal polling for DAC.","Cancel polling for proposals.","Cancel polling for transactions","Cancel polling for VID disperse data","Cancel polling for view sync certificate.","Cancel polling for view sync votes.","Cancel polling for votes","Centralized server specific errors","Centralized server specific errors","SNAFU context selector for the …","Error sending output to consumer of …","SNAFU context selector for the <code>NetworkError::ChannelSend</code> …","A chaotic network using all the networking calls","Client disconnected","SNAFU context selector for the …","The client returned an error","SNAFU context selector for the …","API for interacting directly with a consensus committee …","represents a networking implmentration exposes low level …","Events to poll or cancel consensus processes.","Could not deliver a message to a specified recipient","SNAFU context selector for the …","directly transmit","Endpoint parsed incorrectly","SNAFU context selector for the …","Failed to deserealize a network message","SNAFU context selector for the …","Failed to serialize a network message","SNAFU context selector for the …","The injected consensus data is incorrect","SNAFU context selector for the …","Libp2p specific errors","SNAFU context selector for the <code>NetworkError::Libp2p</code> variant","memory network specific errors","for any errors we decide to add to memory network","SNAFU context selector for the <code>NetworkError::MemoryNetwork</code> …","Underlying Network implementation’s type","Changes that can occur in the network","Error type for networking","common traits we would like our network messages to …","interface describing how reliable the network is","The centralized server could not find a specific message.","SNAFU context selector for the …","Attempted to deliver a message to an unknown node","SNAFU context selector for the <code>NetworkError::NoSuchNode</code> …","A node is connected","A node is disconnected","An partially synchronous network. Behaves asynchronously …","ideal network","Poll for the most recent proposal the webserver has","Poll for a DAC for a particular view","Poll for a proposal for a particular view","Poll for new transactions","Poll for VID disperse data for a particular view","Poll for view sync proposals (certificates) for a …","Poll for view sync votes starting at a particular view","Poll for votes for a particular view","Poll for future leader","The underlying connection has been shut down","SNAFU context selector for the <code>NetworkError::ShutDown</code> …","stub","SNAFU context selector for the <code>MemoryNetworkError::Stub</code> …","A synchronous network. Packets may be delayed, but are …","Describes additional functionality needed by the test …","Describes additional functionality needed by the test …","A timeout occurred","SNAFU context selector for the <code>NetworkError::Timeout</code> …","the type of transmission","unable to cancel a request, the request has already been …","SNAFU context selector for the <code>NetworkError::UnableToCancel</code>…","unimplemented functionality","SNAFU context selector for the …","a message","Web server specific errors","Web server specific errors","SNAFU context selector for the <code>NetworkError::WebServer</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","asynchronous portion of network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","broadcast message to those listening on the communication …","broadcast message to some subset of nodes blocking","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","given a message and a way to send the message, decide …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","highest value in milliseconds that a packet may be delayed","Lowest value in milliseconds that a packet may be delayed","lowest value in milliseconds that a packet may be delayed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends a direct message to a specific node blocking","Sends a direct message to a specific node blocking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generates the <code>CommunicationChannel</code> given it’s associated …","generates a network given an expected node count","get the view out of the message","time when GST occurs","","","","","","","","","Get the number of messages in-flight.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Injects consensus data such as view number into the …","Injects consensus data such as view number into the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","checks if the network is ready nonblocking","checks if the network is ready nonblocking","denominator for probability of keeping packets","numerator for probability of keeping packets","create new <code>SynchronousNetwork</code>","create new <code>AsynchronousNetwork</code>","create new <code>PartiallySynchronousNetwork</code>","Pauses the underlying network","get the purpose of the message","queues looking up a node","queues lookup of a node","Moves out the entire queue of received messages of ’…","Moves out the entire queue of received messages of ’…","Resumes the underlying network","sample from uniform distribution to decide whether or not …","","","","Sample from bernoulli distribution to decide whether or …","never drop a packet","","never drop a packet","number of times to repeat the packet","scramble the packet","","Shut down this network. Afterwards this network should no …","Blocks until the network is shut down then returns true","","","","","when the network was started","synchronous portion of network","Max delay of packet before arrival","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the view number of the event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks until node is successfully initialized into the …","Blocks until the network is successfully initialized","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","The block header type that this hotshot setup is using.","The block type that this hotshot setup is using.","Channels for sending/recv-ing proposals and votes.","Election config for the DA committee","Network for those in the DA committee","The election config type that this hotshot setup is using.","Membership used for this implementation","Node implementation aggregate trait","Trait with all the type definitions that are used in the …","Network for all nodes","metadata for sending information to the leader, replica, …","The signature key that this hotshot setup is using.","The state type that this hotshot setup is using.","Storage type for this consensus implementation","extra functions required on a node implementation to be …","The time type that this hotshot setup is using.","The transaction type that this hotshot setup is using.","Alias for the [<code>ProcessedConsensusMessage</code>] type of a …","","","","","","","","","","","generate a genesis block","","","","","","","a map from view number to ViewQueue one of (replica|next …","","","","","Generates a committee-specific election","Create ephemeral storage Will be deleted/lost immediately …","the current view number this should always be in sync with …","create new view queue","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate the communication channels for testing","Return the full internal state. This is useful for …","<code>true</code> if this queue has already received a proposal","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Creates random transaction if possible otherwise panics …","create new sendtosasks","Create channels starting from a given view.","Create channels for sending/recv-ing proposals and votes …","Channel for the next consensus leader or DA leader.","to recv networking events for a replica or DA committee …","to send networking events to a replica or DA committee …","Creates random transaction if possible otherwise panics …","","","","","","","","","the number of transactions in a block","","","","Channel for the replica or DA committee member.","","","","Allows to fix the size of the message at compilation time.","Type of the actual quorum certificate object","Public parameters for generating the QC E.g: snark …","Public parameters for validating the QC E.g: verifying …","Trait for validating a QC built from different signatures …","Type of the quorum size (e.g. number of votes or …","Computes an aggregated signature from a set of partial …","Checks an aggregated signature over some message provided …","Produces a partial signature on a message with a single …","Trace the list of signers given a qc.","Type saftey wrapper for byte encoded keys","Type saftey wrapper for byte encoded signature","The private key type for this signature algorithm","The type of the assembled signature, without <code>BitVec</code>","The type of the quorum certificate parameters used for …","The type of the assembled qc: assembled signature + <code>BitVec</code>","Trait for abstracting public key signatures","The type of the entry that contain both public key and …","Type representing stake table entries in a <code>StakeTable</code>","","","","","","","","","","","","","assemble the signature from the partial signature and the …","","","","","","check the quorum certificate for the assembled signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a public key from bytes","Produce a public key from a private key","","Generate a new key pair","only get the public key from the stake table entry","get the public parameter for the assembled signature …","get the assembled signature and the <code>BitVec</code> separately from …","Get the stake value","get the stake table entry from the public key and stake …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Produce a signature","","Serialize a public key to bytes","","","","","","","","","","","","","Validate a signature","","","type for the staked amount","Auxiliary information associated with the key","at arbitrary block height","type for the commitment to the current stake table","marks the snapshot at the beginning of the current epoch","Key already exists","the latest “Head” where all new changes are applied to","Insufficient fund: the number of stake cannot be negative","type for the iterator over (key, value) entries","type for stake key","Key not found","marks the beginning of the last epoch","type for the proof associated with the lookup result (if …","Malformed Merkle proof","Key mismatched","Internal error caused by Rescue","The historical snapshot requested is not supported.","Snapshots of the stake table","The number of stake exceed U256","Error type for <code>StakeTableScheme</code>","Common interfaces required for a stake table used in …","Verification Error","","","","","","","Batch deregister a list of keys. A default implementation …","Batch register a list of new keys. A default …","Batch update the stake balance of <code>keys</code>. Read documentation …","","","","","Returns the commitment to the <code>version</code> of stake table.","Returns true if <code>key</code> is currently registered, else returns …","","","","","Deregister an existing key from the stake table. Returns …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the number of keys in the <code>version</code> of the table.","Returns the stakes withhelded by a public key.","Return the associated stake amount and auxiliary …","Returns the stakes withhelded by a public key along with a …","Register a new key into the stake table.","Randomly sample a (key, stake amount) pair proportional to …","","Returns the accumulated stakes of all registered keys of …","","","","","Returns an iterator over all (key, value) entries of the …","","","Update the stake of the <code>key</code> with …","","","The type of block header this state is associated with","The type of block payload this state is associated with","Trait for time compatibility needed for reward collection","The error type for this particular type of ledger state","Abstraction over the state that blocks modify","extra functions required on block to be usable by …","extra functions required on state to be usable by …","Time compatibility needed for reward collection","Appends the given block header to this state, returning an …","Creates random transaction if possible otherwise panics …","Dummy implementation of <code>State</code> for unit tests","generate a genesis block","Create a new instance of this time unit at time number 0","Get the u64 format of time","Initialize the state.","Create a new instance of this time unit","Gets called to notify the persistence backend that this …","the number of transactions in this block","Returns true if and only if the provided block header is …","Dummy error","The dummy state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Some dummy data","","Generate a random <code>DummyState</code>","","","","","","","","","","","","","","Contains the error value","A failed view","No genesis view was inserted","SNAFU context selector for the <code>StorageError::NoGenesisView</code> …","Contains the success value","Result for a storage type","Abstraction over on disk persistence of node state","Errors that can occur in the storage layer.","An internal representation of the data stored in a <code>Storage</code>.","A view stored in the <code>Storage</code>","A succeeded view","Extra requirements on Storage implementations required for …","An entry to <code>Storage::append</code>. This makes it possible to …","","","","","","","Append the list of views to this storage","Insert a single view. Shorthand for","","","","","","","","","","","","","Block header.","Optional block payload.","","","","","","","","","","","Consume the selector and return the associated error","","Cleans up the storage up to the given view. The given view …","","","","","","","Commit this storage.","Create ephemeral storage Will be deleted/lost immediately …","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","The views that have failed","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Create a new <code>StoredView</code> from the given QC, <code>BlockHeader</code>, …","Get the latest anchored view","Return the full internal state. This is useful for …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The justify QC of this view. See the hotstuff paper for …","The parent of this view","the proposer id","transactions rejected in this view","","The views that have been successful","the timestamp this view was recv-ed in nanonseconds","","","","","","","","","","","","","","","","","","","","The view number of this view","","","","","","A pending view with an available block but not leaf …","Stop right before this view number","Leaf has failed","Stop including this view number","Undecided view","A struct containing information about a finished round.","Whether or not to stop inclusively or exclusively when …","This exists so we can perform state transitions mutably","A view’s state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","return the underlying leaf hash if it exists","return the underlying block paylod commitment if it exists","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The view data. Wrapped in a struct so we can mutate","The round that finished","","","","","Proposed leaf","Payload commitment to the available block.","The certificate formed from the collection of signatures a …","Type of data commitment this vote uses.","Any type that is associated with a view","A simple vote that has a signer and commitment to the data …","Accumulates votes until a certificate is formed.  This …","Mapping of commitments to vote tokens by key.","The data commitment this certificate certifies.","Add a vote to the total accumulated votes.  Returns the …","","","","","","Build a certificate from the data commitment and the …","","","","Returns the argument unchanged.","Gets the data which was voted on by this vote","Get the commitment which was voted on","Gets the Data commitment of the vote","Get the vote commitment which the votes commit to","Get the signature of the vote sender","Gets the public signature key of the votes creator/sender","Returns the view number the type refers to.","","Calls <code>U::from(self)</code>.","","","","Checks if the cert is valid","Phantom data to specify the types this accumulator is for","A list of valid signatures for certificate aggregation","A bitvec to indicate which node is active and send out a …","Returns the amount of stake needed to create this …","","","","Map of all signatures accumlated so far",""],"i":[5,0,0,5,0,0,0,5,5,6,6,9,9,5,6,9,5,6,9,0,5,6,9,5,6,9,5,6,9,5,6,9,0,9,0,6,5,6,9,5,6,9,5,6,9,5,6,9,9,0,0,9,5,6,6,9,5,6,9,6,6,5,6,9,5,6,9,5,6,9,5,6,9,5,6,9,9,0,9,0,9,9,9,9,6,9,9,6,9,5,6,9,0,0,6,9,6,9,5,6,9,6,9,0,5,6,9,5,6,9,5,6,9,0,0,5,6,9,0,0,0,33,33,34,34,32,32,33,34,32,33,34,32,32,32,33,34,32,33,34,32,33,34,32,33,34,32,33,33,33,34,32,33,34,32,33,34,32,33,34,32,33,34,33,34,32,33,33,33,34,34,34,32,32,32,33,34,34,32,33,34,32,34,34,34,34,34,32,33,34,32,34,33,34,32,33,34,32,33,34,32,33,34,32,33,34,32,32,32,32,34,32,33,34,32,33,33,34,32,34,34,34,33,34,32,33,34,32,34,33,34,32,33,34,32,0,0,0,0,0,0,0,0,0,0,0,45,45,43,43,46,46,47,47,43,43,48,45,43,46,47,48,45,43,46,47,215,48,45,43,46,47,48,45,43,46,47,45,43,46,47,45,43,46,47,48,46,43,43,43,43,48,45,45,46,47,48,45,43,46,47,48,45,43,46,47,48,45,43,46,47,48,45,43,46,46,47,48,45,43,46,47,46,47,48,46,48,46,48,48,45,43,46,47,47,48,45,43,46,47,48,45,43,46,47,48,45,43,46,47,48,45,43,46,47,45,46,48,45,45,48,48,45,45,45,45,45,45,43,47,48,48,43,43,48,43,43,45,43,46,47,46,48,45,43,46,47,48,45,43,46,47,48,45,43,46,47,43,45,43,48,48,45,43,46,47,0,216,216,0,0,217,37,0,37,0,37,0,0,218,0,216,0,0,0,0,0,0,0,0,0,0,61,61,68,68,69,69,70,70,65,65,66,66,67,67,55,55,219,61,61,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,37,37,61,70,55,55,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,65,66,67,37,61,219,61,68,69,70,65,66,67,55,61,68,69,70,65,66,67,55,61,61,55,216,69,218,55,61,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,37,61,68,69,70,55,61,216,61,68,69,70,37,65,66,67,55,68,61,68,69,70,55,61,61,61,68,68,68,69,69,69,70,70,70,55,55,55,219,65,66,67,0,217,55,61,68,69,70,37,37,65,66,67,55,55,61,68,69,70,37,65,66,67,55,55,61,55,0,55,55,55,55,55,55,55,55,55,55,61,68,69,70,55,61,68,69,70,55,37,55,37,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,65,66,67,70,55,68,219,61,219,55,61,219,217,69,70,55,0,216,55,61,68,69,70,55,0,61,61,69,37,61,0,70,55,61,68,69,70,65,66,67,55,37,55,61,68,69,70,37,65,66,67,55,61,68,69,70,37,65,66,67,55,217,61,68,69,70,37,65,66,67,55,216,68,69,70,55,219,61,68,69,70,37,65,66,67,55,59,0,59,0,59,0,59,0,0,59,0,59,0,93,93,93,93,93,59,0,59,0,59,0,93,93,93,93,0,59,0,93,59,0,59,0,98,98,99,99,100,100,101,101,89,89,102,102,90,90,103,103,92,92,94,94,96,96,97,97,93,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,59,59,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,89,90,92,94,96,97,59,98,99,100,101,89,102,90,103,92,94,96,97,93,98,99,100,101,89,102,90,103,92,94,96,97,93,90,96,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,59,98,99,100,101,89,102,90,103,92,94,96,97,59,93,89,90,92,94,96,97,98,99,100,101,89,102,90,103,92,94,96,97,59,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,59,59,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,94,59,92,94,98,99,100,101,89,102,90,103,92,94,96,97,93,59,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,98,99,100,101,89,102,90,103,92,94,96,97,59,93,92,98,99,100,101,89,102,90,103,92,94,96,97,59,93,220,221,222,223,224,225,226,227,228,229,222,229,105,105,0,0,105,105,105,104,104,105,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,105,104,104,105,230,231,230,230,232,233,234,0,235,0,0,0,0,106,106,108,108,106,108,106,108,106,106,106,108,106,108,106,108,106,108,106,108,106,108,108,106,108,106,108,106,108,106,106,108,106,108,108,108,108,108,106,108,106,108,106,108,106,108,106,108,235,106,108,106,106,108,106,108,106,108,106,108,106,106,108,0,116,115,115,119,121,119,121,119,121,115,116,0,0,115,0,118,120,127,0,0,0,0,0,0,0,0,115,118,120,127,0,123,117,120,115,119,121,120,120,120,120,120,120,115,115,115,118,120,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,116,117,118,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,115,116,117,118,119,120,121,122,123,124,113,113,113,116,116,116,117,117,117,120,120,120,121,121,121,122,122,122,123,123,123,124,124,124,113,114,116,117,118,119,120,121,122,123,124,127,113,114,115,116,116,117,118,119,120,120,121,121,122,122,123,124,116,113,116,113,116,117,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,118,119,113,116,122,113,113,116,117,118,119,120,121,122,123,124,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,113,114,115,116,117,118,119,120,121,122,123,124,122,113,114,115,116,117,118,119,120,121,122,123,124,0,0,0,0,0,0,0,128,128,85,236,237,238,239,240,128,128,128,128,128,128,128,128,85,236,237,238,239,240,128,128,128,128,128,128,128,128,128,85,128,128,85,128,128,128,128,128,128,128,128,128,128,128,85,236,237,238,239,240,128,128,128,85,236,237,238,239,240,128,128,128,128,128,128,128,85,236,237,238,239,240,128,85,236,237,238,239,240,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,132,132,133,133,134,134,135,135,136,136,137,137,138,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,241,242,243,244,245,246,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,130,130,132,132,132,133,133,133,134,134,134,135,135,135,136,136,136,137,137,137,138,138,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,138,138,138,138,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,134,135,136,137,135,136,137,0,130,132,133,134,135,136,137,138,241,242,243,244,245,246,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,130,132,133,134,135,136,137,138,133,0,241,242,243,244,245,246,138,130,132,133,134,135,136,137,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,247,247,0,0,248,0,247,248,247,247,247,247,248,248,248,248,247,0,0,0,249,249,249,249,249,249,250,250,249,250,250,249,249,249,250,249,249,249,249,249,0,0,144,0,0,144,0,145,145,146,146,144,145,146,144,145,146,144,144,144,145,146,144,145,146,145,146,144,145,146,145,146,131,131,144,145,146,144,145,146,144,144,145,146,145,146,131,144,144,145,146,144,145,146,131,131,131,131,131,144,144,144,145,146,144,145,146,144,145,146,144,145,146,144,145,146,145,146,144,131,145,146,144,131,144,145,146,144,145,146,144,145,146,144,145,146,0,0,0,0,0,0,148,148,51,148,53,148,148,148,148,148,148,148,148,56,148,56,148,56,148,56,148,148,148,148,148,148,148,148,148,148,148,148,52,54,148,148,56,148,148,148,148,148,52,148,148,0,166,174,174,174,174,174,174,174,152,0,0,152,0,0,151,0,151,0,0,0,0,152,0,166,151,0,152,0,152,0,151,0,152,0,152,0,0,251,0,0,0,0,150,0,152,0,179,179,0,0,174,174,174,174,174,174,174,174,174,152,0,149,0,0,0,0,152,0,0,152,0,152,0,0,152,0,0,153,153,154,154,155,155,156,156,157,157,158,158,166,166,167,167,168,168,169,169,170,170,159,159,160,160,161,161,171,171,172,172,173,173,162,162,163,163,164,164,174,174,175,175,176,176,177,177,178,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,149,150,151,152,178,149,150,151,152,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,251,253,153,154,155,156,157,158,159,160,161,162,163,164,149,150,151,152,254,153,154,155,156,157,158,166,167,168,169,170,159,160,161,171,172,173,162,163,164,174,175,176,177,178,153,154,155,156,157,158,166,167,168,169,170,159,160,161,171,172,173,162,163,164,174,175,176,177,178,175,176,177,178,177,176,177,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,149,150,151,152,166,251,253,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,153,154,155,156,157,158,159,160,161,162,163,164,153,149,149,154,150,150,155,156,157,158,151,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,152,174,179,175,176,177,178,255,256,257,178,149,150,151,152,149,150,151,152,256,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,251,253,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,153,154,155,156,157,158,167,168,169,170,159,160,161,171,172,173,162,163,164,251,253,177,177,176,177,178,251,257,251,253,251,253,251,254,176,177,178,254,176,177,178,254,254,166,251,253,149,150,151,152,178,178,176,153,154,155,156,157,158,166,167,168,169,170,159,160,161,171,172,173,162,163,164,174,175,176,177,178,149,150,151,152,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,174,252,153,149,154,150,155,156,157,158,151,166,167,168,169,170,159,160,161,171,172,173,162,163,164,152,174,179,175,176,177,178,251,253,258,259,260,261,262,263,264,49,49,0,265,266,49,49,0,0,266,0,49,49,266,0,49,49,0,183,183,184,184,186,183,184,186,183,184,265,186,183,184,186,183,184,186,183,184,183,184,265,265,186,183,186,183,184,186,183,184,186,183,184,186,183,184,265,265,183,186,183,184,186,183,184,186,183,184,186,183,184,186,183,184,265,186,184,266,184,183,183,265,183,184,186,183,184,186,183,184,265,186,183,184,184,186,183,184,267,267,267,267,0,267,267,267,267,267,0,0,8,8,8,8,0,8,0,0,0,84,84,139,139,84,139,84,139,139,139,8,84,84,139,84,139,8,84,84,139,84,139,84,139,84,139,84,139,84,139,84,84,139,139,139,84,139,84,84,84,139,139,139,84,84,139,84,139,8,8,84,8,8,8,8,268,8,84,139,84,84,139,84,139,84,139,84,139,84,139,84,139,84,139,84,84,8,84,8,84,139,84,139,84,84,84,139,84,139,84,139,8,84,139,269,269,199,269,199,198,199,198,269,269,198,199,269,198,198,198,198,0,198,0,0,198,0,199,198,199,198,198,269,269,269,199,198,199,198,269,269,199,198,199,198,269,199,198,198,198,199,198,198,198,199,198,199,198,199,198,199,198,199,198,269,269,269,269,269,269,198,269,199,198,199,198,269,199,198,269,199,198,270,270,0,270,0,0,0,270,270,271,0,272,273,273,270,273,270,272,270,0,0,202,202,202,203,202,203,202,203,203,202,203,202,202,202,202,202,202,203,202,203,202,202,203,202,202,202,202,202,203,203,202,203,202,202,203,203,203,202,202,203,202,203,202,203,202,203,202,202,202,202,202,202,202,203,203,202,203,202,203,202,202,203,202,206,204,185,0,206,0,0,0,0,0,204,0,0,205,205,185,185,83,83,274,274,205,185,207,204,83,205,185,207,204,83,185,185,83,83,205,185,207,204,83,205,185,207,204,83,205,185,274,205,185,83,205,185,83,274,275,205,185,207,204,83,205,185,207,204,83,185,205,185,207,204,83,207,204,83,205,207,205,185,185,207,204,83,205,185,207,204,204,204,83,83,83,274,275,185,185,205,185,207,204,83,205,185,207,204,83,205,185,207,204,83,205,185,207,204,83,205,185,207,204,83,205,83,83,83,83,185,207,83,205,185,83,185,205,185,207,204,83,205,185,207,204,83,205,185,207,204,83,83,205,185,207,204,83,210,58,210,58,210,0,0,0,0,208,208,58,58,210,209,208,58,210,209,208,58,210,209,208,58,210,209,208,58,208,58,208,58,210,209,209,208,58,210,209,208,58,210,209,208,58,210,209,208,58,210,209,208,58,210,210,210,209,208,58,210,209,208,58,210,209,208,58,210,209,208,58,210,209,208,58,208,58,210,209,208,58,210,209,208,58,210,209,208,58,209,208,210,209,208,58,276,277,0,213,0,0,0,0,214,211,211,211,278,211,211,214,211,211,211,211,213,214,213,214,213,213,125,211,211,211,211,211,214,211,211,211,214,211,211,211,211,211],"f":[0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[[6,[-1]]],[[6,[-1]]],[7,8]],[[[9,[-1,-2]]],[[9,[-1,-2]]],[7,8],[7,10]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[],[[6,[-1]]],8],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[5]]],13],[-1,[[12,[[6,[-2]]]]],13,8],[-1,[[12,[[9,[-2,-3]]]]],13,8,10],[11,2],[11,2],[11,2],0,0,0,0,[[5,14],15],[[[6,[-1]],14],15,8],[[[6,[-1]],14],15,[16,8]],[[[9,[-1,-2]],14],15,8,10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[18,[17]],19,19],[[6,[-1]]],8],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,-1],12,28],[[[6,[-1]],-2],12,[29,8],28],[[[9,[-1,-2]],-3],12,[29,8],[29,10],28],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[32,19],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,33],[34,34],[32,32],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[33,[[35,[33]]]],[[],33],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[33]]],13],[-1,[[12,[34]]],13],[-1,[[12,[32]]],13],[11,2],[11,2],[11,2],[[[36,[33]]],[[12,[[36,[17]],37]]]],[34,12],[[33,33],38],[[34,34],38],[[32,32],38],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[33,14],15],[[34,14],15],[[34,14],15],[[32,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,34,39],[-1,[[12,[[2,[34]]]]],40],[[],34],[[],34],[[],[[2,[34]]]],[[],[[2,[32]]]],[[33,-1],2,41],[[34,-1],2,41],[[32,-1],2,41],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[32],[[42,32],32],[32,42],0,0,[[33,-1],12,28],[[34,-1],12,28],[[32,-1],12,28],[[],30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[34,[[36,[35]]]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[34,19],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[43,11],2],[[43,44],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[43,43],[46,46],[47,47],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[48,[-1]]],2,49],0,[[43,30,[50,[30]]],[[25,[51]]]],[[43,30,[50,[30]]],[[25,[52]]]],[[43,30,[50,[30]]],[[25,[53]]]],[[43,30],[[25,[54]]]],0,0,[[],45],[[],46],[[],47],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,2],[11,2],[11,2],[11,2],[11,2],[[[48,[-1]],14],15,49],[[45,14],15],[[43,14],15],[[46,14],15],[[46,14],15],[[47,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[47,42],[[50,[[36,[17]]]]]],[[[48,[-1]]],[[55,[-1]]],49],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],0,0,[[[48,[-1]]],[],49],[[],11],[[],11],[[],11],[[],11],[[],11],[[47,42,[36,[17]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,0,0,0,0,0,0,[[],45],0,0,0,0,0,0,[[47,42],[[50,[[36,[17]]]]]],0,0,[[43,30],2],[[43,11],2],0,[[43,30],43],[[43,30],[[25,[56]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[43,57],2],0,0,[[[48,[-1]],58,38,-2],[[12,[2,[59,[-1]]]]],49,60],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[[61,19]],[[61,19],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[37,[[50,[63]]]],[-1,[[12,[2,64]]],[39,22]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,37],[66,37],[67,37],[37,[[50,[62]]]],[61,[[12,[2,64]]]],0,[61,61],[[[68,[-1]]],[[68,[-1]]],[7,49]],[[[69,[-1]]],[[69,[-1]]],[7,49]],[[[70,[-1]]],[[70,[-1]]],[7,49]],[65,65],[66,66],[67,67],[[[55,[-1]]],[[55,[-1]]],[7,49]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[61,61],71],[61,[[35,[61]]]],[[[55,[-1]]],[[35,[[55,[-1]]]]],49],[[-1,-2],[[12,[72]]],[],[[74,[[73,[17]]]]]],0,[[-1,75,19],[],[]],[[[55,[-1]],75,19],[],49],[61],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[37,76],[-1,[[12,[61]]],13],[-1,[[12,[[68,[-2]]]]],13,49],[-1,[[12,[[69,[-2]]]]],13,49],[-1,[[12,[[70,[-2]]]]],13,49],[-1,[[12,[[55,[-2]]]]],13,49],[[-1,77,78],[[12,[61,64]]],79],[[-1,-2],[[12,[[80,[-1]],72]]],[],[[74,[[73,[17]]]]]],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],0,[[61,61],38],[[[68,[-1]],[68,[-1]]],38,[81,49]],[[[69,[-1]],[69,[-1]]],38,[81,49]],[[[70,[-1]],[70,[-1]]],38,[81,49]],[[[55,[-1]],[55,[-1]]],38,49],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],0,[65,[[12,[-1,37]]],[]],[66,[[12,[-1,37]]],[]],[67,[[12,[-1,37]]],[]],[[],[[35,[-1]]],82],[[-1,-2],[[12,[2]]],[],[]],[[[55,[-1]]],[[12,[2,37]]],49],[[61,14],15],[[[68,[-1]],14],15,49],[[[69,[-1]],14],15,[16,49]],[[[70,[-1]],14],15,49],[[37,14],15],[[37,14],15],[[65,14],15],[[66,14],15],[[67,14],15],[[[55,[-1]],14],15,[16,49]],[[[55,[-1]],14],15,49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[83,[-1]]],[[55,[-1]]],49],[[],61],[[],[[55,[-1]]],49],[[],84],[[[55,[-1]]],[],49],[[[55,[-1]]],50,49],[[[55,[-1]]],19,49],[[[55,[-1]]],[[85,[-1]]],49],[[[55,[-1]]],[[35,[[55,[-1]]]]],49],[[[55,[-1]]],42,49],[[[55,[-1]]],84,49],[[[55,[-1]]],36,49],[[[55,[-1]]],2,49],[[[55,[-1]]],86,49],[61,19],[[[68,[-1]]],[],49],[[[69,[-1]]],[],49],[[[70,[-1]]],[],49],[[[55,[-1]]],[],49],[[61,-1],2,41],[[[68,[-1]],-2],2,[87,49],41],[[[69,[-1]],-2],2,[87,49],41],[[[70,[-1]],-2],2,[87,49],41],[[[55,[-1]],-2],2,49,41],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[65,37],[66,37],[67,37],0,0,0,0,[19,61],0,0,[[61,61],[[50,[71]]]],0,[-1,42,[]],0,0,0,[75,[[35,[-1]]],82],[[-1,73],[[12,[[36,[17,24]],72]]],[]],0,[[61,-1],12,28],[[[68,[-1]],-2],12,49,28],[[[69,[-1]],-2],12,49,28],[[[70,[-1]],-2],12,[29,49],28],[[[55,[-1]],-2],12,[29,49],28],[[],[[36,[17]]]],[[61,-1,77],[[12,[2,64]]],88],[[61,77],11],0,[37,[[50,[62]]]],[[61,19]],[11],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2,-1]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,[[12,[[12,[2,2]],72]]],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[[[59,[-1]]],[[50,[63]]],49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[89,[[59,[-1]]],49],[[[90,[-1]]],[[59,[-2]]],[[91,[30]]],49],[[[92,[-1,-2]]],[[59,[-3]]],91,[[91,[93]]],49],[[[94,[-1,-2]]],[[59,[-3]]],[[91,[11]]],[[91,[95]]],49],[[[96,[-1]]],[[59,[-2]]],[[91,[30]]],49],[97,[[59,[-1]]],49],[[[59,[-1]]],[[50,[62]]],49],[98,98],[99,99],[100,100],[101,101],[89,89],[102,102],[[[90,[-1]]],[[90,[-1]]],7],[103,103],[[[92,[-1,-2]]],[[92,[-1,-2]]],7,7],[[[94,[-1,-2]]],[[94,[-1,-2]]],7,7],[[[96,[-1]]],[[96,[-1]]],7],[97,97],[93,93],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[[[59,[-1]]],76,49],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[89,[[12,[-1,[59,[-2]]]]],[],49],[[[90,[-1]]],[[12,[-2,[59,[-3]]]]],[[91,[30]]],[],49],[[[92,[-1,-2]]],[[12,[-3,[59,[-4]]]]],91,[[91,[93]]],[],49],[[[94,[-1,-2]]],[[12,[-3,[59,[-4]]]]],[[91,[11]]],[[91,[95]]],[],49],[[[96,[-1]]],[[12,[-2,[59,[-3]]]]],[[91,[30]]],[],49],[97,[[12,[-1,[59,[-2]]]]],[],49],[[98,14],15],[[99,14],15],[[100,14],15],[[101,14],15],[[89,14],15],[[102,14],15],[[[90,[-1]],14],15,16],[[103,14],15],[[[92,[-1,-2]],14],15,16,16],[[[94,[-1,-2]],14],15,16,16],[[[96,[-1]],14],15,16],[[97,14],15],[[[59,[-1]],14],15,[16,49]],[[[59,[-1]],14],15,49],[[93,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[98,[[59,[-1]]],49],[99,[[59,[-1]]],49],[100,[[59,[-1]]],49],[101,[[59,[-1]]],49],[89,[[59,[-1]]],49],[102,[[59,[-1]]],49],[[[90,[-1]]],[[59,[-2]]],[[91,[30]]],49],[103,[[59,[-1]]],49],[[[92,[-1,-2]]],[[59,[-3]]],91,[[91,[93]]],49],[[[94,[-1,-2]]],[[59,[-3]]],[[91,[11]]],[[91,[95]]],49],[[[96,[-1]]],[[59,[-2]]],[[91,[30]]],49],[97,[[59,[-1]]],49],0,[[[59,[-1]]],[[50,[62]]],49],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[104,[-1]]],[[104,[-1]]],[7,49]],[[[105,[-1]]],[[105,[-1]]],[7,49]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,2],[11,2],0,[[[104,[-1]],14],15,[16,49]],[[[105,[-1]],14],15,[16,49]],[-1,-1,[]],[-1,-1,[]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[106,[-1]]],[[106,[-1]]],[7,107]],[108,108],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[106,[-1]]],[109,107]],[[],108],[11,-1,[]],[108],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[[106,[-2]]]]],13,[110,107]],[-1,[[12,[108]]],13],[11,2],[11,2],0,[[[106,[-1]],14],15,[16,107]],[[108,14],15],[-1,-1,[]],[-1,-1,[]],[[[112,[111]]],108],[[],108],[[[18,[17]]],108],[[[18,[17]],19],108],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,[[[106,[-1]],-2],12,[29,107],28],[[108,-1],12,28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[113,[-1]]],[[113,[-1]]],[7,49]],[[[114,[-1]]],[[114,[-1]]],[7,49]],[115,115],[[[116,[-1]]],[[116,[-1]]],[7,49]],[[[117,[-1]]],[[117,[-1]]],[7,49]],[[[118,[-1]]],[[118,[-1]]],[7,49]],[[[119,[-1]]],[[119,[-1]]],[7,49]],[[[120,[-1]]],[[120,[-1]]],[7,49]],[[[121,[-1]]],[[121,[-1]]],[7,49]],[[[122,[-1]]],[[122,[-1]]],[7,49]],[[[123,[-1]]],[[123,[-1]]],[7,49]],[[[124,[-1,-2]]],[[124,[-1,-2]]],[7,49],[7,[125,[-1]],126]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[[113,[-2]]]]],13,49],[-1,[[12,[[116,[-2]]]]],13,49],[-1,[[12,[[117,[-2]]]]],13,49],[-1,[[12,[[118,[-2]]]]],13,49],[-1,[[12,[[120,[-2]]]]],13,49],[-1,[[12,[[121,[-2]]]]],13,49],[-1,[[12,[[122,[-2]]]]],13,49],[-1,[[12,[[123,[-2]]]]],13,49],[-1,[[12,[[124,[-2,-3]]]]],13,49,[[125,[-2]],126]],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[[[113,[-1]],[113,[-1]]],38,[81,49]],[[115,115],38],[[[116,[-1]],[116,[-1]]],38,[81,49]],[[[117,[-1]],[117,[-1]]],38,[81,49]],[[[118,[-1]],[118,[-1]]],38,[81,49]],[[[119,[-1]],[119,[-1]]],38,[81,49]],[[[120,[-1]],[120,[-1]]],38,[81,49]],[[[121,[-1]],[121,[-1]]],38,[81,49]],[[[122,[-1]],[122,[-1]]],38,[81,49]],[[[123,[-1]],[123,[-1]]],38,[81,49]],[[[124,[-1,-2]],[124,[-1,-2]]],38,[81,49],[81,[125,[-1]],126]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[[113,[-1]],14],15,[16,49]],[[[114,[-1]],14],15,[16,49]],[[[116,[-1]],14],15,[16,49]],[[[117,[-1]],14],15,[16,49]],[[[118,[-1]],14],15,[16,49]],[[[119,[-1]],14],15,[16,49]],[[[120,[-1]],14],15,[16,49]],[[[121,[-1]],14],15,[16,49]],[[[122,[-1]],14],15,[16,49]],[[[123,[-1]],14],15,[16,49]],[[[124,[-1,-2]],14],15,[16,49],[16,[125,[-1]],126]],[[[118,[-1]]],[[127,[-1]]],49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[123,[-1]]],[[116,[-1]]],49],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[118,[-1]]],[[120,[-1]]],49],[-1,-1,[]],[[[119,[-1]]],[[121,[-1]]],49],[-1,-1,[]],[[[127,[-1]]],[[122,[-1]]],49],[-1,-1,[]],[-1,-1,[]],[[[122,[-1]]],[[116,[-1]]],49],[[[113,[-1]]],[],49],[[[116,[-1]]],[],49],[[[113,[-1]],-2],2,[87,49],41],[[[116,[-1]],-2],2,[87,49],41],[[[117,[-1]],-2],2,[87,49],41],[[[120,[-1]],-2],2,[87,49],41],[[[121,[-1]],-2],2,[87,49],41],[[[122,[-1]],-2],2,[87,49],41],[[[123,[-1]],-2],2,[87,49],41],[[[124,[-1,-2]],-3],2,[87,49],[87,[125,[-1]],126],41],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,[[[120,[-1]]],[[118,[-1]]],49],[[[121,[-1]]],[[119,[-1]]],49],[[[113,[-1]]],115,49],[[[116,[-1]]],115,49],[[[122,[-1]]],115,49],0,[[[113,[-1]],-2],12,49,28],[[[116,[-1]],-2],12,49,28],[[[117,[-1]],-2],12,49,28],[[[118,[-1]],-2],12,[29,49],28],[[[119,[-1]],-2],12,[29,49],28],[[[120,[-1]],-2],12,49,28],[[[121,[-1]],-2],12,49,28],[[[122,[-1]],-2],12,49,28],[[[123,[-1]],-2],12,49,28],[[[124,[-1,-2]],-3],12,49,[29,[125,[-1]],126],28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[122,[-1]]],[],49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[128,[-1,-2]]],[[128,[-1,-2]]],[7,49],[7,129]],[[-1,-2],2,[],[]],[[[35,[-1]]],[[128,[-2,-1]]],129,49],0,0,0,0,0,0,0,[11,-1,[]],[11,-1,[]],[-1,[[12,[[128,[-2,-3]]]]],13,49,[110,129]],[11,2],[[[128,[-1,-2]],[128,[-1,-2]]],38,[81,49],[81,129]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[[85,[-1]],14],15,49],[[[128,[-1,-2]],14],15,[16,49],[16,129]],[-1,-1,[]],[[],[[85,[-1]]],49],[[],[[128,[-1,[130,[-1]]]]],49],[[[128,[-1,-2]]],[],49,129],[[[128,[-1,-2]]],35,49,129],[[[128,[-1,-2]]],[],49,129],[[[128,[-1,-2]],-3],2,[87,49],[87,129],41],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[],11],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,0,0,0,0,0,0,[[[128,[-1,-2]],-3],38,49,129,[[131,[-1]]]],[[[128,[-1,-2]],-3],12,49,[29,129],28],0,0,0,0,0,0,0,[-2,19,49,[[131,[-1]]]],[-1,-2,[],[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[130,[-1]]],[[130,[-1]]],[7,49]],[132,132],[[[133,[-1]]],[[133,[-1]]],[7,49]],[134,134],[[[135,[-1]]],[[135,[-1]]],[7,49]],[[[136,[-1]]],[[136,[-1]]],[7,49]],[[[137,[-1]]],[[137,[-1]]],[7,49]],[[[138,[-1,-2]]],[[138,[-1,-2]]],[7,49],[7,129]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[130,[-1]]],[[35,[[130,[-1]]]]],49],[132,[[35,[132]]]],[[[133,[-1]]],[[35,[[133,[-1]]]]],49],[134,[[35,[134]]]],[[[135,[-1]]],[[35,[[135,[-1]]]]],49],[[[136,[-1]]],[[35,[[136,[-1]]]]],49],[[[137,[-1]]],[[35,[[137,[-1]]]]],49],[-1,[[138,[-2,-1]]],129,49],0,0,0,0,0,0,0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[[130,[-2]]]]],13,49],[-1,[[12,[132]]],13],[-1,[[12,[[133,[-2]]]]],13,49],[-1,[[12,[134]]],13],[-1,[[12,[[135,[-2]]]]],13,49],[-1,[[12,[[136,[-2]]]]],13,49],[-1,[[12,[[137,[-2]]]]],13,49],[-1,[[12,[[138,[-2,-3]]]]],13,49,[110,129]],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[[[130,[-1]],[130,[-1]]],38,[81,49]],[[132,132],38],[[[133,[-1]],[133,[-1]]],38,[81,49]],[[134,134],38],[[[135,[-1]],[135,[-1]]],38,[81,49]],[[[136,[-1]],[136,[-1]]],38,[81,49]],[[[137,[-1]],[137,[-1]]],38,[81,49]],[[[138,[-1,-2]],[138,[-1,-2]]],38,[81,49],[81,129]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[[130,[-1]],14],15,[16,49]],[[132,14],15],[[[133,[-1]],14],15,[16,49]],[[134,14],15],[[[135,[-1]],14],15,[16,49]],[[[136,[-1]],14],15,[16,49]],[[[137,[-1]],14],15,[16,49]],[[[138,[-1,-2]],14],15,[16,49],[16,129]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[138,[-1,-2]]],-2,49,129],[[[138,[-1,-2]]],[[35,[-2]]],49,129],[[[138,[-1,-2]]],139,49,129],[[[138,[-1,-2]]],[],49,129],[[[138,[-1,-2]]],[],49,129],[[[130,[-1]],-2],2,[87,49],41],[[132,-1],2,41],[[[133,[-1]],-2],2,[87,49],41],[[134,-1],2,41],[[[135,[-1]],-2],2,[87,49],41],[[[136,[-1]],-2],2,[87,49],41],[[[137,[-1]],-2],2,[87,49],41],[[[138,[-1,-2]],-3],2,[87,49],[87,129],41],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,0,0,0,0,0,0,0,0,0,[[[130,[-1]],-2],12,[29,49],28],[[132,-1],12,28],[[[133,[-1]],-2],12,49,28],[[134,-1],12,28],[[[135,[-1]],-2],12,49,28],[[[136,[-1]],-2],12,49,28],[[[137,[-1]],-2],12,49,28],[[[138,[-1,-2]],-3],12,49,[29,129],28],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[[19,76],[[35,[-1]]],82],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,19,[]],[-1,12,[]],[-1,-2,39,[]],[-1,[[12,[[2,[-2]]]]],40,[]],[[],[[2,[-1]]],[]],[[],[[2,[-1]]],[]],[-1,[],[]],[[42,-1],-1,[]],[-1,42,[]],[-1,[[36,[35]]],[]],[[[36,[17]]]],0,0,[-1,140,[]],[-1,11,[]],[-1,[],[]],[-1,141,[]],[-1,141,[]],[-1,[],[]],[[-1,[122,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,[122,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,[36,[[55,[-2]]]],[85,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,[122,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,[122,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,[104,[-2]]],[[143,[[25,[142]]]]],[],[]],[-1,[[143,[[25,[142]]]]],[]],[-1,[[143,[[25,[142]]]]],[]],[[-1,[123,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,[26,[[59,[-2]]]]],[[143,[[25,[142]]]]],[],[]],[-1,[[143,[[25,[142]]]]],[]],[-1,[[143,[[25,[142]]]]],[]],[[-1,[55,[-2]]],[[143,[[25,[142]]]]],[],[]],[-1,140,[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[144,[[50,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[145,144],[146,144],[144,[[50,[62]]]],[145,145],[146,146],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[36,-1,[]],[19],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[144,76],[11,2],[11,2],[11,2],[145,[[12,[-1,144]]],[]],[146,[[12,[-1,144]]],[]],[-1,95,[]],[[144,14],15],[[144,14],15],[[145,14],15],[[146,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,147,[]],[-1,36,[]],[-1,[],[]],[-1,50,[]],[-1,38,[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[145,144],[146,144],[144,[[50,[62]]]],[-1,95,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,11,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,11],2,[]],[[148,11],2],[[-1,44],2,[]],[[148,44],2],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[25,[56]]]],[148,148],[[-1,-2],2,[],[]],[[-1,30,[50,[30]]],[[25,[51]]],[]],[[148,30,[50,[30]]],[[25,[51]]]],[[-1,30,[50,[30]]],[[25,[52]]],[]],[[148,30,[50,[30]]],[[25,[52]]]],[[-1,30,[50,[30]]],[[25,[53]]],[]],[[148,30,[50,[30]]],[[25,[53]]]],[[-1,30],[[25,[54]]],[]],[[148,30],[[25,[54]]]],[[],148],[11,-1,[]],[11,-1,[]],[11,2],[[148,14],15],[-1,-1,[]],[[],11],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[-1,11],2,[]],[[-1,30],2,[]],[[148,11],2],[[148,30],2],[[-1,30],[[25,[56]]],[]],[[148,30],[[25,[56]]]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[[-1,57],2,[]],[[148,57],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,[149,[[50,[63]]]],[150,[[50,[63]]]],[151,[[50,[63]]]],[152,[[50,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[113,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,-2,[147,[-3]]],[[143,[[25,[142]]]]],[],[],[]],[153,149],[154,150],[155,151],[156,151],[157,151],[158,151],[159,152],[160,152],[161,152],[162,152],[163,152],[164,152],[149,[[50,[62]]]],[150,[[50,[62]]]],[151,[[50,[62]]]],[152,[[50,[62]]]],[[-1,[36,[17]],[26,[22]]],[[165,[2]]],[]],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[166,166],[167,167],[168,168],[169,169],[170,170],[159,159],[160,160],[161,161],[171,171],[172,172],[173,173],[162,162],[163,163],[164,164],[[[174,[-1]]],[[174,[-1]]],[7,8]],[175,175],[176,176],[177,177],[178,178],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],175],[[],176],[[],177],[[],178],0,0,0,[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[149,76],[150,76],[151,76],[152,76],[-1,[[12,[166]]],13],[[-1,[113,[-2]]],[[143,[[25,[142]]]]],[],[]],[[-1,-2,-3],[[143,[[25,[142]]]]],[],[],[]],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[11,2],[153,[[12,[-1,149]]],[]],[154,[[12,[-1,150]]],[]],[155,[[12,[-1,151]]],[]],[156,[[12,[-1,151]]],[]],[157,[[12,[-1,151]]],[]],[158,[[12,[-1,151]]],[]],[159,[[12,[-1,152]]],[]],[160,[[12,[-1,152]]],[]],[161,[[12,[-1,152]]],[]],[162,[[12,[-1,152]]],[]],[163,[[12,[-1,152]]],[]],[164,[[12,[-1,152]]],[]],[[153,14],15],[[149,14],15],[[149,14],15],[[154,14],15],[[150,14],15],[[150,14],15],[[155,14],15],[[156,14],15],[[157,14],15],[[158,14],15],[[151,14],15],[[151,14],15],[[166,14],15],[[167,14],15],[[168,14],15],[[169,14],15],[[170,14],15],[[159,14],15],[[160,14],15],[[161,14],15],[[171,14],15],[[172,14],15],[[173,14],15],[[162,14],15],[[163,14],15],[[164,14],15],[[152,14],15],[[152,14],15],[[[174,[-1]],14],15,[16,8]],[[[179,[-1]],14],15,[16,8]],[[175,14],15],[[176,14],15],[[177,14],15],[[178,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[180,152],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[25,[181]]]],[[11,11,11,11,38],[[25,[181]]]],[-1,[],[]],0,[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[50,[11]]],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[-1,174],[[143,[[25,[142]]]]],[]],[[-1,[174,[-2]]],[[143,[[25,[142]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[153,149],[154,150],[155,151],[156,151],[157,151],[158,151],[167,152],[168,152],[169,152],[170,152],[159,152],[160,152],[161,152],[171,152],[172,152],[173,152],[162,152],[163,152],[164,152],[-1,[[143,[[25,[142]]]]],[]],[-1,[[143,[[25,[142]]]]],[]],0,0,[[19,19],176],[[182,182,19,19],177],[[177,176,141],178],[-1,2,[]],[-1,115,[]],[[-1,61],[[143,[[25,[142]]]]],[]],[[-1,61,-2],[[143,[[25,[142]]]]],[],[]],[[-1,166],[[165,[[12,[[36,[[113,[-2]]]],152]]]]],[],[]],[[-1,166],[[165,[[12,[[36,[-2]],152]]]]],[],[]],[-1,2,[]],[-1,141,[]],[176,141],[177,141],[178,141],[-1,38,[]],[176,38],[177,38],[178,38],[-1,11,[]],[[-1,[36,[17]]],[[36,[17]]],[]],[[166,-1],12,28],[-1,[[165,[2]]],[]],[-1,[[165,[2]]],[]],[149,[[50,[62]]]],[150,[[50,[62]]]],[151,[[50,[62]]]],[152,[[50,[62]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[[174,[-1]]],19,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[143,[[25,[142]]]]],[]],[-1,[[143,[[25,[142]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[183,[-1]]],[[183,[-1]]],[7,49]],[[[184,[-1]]],[[184,[-1]]],[7,49]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],[[25,[181]]]],[[],[[12,[185]]]],0,[[],[[183,[-1]]],49],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,2],[11,2],[11,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[11,11,11],[[25,[181]]]],[[],[[143,[[25,[142]]]]]],0,[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[55,[-1]],75,19],[],[]],[[],[[186,[-1]]],49],[[],[[184,[-1]]],49],[[],[[2,[[184,[-1]],[50,[[184,[-1]]]]]]],[]],0,0,0,[[50,75,19]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[],19],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[187,73],[[12,[188]]]],[189,[[12,[188]]]],[[189,-1],[[12,[188]]],[190,75]],[189,[[12,[36,188]]]],0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,[[187,[-2,-3]]],[],[],191],[139,[[73,[17]]]],[[187,73]],[-1,[[12,[2,64]]],[39,22]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[17]]],38],[84,[[12,[2,64]]]],[84,84],[139,139],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[84,84],71],[[139,139],71],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[84]]],13],[-1,[[12,[139]]],13],[[-1,77,78],[[12,[84,64]]],79],[11,2],[11,2],[-1,-2,[],[[193,[192]]]],[-1,-2,[],[[193,[192]]]],[[84,84],38],[[139,139],38],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[84,14],15],[[84,14],15],[[139,14],15],[-1,-1,[]],[-1,-1,[]],[84,[[50,[-1]]],[]],[[],-1,[]],[76,[[12,[84]]]],[[[18,[17]],19],[[2,[-1]]],[]],[[],-1,[]],[[36,194]],[[],[[2,[195]]]],[-1,194,[]],[[-1,19],[],[]],[[84,-1],2,41],[[139,-1],2,41],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[84,84],[[50,[71]]]],[[139,139],[[50,[71]]]],[[84,-1],12,28],[[139,-1],12,28],[[84,-1,77],[[12,[2,64]]],88],[[84,77],11],[[[73,[17]]],139],[[],30],[-1,84,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,[[12,[[187,[-2,-3]],[196,[-2]]]]],[],[],191],[197,[[12,[84]]]],[197,[[12,[84]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[[-1,139,[73,[17]]],38,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[[-1,-2],[[12,[2,198]]],[],40],[[-1,-2,-3,-4],[[12,[2,198]]],[],40,40,40],[[-1,73,73,[36,[38]]],[[12,[36,198]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,199],[[12,[198]]],[]],[-1,38,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[2,198]]],[]],[11,2],[11,2],[[198,14],15],[[198,14],15],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[-1,199],[[12,[11,198]]],[]],[[-1,199],[[12,[198]]],[]],[[-1,199],[[12,[2,198]]],[]],[[-1,199],[[12,[2,198]]],[]],[-1,[[12,[2,198]]],[]],[[-1,-2],[[50,[2]]],[],[200,201]],[-1,30,[]],[[-1,199],[[12,[198]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[-1,199],[[12,[198]]],[]],[-1,31,[]],[-1,31,[]],[[-1,38],[[12,[198]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,[[12,[-1]]],[]],[[[50,[-1]],75,19],[],[]],0,[[],-1,[]],[[],-1,[]],[-1,19,[]],[[],-1,[]],[19,-1,[]],[-1,2,[]],[-1,19,[]],[-1,38,[]],0,0,[[-1,3],2,[]],[[-1,1],2,[]],[202,[[12,[202]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[202,202],[[-1,-2],2,[],[]],[202,[[35,[202]]]],[[[50,[202]],75,19],33],[[],202],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[-1,[[12,[202]]],13],[11,2],[11,2],[[202,202],38],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[-1,-2],38,[],[]],[[203,14],15],[[203,14],15],[[202,14],15],[-1,-1,[]],[-1,-1,[]],[[202,-1],2,41],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[[],11],[[],11],[[],202],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],0,[202,2],[75,202],[[202,-1],12,28],[[],30],[-1,-2,[],[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[202,38],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,[36,[[204,[-2]]]]],[[143,[[25,[142]]]]],[],[]],[[-1,[83,[-2]]],[[143,[[25,[142]]]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,62,[]],[185,[[50,[63]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[205,185],[185,[[50,[62]]]],[-1,[[143,[[25,[142]]]]],[]],[205,205],[185,185],[[[83,[-1]]],[[83,[-1]]],[7,49]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[143,[[25,[142]]]]],[]],[[],[[206,[-1]]],[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[185,76],[11,2],[11,2],[11,2],[11,2],[11,2],[[[207,[-1]],[207,[-1]]],38,[81,49]],[[[204,[-1]],[204,[-1]]],38,[49,81]],[[[83,[-1]],[83,[-1]]],38,[81,49]],[205,[[12,[-1,185]]],[]],0,[[205,14],15],[[185,14],15],[[185,14],15],[[[207,[-1]],14],15,[16,49]],[[[204,[-1]],14],15,[49,16]],[[[83,[-1]],14],15,[16,49]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[83,[-1]]],[[204,[-1]]],49],[[[55,[-1]]],[[204,[-1]]],49],[-1,-1,[]],[[[55,[-1]]],[[83,[-1]]],49],[-1,-1,[]],[[[85,[-1]],50,[35,[[55,[-1]]]],36,84],[[83,[-1]]],49],[-1,[[143,[[25,[142]]]]],[]],[-1,[[143,[[25,[142]]]]],[]],[[-1,-2],[[20,[-2,-3]]],[],[21,22,23],[]],[-1,[],[]],[[],11],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[205,185],0,0,0,0,[185,[[50,[62]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[208,[-1]]],[[208,[-1]]],[7,49]],[[[58,[-1]]],[[58,[-1]]],7],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[11,-1,[]],[[[209,[-1]]],[],49],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,-1,[]],[11,2],[11,2],[11,2],[11,2],[[[210,[-1]],14],15,[16,49]],[[[209,[-1]],14],15,[16,49]],[[[208,[-1]],14],15,[16,49]],[[[58,[-1]],14],15,16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[210,[-1]]],[[50,[[35,[[55,[-1]]]]]]],49],[[[210,[-1]]],[[50,[42]]],49],[[],11],[[],11],[[],11],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[[211,[-1,-2,-3]],-2],[[212,[[211,[-1,-2,-3]],-3]]],49,[[213,[-1]]],[[214,[-1]]]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[35,-1,[]],[11,-1,[]],[11,-1,[]],[11,2],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,35,[]],[-1,35,[]],[-1,139,[]],[-1,[],[]],[-1,[],[]],[[],11],[-1,-2,[],[]],[[[25,[-1,24]]],[[25,[4,24]]],[]],[[[26,[-1,24]]],[[26,[4,24]]],[]],[[[27,[-1,24]]],[[27,[4,24]]],[]],[[-1,-3],38,[],[],[[131,[-2]]]],0,0,0,[-2,19,[],[[131,[-1]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,31,[]],0,[-1,-2,[],[]]],"c":[2146],"p":[[3,"Private",3867],[15,"tuple"],[3,"Private",3867],[8,"Any",3868],[4,"ExecutionType",0],[3,"ValidatorConfig",0],[8,"Clone",3869],[8,"SignatureKey",3308],[3,"HotShotConfig",0],[8,"ElectionConfig",2152],[15,"usize"],[4,"Result",3870],[8,"Deserializer",3871],[3,"Formatter",3872],[6,"Result",3872],[8,"Debug",3872],[15,"u8"],[15,"array"],[15,"u64"],[3,"IndentedSection",3873],[8,"Display",3872],[8,"Send",3874],[8,"Sync",3874],[3,"Global",3875],[3,"Box",3876],[3,"Arc",3877],[3,"Rc",3878],[8,"Serializer",3879],[8,"Serialize",3879],[3,"String",3880],[3,"TypeId",3868],[3,"VIDBlockHeader",118],[3,"VIDTransaction",118],[3,"VIDBlockPayload",118],[3,"Commitment",3881],[3,"Vec",3882],[4,"BlockError",406],[15,"bool"],[8,"Iterator",3883],[8,"IntoIterator",3884],[8,"Hasher",3885],[6,"VidCommitment",406],[3,"ConsensusMetrics",235],[15,"f64"],[3,"ConsensusMetricsValue",235],[3,"InnerConsensusMetrics",235],[3,"PayloadStore",235],[3,"Consensus",235],[8,"NodeType",3200],[4,"Option",3886],[8,"Counter",2248],[8,"Gauge",2248],[8,"Histogram",2248],[8,"Label",2248],[3,"Leaf",406],[8,"Metrics",2248],[15,"i64"],[4,"Terminator",3729],[4,"HotShotError",764],[8,"FnMut",3887],[3,"ViewNumber",406],[8,"Error",3888],[3,"Backtrace",3889],[4,"SerializationError",3890],[3,"InvalidBlockHeaderSnafu",406],[3,"InvalidTransactionLengthSnafu",406],[3,"InconsistentPayloadCommitmentSnafu",406],[3,"DAProposal",406],[3,"VidDisperse",406],[3,"QuorumProposal",406],[4,"Ordering",3891],[4,"VidError",3892],[15,"slice"],[8,"AsRef",3893],[8,"RngCore",3894],[15,"str"],[4,"Compress",3895],[4,"Validate",3895],[8,"Read",3896],[3,"VidDisperse",3892],[8,"PartialEq",3891],[8,"Committable",3881],[3,"StoredView",3575],[3,"EncodedPublicKey",3308],[6,"QuorumCertificate",1704],[15,"i128"],[8,"Hash",3885],[8,"Write",3896],[3,"LeafNotFoundSnafu",764],[3,"InvalidStateSnafu",764],[8,"Into",3893],[3,"ViewTimeoutSnafu",764],[4,"RoundTimedoutState",764],[3,"InsufficientValidSignaturesSnafu",764],[3,"NonZeroU64",3897],[3,"MiscSnafu",764],[3,"ContinueSnafu",764],[3,"FailedToMessageLeaderSnafu",764],[3,"FailedToBroadcastSnafu",764],[3,"BlockSnafu",764],[3,"NetworkFaultSnafu",764],[3,"StorageSnafu",764],[3,"TimeoutSnafu",764],[3,"Event",1168],[4,"EventType",1168],[3,"LightClientState",1230],[8,"PrimeField",3898],[3,"StateKeyPair",1230],[8,"Default",3899],[8,"Deserialize",3871],[3,"EdwardsConfig",3900],[3,"KeyPair",3901],[3,"Message",1299],[3,"Messages",1299],[4,"MessagePurpose",1299],[4,"MessageKind",1299],[4,"InternalTrigger",1299],[4,"ProcessedGeneralConsensusMessage",1299],[4,"ProcessedCommitteeConsensusMessage",1299],[4,"GeneralConsensusMessage",1299],[4,"CommitteeConsensusMessage",1299],[3,"SequencingMessage",1299],[4,"DataMessage",1299],[3,"Proposal",1299],[8,"HasViewNumber",3827],[8,"DeserializeOwned",3871],[6,"ProcessedSequencingMessage",1299],[3,"SimpleCertificate",1704],[8,"Voteable",1794],[3,"QuorumData",1794],[8,"Membership",2152],[3,"DAData",1794],[3,"TimeoutData",1794],[3,"VIDData",1794],[3,"ViewSyncPreCommitData",1794],[3,"ViewSyncCommitData",1794],[3,"ViewSyncFinalizeData",1794],[3,"SimpleVote",1794],[3,"EncodedSignature",3308],[3,"NonZeroUsize",3897],[3,"Duration",3902],[8,"Future",3903],[3,"Pin",3904],[4,"ElectionError",2152],[3,"StubSnafu",2152],[3,"MathSnafu",2152],[3,"BTreeSet",3905],[3,"NoMetrics",2248],[4,"MemoryNetworkError",2299],[4,"CentralizedServerNetworkError",2299],[4,"WebServerNetworkError",2299],[4,"NetworkError",2299],[3,"StubSnafu",2299],[3,"NoMessagesInQueueSnafu",2299],[3,"IncorrectConsensusDataSnafu",2299],[3,"ClientSnafu",2299],[3,"EndpointSnafu",2299],[3,"ClientDisconnectedSnafu",2299],[3,"UnimplementedFeatureSnafu",2299],[3,"CouldNotDeliverSnafu",2299],[3,"NoSuchNodeSnafu",2299],[3,"ChannelSendSnafu",2299],[3,"ShutDownSnafu",2299],[3,"UnableToCancelSnafu",2299],[6,"BoxSyncFuture",3906],[4,"TransmitType",2299],[3,"Libp2pSnafu",2299],[3,"MemoryNetworkSnafu",2299],[3,"CentralizedServerSnafu",2299],[3,"WebServerSnafu",2299],[3,"FailedToSerializeSnafu",2299],[3,"FailedToDeserializeSnafu",2299],[3,"TimeoutSnafu",2299],[4,"ConsensusIntentEvent",2299],[3,"PerfectNetwork",2299],[3,"SynchronousNetwork",2299],[3,"AsynchronousNetwork",2299],[3,"PartiallySynchronousNetwork",2299],[4,"NetworkChange",2299],[4,"NetworkNodeHandleError",3907],[8,"Fn",3887],[15,"u32"],[3,"ViewQueue",3200],[3,"ChannelMaps",3200],[4,"StorageError",3575],[3,"SendToTasks",3200],[3,"BitSlice",3908],[4,"PrimitivesError",3909],[3,"GenericArray",3910],[8,"CryptoRng",3894],[8,"BitOrder",3911],[15,"char"],[8,"FromIterator",3884],[3,"U256",3912],[3,"BitVec",3913],[4,"BitSpanError",3914],[3,"TaggedBase64",3915],[4,"StakeTableError",3413],[4,"SnapshotVersion",3413],[8,"SeedableRng",3894],[8,"CryptoRngCore",3894],[3,"DummyState",3510],[3,"DummyError",3510],[4,"ViewEntry",3575],[3,"NoGenesisViewSnafu",3575],[6,"Result",3575],[3,"StorageState",3575],[3,"RoundFinishedEvent",3729],[3,"View",3729],[4,"ViewInner",3729],[3,"VoteAccumulator",3827],[4,"Either",3916],[8,"Vote",3827],[8,"Certificate",3827],[6,"CommitmentMap",235],[8,"VidSchemeTrait",406],[8,"DeltasType",406],[8,"TestableLeaf",406],[6,"VidScheme",406],[13,"Misc",1156],[13,"InvalidState",1156],[13,"InsufficientValidSignatures",1156],[13,"StorageError",1156],[13,"TimeoutError",1156],[13,"FailedToMessageLeader",1156],[13,"FailedToBroadcast",1156],[13,"BlockError",1156],[13,"NetworkFault",1156],[13,"ViewTimeoutError",1156],[13,"Decide",1223],[13,"Error",1223],[13,"ReplicaViewTimeout",1223],[13,"NextLeaderViewTimeout",1223],[13,"ViewFinished",1223],[6,"StateSignature",1230],[6,"DACertificate",1704],[6,"TimeoutCertificate",1704],[6,"ViewSyncPreCommitCertificate2",1704],[6,"ViewSyncCommitCertificate2",1704],[6,"ViewSyncFinalizeCertificate2",1704],[6,"QuorumVote",1794],[6,"DAVote",1794],[6,"TimeoutVote",1794],[6,"ViewSyncCommitVote",1794],[6,"ViewSyncPreCommitVote",1794],[6,"ViewSyncFinalizeVote",1794],[8,"BlockPayload",2109],[8,"BlockHeader",2109],[8,"ConsensusSharedApi",2130],[8,"ConsensusApi",2130],[8,"CommunicationChannel",2299],[3,"ChaosNetwork",2299],[8,"ConnectedNetwork",2299],[8,"NetworkReliability",2299],[8,"TestableChannelImplementation",2299],[8,"TestableNetworkingImplementation",2299],[8,"ViewMessage",2299],[13,"Libp2p",3193],[13,"MemoryNetwork",3193],[13,"CentralizedServer",3193],[13,"WebServer",3193],[13,"FailedToSerialize",3193],[13,"FailedToDeserialize",3193],[13,"Timeout",3193],[8,"TestableNodeImplementation",3200],[8,"NodeImplementation",3200],[8,"QuorumCertificate",3298],[8,"StakeTableEntryType",3308],[8,"StakeTableScheme",3413],[8,"State",3491],[8,"TestableState",3491],[8,"TestableBlock",3491],[8,"ConsensusTime",3491],[8,"Storage",3575],[8,"TestableStorage",3575],[13,"Leaf",3825],[13,"DA",3825],[6,"VoteMap2",3827]]},\
"hotshot_utils":{"doc":"Contains general utility structures and methods","t":"AF","n":["bincode","bincode_opts"],"q":[[0,"hotshot_utils"],[1,"hotshot_utils::bincode"],[2,"bincode::config"],[3,"bincode::config::limit"],[4,"bincode::config"],[5,"bincode::config"],[6,"bincode::config"],[7,"bincode::config"]],"d":["Provides bincode options","For the wire format, we use bincode with the following …"],"i":[0,0],"f":[0,[[],[[9,[[7,[[5,[[3,[1,2]],4]],6]],8]]]]],"c":[],"p":[[3,"DefaultOptions",2],[3,"Infinite",3],[3,"WithOtherLimit",2],[3,"LittleEndian",4],[3,"WithOtherEndian",2],[3,"VarintEncoding",5],[3,"WithOtherIntEncoding",2],[3,"RejectTrailing",6],[3,"WithOtherTrailing",2]]},\
"hotshot_web_server":{"doc":"","t":"GDGIDMMLLLLLLLLLLAMLFLLLLLLLLLLKLKLKLKLKLKLKLKLKLKLLLLLLLLLLLLMLMMMMMMMMMKLKLKLKLKLKLKLKLKLKLKLKLKLMMMMFMMMMLLLLMLLLLMMMMMMMMMMMLLLRRRRRRFFFFFFFFFFFFFFFFFFFF","n":["Error","Options","State","WebServerDataSource","WebServerState","_prng","api_path","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","config","da_certificates","default","define_api","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches_mut","get_da_certificate","get_da_certificate","get_proposal","get_proposal","get_recent_proposal","get_recent_proposal","get_transactions","get_transactions","get_vid_certificate","get_vid_certificate","get_vid_disperse","get_vid_disperse","get_vid_votes","get_vid_votes","get_view_sync_proposal","get_view_sync_proposal","get_view_sync_votes","get_view_sync_votes","get_votes","get_votes","group_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","message","new","num_txns","oldest_certificate","oldest_proposal","oldest_vid_certificate","oldest_vid_disperse","oldest_vid_vote","oldest_view_sync_proposal","oldest_view_sync_vote","oldest_vote","post_completed_transaction","post_completed_transaction","post_da_certificate","post_da_certificate","post_proposal","post_proposal","post_secret_proposal","post_secret_proposal","post_staketable","post_staketable","post_transaction","post_transaction","post_vid_certificate","post_vid_certificate","post_vid_disperse","post_vid_disperse","post_vid_vote","post_vid_vote","post_view_sync_proposal","post_view_sync_proposal","post_view_sync_vote","post_view_sync_vote","post_vote","post_vote","proposal","proposal","proposals","raw","recent_proposal","recent_vid_disperse","run_web_server","shutdown","stake_table","status","transactions","try_from","try_from","try_into","try_into","txn_lookup","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vid_certificates","vid_disperses","vid_vote_index","vid_votes","view_sync_proposal_index","view_sync_proposals","view_sync_vote_index","view_sync_votes","vote_index","votes","vzip","vzip","with_shutdown_signal","DEFAULT_WEB_SERVER_DA_PORT","DEFAULT_WEB_SERVER_PORT","DEFAULT_WEB_SERVER_VIEW_SYNC_PORT","MAX_TXNS","MAX_VIEWS","TX_BATCH_SIZE","get_da_certificate_route","get_proposal_route","get_recent_proposal_route","get_transactions_route","get_vid_certificate_route","get_vid_disperse_route","get_vid_vote_route","get_view_sync_proposal_route","get_view_sync_vote_route","get_vote_route","post_da_certificate_route","post_proposal_route","post_staketable_route","post_transactions_route","post_vid_certificate_route","post_vid_disperse_route","post_vid_vote_route","post_view_sync_proposal_route","post_view_sync_vote_route","post_vote_route"],"q":[[0,"hotshot_web_server"],[131,"hotshot_web_server::config"],[157,"core::any"],[158,"clap_builder::builder::command"],[159,"tide_disco::error"],[160,"tide_disco::api"],[161,"tide_disco::api"],[162,"core::marker"],[163,"core::marker"],[164,"tide_disco::method"],[165,"clap_builder"],[166,"alloc::vec"],[167,"core::option"],[168,"hotshot_types::traits::signature_key"],[169,"clap_builder::util::id"],[170,"alloc::alloc"],[171,"alloc::boxed"],[172,"alloc::sync"],[173,"alloc::rc"],[174,"alloc::string"],[175,"async_compatibility_layer::channel::oneshot::inner"],[176,"url"],[177,"std::io::error"],[178,"core::any"]],"d":["","","","Trait defining methods needed for the <code>WebServerState</code>","State that tracks proposals and votes the server receives …","prng for generating endpoint","","","","","","","","","","","","","view number -&gt; (secret, da_certificates)","","Sets up all API routes","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Return the da certificate the server has received for a …","","Return the proposal the server has received for a …","","","","Return the transaction at the specified index (which will …","","Return the VID certificate the server has received for a …","","Return the VID disperse data that the server has received …","","Return all VID votes the server has received for a …","","","","","","Return all votes the server has received for a particular …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","highest transaction index","view for teh oldest DA certificate","view for oldest proposals in memory","","","","","","view number of oldest votes in memory","","","","Stores a received DA certificate in the <code>WebServerState</code>","","Stores a received proposal in the <code>WebServerState</code>","","","","","","Stores a received group of transactions in the …","","","","","","Stores a received VID vote in the <code>WebServerState</code>","","","","","","Stores a received vote in the <code>WebServerState</code>","","","view number -&gt; (secret, proposal)","","view for the most recent proposal to help nodes catchup","","","shutdown signal","stake table with leader keys","","index -&gt; transaction","","","","","","","","","","","","","","","","","","","view number -&gt; highest vote index for that view number","view number -&gt; Vec(index, vote)","","","","","","","How many transactions to keep in memory","How many views to keep in memory","How many transactions to return at once","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,20,3,20,3,20,3,3,3,20,3,20,3,0,20,3,0,20,3,20,3,20,3,20,3,3,3,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,3,20,3,20,3,20,3,20,3,20,3,33,20,20,20,20,20,20,20,20,20,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,32,20,20,34,20,20,0,20,20,33,20,20,3,20,3,20,20,3,3,3,34,20,20,20,20,20,20,20,20,20,20,20,3,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],3],[3,[[7,[[5,[-1,4]],6]]],[8,9,10,11]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,13],[12,13],[-1,-1,[]],[-1,-1,[]],[14,[[7,[3,15]]]],[14,[[7,[3,15]]]],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[-1,[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]]],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16],[[7,[[19,[[13,[16,[18,[[18,[17]]]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[13,[16,[18,[[18,[17]]]]]]]],4]]],21],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[],[[19,[22]]]],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[24,[-1,23]]],[[24,[1,23]]],[]],[[[24,[-1,23]]],[[24,[1,23]]],[]],[[[25,[-1,23]]],[[25,[1,23]]],[]],[[[25,[-1,23]]],[[25,[1,23]]],[]],[[[26,[-1,23]]],[[26,[1,23]]],[]],[[[26,[-1,23]]],[[26,[1,23]]],[]],0,[[],[[20,[-1]]],21],0,0,0,0,0,0,0,0,0,[[-1,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],[18,[17]]],[[7,[13,4]]],21],[[-1,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16],[[19,[[13,[27,[18,[17]]]]]]],[]],[[[20,[-1]],16],[[19,[[13,[27,[18,[17]]]]]]],21],0,0,0,0,[[[19,[[28,[13]]]],29],[[30,[13]]]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,31,[]],[-1,31,[]],[[3,14],[[7,[13,15]]]],[[3,14],[[7,[13,15]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]],[19,[[28,[13]]]]],[[20,[-1]]],21],0,0,0,0,0,0,[16,27],[16,27],[[],27],[16,27],[16,27],[16,27],[[16,16],27],[[16,16],27],[[16,16],27],[[16,16],27],[16,27],[16,27],[[],27],[[],27],[16,27],[16,27],[16,27],[16,27],[16,27],[16,27]],"c":[],"p":[[8,"Any",157],[3,"Command",158],[3,"Options",0],[3,"ServerError",159],[3,"Api",160],[4,"ApiError",160],[4,"Result",161],[8,"Send",162],[8,"Sync",162],[8,"ReadState",163],[8,"WriteState",163],[15,"usize"],[15,"tuple"],[3,"ArgMatches",164],[6,"Error",165],[15,"u64"],[15,"u8"],[3,"Vec",166],[4,"Option",167],[3,"WebServerState",0],[8,"SignatureKey",168],[3,"Id",169],[3,"Global",170],[3,"Box",171],[3,"Arc",172],[3,"Rc",173],[3,"String",174],[3,"OneShotReceiver",175],[3,"Url",176],[6,"Result",177],[3,"TypeId",157],[8,"WebServerDataSource",0],[6,"Error",0],[6,"State",0]]},\
"libp2p_networking":{"doc":"Library for p2p communication","t":"AAADLLLLMLLLLLLLMLLMLLLLNNNNENNNNNNNNNNNNNNNNNNNNNNDDCNEEDDDEDEENNNNNNNNNNNNNNNALLLLLLLLMMLLMALLFMMMLLLALLLLLLLLLLLLLFFFMMMMMMLLLLMMMMMMMMMAAMMMMMMMMMMMLFFMMMMLLLLLLLLLMMLLLLLLLLMMMMMMMMMMMMMMMMMMAAAAADDEENNNDDRRNNDNELLMMMMLMMMLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMLLMMMLLMLLMMLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLDEDDENDNDNDNDNNRLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLMMLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDEDNNLLLMLLLLLLMMLLLLLLLLLMLLLLLLMMLLMMLLLLLLLLLLLLDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLLMLMMLLLLLDENMLLLLLLLLLLLLLLMLLLLMLLLLLMLLLMLLLLLLLLLLRDRLLLLLMLLLMLLLLMLLLLLLLMLLLLLLNDENDNDNNDENDNDENDNDNDNDNDNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMDDDDDDRRCDCCCCCCRLLLAMLLLALLMLMCLLLMLLMLLLLRDDDENNRLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLLMMMMLMMLMMLMMLMMLMMLLLLLLLLLLLLLMMLLLLLLLLNDNDNDNDNDNDEDDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLMALLLLMLLLLLMMMLMLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMCCCCCCDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["message","network","reexport","Message","borrow","borrow_mut","clone","clone_into","content","deserialize","eq","equivalent","equivalent","fmt","from","into","sender","serialize","to_owned","topic","try_from","try_into","type_id","vzip","AddKnownPeers","BeginBootstrap","Bootstrap","CantKillTwice","ClientRequest","Conductor","ConnectTimeout","DHTError","DHTEvent","DMEvent","DeserializationError","DirectRequest","DirectRequest","DirectResponse","DirectResponse","GetConnectedPeerNum","GetConnectedPeers","GetDHT","GetRoutingTable","GossipEvent","GossipMsg","GossipMsg","IdentifyEvent","IgnorePeers","IsBootstrapped","Killed","LookupPeer","MeshParams","NetworkDef","NetworkError","NetworkError","NetworkEvent","NetworkEventInternal","NetworkNode","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeType","NoSuchTopic","NodeConfigError","Prune","PutDHT","ReceiverEnded","RecvError","Regular","SendError","SerializationError","Shutdown","Subscribe","TimeoutError","UninitializedField","Unsubscribe","ValidationError","behaviours","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","bound_addr","clone","clone_into","config","def","default","deserialize","deserialize_msg","dht","dht_cache_location","dht_cache_location","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","gen_multiaddr","gen_transport","get_random_handle","gossipsub","id","identify","identity","identity","identity","into","into","into","into","listen_addr","listener_id","mesh_n","mesh_n_high","mesh_n_low","mesh_outbound_min","mesh_params","mesh_params","network_config","network_node_handle_error","node","node_type","node_type","peer_id","peer_id","receiver","replication_factor","replication_factor","republication_interval","republication_interval","request_response","send_network","serialize","serialize_msg","spin_up_swarm","state","swarm","to_connect_addrs","to_connect_addrs","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","webui_listeners","contents","key","key","notify","notify","pid","retry_count","retry_count","value","source","source","source","source","source","source","source","source","dht","direct_message","direct_message_codec","exponential_backoff","gossip","Bootstrap","DHTBehaviour","DHTEvent","DHTProgress","Finished","InProgress","IsBootstrapped","KadGetQuery","KadPutQuery","MAX_DHT_QUERY_SIZE","NUM_REPLICATED_TO_TRUST","NotStarted","NotStarted","RandomWalk","Started","State","add_address","add_bootstrap_nodes","backoff","backoff","backoff","backoff","begin_bootstrap","begin_bootstrap","bootstrap_nodes","bootstrap_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cache","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","dht_handle_event","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_queue","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_record","handle_established_inbound_connection","handle_established_outbound_connection","handle_get_query","handle_pending_inbound_connection","handle_pending_outbound_connection","handle_put_query","hash","in_progress_get_closest_peers","in_progress_get_record_queries","in_progress_put_record_queries","into","into","into","into","into","into","into","into","kadem","key","key","lookup_peer","new","notify","notify","num_replicas","on_connection_handler_event","on_swarm_event","peer_id","poll","print_routing_table","progress","progress","put_record","query_closest_peers","queued_get_record_queries","queued_put_record_queries","random_walk","records","replication_factor","retry_count","state","state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Cache","CacheError","Config","ConfigBuilder","ConfigBuilderError","Deserialization","DeserializationSnafu","Disk","DiskSnafu","GeneralCache","GeneralCacheSnafu","Serialization","SerializationSnafu","UninitializedField","ValidationError","_DERIVE_core_fmt_Debug_FOR_Config","as_error_source","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cache","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","create_empty","default","default","default","description","disk_parity_delta","expiries","expiry","expiry","expiry","filename","filename","filename","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get","header","header","in_current_span","in_current_span","insert","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","load","max_disk_parity_delta","max_disk_parity_delta","max_disk_parity_delta","new","prune","save","save_if_necessary","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","source","source","DMBehaviour","DMEvent","DMRequest","DirectRequest","DirectResponse","add_address","add_direct_request","add_direct_response","backoff","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","failed_rr","fmt","from","from","from","handle_dm_event","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","in_progress_rr","into","into","into","new","on_connection_handler_event","on_swarm_event","out_event_queue","peer_id","poll","remove_address","request_response","retry_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DirectMessageCodec","DirectMessageProtocol","DirectMessageRequest","DirectMessageResponse","MAX_MSG_SIZE_DM","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","read_request","read_response","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_request","write_response","ExponentialBackoff","backoff_factor","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","fmt","from","hash","into","is_expired","new","reset","reset_val","start_next","started","timeout","to_owned","try_from","try_into","type_id","vzip","GossipBehaviour","GossipEvent","GossipMsg","backoff","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drain_publish_gossips","eq","equivalent","equivalent","fmt","from","from","gossip_handle_event","gossipsub","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","in_progress_gossip","into","into","new","on_connection_handler_event","on_swarm_event","out_event_queue","poll","publish_gossip","subscribe_gossip","subscribed_topics","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsubscribe_gossip","vzip","vzip","NUM_REPLICATED_TO_TRUST","NetworkDef","_DERIVE_core_fmt_Debug_FOR_NetworkDef","add_address","add_direct_request","add_direct_response","borrow","borrow_mut","dht","fmt","from","get_record","gossipsub","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","identify","into","new","on_connection_handler_event","on_swarm_event","poll","publish_gossip","put_record","request_response","subscribe_gossip","try_from","try_into","type_id","unsubscribe_gossip","vzip","CancelledRequest","CancelledRequestSnafu","DHTError","DialError","DialSnafu","Disagreement","DisagreementSnafu","GetRecord","GetRecordError","GetRecordSnafu","GetRecordWrapperError","GossipsubBuild","GossipsubBuildSnafu","GossipsubConfig","GossipsubConfigSnafu","NetworkError","NoKnownPeers","NoKnownPeersSnafu","NotFound","NotFoundSnafu","PublishError","PublishSnafu","PutRecord","PutRecordSnafu","StreamClosed","StreamClosedSnafu","Transport","TransportLaunch","TransportLaunchSnafu","TransportSnafu","as_error_source","as_error_source","as_error_source","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","description","description","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","header","in_current_span","in_current_span","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","message","message","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","source","source","message","message","source","source","source","source","NetworkSnafu","NodeConfigSnafu","RecvSnafu","SendSnafu","SerializationSnafu","TimeoutSnafu","ESTABLISHED_LIMIT","ESTABLISHED_LIMIT_UNWR","MeshParams","NetworkNode","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeReceiver","_DERIVE_core_fmt_Debug_FOR_NetworkNode","add_known_peers","borrow","borrow_mut","config","config","connected_pids","fmt","from","handle","handle_client_requests","handle_swarm_events","identity","into","listener_id","network_node_handle_error","new","num_connected","peer_id","peer_id","spawn_listeners","start_listen","swarm","try_from","try_into","type_id","vzip","DEFAULT_REPLICATION_FACTOR","MeshParams","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","UninitializedField","ValidationError","_DERIVE_core_fmt_Debug_FOR_NetworkNodeConfig","as_error_source","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","bound_addr","bound_addr","build","clone","clone","clone","clone_into","clone_into","clone_into","create_empty","default","default","default","dht_cache_location","dht_cache_location","dht_cache_location","fmt","fmt","fmt","fmt","from","from","from","from","from","from","header","identity","identity","identity","in_current_span","into","into","into","into","mesh_n","mesh_n_high","mesh_n_low","mesh_outbound_min","mesh_params","mesh_params","mesh_params","node_type","node_type","node_type","replication_factor","replication_factor","replication_factor","republication_interval","republication_interval","republication_interval","to_connect_addrs","to_connect_addrs","to_connect_addrs","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","ttl","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","CantKillTwice","CantKillTwiceSnafu","ConnectTimeout","ConnectTimeoutSnafu","DHTError","DHTSnafu","DeserializationError","DeserializationSnafu","Killed","KilledSnafu","NetworkError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeReceiver","NetworkSnafu","NoSuchTopic","NoSuchTopicSnafu","NodeConfigError","NodeConfigSnafu","ReceiverEnded","ReceiverEndedSnafu","RecvError","RecvSnafu","SendError","SendSnafu","SerializationError","SerializationSnafu","TimeoutError","TimeoutSnafu","add_known_peers","as_error_source","backtrace","begin_bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","connected_pids","description","direct_request","direct_response","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_record","get_record_timeout","gossip","header","id","id","ignore_peers","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_killed","kill_switch","killed","listen_addr","listen_addr","lookup_node","lookup_pid","modify_state","network_config","network_node_handle_error","new","notify_webui","num_connected","peer_id","peer_id","print_routing_table","prune_peer","put_record","put_record_timeout","receiver","receiver","receiver","receiver_spawned","recv","recv_kill","register_webui_listener","send_network","send_request","shutdown","source","spawn_handler","state","state","state_wait_timeout_until","state_wait_timeout_until_with_trigger","state_wait_until","subscribe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_to_connect","webui_listeners","source","source","source","source","source","source","source","source","NetworkSnafu","NodeConfigSnafu","RecvSnafu","SendSnafu","SerializationSnafu","TimeoutSnafu","Multiaddr","PeerId","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","empty","encode_hex","encode_hex_upper","ends_with","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_iter","from_multihash","from_public_key","from_str","from_str","hash","hash","header","header","into","into","into_iter","is_empty","iter","len","multihash","partial_cmp","partial_cmp","pop","protocol_stack","push","random","replace","serialize","serialize","to_base58","to_bytes","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with","with_capacity","with_p2p"],"q":[[0,"libp2p_networking"],[3,"libp2p_networking::message"],[24,"libp2p_networking::network"],[179,"libp2p_networking::network::ClientRequest"],[188,"libp2p_networking::network::NetworkNodeHandleError"],[196,"libp2p_networking::network::behaviours"],[201,"libp2p_networking::network::behaviours::dht"],[359,"libp2p_networking::network::behaviours::dht::cache"],[517,"libp2p_networking::network::behaviours::dht::cache::CacheError"],[521,"libp2p_networking::network::behaviours::direct_message"],[572,"libp2p_networking::network::behaviours::direct_message_codec"],[639,"libp2p_networking::network::behaviours::exponential_backoff"],[665,"libp2p_networking::network::behaviours::gossip"],[709,"libp2p_networking::network::def"],[741,"libp2p_networking::network::error"],[1010,"libp2p_networking::network::error::DHTError"],[1013,"libp2p_networking::network::error::GetRecordWrapperError"],[1014,"libp2p_networking::network::error::NetworkError"],[1020,"libp2p_networking::network::network_node_handle_error"],[1026,"libp2p_networking::network::node"],[1063,"libp2p_networking::network::node::config"],[1158,"libp2p_networking::network::node::handle"],[1453,"libp2p_networking::network::node::handle::NetworkNodeHandleError"],[1461,"libp2p_networking::network::node::handle::network_node_handle_error"],[1467,"libp2p_networking::reexport"],[1555,"core::result"],[1556,"serde::de"],[1557,"core::fmt"],[1558,"core::fmt"],[1559,"core::any"],[1560,"bincode::error"],[1561,"alloc::boxed"],[1562,"serde::de"],[1563,"libp2p_identity::keypair"],[1564,"libp2p_core::muxing::boxed"],[1565,"libp2p_core::transport::boxed"],[1566,"alloc::sync"],[1567,"rand_core"],[1568,"alloc::vec"],[1569,"serde::ser"],[1570,"core::option"],[1571,"core::fmt"],[1572,"std::collections::hash::set"],[1573,"std::collections::hash::map"],[1574,"libp2p_kad::behaviour"],[1575,"futures_channel::oneshot"],[1576,"core::num::nonzero"],[1577,"libp2p_swarm::connection"],[1578,"libp2p_swarm"],[1579,"libp2p_swarm"],[1580,"libp2p_kad::behaviour"],[1581,"libp2p_kad::behaviour"],[1582,"libp2p_kad::record_priv::store::memory"],[1583,"libp2p_kad::behaviour"],[1584,"libp2p_swarm"],[1585,"core::task::wake"],[1586,"libp2p_swarm"],[1587,"libp2p_swarm::behaviour"],[1588,"snafu::backtrace_shim"],[1589,"derive_builder::error"],[1590,"dashmap::mapref::one"],[1591,"color_eyre::section"],[1592,"core::fmt"],[1593,"core::marker"],[1594,"libp2p_request_response"],[1595,"core::pin"],[1596,"futures_io::if_std"],[1597,"core::marker"],[1598,"libp2p_gossipsub::behaviour"],[1599,"libp2p_identify::behaviour"],[1600,"core::clone"],[1601,"async_channel"],[1602,"void"],[1603,"std::io::error"],[1604,"either"],[1605,"libp2p_swarm"],[1606,"async_compatibility_layer::channel::unbounded::inner"],[1607,"async_compatibility_layer::channel::bounded::inner"],[1608,"core::ops::function"],[1609,"async_std::stream::stream::timeout"],[1610,"multihash::multihash"],[1611,"core::cmp"],[1612,"core::iter::traits::collect"],[1613,"core::fmt"],[1614,"core::net::ip_addr"],[1615,"core::net::ip_addr"],[1616,"core::iter::traits::collect"],[1617,"multiaddr"],[1618,"multiaddr"]],"d":["Example message used by the UI library","Network logic","symbols needed to implement a networking instance over …","example message that may be sent to the swarm. Used in the …","","","","","the content of the message","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","the peerid of the sender","","","the topic associated with the msg","","","","","add vec of known peers or addresses","Start the bootstrap process to kademlia","bootstrap node accepts all connections","The inner <code>NetworkNode</code> has already been killed","Actions to send from the client to the swarm","conductor node is never pruned","Could not connect to the network in time","Error in the kademlia DHT","a DHT event","a direct message event","Failure to deserialize a message","client request to send a direct serialized message","Recv-ed a direct message from a node","client request to send a direct reply to a message","Recv-ed a direct response from a node (that hopefully was …","Request the number of connected peers","Request the set of connected peers","Get(Key, Chan)","Print the routing  table to stderr, debugging only","a gossip  event","broadcast a serialized message","Recv-ed a broadcast","a identify event. Is boxed because this event is much …","Ignore peers. Only here for debugging purposes. Allows us …","Report that kademlia has successfully bootstrapped into …","The network node has been killed","Get address of peer","NOTE: …","Overarching network behaviour performing:","","Error generating network","events generated by the swarm that we wish to relay to the …","internal representation of the network events only used …","Network definition","describe the configuration of the network","Builder for <code>NetworkNodeConfig</code>.","Error type for NetworkNodeConfigBuilder","A handle containing:","Error wrapper type for interacting with swarm handle","this is mostly to estimate how many network connections a …","no known topic matches the hashset of keys","Error building Node config","prune a peer","Put(Key, Value) into DHT relay success back on channel","The receiver was unable to receive a new message","Error receiving message from network","regular node has a limit to the number of connections to …","Error sending request to network","Failure to serialize a message","kill the swarm","subscribe to a topic","Error waiting for connections","Uninitialized field","unsubscribe from a topic","Custom validation error","networking behaviours wrapping libp2p’s behaviours","","","","","","","","","address to bind to","address to bind to","","","the configuration parameters of the netework","","","","Deserialize an arbitrary message","purpose: peer routing purpose: storing pub key &lt;-&gt; peer id …","location of the dht cache, default is None","location of the dht cache, default is None","","","","Contains the <code>NetworkError</code> snafu types","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Bind all interfaces on port <code>port</code> NOTE we may want …","Generate authenticated transport","Given a slice of handles assumed to be larger than 0, …","purpose: broadcasting messages to many peers NOTE …","human readable id","purpose: identifying the addresses from an outside POV","optional identity","optional identity","pub/private key from with peer_id is derived","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the local address we’re listening on","the listener id we are listening on, if it exists","mesh_n from gossipsub","mesh_n_high from gossipsub","mesh_n_low from gossipsub","mesh_outbound_min from gossipsub","parameters for gossipsub mesh network","parameters for gossipsub mesh network","network configuration","Re-exports of the snafu errors that <code>NetworkNodeHandleError</code> …","","The type of node (bootstrap etc)","The type of node (bootstrap etc)","the peer id of the networkbehaviour","peer id of network node","","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","republication interval in DHT, must be much less than <code>ttl</code>","republication interval in DHT, must be much less than <code>ttl</code>","purpose: directly messaging peer","send an action to the networkbehaviour","","Serialize an arbitrary message","a single node, connects them to each other and waits for …","the state of the replica","the swarm of networkbehaviours","list of addresses to connect to at initialization","list of addresses to connect to at initialization","","","","","","","","","","expiratiry for records in DHT","expiratiry for records in DHT","","","","","","","","","A list of webui listeners that are listening for changes …","msg contents","Key to publish under","Key to search for","Channel to notify caller of result of publishing","Channel to notify caller of value (or failure to find …","peer id","number of retries","number of retries to make","Value to publish under","source of error","source of error","source of error","source of error","source of error","source of error","dummy source","source of error","Wrapper around Kademlia","Wrapper around <code>RequestResponse</code>","Implementation of a codec for sending messages for …","exponential backoff type","Wrapper around gossipsub","State of bootstrapping","Behaviour wrapping libp2p’s kademlia included:","DHT event enum","represents progress through DHT","Sucessfully completed","The query has been started","Only event tracked currently is when we successfully …","Metadata holder for get query","Metadata holder for get query","","","Not in progress","The query has not been started","State of the periodic random walk","In progress","State used for random walk and bootstrapping","Passthru to kademlia Associate address with kademlia peer","Save in case kademlia forgets about bootstrap nodes","Retry timeout","Retry timeout","Exponential retry backoff","Exponential retry backoff","Begin the bootstrap process","client approval to begin bootstrap","bootstrap nodes","State of bootstrapping","","","","","","","","","","","","","","","","","","kademlia cache","","","","","","","","","","","","","","","","","","","List of kademlia events","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a value for a key from the DHT. Value …","","","update state based on recv-ed get query","","","Update state based on put query","","in progress queries for nearby peers","List of in-progress get requests","List of in-progress put requests","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kademlia behaviour","the key to look up","the key to put","query a peer (e.g. obtain its address if it exists)","Create a new DHT behaviour","notify client of result","notify client of result","number of replicas required to replicate over","","","the peer id (useful only for debugging right now)","","print out the routing table to stderr","progress through DHT query","progress through DHT query","Publish a key/value to the kv store. Once replicated upon …","Start a query for the closest peers","List of previously failled get requests","List of previously failled put requests","State of last random walk","already received records","replication factor","the number of remaining retries before giving up","State of random walk","State of bootstrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the value to put","","","","","","","","","","Error wrapper type for cache","","Builder for <code>Config</code>.","Error type for ConfigBuilder","Failure to deserialize the cache","SNAFU context selector for the <code>CacheError::Deserialization</code> …","Failed to read or write from disk","SNAFU context selector for the <code>CacheError::Disk</code> variant","General cache error","SNAFU context selector for the <code>CacheError::GeneralCache</code> …","Failure to serialize the cache","SNAFU context selector for the <code>CacheError::Serialization</code> …","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>Config</code>.","the cache for records (key -&gt; value)","","","","","","","","","","","","","","the cache’s config","Create an empty builder, with all fields set to <code>None</code> or …","","","","","number of inserts since the last save","the expiries for the dht cache, in order (expiry time -&gt; …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","source of error","source of error","source of error","Wrapper metadata around libp2p’s request response usage: …","Lilst of direct message output events","Request to direct message a peert","We received as Direct Request","We received a Direct Response","Add address to request response behaviour","Add a direct request for a given peer","Add a direct response for a channel","backoff since last attempted request","","","","","","","the data","Failed queries to be retried","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","In progress queries","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new behaviour based on request response","","","lsit of out events for parent behaviour","the recv-ers peer id","","Remove address from request response behaviour","The wrapped behaviour","the number of remaining retries before giving up","","","","","","","","","","","","","Codec for direct messages","Protocol for direct messages","Wrapper type describing a serialized direct message","wrapper type describing the response to direct message","Maximum size of a direct message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Track (with exponential backoff) sending of some sort of …","factor to back off by","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Whether or not the timeout is expired","Create new backoff","reset backoff","Value to reset to when reset is called","start next timeout result: whether or not we succeeded if …","when we started the timeout","the current timeout amount","","","","","","wrapper metadata around libp2p’s gossip protocol","Output event","We received a gossip","Timeout trackidng when to retry gossip","","","","","","","Attempt to drain the internal gossip list, publishing each …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","The gossip behaviour","","","","","The in progress gossip queries","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new gossip behavioru based on gossipsub","","","Output events to parent behavioru","","Publish a given gossip","Subscribe to a given topic","Set of topics we are subscribed to","","","","","","","","Unsubscribe from a given topic","","","","Overarching network behaviour performing:","","Add an address","Add a direct request for a given peer","Add a direct response for a channel","","","purpose: peer routing purpose: storing pub key &lt;-&gt; peer id …","","Returns the argument unchanged.","Retrieve a value for a key from the DHT. Value …","purpose: broadcasting messages to many peers NOTE …","","","","","purpose: identifying the addresses from an outside POV","Calls <code>U::from(self)</code>.","Create a new instance of a <code>NetworkDef</code>","","","","Publish a given gossip","Publish a key/value to the kv store. Once replicated upon …","purpose: directly messaging peer","Subscribe to a given topic","","","","Unsubscribe from a given topic","","request was ignored serverside","SNAFU context selector for the <code>DHTError::CancelledRequest</code> …","Error enum for querying store because for some reason, …","Error initiating dial of peer","SNAFU context selector for the <code>NetworkError::DialError</code> …","nodes disagreed on the value","SNAFU context selector for the <code>DHTError::Disagreement</code> …","Get Record Error","wrapper","SNAFU context selector for the <code>DHTError::GetRecord</code> variant","Wrapper Error enum for <code>libp2p::kad::GetRecordError</code>. …","Error building the gossipsub instance","SNAFU context selector for the <code>NetworkError::GossipsubBuild</code>…","Error building the gossipsub configuration","SNAFU context selector for the …","wrapper type for errors generated by the <code>Network</code>","Error when there are no known peers to bootstrap off","SNAFU context selector for the <code>NetworkError::NoKnownPeers</code> …","could not find 2 or more nodes that had the value","SNAFU context selector for the <code>DHTError::NotFound</code> variant","Error publishing a gossipsub message","SNAFU context selector for the <code>NetworkError::PublishError</code> …","Get Record Error","SNAFU context selector for the <code>DHTError::PutRecord</code> variant","Error if one of the channels to or from the swarm is closed","SNAFU context selector for the <code>NetworkError::StreamClosed</code> …","Error during dialing or listening","Error establishing backend connection","SNAFU context selector for the …","SNAFU context selector for the <code>NetworkError::Transport</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","source of error","source of error","source of error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","Wrapped num of connections","Number of connections to a single peer before logging an …","","Network definition","","","","","","","","initialize the DHT with known peers add the peers to …","","","","the configuration parameters of the netework","return hashset of PIDs this node is connected to","","Returns the argument unchanged.","","event handler for client events currectly supported …","event handler for events emited from the swarm","pub/private key from with peer_id is derived","Calls <code>U::from(self)</code>.","the listener id we are listening on, if it exists","","Creates a new <code>Network</code> with the given settings.","Returns number of peers this node is connected to","Get a reference to the network node’s peer id.","peer id of network node","Spawn a task to listen for requests on the returned channel","starts the swarm listening on <code>listen_addr</code> and optionally …","the swarm of networkbehaviours","","","","","replication factor for kademlia","NOTE: …","describe the configuration of the network","Builder for <code>NetworkNodeConfig</code>.","Error type for NetworkNodeConfigBuilder","Uninitialized field","Custom validation error","","","","","","","","","","","address to bind to","address to bind to","address to bind to","Builds a new <code>NetworkNodeConfig</code>.","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","location of the dht cache, default is None","location of the dht cache, default is None","location of the dht cache, default is None","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","optional identity","optional identity","optional identity","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","mesh_n from gossipsub","mesh_n_high from gossipsub","mesh_n_low from gossipsub","mesh_outbound_min from gossipsub","parameters for gossipsub mesh network","parameters for gossipsub mesh network","parameters for gossipsub mesh network","The type of node (bootstrap etc)","The type of node (bootstrap etc)","The type of node (bootstrap etc)","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","republication interval in DHT, must be much less than <code>ttl</code>","republication interval in DHT, must be much less than <code>ttl</code>","republication interval in DHT, must be much less than <code>ttl</code>","list of addresses to connect to at initialization","list of addresses to connect to at initialization","list of addresses to connect to at initialization","","","","","","","","","","","","","expiratiry for records in DHT","expiratiry for records in DHT","expiratiry for records in DHT","","","","","","","","","The inner <code>NetworkNode</code> has already been killed","SNAFU context selector for the …","Could not connect to the network in time","SNAFU context selector for the …","Error in the kademlia DHT","SNAFU context selector for the …","Failure to deserialize a message","SNAFU context selector for the …","The network node has been killed","SNAFU context selector for the …","Error generating network","A handle containing:","Error wrapper type for interacting with swarm handle","internal network node receiver","SNAFU context selector for the …","no known topic matches the hashset of keys","SNAFU context selector for the …","Error building Node config","SNAFU context selector for the …","The receiver was unable to receive a new message","SNAFU context selector for the …","Error receiving message from network","SNAFU context selector for the …","Error sending request to network","SNAFU context selector for the …","Failure to serialize a message","SNAFU context selector for the …","Error waiting for connections","SNAFU context selector for the …","Tell libp2p about known network nodes","","","Notify the network to begin the bootstrap process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a reference to the network config","return hashset of PIDs this node is connected to","","Make a direct request to <code>peer_id</code> containing <code>msg</code>","Reply with <code>msg</code> to a request over <code>chan</code>","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Receive a record from the kademlia DHT if it exists. Must …","Get a record from the kademlia DHT with a timeout","Gossip a message to peers","","Get a reference to the network node handle’s id.","human readable id","Ignore <code>peers</code> when pruning e.g. maintain their connection","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns <code>true</code> if the network state is killed","kill the event handler for events from the swarm","whether or not the handle has been killed","Get a reference to the network node handle’s listen addr.","the local address we’re listening on","Looks up a node’s <code>PeerId</code> and attempts to validate routing","Look up a peer’s addresses in kademlia NOTE: this should …","Modify the state. This will automatically call …","network configuration","Re-exports of the snafu errors that <code>NetworkNodeHandleError</code> …","constructs a new node listening on <code>known_addr</code>","Notify the webui that either the <code>state</code> or <code>connection_state</code> …","Returns number of peers this node is connected to","Get a reference to the network node handle’s peer id.","the peer id of the networkbehaviour","Print out the routing table used by kademlia NOTE: only …","Forcefully disconnet from a peer","Insert a record into the kademlia DHT","Insert a record into the kademlia DHT with a timeout","Receives a reference of the internal <code>NetworkNodeReceiver</code>, …","","the receiver","whether or not the receiver is started","","kill switch","Register a webui listener","send an action to the networkbehaviour","Send a client request to the network","Cleanly shuts down a swarm node This is done by sending a …","","Spawn a handler <code>F</code> that will be notified every time a new …","Get a clone of the internal state","the state of the replica","Call <code>wait_timeout_until</code> on the state’s <code>SubscribableMutex</code>","Call <code>wait_timeout_until_with_trigger</code> on the state’s …","Call <code>wait_until</code> on the state’s <code>SubscribableMutex</code>","Subscribe to a topic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe from a topic","","","","","","","","","","","","","","","","","Wait until at least <code>num_peers</code> have connected, or until …","A list of webui listeners that are listening for changes …","source of error","source of error","source of error","source of error","source of error","source of error","dummy source","source of error","","","","","","","Representation of a Multiaddr.","Identifier of a peer of the network.","","","","","","","","","","","","","","","","Create a new, empty multiaddress.","","","Checks whether the given <code>Multiaddr</code> is a suffix of this …","","","","","","","","Convert a Multiaddr to a string","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the length of this multiaddress is 0.","Returns the components of this multiaddress.","Return the length in bytes of this multiaddress.","","","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …","Returns &amp;str identifiers for the protocol names themselves.","Adds an already-parsed address component to the end of …","Generates a random peer ID from a cryptographically secure …","Replace a <code>Protocol</code> at some position in this <code>Multiaddr</code>.","","","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","Return a copy of this <code>Multiaddr</code>’s byte representation.","","","","","","","","","","","","","","Like <code>Multiaddr::push</code> but consumes <code>self</code>.","Create a new, empty multiaddress with the given capacity.","Appends the given <code>PeerId</code> if not yet present at the end of …"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,10,40,0,10,40,40,18,18,40,16,17,16,17,16,16,16,16,18,16,17,18,16,17,40,16,0,0,0,40,0,0,0,0,0,0,0,0,0,40,40,16,16,40,40,10,40,40,16,16,40,137,16,137,0,10,16,17,18,10,16,17,18,38,136,10,10,128,0,10,10,0,109,38,136,10,10,10,0,10,16,17,18,10,16,17,18,18,18,18,18,10,0,0,0,109,31,109,38,136,128,10,16,17,18,31,128,138,138,138,138,38,136,31,0,0,38,136,31,128,31,38,136,38,136,109,31,10,0,0,31,128,38,136,10,10,16,17,18,10,16,17,18,38,136,10,16,17,18,10,16,17,18,31,175,176,177,176,177,175,175,177,176,178,179,180,181,182,183,184,185,0,0,0,0,0,0,0,0,0,47,48,22,0,0,0,0,47,48,0,47,0,43,43,186,46,50,51,43,43,43,43,43,186,46,47,22,50,51,48,43,186,46,47,22,50,51,48,0,43,46,47,22,48,46,47,22,48,43,47,22,48,47,47,22,22,48,48,43,46,47,22,50,51,48,43,186,46,47,22,50,51,48,43,43,43,43,43,43,43,48,43,43,43,43,186,46,47,22,50,51,48,43,50,51,43,43,50,51,50,43,43,43,43,43,50,51,43,43,43,43,43,50,43,50,186,46,46,47,22,48,43,186,46,47,22,50,51,48,43,186,46,47,22,50,51,48,43,186,46,47,22,50,51,48,51,43,186,46,47,22,50,51,48,0,0,0,0,0,74,0,74,0,74,0,74,0,78,78,0,74,78,74,83,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,76,83,74,79,80,81,82,77,76,79,80,81,82,77,76,83,76,83,77,76,74,83,83,76,77,76,76,77,76,79,80,81,82,74,74,77,78,78,83,79,80,81,82,74,77,76,78,78,78,83,74,78,74,78,83,83,79,80,81,82,74,77,76,78,79,80,81,82,83,76,77,76,83,83,83,83,74,79,80,81,82,77,76,74,78,83,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,187,188,189,190,0,0,0,20,20,91,91,91,92,92,91,20,92,91,20,92,91,20,92,91,20,91,91,91,91,91,91,92,91,20,91,91,91,91,92,91,91,91,92,92,91,20,92,91,20,92,91,20,92,91,20,0,0,0,0,0,99,99,97,95,93,99,97,95,93,99,97,95,93,99,97,95,93,97,97,95,93,95,95,93,93,99,97,95,93,99,97,95,93,99,97,95,93,97,97,97,99,97,95,93,99,97,95,93,99,97,95,93,99,97,95,93,99,97,95,93,97,97,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,19,105,105,19,105,19,19,19,105,19,19,19,19,105,19,105,105,105,105,105,105,105,105,19,105,105,105,105,105,105,105,105,19,105,19,105,19,105,19,105,105,19,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,111,0,0,30,0,111,0,111,127,0,0,30,0,30,0,0,30,0,111,0,30,0,111,0,30,0,30,30,0,0,30,111,127,30,111,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,112,114,115,116,117,118,30,111,119,120,121,112,114,115,123,116,124,125,117,118,126,111,127,119,120,121,112,114,115,123,116,124,125,117,118,126,111,127,30,111,112,114,115,116,117,118,119,120,121,112,114,115,123,116,30,30,124,125,117,118,126,111,111,127,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,30,111,127,30,111,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,119,120,121,112,114,115,123,116,124,125,117,118,126,112,114,30,111,119,120,121,112,114,115,123,116,124,125,117,118,126,111,127,30,111,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,119,120,121,112,114,115,123,116,30,124,125,117,118,126,111,127,191,192,193,194,195,196,197,198,199,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,0,128,128,128,128,0,128,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,0,0,0,0,0,137,137,0,137,38,136,137,138,38,136,137,138,136,38,136,136,38,136,138,38,136,138,136,38,136,138,136,38,136,38,137,137,138,38,136,137,137,137,138,137,136,38,136,137,38,136,137,138,138,138,138,138,136,38,136,136,38,136,136,38,136,136,38,136,136,38,136,38,136,138,137,38,136,137,138,38,136,137,138,136,38,136,38,136,137,138,38,136,137,138,40,0,40,0,40,0,40,0,40,0,40,0,0,0,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,31,40,40,31,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,139,140,141,142,143,40,144,145,146,139,140,147,148,141,149,150,142,151,143,144,145,146,139,140,147,148,141,149,150,142,151,143,31,31,40,31,31,139,140,141,142,143,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,31,31,40,31,31,31,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,144,145,146,139,140,147,148,141,149,150,142,151,143,31,152,152,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,152,152,152,152,31,31,31,31,40,31,31,31,31,31,31,31,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,31,178,179,180,181,182,183,184,185,0,0,0,0,0,0,0,0,25,27,25,27,25,27,25,25,27,25,27,25,27,25,27,25,25,25,25,25,27,25,25,27,27,25,25,27,27,25,25,25,25,25,27,27,27,27,25,27,27,25,27,25,27,25,27,25,27,25,25,25,25,27,25,27,25,25,25,27,25,25,27,27,27,25,27,25,27,25,25,25,25,25,27,27,27,25,27,25,27,25,27,25,25,25],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],0,[-1,[[3,[1]]],4],[[1,1],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[1,6],7],[-1,-1,[]],[-1,-2,[],[]],0,[[1,-1],3,8],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[10,10],[[-1,-2],2,[],[]],0,0,[[],10],[-1,[[3,[10]]],4],[[[12,[11]]],[[3,[-1,[14,[13]]]]],15],0,0,0,[[10,10],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[10,6],7],[[16,6],7],[[17,6],7],[[18,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,18],[20,18],[21,18],[22,18],[23,[[3,[10]]]],[24,25],[26,[[3,[[29,[[2,[27,28]]]],30]]]],[[[12,[[32,[[31,[-1]]]]]],33],[[32,[[31,[-1]]]]],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,-1],3,8],[-1,[[3,[[34,[11]],[14,[13]]]]],35],[[36,[34,[[2,[[37,[27]],25]]]],38,39,[32,[[31,[-1]]]]],[[3,[2,40]]],[41,42]],0,0,0,0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,27,25],2],[[43,[45,[27,[44,[25]]]]],2],0,0,0,0,[43,2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[46,46],[47,47],[22,22],[48,48],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[43,49],2],[[47,47],5],[[22,22],5],[[48,48],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[46,6],7],[[47,6],7],[[22,6],7],[[50,6],7],[[51,6],7],[[48,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[43,[34,[11]],[52,[[34,[11]]]],53,54,11],2],[[43,55,27,25,25],[[3,[[56,[43]],57]]]],[[43,55,27,25,58],[[3,[[56,[43]],57]]]],[[43,59,60,5],2],[[43,55,25,25],[[3,[2,57]]]],[[43,55,[37,[27]],[12,[25]],58],[[3,[[34,[25]],57]]]],[[43,61,60],2],[[48,-1],2,62],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[43,27,[52,[2]]],2],[[[64,[63]],27,53,[37,[65]]],43],0,0,0,[[43,27,55,[66,[43]]],2],[[43,67],2],0,[[43,68,-1],[[71,[[70,[22,[69,[43]]]]]]],72],[43,2],0,0,[[43,51],2],[[43,27],2],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,73,[]],[-1,73,[]],[74,[[37,[75]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,[[3,[77,78]]]],0,[74,[[37,[73]]]],[79,79],[80,80],[81,81],[82,82],[77,77],[76,76],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],76],[[],83],[[],77],[[],76],[74,23],0,0,[[76,36],76],0,0,[[76,[37,[65]]],76],0,0,[[79,6],7],[[80,6],7],[[81,6],7],[[82,6],7],[[74,6],7],[[74,6],7],[[77,6],7],[[78,6],7],[[78,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[84,78],[-1,-1,[]],[65,78],[[83,[34,[11]]],[[37,[[85,[[34,[11]],[34,[11]]]]]]]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[-1,[],[]],[-1,[],[]],[[83,[34,[11]],[34,[11]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,74],[80,74],[81,74],[82,74],[83,[[3,[2,74]]]],[[76,90],76],0,0,[77,83],[83,2],[83,[[3,[2,74]]]],[83,2],[74,[[37,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[91,27,25],2],[[91,92],2],[[91,[94,[93]],[34,[11]]],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[20,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[91,[96,[95,93]]],2],[[91,55,27,25,25],[[3,[[56,[91]],57]]]],[[91,55,27,25,58],[[3,[[56,[91]],57]]]],[[91,55,25,25],[[3,[2,57]]]],[[91,55,[37,[27]],[12,[25]],58],[[3,[[34,[25]],57]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[98,[97]]],91],[[91,27,55,[66,[91]]],2],[[91,67],2],0,0,[[91,68,-1],[[71,[[70,[20,[69,[91]]]]]]],72],[[91,27,25],2],0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[99,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,99],[97,97],[95,95],[93,93],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],97],[-1,[[3,[97]]],4],[[95,95],5],[[93,93],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[99,6],7],[[97,6],7],[[95,6],7],[[93,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[97,99,-1],[[101,[[14,[100]]]]],[102,103,88]],[[97,99,-1],[[101,[[14,[100]]]]],[102,103,88]],[[97,-1],3,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[97,99,-1,95],[[101,[[14,[100]]]]],[104,103,88]],[[97,99,-1,93],[[101,[[14,[100]]]]],[104,103,88]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[54,54],[[-1,-2],2,[],[]],[[],54],[[54,54],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[54,6],7],[-1,-1,[]],[[54,-1],2,62],[-1,-2,[],[]],[54,5],[[90,36],54],[54,2],0,[[54,5],2],0,0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[[-1,-2],2,[],[]],[105,5],[[19,19],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[19,6],7],[-1,-1,[]],[-1,-1,[]],[[105,106],2],0,[[105,55,27,25,25],[[3,[[56,[105]],57]]]],[[105,55,27,25,58],[[3,[[56,[105]],57]]]],[[105,55,25,25],[[3,[2,57]]]],[[105,55,[37,[27]],[12,[25]],58],[[3,[[34,[25]],57]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[107,105],[[105,27,55,[66,[105]]],2],[[105,67],2],0,[[105,68,-1],[[71,[[70,[19,[69,[105]]]]]]],72],[[105,108,[34,[11]]],2],[[105,23],2],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[105,23],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[109,27,25],2],[[109,27,[34,[11]],11],2],[[109,[94,[93]],[34,[11]]],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[[109,6],7],[-1,-1,[]],[[109,[34,[11]],[52,[[34,[11]]]],53,11],2],0,[[109,55,27,25,25],[[3,[[56,[109]],57]]]],[[109,55,27,25,58],[[3,[[56,[109]],57]]]],[[109,55,25,25],[[3,[2,57]]]],[[109,55,[37,[27]],[12,[25]],58],[[3,[[34,[25]],57]]]],0,[-1,-2,[],[]],[[105,43,110,91],109],[[109,27,55,[66,[109]]],2],[[109,67],2],[[109,68,-1],[[71,[[70,[[69,[109]]]]]]],72],[[109,108,[34,[11]]],2],[[109,51],2],0,[[109,23],2],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[[109,23],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,73,[]],[-1,73,[]],[-1,73,[]],[30,[[37,[75]]]],[111,[[37,[75]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1]]],30,[[113,[65]]]],[[[114,[-1]]],30,[[113,[65]]]],[115,30],[116,30],[117,111],[118,111],[30,[[37,[73]]]],[111,[[37,[73]]]],[119,119],[120,120],[121,121],[[[112,[-1]]],[[112,[-1]]],122],[[[114,[-1]]],[[114,[-1]]],122],[115,115],[123,123],[116,116],[124,124],[125,125],[117,117],[118,118],[126,126],[111,111],[127,127],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[30,23],[111,23],[[[112,[-1]]],[[3,[-2,30]]],[[113,[65]]],[]],[[[114,[-1]]],[[3,[-2,30]]],[[113,[65]]],[]],[115,[[3,[-1,30]]],[]],[116,[[3,[-1,30]]],[]],[117,[[3,[-1,111]]],[]],[118,[[3,[-1,111]]],[]],[[119,6],7],[[120,6],7],[[121,6],7],[[[112,[-1]],6],7,41],[[[114,[-1]],6],7,41],[[115,6],7],[[123,6],7],[[116,6],7],[[30,6],7],[[30,6],7],[[124,6],7],[[125,6],7],[[117,6],7],[[118,6],7],[[126,6],7],[[111,6],7],[[111,6],7],[[127,6],7],[[127,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[119,30],[120,30],[121,30],[[[112,[-1]]],30,[[113,[65]]]],[[[114,[-1]]],30,[[113,[65]]]],[115,30],[123,30],[116,30],[124,111],[125,111],[117,111],[118,111],[126,111],0,0,[30,[[37,[73]]]],[111,[[37,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[128,[12,[[2,[[37,[27]],25]]]]],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[128,[[44,[27]]]],[[128,6],7],[-1,-1,[]],0,[[128,[3,[16,129]]],[[3,[5,30]]]],[[128,[133,[18,[132,[[132,[[132,[130,131]],131]],130]]]],[134,[17]]],[[3,[2,30]]]],0,[-1,-2,[],[]],0,0,[38,[[3,[128,30]]]],[128,39],[128,27],0,[128,[[3,[[2,[[134,[16]],[135,[17]]]],30]]]],[[128,25],[[3,[25,30]]]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,73,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,[37,[25]]],136],0,0,[136,[[3,[38,137]]]],[38,38],[136,136],[138,138],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],136],[[],38],[[],136],[[],138],[[136,[37,[65]]],136],0,0,[[38,6],7],[[137,6],7],[[137,6],7],[[138,6],7],[-1,-1,[]],[-1,-1,[]],[84,137],[-1,-1,[]],[65,137],[-1,-1,[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[136,-1],136,[[113,[26]]]],0,0,[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[136,[37,[138]]],136],0,0,[[136,10],136],0,0,[[136,-1],136,[[113,[53]]]],0,0,[[136,[37,[36]]],136],0,0,[[136,[44,[[2,[[37,[27]],25]]]]],136],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[136,[37,[36]]],136],0,0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[31,[-1]],[34,[[2,[[37,[27]],25]]]]],[[3,[2,40]]],[]],[-1,73,[]],[40,[[37,[75]]]],[[[31,[-1]]],[[3,[2,40]]],[42,41]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,40],[140,40],[141,40],[142,40],[143,40],[40,[[37,[73]]]],[144,144],[145,145],[146,146],[139,139],[140,140],[147,147],[148,148],[141,141],[149,149],[150,150],[142,142],[151,151],[143,143],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[31,[-1]]],38,[]],[[[31,[-1]]],[[3,[[44,[27]],40]]],[]],[40,23],[[[31,[-1]],27,-2],[[3,[2,40]]],[],35],[[[31,[-1]],[94,[93]],-2],[[3,[2,40]]],[],35],[139,[[3,[-1,40]]],[]],[140,[[3,[-1,40]]],[]],[141,[[3,[-1,40]]],[]],[142,[[3,[-1,40]]],[]],[143,[[3,[-1,40]]],[]],[[[31,[-1]],6],7,41],[[152,6],7],[[144,6],7],[[145,6],7],[[146,6],7],[[139,6],7],[[140,6],7],[[147,6],7],[[148,6],7],[[141,6],7],[[149,6],7],[[150,6],7],[[142,6],7],[[151,6],7],[[143,6],7],[[40,6],7],[[40,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[31,[-1]],-2,11],[[3,[-3,40]]],[],35,15],[[[31,[-1]],-2,36],[[3,[-3,40]]],[],35,15],[[[31,[-1]],65,-2],[[3,[2,40]]],[],35],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[[31,[-1]]],39,[]],0,[[[31,[-1]],[34,[27]]],[[3,[2,40]]],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[144,40],[145,40],[146,40],[139,40],[140,40],[147,40],[148,40],[141,40],[149,40],[150,40],[142,40],[151,40],[143,40],[[[31,[-1]]],5,[]],0,0,[[[31,[-1]]],25,[42,41]],0,[[[31,[-1]],-2,36],[[3,[27,40]]],[],[15,35]],[[[31,[-1]],27],[[3,[2,40]]],[]],[[[31,[-1]],-2],2,[],153],0,0,[[38,39],[[3,[[31,[-1]],40]]],[42,41]],[[[31,[-1]]],2,[]],[[[31,[-1]]],[[3,[39,40]]],[]],[[[31,[-1]]],27,[]],0,[[[31,[-1]]],[[3,[2,40]]],[]],[[[31,[-1]],27],[[3,[2,40]]],[]],[[[31,[-1]],-2,-3],[[3,[2,40]]],[],35,35],[[[31,[-1]],-2,-3,36],[[3,[2,40]]],[],35,35],[[[31,[-1]]],152,[42,41]],0,0,0,[152,[[3,[17,40]]]],0,[[[31,[-1]]],[[154,[2]]],[]],0,[[[31,[-1]],16],[[3,[2,40]]],[]],[[[31,[-1]]],[[3,[2,40]]],[42,41]],[40,[[37,[73]]]],[[[32,[[31,[-1]]]],-2],[[0,[100]]],[88,42,41],[155,89,88]],[[[31,[-1]]],-1,122],0,[[[31,[-1]],36,-2],[[3,[2,40]]],[],153],[[[31,[-1]],36,-2],[[157,[[156,[[0,[100]]]]]]],[],153],[[[31,[-1]],-2],[[3,[2,40]]],[],153],[[[31,[-1]],65],[[3,[2,40]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[31,[-1]],65],[[3,[2,40]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-1]],39,39,36],[[3,[2,40]]],[42,41,42,41]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,[[12,[11]]]],[27,158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[25,25],[27,27],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[25,25],159],[[27,27],159],[-1,[[3,[25]]],4],[-1,[[3,[27]]],4],[[],25],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[[25,25],5],[[25,25],5],[[27,27],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[25,6],[[3,[2,162]]]],[[25,6],[[3,[2,162]]]],[[27,6],[[3,[2,162]]]],[[27,6],[[3,[2,162]]]],[163,25],[164,25],[165,25],[166,25],[-1,-1,[]],[-1,-1,[]],[167,27],[167,27],[[[12,[11]]],[[3,[27,168]]]],[-1,25,169],[158,[[3,[27,158]]]],[167,27],[23,[[3,[25,170]]]],[23,[[3,[27]]]],[[25,-1],2,62],[[27,-1],2,62],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,171],[25,5],[25,171],[25,39],0,[[25,25],[[37,[159]]]],[[27,27],[[37,[159]]]],[25,[[37,[163]]]],[25,172],[[25,163],2],[[],27],[[25,39,-1],[[37,[25]]],173],[[25,-1],3,8],[[27,-1],3,8],[27,65],[27,[[34,[11,174]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[25,[[34,[11,174]]]],[65,[[3,[25,170]]]],[-1,[[3,[-2]]],[],[]],[23,[[3,[25,170]]]],[[[34,[11,174]]],[[3,[25,170]]]],[-1,[[3,[-2]]],[],[]],[[[34,[11,174]]],[[3,[27]]]],[158,[[3,[27]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,163],25],[39,25],[[25,27],[[3,[25,25]]]]],"c":[],"p":[[3,"Message",3],[15,"tuple"],[4,"Result",1555],[8,"Deserializer",1556],[15,"bool"],[3,"Formatter",1557],[6,"Result",1557],[8,"Serializer",1558],[3,"TypeId",1559],[4,"NetworkNodeType",24],[15,"u8"],[15,"slice"],[4,"ErrorKind",1560],[3,"Box",1561],[8,"Deserialize",1556],[4,"ClientRequest",24],[4,"NetworkEvent",24],[4,"NetworkEventInternal",24],[4,"GossipEvent",665],[4,"DMEvent",521],[4,"Event",1562],[4,"DHTEvent",201],[15,"str"],[15,"u16"],[3,"Multiaddr",1467],[3,"Keypair",1563],[3,"PeerId",1467],[3,"StreamMuxerBox",1564],[3,"Boxed",1565],[4,"NetworkError",741],[3,"NetworkNodeHandle",1158],[3,"Arc",1566],[8,"RngCore",1567],[3,"Vec",1568],[8,"Serialize",1558],[3,"Duration",1569],[4,"Option",1570],[3,"NetworkNodeConfig",1063],[15,"usize"],[4,"NetworkNodeHandleError",1158],[8,"Debug",1557],[8,"Default",1571],[3,"DHTBehaviour",201],[3,"HashSet",1572],[3,"HashMap",1573],[3,"Bootstrap",201],[4,"State",201],[4,"DHTProgress",201],[4,"Event",1574],[3,"KadGetQuery",201],[3,"KadPutQuery",201],[3,"Sender",1575],[3,"NonZeroUsize",1576],[3,"ExponentialBackoff",639],[3,"ConnectionId",1577],[6,"THandler",1578],[3,"ConnectionDenied",1578],[4,"Endpoint",1579],[6,"GetRecordResult",1574],[3,"QueryId",1580],[6,"PutRecordResult",1574],[8,"Hasher",1581],[3,"MemoryStore",1582],[3,"Behaviour",1574],[3,"String",1583],[6,"THandlerOutEvent",1578],[4,"FromSwarm",1584],[3,"Context",1585],[6,"THandlerInEvent",1578],[4,"ToSwarm",1584],[4,"Poll",1586],[8,"PollParameters",1584],[8,"Error",1587],[4,"CacheError",359],[3,"Backtrace",1588],[3,"ConfigBuilder",359],[3,"Config",359],[4,"ConfigBuilderError",359],[3,"DiskSnafu",359],[3,"SerializationSnafu",359],[3,"DeserializationSnafu",359],[3,"GeneralCacheSnafu",359],[3,"Cache",359],[3,"UninitializedFieldError",1589],[3,"Ref",1590],[3,"IndentedSection",1591],[8,"Display",1557],[8,"Send",1592],[8,"Sync",1592],[15,"u32"],[3,"DMBehaviour",521],[3,"DMRequest",521],[3,"DirectMessageResponse",572],[3,"ResponseChannel",1593],[3,"DirectMessageRequest",572],[4,"Event",1593],[3,"DirectMessageCodec",572],[3,"Behaviour",1593],[3,"DirectMessageProtocol",572],[8,"Future",1594],[3,"Pin",1595],[8,"AsyncRead",1596],[8,"Unpin",1592],[8,"AsyncWrite",1596],[3,"GossipBehaviour",665],[4,"Event",1597],[3,"Behaviour",1597],[6,"IdentTopic",1598],[3,"NetworkDef",709],[3,"Behaviour",1562],[4,"DHTError",741],[3,"GossipsubConfigSnafu",741],[8,"Into",1599],[3,"GossipsubBuildSnafu",741],[3,"StreamClosedSnafu",741],[3,"NoKnownPeersSnafu",741],[3,"DisagreementSnafu",741],[3,"NotFoundSnafu",741],[3,"DialSnafu",741],[3,"TransportSnafu",741],[3,"TransportLaunchSnafu",741],[8,"Clone",1600],[3,"PublishSnafu",741],[3,"GetRecordSnafu",741],[3,"PutRecordSnafu",741],[3,"CancelledRequestSnafu",741],[4,"GetRecordWrapperError",741],[3,"NetworkNode",1026],[3,"RecvError",1601],[4,"Void",1602],[3,"Error",1603],[4,"Either",1604],[4,"SwarmEvent",1578],[3,"UnboundedSender",1605],[3,"UnboundedReceiver",1605],[3,"NetworkNodeConfigBuilder",1063],[4,"NetworkNodeConfigBuilderError",1063],[3,"MeshParams",1063],[3,"SendSnafu",1158],[3,"RecvSnafu",1158],[3,"ConnectTimeoutSnafu",1158],[3,"KilledSnafu",1158],[3,"NoSuchTopicSnafu",1158],[3,"NetworkSnafu",1158],[3,"SerializationSnafu",1158],[3,"DeserializationSnafu",1158],[3,"NodeConfigSnafu",1158],[3,"TimeoutSnafu",1158],[3,"DHTSnafu",1158],[3,"CantKillTwiceSnafu",1158],[3,"ReceiverEndedSnafu",1158],[3,"NetworkNodeReceiver",1158],[8,"FnMut",1606],[3,"Receiver",1607],[8,"Fn",1606],[3,"FuturesOrdered",1608],[3,"Timeout",1609],[3,"Multihash",1610],[4,"Ordering",1611],[15,"char"],[8,"FromIterator",1612],[3,"Error",1557],[4,"Protocol",1613],[4,"IpAddr",1614],[3,"Ipv4Addr",1614],[3,"Ipv6Addr",1614],[3,"PublicKey",1563],[4,"ParseError",1615],[8,"IntoIterator",1612],[4,"Error",1616],[3,"Iter",1617],[3,"ProtoStackIter",1617],[8,"FnOnce",1606],[3,"Global",1618],[13,"DirectRequest",179],[13,"PutDHT",179],[13,"GetDHT",179],[13,"NetworkError",1453],[13,"SerializationError",1453],[13,"DeserializationError",1453],[13,"NodeConfigError",1453],[13,"TimeoutError",1453],[13,"DHTError",1453],[13,"CantKillTwice",1453],[13,"ReceiverEnded",1453],[3,"RandomWalk",201],[13,"Disk",517],[13,"Serialization",517],[13,"Deserialization",517],[13,"GeneralCache",517],[13,"CancelledRequest",1010],[13,"GetRecord",1010],[13,"PutRecord",1010],[13,"GetRecordError",1013],[13,"GossipsubConfig",1014],[13,"GossipsubBuild",1014],[13,"DialError",1014],[13,"Transport",1014],[13,"TransportLaunch",1014],[13,"PublishError",1014]]},\
"multi_validator_combined":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLALLLLLFMMMLLLLALLMLDDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMLLLLLMML","n":["MultiValidatorArgs","__clone_box","__clone_box","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","infra","init","into","into_any","into_any_arc","into_any_rc","main","num_nodes","port","public_ip","to_owned","try_from","try_into","type_id","types","update_from_arg_matches","update_from_arg_matches_mut","url","vzip","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","new_channel_maps","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"multi_validator_combined"],[40,"multi_validator_combined::infra"],[212,"multi_validator_combined::types"],[268,"dyn_clone::sealed"],[269,"dyn_clone::sealed"],[270,"clap_builder::builder::command"],[271,"core::fmt"],[272,"core::fmt"],[273,"clap_builder"],[274,"core::result"],[275,"clap_builder::util::id"],[276,"core::option"],[277,"alloc::alloc"],[278,"alloc::boxed"],[279,"alloc::sync"],[280,"alloc::rc"],[281,"core::any"],[282,"hotshot_types::traits::node_implementation"],[283,"hotshot::traits::networking::web_server_network"],[284,"hotshot::traits::networking::libp2p_network"],[285,"hotshot::traits::networking::combined_network"],[286,"core::future::future"],[287,"core::pin"],[288,"core::marker"],[289,"libp2p_identity::keypair"],[290,"hotshot_types::message"],[291,"hotshot::traits::networking::libp2p_network"],[292,"hotshot_orchestrator::client"],[293,"hotshot::types::handle"],[294,"hotshot_types::block_impl"],[295,"alloc::vec"],[296,"hotshot::traits::networking::web_server_network"],[297,"core::hash"],[298,"core::marker"],[299,"hotshot_types::traits::node_implementation"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","Number of validators to run","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","","","","","","","","The address the orchestrator runs on","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,0,6,6,6,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,21,21,22,22,24,26,27,21,22,24,26,27,21,22,21,22,21,22,24,26,27,21,22,24,26,27,21,22,0,21,22,21,22,21,22,21,22,24,26,27,21,22,24,26,27,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,21,22,24,26,27,21,22,21,22,21,22,55,24,26,27,55,24,26,27,55,24,26,27,55,24,26,27,55,24,26,27,21,22,24,26,27,21,22,55,24,26,27,55,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,0,0,0,0,24,26,27,55,0,21,22,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,21,22,21,22,21,24,26,27,24,26,27,24,26,27,21,22,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,56,56,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,57,58,59,60,57,58,59,60,45,57,58,59,60,56,45,45,45,45,45,56,56,45],"f":[0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[-1,-2],2,[],[]],[[],5],[[],5],[7,-1,[]],[7,-1,[]],[7,2],[[6,8],9],[-1,-1,[]],[10,[[12,[6,11]]]],[10,[[12,[6,11]]]],[[],[[14,[13]]]],0,[[],7],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[],2],0,0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],0,[[6,10],[[12,[2,11]]]],[[6,10],[[12,[2,11]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,7,7],7],[21,21],[22,22],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[7,2],[7,2],[[21,8],9],[[22,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[12,[21,11]]]],[10,[[12,[22,11]]]],[10,[[12,[21,11]]]],[10,[[12,[22,11]]]],[-1,23,[]],[[[24,[-1]]],23,25],[[[26,[-1]]],23,25],[[[27,[-1]]],23,25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[-1,[[32,[[16,[31]]]]],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[35,[34]],20],36],[23,[[38,[[37,[-1]]]]],25],[39,23],[40,2],0,0,0,[[-1,[41,[-2,-3]],[43,[42]],20],[[32,[[16,[31]]]]],33,[],[]],[21,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[21,10],[[12,[2,11]]]],[[22,10],[[12,[2,11]]]],[[21,10],[[12,[2,11]]]],[[22,10],[[12,[2,11]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[44,[-1]]],25],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[-1,-2],2,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[12,[45]]],46],[7,2],[[45,45],47],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[45,8],9],[-1,-1,[]],[[-1,-2],20,[48,49],50],[[45,-1],2,51],[[],7],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],0,0,0,0,0,0,0,0,[[],[[2,[[53,[52]],[14,[[53,[52]]]]]]]],0,0,0,0,0,[[45,-1],12,54],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[3,"Private",268],[15,"tuple"],[3,"Private",268],[8,"Any",269],[3,"Command",270],[3,"MultiValidatorArgs",0],[15,"usize"],[3,"Formatter",271],[6,"Result",271],[3,"ArgMatches",272],[6,"Error",273],[4,"Result",274],[3,"Id",275],[4,"Option",276],[3,"Global",277],[3,"Box",278],[3,"Arc",279],[3,"Rc",280],[3,"TypeId",269],[15,"u64"],[3,"OrchestratorArgs",40],[3,"ConfigArgs",40],[3,"NetworkConfig",281],[3,"WebServerDARun",40],[8,"NodeType",282],[3,"Libp2pDARun",40],[3,"CombinedDARun",40],[3,"WebCommChannel",283],[3,"Libp2pCommChannel",284],[3,"CombinedCommChannel",285],[8,"Future",286],[3,"Pin",287],[8,"Sync",288],[15,"u8"],[15,"array"],[3,"Keypair",289],[3,"Message",290],[3,"Libp2pNetwork",284],[3,"String",291],[3,"ValidatorArgs",292],[3,"SystemContextHandle",293],[3,"VIDTransaction",294],[3,"Vec",295],[3,"WebServerNetwork",283],[3,"NodeImpl",212],[8,"Deserializer",296],[15,"bool"],[8,"Hash",297],[8,"Sized",288],[8,"BuildHasher",297],[8,"Hasher",297],[3,"DemoTypes",298],[3,"ChannelMaps",282],[8,"Serializer",299],[8,"RunDA",40],[6,"ThisRun",212],[6,"DANetwork",212],[6,"VIDNetwork",212],[6,"QuorumNetwork",212],[6,"ViewSyncNetwork",212]]},\
"multi_validator_libp2p":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLALLLLLFMMMLLLLALLMLDDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["MultiValidatorArgs","__clone_box","__clone_box","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","infra","init","into","into_any","into_any_arc","into_any_rc","main","num_nodes","port","public_ip","to_owned","try_from","try_into","type_id","types","update_from_arg_matches","update_from_arg_matches_mut","url","vzip","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"multi_validator_libp2p"],[40,"multi_validator_libp2p::infra"],[212,"multi_validator_libp2p::types"],[256,"dyn_clone::sealed"],[257,"dyn_clone::sealed"],[258,"clap_builder::builder::command"],[259,"core::fmt"],[260,"core::fmt"],[261,"clap_builder"],[262,"core::result"],[263,"clap_builder::util::id"],[264,"core::option"],[265,"alloc::alloc"],[266,"alloc::boxed"],[267,"alloc::sync"],[268,"alloc::rc"],[269,"core::any"],[270,"hotshot_types::traits::node_implementation"],[271,"hotshot::traits::networking::web_server_network"],[272,"hotshot::traits::networking::libp2p_network"],[273,"hotshot::traits::networking::combined_network"],[274,"core::future::future"],[275,"core::pin"],[276,"core::marker"],[277,"libp2p_identity::keypair"],[278,"hotshot_types::message"],[279,"hotshot::traits::networking::libp2p_network"],[280,"hotshot_orchestrator::client"],[281,"hotshot::types::handle"],[282,"hotshot_types::block_impl"],[283,"alloc::vec"],[284,"hotshot::traits::networking::web_server_network"],[285,"core::hash"],[286,"core::marker"],[287,"hotshot_types::traits::node_implementation"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","Number of validators to run","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","","","","","","","","The address the orchestrator runs on","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,0,6,6,6,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,21,21,22,22,24,26,27,21,22,24,26,27,21,22,21,22,21,22,24,26,27,21,22,24,26,27,21,22,0,21,22,21,22,21,22,21,22,24,26,27,21,22,24,26,27,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,21,22,24,26,27,21,22,21,22,21,22,55,24,26,27,55,24,26,27,55,24,26,27,55,24,26,27,55,24,26,27,21,22,24,26,27,21,22,55,24,26,27,55,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,0,0,0,0,24,26,27,55,0,21,22,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,21,22,21,22,21,24,26,27,24,26,27,24,26,27,21,22,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,56,56,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,56,45,45,45,45,45,56,56,45],"f":[0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[-1,-2],2,[],[]],[[],5],[[],5],[7,-1,[]],[7,-1,[]],[7,2],[[6,8],9],[-1,-1,[]],[10,[[12,[6,11]]]],[10,[[12,[6,11]]]],[[],[[14,[13]]]],0,[[],7],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[],2],0,0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],0,[[6,10],[[12,[2,11]]]],[[6,10],[[12,[2,11]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,7,7],7],[21,21],[22,22],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[7,2],[7,2],[[21,8],9],[[22,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[12,[21,11]]]],[10,[[12,[22,11]]]],[10,[[12,[21,11]]]],[10,[[12,[22,11]]]],[-1,23,[]],[[[24,[-1]]],23,25],[[[26,[-1]]],23,25],[[[27,[-1]]],23,25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[-1,[[32,[[16,[31]]]]],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[35,[34]],20],36],[23,[[38,[[37,[-1]]]]],25],[39,23],[40,2],0,0,0,[[-1,[41,[-2,-3]],[43,[42]],20],[[32,[[16,[31]]]]],33,[],[]],[21,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[21,10],[[12,[2,11]]]],[[22,10],[[12,[2,11]]]],[[21,10],[[12,[2,11]]]],[[22,10],[[12,[2,11]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[44,[-1]]],25],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[-1,-2],2,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[12,[45]]],46],[7,2],[[45,45],47],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[45,8],9],[-1,-1,[]],[[-1,-2],20,[48,49],50],[[45,-1],2,51],[[],7],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[],[[2,[[53,[52]],[14,[[53,[52]]]]]]]],0,[[45,-1],12,54],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[3,"Private",256],[15,"tuple"],[3,"Private",256],[8,"Any",257],[3,"Command",258],[3,"MultiValidatorArgs",0],[15,"usize"],[3,"Formatter",259],[6,"Result",259],[3,"ArgMatches",260],[6,"Error",261],[4,"Result",262],[3,"Id",263],[4,"Option",264],[3,"Global",265],[3,"Box",266],[3,"Arc",267],[3,"Rc",268],[3,"TypeId",257],[15,"u64"],[3,"OrchestratorArgs",40],[3,"ConfigArgs",40],[3,"NetworkConfig",269],[3,"WebServerDARun",40],[8,"NodeType",270],[3,"Libp2pDARun",40],[3,"CombinedDARun",40],[3,"WebCommChannel",271],[3,"Libp2pCommChannel",272],[3,"CombinedCommChannel",273],[8,"Future",274],[3,"Pin",275],[8,"Sync",276],[15,"u8"],[15,"array"],[3,"Keypair",277],[3,"Message",278],[3,"Libp2pNetwork",272],[3,"String",279],[3,"ValidatorArgs",280],[3,"SystemContextHandle",281],[3,"VIDTransaction",282],[3,"Vec",283],[3,"WebServerNetwork",271],[3,"NodeImpl",212],[8,"Deserializer",284],[15,"bool"],[8,"Hash",285],[8,"Sized",276],[8,"BuildHasher",285],[8,"Hasher",285],[3,"DemoTypes",286],[3,"ChannelMaps",270],[8,"Serializer",287],[8,"RunDA",40],[6,"ThisRun",212]]},\
"multi_validator_webserver":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLALLLLLFMMMLLLLALLMLDDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["MultiValidatorArgs","__clone_box","__clone_box","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","infra","init","into","into_any","into_any_arc","into_any_rc","main","num_nodes","port","public_ip","to_owned","try_from","try_into","type_id","types","update_from_arg_matches","update_from_arg_matches_mut","url","vzip","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"multi_validator_webserver"],[40,"multi_validator_webserver::infra"],[212,"multi_validator_webserver::types"],[256,"dyn_clone::sealed"],[257,"dyn_clone::sealed"],[258,"clap_builder::builder::command"],[259,"core::fmt"],[260,"core::fmt"],[261,"clap_builder"],[262,"core::result"],[263,"clap_builder::util::id"],[264,"core::option"],[265,"alloc::alloc"],[266,"alloc::boxed"],[267,"alloc::sync"],[268,"alloc::rc"],[269,"core::any"],[270,"hotshot_types::traits::node_implementation"],[271,"hotshot::traits::networking::web_server_network"],[272,"hotshot::traits::networking::libp2p_network"],[273,"hotshot::traits::networking::combined_network"],[274,"core::future::future"],[275,"core::pin"],[276,"core::marker"],[277,"libp2p_identity::keypair"],[278,"hotshot_types::message"],[279,"hotshot::traits::networking::libp2p_network"],[280,"hotshot_orchestrator::client"],[281,"hotshot::types::handle"],[282,"hotshot_types::block_impl"],[283,"alloc::vec"],[284,"hotshot::traits::networking::web_server_network"],[285,"core::hash"],[286,"core::marker"],[287,"hotshot_types::traits::node_implementation"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","Number of validators to run","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","","","","","","","","The address the orchestrator runs on","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,0,6,6,6,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,21,21,22,22,24,26,27,21,22,24,26,27,21,22,21,22,21,22,24,26,27,21,22,24,26,27,21,22,0,21,22,21,22,21,22,21,22,24,26,27,21,22,24,26,27,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,21,22,24,26,27,21,22,21,22,21,22,55,24,26,27,55,24,26,27,55,24,26,27,55,24,26,27,55,24,26,27,21,22,24,26,27,21,22,55,24,26,27,55,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,0,0,0,0,24,26,27,55,0,21,22,24,26,27,21,22,24,26,27,21,22,24,26,27,21,22,21,22,21,22,21,24,26,27,24,26,27,24,26,27,21,22,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,56,56,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,56,45,45,45,45,45,56,56,45],"f":[0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[6,6],[[-1,-2],2,[],[]],[[],5],[[],5],[7,-1,[]],[7,-1,[]],[7,2],[[6,8],9],[-1,-1,[]],[10,[[12,[6,11]]]],[10,[[12,[6,11]]]],[[],[[14,[13]]]],0,[[],7],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[],2],0,0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],0,[[6,10],[[12,[2,11]]]],[[6,10],[[12,[2,11]]]],0,[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[20,7,7],7],[21,21],[22,22],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,2],[7,2],[7,2],[7,2],[7,2],[[21,8],9],[[22,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[12,[21,11]]]],[10,[[12,[22,11]]]],[10,[[12,[21,11]]]],[10,[[12,[22,11]]]],[-1,23,[]],[[[24,[-1]]],23,25],[[[26,[-1]]],23,25],[[[27,[-1]]],23,25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[-1,-2,[],[]],[[[24,[-1]]],[[28,[-1]]],25],[[[26,[-1]]],[[29,[-1]]],25],[[[27,[-1]]],[[30,[-1]]],25],[[],[[14,[13]]]],[[],[[14,[13]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[23,[[32,[[16,[31]]]]]],[-1,[[32,[[16,[31]]]]],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[[35,[34]],20],36],[23,[[38,[[37,[-1]]]]],25],[39,23],[40,2],0,0,0,[[-1,[41,[-2,-3]],[43,[42]],20],[[32,[[16,[31]]]]],33,[],[]],[21,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[[21,10],[[12,[2,11]]]],[[22,10],[[12,[2,11]]]],[[21,10],[[12,[2,11]]]],[[22,10],[[12,[2,11]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[44,[-1]]],25],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[[-1,-2],2,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[12,[45]]],46],[7,2],[[45,45],47],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[-1,-2],47,[],[]],[[45,8],9],[-1,-1,[]],[[-1,-2],20,[48,49],50],[[45,-1],2,51],[[],7],[-1,-2,[],[]],[[[16,[-1,15]]],[[16,[4,15]]],[]],[[[17,[-1,15]]],[[17,[4,15]]],[]],[[[18,[-1,15]]],[[18,[4,15]]],[]],[[],[[2,[[53,[52]],[14,[[53,[52]]]]]]]],0,[[45,-1],12,54],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[3,"Private",256],[15,"tuple"],[3,"Private",256],[8,"Any",257],[3,"Command",258],[3,"MultiValidatorArgs",0],[15,"usize"],[3,"Formatter",259],[6,"Result",259],[3,"ArgMatches",260],[6,"Error",261],[4,"Result",262],[3,"Id",263],[4,"Option",264],[3,"Global",265],[3,"Box",266],[3,"Arc",267],[3,"Rc",268],[3,"TypeId",257],[15,"u64"],[3,"OrchestratorArgs",40],[3,"ConfigArgs",40],[3,"NetworkConfig",269],[3,"WebServerDARun",40],[8,"NodeType",270],[3,"Libp2pDARun",40],[3,"CombinedDARun",40],[3,"WebCommChannel",271],[3,"Libp2pCommChannel",272],[3,"CombinedCommChannel",273],[8,"Future",274],[3,"Pin",275],[8,"Sync",276],[15,"u8"],[15,"array"],[3,"Keypair",277],[3,"Message",278],[3,"Libp2pNetwork",272],[3,"String",279],[3,"ValidatorArgs",280],[3,"SystemContextHandle",281],[3,"VIDTransaction",282],[3,"Vec",283],[3,"WebServerNetwork",271],[3,"NodeImpl",212],[8,"Deserializer",284],[15,"bool"],[8,"Hash",285],[8,"Sized",276],[8,"BuildHasher",285],[8,"Hasher",285],[3,"DemoTypes",286],[3,"ChannelMaps",270],[8,"Serializer",287],[8,"RunDA",40],[6,"ThisRun",212]]},\
"multi_webserver":{"doc":"","t":"DLLLLLLLLMMLLLLLLLLLLLLLFLLLLLL","n":["MultiWebServerArgs","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","consensus_url","da_url","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"multi_webserver"],[31,"core::any"],[32,"clap_builder::builder::command"],[33,"core::fmt"],[34,"core::fmt"],[35,"clap_builder"],[36,"core::result"],[37,"clap_builder::util::id"],[38,"core::option"],[39,"alloc::alloc"],[40,"alloc::boxed"],[41,"alloc::sync"],[42,"alloc::rc"],[43,"core::any"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5],"f":[0,[-1,1,[]],[-1,1,[]],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,0,[3,-1,[]],[3,-1,[]],[3,4],[[5,6],7],[-1,-1,[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[[],[[12,[11]]]],[[],3],[-1,-2,[],[]],[[[14,[-1,13]]],[[14,[1,13]]],[]],[[[15,[-1,13]]],[[15,[1,13]]],[]],[[[16,[-1,13]]],[[16,[1,13]]],[]],[[],4],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,17,[]],[[5,8],[[10,[4,9]]]],[[5,8],[[10,[4,9]]]],[-1,-2,[],[]]],"c":[],"p":[[8,"Any",31],[3,"Command",32],[15,"usize"],[15,"tuple"],[3,"MultiWebServerArgs",0],[3,"Formatter",33],[6,"Result",33],[3,"ArgMatches",34],[6,"Error",35],[4,"Result",36],[3,"Id",37],[4,"Option",38],[3,"Global",39],[3,"Box",40],[3,"Arc",41],[3,"Rc",42],[3,"TypeId",31]]},\
"orchestrator_combined":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","new_channel_maps","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"orchestrator_combined"],[3,"orchestrator_combined::infra"],[175,"orchestrator_combined::types"],[231,"dyn_clone::sealed"],[232,"dyn_clone::sealed"],[233,"clap_builder::builder::command"],[234,"core::fmt"],[235,"core::fmt"],[236,"clap_builder"],[237,"core::result"],[238,"hotshot_orchestrator::config"],[239,"hotshot_types::traits::node_implementation"],[240,"hotshot::traits::networking::web_server_network"],[241,"hotshot::traits::networking::libp2p_network"],[242,"hotshot::traits::networking::combined_network"],[243,"clap_builder::util::id"],[244,"core::option"],[245,"core::future::future"],[246,"alloc::boxed"],[247,"core::pin"],[248,"core::marker"],[249,"alloc::alloc"],[250,"alloc::sync"],[251,"alloc::rc"],[252,"libp2p_identity::keypair"],[253,"hotshot_types::message"],[254,"hotshot::traits::networking::libp2p_network"],[255,"hotshot_orchestrator::client"],[256,"hotshot::types::handle"],[257,"hotshot_types::block_impl"],[258,"alloc::vec"],[259,"core::any"],[260,"core::hash"],[261,"core::marker"],[262,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,56,57,58,59,56,57,58,59,44,56,57,58,59,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],0,0,0,0,0,0,0,0,[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,0,0,0,0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",231],[3,"Private",231],[8,"Any",232],[3,"Command",233],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",234],[6,"Result",234],[3,"ArgMatches",235],[6,"Error",236],[4,"Result",237],[3,"NetworkConfig",238],[3,"WebServerDARun",3],[8,"NodeType",239],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",240],[3,"Libp2pCommChannel",241],[3,"CombinedCommChannel",242],[3,"Id",243],[4,"Option",244],[8,"Future",245],[3,"Box",246],[3,"Pin",247],[8,"Sync",248],[3,"Global",249],[3,"Arc",250],[3,"Rc",251],[15,"u8"],[15,"array"],[3,"Keypair",252],[3,"Message",253],[3,"Libp2pNetwork",241],[3,"String",254],[3,"ValidatorArgs",255],[3,"SystemContextHandle",256],[3,"VIDTransaction",257],[3,"Vec",258],[3,"TypeId",232],[3,"WebServerNetwork",240],[3,"NodeImpl",175],[8,"Deserializer",259],[15,"bool"],[8,"Hash",260],[8,"Sized",248],[8,"BuildHasher",260],[8,"Hasher",260],[3,"DemoTypes",261],[3,"ChannelMaps",239],[8,"Serializer",262],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]]},\
"orchestrator_libp2p":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"orchestrator_libp2p"],[3,"orchestrator_libp2p::infra"],[175,"orchestrator_libp2p::types"],[219,"dyn_clone::sealed"],[220,"dyn_clone::sealed"],[221,"clap_builder::builder::command"],[222,"core::fmt"],[223,"core::fmt"],[224,"clap_builder"],[225,"core::result"],[226,"hotshot_orchestrator::config"],[227,"hotshot_types::traits::node_implementation"],[228,"hotshot::traits::networking::web_server_network"],[229,"hotshot::traits::networking::libp2p_network"],[230,"hotshot::traits::networking::combined_network"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"core::future::future"],[234,"alloc::boxed"],[235,"core::pin"],[236,"core::marker"],[237,"alloc::alloc"],[238,"alloc::sync"],[239,"alloc::rc"],[240,"libp2p_identity::keypair"],[241,"hotshot_types::message"],[242,"hotshot::traits::networking::libp2p_network"],[243,"hotshot_orchestrator::client"],[244,"hotshot::types::handle"],[245,"hotshot_types::block_impl"],[246,"alloc::vec"],[247,"core::any"],[248,"core::hash"],[249,"core::marker"],[250,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",219],[3,"Private",219],[8,"Any",220],[3,"Command",221],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",222],[6,"Result",222],[3,"ArgMatches",223],[6,"Error",224],[4,"Result",225],[3,"NetworkConfig",226],[3,"WebServerDARun",3],[8,"NodeType",227],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",228],[3,"Libp2pCommChannel",229],[3,"CombinedCommChannel",230],[3,"Id",231],[4,"Option",232],[8,"Future",233],[3,"Box",234],[3,"Pin",235],[8,"Sync",236],[3,"Global",237],[3,"Arc",238],[3,"Rc",239],[15,"u8"],[15,"array"],[3,"Keypair",240],[3,"Message",241],[3,"Libp2pNetwork",229],[3,"String",242],[3,"ValidatorArgs",243],[3,"SystemContextHandle",244],[3,"VIDTransaction",245],[3,"Vec",246],[3,"TypeId",220],[3,"WebServerNetwork",228],[3,"NodeImpl",175],[8,"Deserializer",247],[15,"bool"],[8,"Hash",248],[8,"Sized",236],[8,"BuildHasher",248],[8,"Hasher",248],[3,"DemoTypes",249],[3,"ChannelMaps",227],[8,"Serializer",250],[8,"RunDA",3],[6,"ThisRun",175]]},\
"orchestrator_webserver":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"orchestrator_webserver"],[3,"orchestrator_webserver::infra"],[175,"orchestrator_webserver::types"],[219,"dyn_clone::sealed"],[220,"dyn_clone::sealed"],[221,"clap_builder::builder::command"],[222,"core::fmt"],[223,"core::fmt"],[224,"clap_builder"],[225,"core::result"],[226,"hotshot_orchestrator::config"],[227,"hotshot_types::traits::node_implementation"],[228,"hotshot::traits::networking::web_server_network"],[229,"hotshot::traits::networking::libp2p_network"],[230,"hotshot::traits::networking::combined_network"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"core::future::future"],[234,"alloc::boxed"],[235,"core::pin"],[236,"core::marker"],[237,"alloc::alloc"],[238,"alloc::sync"],[239,"alloc::rc"],[240,"libp2p_identity::keypair"],[241,"hotshot_types::message"],[242,"hotshot::traits::networking::libp2p_network"],[243,"hotshot_orchestrator::client"],[244,"hotshot::types::handle"],[245,"hotshot_types::block_impl"],[246,"alloc::vec"],[247,"core::any"],[248,"core::hash"],[249,"core::marker"],[250,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",219],[3,"Private",219],[8,"Any",220],[3,"Command",221],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",222],[6,"Result",222],[3,"ArgMatches",223],[6,"Error",224],[4,"Result",225],[3,"NetworkConfig",226],[3,"WebServerDARun",3],[8,"NodeType",227],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",228],[3,"Libp2pCommChannel",229],[3,"CombinedCommChannel",230],[3,"Id",231],[4,"Option",232],[8,"Future",233],[3,"Box",234],[3,"Pin",235],[8,"Sync",236],[3,"Global",237],[3,"Arc",238],[3,"Rc",239],[15,"u8"],[15,"array"],[3,"Keypair",240],[3,"Message",241],[3,"Libp2pNetwork",229],[3,"String",242],[3,"ValidatorArgs",243],[3,"SystemContextHandle",244],[3,"VIDTransaction",245],[3,"Vec",246],[3,"TypeId",220],[3,"WebServerNetwork",228],[3,"NodeImpl",175],[8,"Deserializer",247],[15,"bool"],[8,"Hash",248],[8,"Sized",236],[8,"BuildHasher",248],[8,"Hasher",248],[3,"DemoTypes",249],[3,"ChannelMaps",227],[8,"Serializer",250],[8,"RunDA",3],[6,"ThisRun",175]]},\
"validator_combined":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","new_channel_maps","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"validator_combined"],[3,"validator_combined::infra"],[175,"validator_combined::types"],[231,"dyn_clone::sealed"],[232,"dyn_clone::sealed"],[233,"clap_builder::builder::command"],[234,"core::fmt"],[235,"core::fmt"],[236,"clap_builder"],[237,"core::result"],[238,"hotshot_orchestrator::config"],[239,"hotshot_types::traits::node_implementation"],[240,"hotshot::traits::networking::web_server_network"],[241,"hotshot::traits::networking::libp2p_network"],[242,"hotshot::traits::networking::combined_network"],[243,"clap_builder::util::id"],[244,"core::option"],[245,"core::future::future"],[246,"alloc::boxed"],[247,"core::pin"],[248,"core::marker"],[249,"alloc::alloc"],[250,"alloc::sync"],[251,"alloc::rc"],[252,"libp2p_identity::keypair"],[253,"hotshot_types::message"],[254,"hotshot::traits::networking::libp2p_network"],[255,"hotshot_orchestrator::client"],[256,"hotshot::types::handle"],[257,"hotshot_types::block_impl"],[258,"alloc::vec"],[259,"core::any"],[260,"core::hash"],[261,"core::marker"],[262,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,56,57,58,59,56,57,58,59,44,56,57,58,59,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],0,0,0,0,0,0,0,0,[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,0,0,0,0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",231],[3,"Private",231],[8,"Any",232],[3,"Command",233],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",234],[6,"Result",234],[3,"ArgMatches",235],[6,"Error",236],[4,"Result",237],[3,"NetworkConfig",238],[3,"WebServerDARun",3],[8,"NodeType",239],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",240],[3,"Libp2pCommChannel",241],[3,"CombinedCommChannel",242],[3,"Id",243],[4,"Option",244],[8,"Future",245],[3,"Box",246],[3,"Pin",247],[8,"Sync",248],[3,"Global",249],[3,"Arc",250],[3,"Rc",251],[15,"u8"],[15,"array"],[3,"Keypair",252],[3,"Message",253],[3,"Libp2pNetwork",241],[3,"String",254],[3,"ValidatorArgs",255],[3,"SystemContextHandle",256],[3,"VIDTransaction",257],[3,"Vec",258],[3,"TypeId",232],[3,"WebServerNetwork",240],[3,"NodeImpl",175],[8,"Deserializer",259],[15,"bool"],[8,"Hash",260],[8,"Sized",248],[8,"BuildHasher",260],[8,"Hasher",260],[3,"DemoTypes",261],[3,"ChannelMaps",239],[8,"Serializer",262],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]]},\
"validator_libp2p":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"validator_libp2p"],[3,"validator_libp2p::infra"],[175,"validator_libp2p::types"],[219,"dyn_clone::sealed"],[220,"dyn_clone::sealed"],[221,"clap_builder::builder::command"],[222,"core::fmt"],[223,"core::fmt"],[224,"clap_builder"],[225,"core::result"],[226,"hotshot_orchestrator::config"],[227,"hotshot_types::traits::node_implementation"],[228,"hotshot::traits::networking::web_server_network"],[229,"hotshot::traits::networking::libp2p_network"],[230,"hotshot::traits::networking::combined_network"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"core::future::future"],[234,"alloc::boxed"],[235,"core::pin"],[236,"core::marker"],[237,"alloc::alloc"],[238,"alloc::sync"],[239,"alloc::rc"],[240,"libp2p_identity::keypair"],[241,"hotshot_types::message"],[242,"hotshot::traits::networking::libp2p_network"],[243,"hotshot_orchestrator::client"],[244,"hotshot::types::handle"],[245,"hotshot_types::block_impl"],[246,"alloc::vec"],[247,"core::any"],[248,"core::hash"],[249,"core::marker"],[250,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",219],[3,"Private",219],[8,"Any",220],[3,"Command",221],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",222],[6,"Result",222],[3,"ArgMatches",223],[6,"Error",224],[4,"Result",225],[3,"NetworkConfig",226],[3,"WebServerDARun",3],[8,"NodeType",227],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",228],[3,"Libp2pCommChannel",229],[3,"CombinedCommChannel",230],[3,"Id",231],[4,"Option",232],[8,"Future",233],[3,"Box",234],[3,"Pin",235],[8,"Sync",236],[3,"Global",237],[3,"Arc",238],[3,"Rc",239],[15,"u8"],[15,"array"],[3,"Keypair",240],[3,"Message",241],[3,"Libp2pNetwork",229],[3,"String",242],[3,"ValidatorArgs",243],[3,"SystemContextHandle",244],[3,"VIDTransaction",245],[3,"Vec",246],[3,"TypeId",220],[3,"WebServerNetwork",228],[3,"NodeImpl",175],[8,"Deserializer",247],[15,"bool"],[8,"Hash",248],[8,"Sized",236],[8,"BuildHasher",248],[8,"Hasher",248],[3,"DemoTypes",249],[3,"ChannelMaps",227],[8,"Serializer",250],[8,"RunDA",3],[6,"ThisRun",175]]},\
"validator_webserver":{"doc":"","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"validator_webserver"],[3,"validator_webserver::infra"],[175,"validator_webserver::types"],[219,"dyn_clone::sealed"],[220,"dyn_clone::sealed"],[221,"clap_builder::builder::command"],[222,"core::fmt"],[223,"core::fmt"],[224,"clap_builder"],[225,"core::result"],[226,"hotshot_orchestrator::config"],[227,"hotshot_types::traits::node_implementation"],[228,"hotshot::traits::networking::web_server_network"],[229,"hotshot::traits::networking::libp2p_network"],[230,"hotshot::traits::networking::combined_network"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"core::future::future"],[234,"alloc::boxed"],[235,"core::pin"],[236,"core::marker"],[237,"alloc::alloc"],[238,"alloc::sync"],[239,"alloc::rc"],[240,"libp2p_identity::keypair"],[241,"hotshot_types::message"],[242,"hotshot::traits::networking::libp2p_network"],[243,"hotshot_orchestrator::client"],[244,"hotshot::types::handle"],[245,"hotshot_types::block_impl"],[246,"alloc::vec"],[247,"core::any"],[248,"core::hash"],[249,"core::marker"],[250,"hotshot_types::traits::node_implementation"]],"d":["","","","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","","","","The configuration file to be used for this run","The configuration file to be used for this run","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Reads a network configuration from a given filepath","Main entry point for validators","","","","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,54,16,18,19,54,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,54,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,55,55,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,55,44,44,44,44,44,55,55,44],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[[33,[32]],6],34],[15,[[36,[[35,[-1]]]]],17],[37,15],[38,1],0,0,0,[[-1,[39,[-2,-3]],[41,[40]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[43,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[44]]],45],[7,1],[[44,44],46],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[-1,-2],46,[],[]],[[44,10],11],[-1,-1,[]],[[-1,-2],6,[47,48],49],[[44,-1],1,50],[[],7],[-1,-2,[],[]],[[[26,[-1,29]]],[[26,[4,29]]],[]],[[[30,[-1,29]]],[[30,[4,29]]],[]],[[[31,[-1,29]]],[[31,[4,29]]],[]],[[],[[1,[[52,[51]],[24,[[52,[51]]]]]]]],0,[[44,-1],14,53],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,42,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",219],[3,"Private",219],[8,"Any",220],[3,"Command",221],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",222],[6,"Result",222],[3,"ArgMatches",223],[6,"Error",224],[4,"Result",225],[3,"NetworkConfig",226],[3,"WebServerDARun",3],[8,"NodeType",227],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",228],[3,"Libp2pCommChannel",229],[3,"CombinedCommChannel",230],[3,"Id",231],[4,"Option",232],[8,"Future",233],[3,"Box",234],[3,"Pin",235],[8,"Sync",236],[3,"Global",237],[3,"Arc",238],[3,"Rc",239],[15,"u8"],[15,"array"],[3,"Keypair",240],[3,"Message",241],[3,"Libp2pNetwork",229],[3,"String",242],[3,"ValidatorArgs",243],[3,"SystemContextHandle",244],[3,"VIDTransaction",245],[3,"Vec",246],[3,"TypeId",220],[3,"WebServerNetwork",228],[3,"NodeImpl",175],[8,"Deserializer",247],[15,"bool"],[8,"Hash",248],[8,"Sized",236],[8,"BuildHasher",248],[8,"Hasher",248],[3,"DemoTypes",249],[3,"ChannelMaps",227],[8,"Serializer",250],[8,"RunDA",3],[6,"ThisRun",175]]},\
"webserver":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLFLLLLLML","n":["WebServerArgs","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","url","vzip"],"q":[[0,"webserver"],[30,"core::any"],[31,"clap_builder::builder::command"],[32,"core::fmt"],[33,"core::fmt"],[34,"clap_builder"],[35,"core::result"],[36,"clap_builder::util::id"],[37,"core::option"],[38,"alloc::alloc"],[39,"alloc::boxed"],[40,"alloc::sync"],[41,"alloc::rc"],[42,"core::any"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5],"f":[0,[-1,1,[]],[-1,1,[]],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[3,-1,[]],[3,-1,[]],[3,4],[[5,6],7],[-1,-1,[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[[],[[12,[11]]]],[[],3],[-1,-2,[],[]],[[[14,[-1,13]]],[[14,[1,13]]],[]],[[[15,[-1,13]]],[[15,[1,13]]],[]],[[[16,[-1,13]]],[[16,[1,13]]],[]],[[],4],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,17,[]],[[5,8],[[10,[4,9]]]],[[5,8],[[10,[4,9]]]],0,[-1,-2,[],[]]],"c":[],"p":[[8,"Any",30],[3,"Command",31],[15,"usize"],[15,"tuple"],[3,"WebServerArgs",0],[3,"Formatter",32],[6,"Result",32],[3,"ArgMatches",33],[6,"Error",34],[4,"Result",35],[3,"Id",36],[4,"Option",37],[3,"Global",38],[3,"Box",39],[3,"Arc",40],[3,"Rc",41],[3,"TypeId",30]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
