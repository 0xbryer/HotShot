var searchIndex = JSON.parse('{\
"benchmark_client":{"doc":"","t":"HHHHHHHHHHHHHHGHHHHHHHHHHHHHHDGMLLLLLLLLLLLLLLLLLLLLFFFFLLLLLL","n":["CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","FromServer","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Opts","ToServer","addr","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","main","read_spam","spam","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"benchmark_client"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[],2],[[],2],[3],[3],[3],[[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[],[[9,[8]]]],[[],3],[[]],[[[11,[10]]],[[11,[1,10]]]],[12,[[12,[1]]]],[13,[[13,[1]]]],[[]],[[]],[[3,3,14]],[[3,3,15]],[[],7],[[],7],[[],16],[[5,4],[[7,[6]]]],[[5,4],[[7,[6]]]],[[]]],"c":[],"p":[[8,"Any"],[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Opts"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"TcpStreamRecvUtil"],[3,"TcpStreamSendUtil"],[3,"TypeId"]]},\
"counter":{"doc":"","t":"HHAFFRNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHDNNDEDEEGNNNNDGDEENDNDNHHHHHHHHHHHHHHHHHHHHHHHHHHHENNDNDRNNDRRRNNRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFMLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFLLLLLLLLLLLLLLLLLLLLLLLAMMMLMMMFMLMFMMMMMLLLLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMNDHHHHHHHHHHHNDNDNDDDERDDEEHHHHHHHHHHHDNDNDNNNNRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLFLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLMMLLLLLLLLLLLLLLMMMMMHHHHHHHHQIKAFDDDLLLLLLMMLLLMLLLMMLLMLLLLMLLLLLLLLLLLL","n":["CALLSITE","META","common","main","main","BROADCAST_TIMEOUT","Broadcast","BroadcastViaDM","BroadcastViaGossip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CliOpt","Conductor","ConductorIdIs","ConductorMessage","ConductorMessageMethod","ConductorState","CounterError","CounterRequest","CounterState","DMViaDM","DirectMessage","Docker","DummyRecv","EnvType","Epoch","EpochData","EpochType","ExecutionEnvironment","FileRead","FileReadSnafu","Handle","HandleSnafu","Kill","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Message","Metal","MissingBootstrap","MissingBootstrapSnafu","Normal","NormalMessage","PADDING_SIZE","RecvdConductor","Relayed","RelayedMessage","SEND_DENOMINATOR","SEND_NUMERATOR","SUCCESS_NUMBER","StateRequest","StateResponse","TIMEOUT","WebUi","aggregate_epochs","as_error_source","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","broadcast_type","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command_for_update","complete_round","conductor_addr","conductor_broadcast","conductor_handle_network_event","current_epoch","default","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","duration","env_type","env_type_delegate","epoch","epoch","epoch_idx","epoch_type","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_peer","from_str","get_serializable","group_id","group_id","group_id","handle_normal_msg","header","in_current_span","increment_epoch","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","lossy_network","message_durations","node_states","node_type","normal_to_relayed","num_gossip","num_nodes","padding","parse_node","previous_epochs","provide","ready_set","regular_handle_network_event","relay_to_conductor","req","req","req","sent_ts","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","start_main","state","to_connect_addrs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","web","webui_addr","webui_delegate","source","source","AddrParse","AddrParseSnafu","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Decode","DecodeSnafu","InvalidConfig","InvalidConfigSnafu","Io","IoSnafu","IsolationConfig","IsolationConfigBuilder","IsolationConfigBuilderError","LOSSY_QDISC","LossyNetwork","LossyNetworkBuilder","LossyNetworkBuilderError","LossyNetworkError","META","META","META","META","META","META","META","META","META","META","META","Netns","RtNetlink","RtNetlinkSnafu","SetNs","SetNsSnafu","UninitializedField","UninitializedField","ValidationError","ValidationError","_DERIVE_core_fmt_Debug_FOR_IsolationConfig","_DERIVE_core_fmt_Debug_FOR_LossyNetwork","as_error_source","as_error_source","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_addr","bridge_addr","bridge_addr","bridge_name","bridge_name","bridge_name","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","counter_ns","counter_ns","counter_ns","create_empty","create_empty","create_qdisc","create_qdisc_netlink","cur","default","default","default","del_link","description","enable_firewall","env_type","env_type","env_type","eth_name","eth_name","eth_name","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","header","in_current_span","in_current_span","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","isolate","isolate_netlink","isolation_config","isolation_config","isolation_config","netem_config","netem_config","netem_config","new","provide","provide","provide","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","undo_firewall","undo_isolate","undo_isolate_netlink","veth2_addr","veth2_addr","veth2_addr","veth2_name","veth2_name","veth2_name","veth_name","veth_name","veth_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","source","source","source","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","Serialized","WebInfo","get_serializable","network_state","spawn_server","ConnectionState","NetworkConfig","State","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connected_peers","connecting_peers","from","from","from","identity","into","into","into","known_peers","network_config","new","new","node_type","send","serialize","serialize","serialize","state","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"counter"],[5,"counter::common"],[407,"counter::common::CounterError"],[409,"counter::common::lossy_network"],[693,"counter::common::lossy_network::LossyNetworkError"],[698,"counter::common::web"],[711,"counter::common::web::network_state"]],"d":["","","","","","timeout before failing to broadcast","broadcast message to all nodes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","conductor requests that message is sent to node that the …","","A message sent and recv-ed by a [‘…","ways to send messages between nodes","","","Normal message. Sent amongst <code>NetworkNodeType::Regular</code> and …","","","direct message <code>PeerId</code>","execution environment is within docker","","This will be flattened into CliOpt","","","","The execution environemnt type","","SNAFU context selector for the <code>CounterError::FileRead</code> …","","SNAFU context selector for the <code>CounterError::Handle</code> variant","kill node","","","","","","","","","","","","","","","","","","","","","","","","","","","","overall message","execution environment is on metal","","SNAFU context selector for the …","message to end from a peer to a peer","Message sent between non-<code>NetworkNodeType::Conductor</code> nodes","","recv-ed the conductor id","messaged recved and relayed to conductor","A message sent and recv-ed by a [‘…","probaiblity denominator that recv-er node sends back …","probability numerator that recv-er node sends back timing …","","Request state","Reply with state","the timeout before ending rounding","This will be flattened into CliOpt","returns time per data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","internal interface to bind to","the type of broadcast (direct or broadcast)","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Increment conductor to the next epoch","If this value is set, a webserver will be spawned on this …","","network event handler for conductor","","","","","","","","","","","time message took to propagate from sender to recv-er","Doc comment","","the epoch the message was sent on","the epoch the request was made on","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","peer","","","","","","handler for non-conductor nodes for normal messages","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the role this node plays","convert a normal message into a message to relay to …","number of rounds of gossip","total number of nodes","arbitrary amount of padding to vary message length","convert node string into multi addr","","","","event handler for events from the swarm","whether or not message shuld be relayed to conductor","the underlying request the recv-ing node should take","the requeset being made","the request the recv-ing node should make","timestamp when message was sent","","","","","","","","","[’bootstrap_addrs…","","list of bootstrap node addrs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Doc comment","","","","","SNAFU context selector for the <code>LossyNetworkError::AddrParse</code>…","","","","","","","","","","","","","SNAFU context selector for the <code>LossyNetworkError::Decode</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>LossyNetworkError::Io</code> …","A description of how the network should be isolated","Builder for <code>IsolationConfig</code>.","Error type for IsolationConfigBuilder","hardcoded default values","A description of a lossy network","Builder for <code>LossyNetwork</code>.","Error type for LossyNetworkBuilder","","","","","","","","","","","","","represent the current network namespace (useful if …","","SNAFU context selector for the <code>LossyNetworkError::RtNetlink</code>…","","SNAFU context selector for the <code>LossyNetworkError::SetNs</code> …","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the bridge ip address","the bridge ip address","the bridge ip address","the bridge name","the bridge name","the bridge name","Builds a new <code>LossyNetwork</code>.","Builds a new <code>IsolationConfig</code>.","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","the network namespace name to create","the network namespace name to create","the network namespace name to create","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Create a network qdisc","Internal invocation to netlink library to create the qdisc","","","","","","","Enables firewall rules to allow network bridge to function …","the execution environment","the execution environment","the execution environment","Ethernet interface that is connected to WAN","Ethernet interface that is connected to WAN","Ethernet interface that is connected to WAN","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create isolated environment in separate network namespace …","Prepares server for latency by:","metadata describing how to isolate. Only used when <code>env_type</code>…","metadata describing how to isolate. Only used when <code>env_type</code>…","metadata describing how to isolate. Only used when <code>env_type</code>…","The network loss conditions","The network loss conditions","The network loss conditions","creates new network namespace and enters namespace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deletes created iptables rules","Delete isolated environment and network bridge","tears down all created interfaces deletes all iptables …","the virtual ethernet interface ip address that lives in …","the virtual ethernet interface ip address that lives in …","the virtual ethernet interface ip address that lives in …","the virtual ethernet interface name that lives in …","the virtual ethernet interface name that lives in …","the virtual ethernet interface name that lives in …","the virtual ethernet interface name that lives in the …","the virtual ethernet interface name that lives in the …","the virtual ethernet interface name that lives in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait to unify the info that can be send to the web …","","","Spawn a web server on the given <code>addr</code>. This web server will …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,17,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,10,17,18,16,0,0,0,0,0,6,0,6,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,6,0,16,0,0,16,16,0,0,0,0,12,12,0,0,2,6,32,33,34,32,33,34,6,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,34,15,9,6,10,2,11,12,13,14,15,16,17,18,19,20,9,10,2,11,12,13,14,15,16,17,18,19,20,9,34,34,2,34,0,0,2,2,6,12,13,14,15,16,17,18,14,33,34,13,14,11,11,10,12,13,14,15,16,17,18,10,12,13,14,15,16,17,18,9,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,6,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,32,33,34,32,33,34,14,18,2,32,33,34,0,6,6,11,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,19,20,9,0,11,11,34,13,34,34,13,0,2,6,2,0,13,13,14,15,13,12,13,14,15,16,17,18,6,0,15,34,10,2,11,12,13,14,15,16,17,18,19,20,9,6,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,32,33,34,32,33,34,10,2,11,12,13,14,15,16,17,32,33,34,18,19,20,9,6,0,32,34,78,79,51,0,0,0,0,0,0,0,0,0,0,0,0,51,0,51,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,51,0,55,57,55,57,0,0,55,57,51,51,67,54,53,55,52,57,56,59,60,61,58,62,63,51,67,54,53,55,52,57,56,59,60,61,58,62,63,51,52,52,56,52,52,56,53,52,58,51,54,53,52,56,59,60,61,58,62,63,54,53,52,56,59,60,61,58,62,63,52,52,56,53,52,54,54,67,53,52,56,0,51,56,53,54,53,53,54,53,58,54,55,55,57,57,56,59,60,61,58,62,63,51,51,67,54,53,55,55,55,52,57,57,57,56,59,60,61,58,62,63,51,55,57,51,55,57,51,67,54,53,55,52,57,56,59,60,61,58,62,63,51,59,60,61,58,62,63,54,56,53,54,53,53,54,53,67,55,57,51,51,54,53,52,56,59,60,61,58,62,63,55,57,51,67,54,53,55,52,57,56,59,60,61,58,62,63,51,67,54,53,55,52,57,56,59,60,61,58,62,63,51,67,54,53,55,52,57,56,59,60,61,58,62,63,51,56,54,56,52,52,56,52,52,56,52,52,56,67,54,53,55,52,57,56,59,60,61,58,62,63,51,80,81,82,83,84,0,0,0,0,0,0,0,0,68,0,68,0,0,0,0,0,72,74,77,72,74,77,77,77,72,74,77,74,72,74,77,77,72,72,74,74,72,72,74,77,72,72,74,77,72,74,77,72,74,77,72,74,77],"f":[0,0,0,[[],1],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,3]],[[],4],[5,5],[5,5],[5,5],[5,5],[5,5],[5,5],[6,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[9,6],[6,[[8,[4]]]],[10,10],[2,2],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[2,10]],0,[[21,[23,[[22,[2]]]]],[[25,[24]]]],[[26,[23,[[22,[2]]]]],[[25,[24]]]],0,[[],2],[6,27],[28,[[25,[12]]]],[28,[[25,[13]]]],[28,[[25,[14]]]],[28,[[25,[15]]]],[28,[[25,[16]]]],[28,[[25,[17]]]],[28,[[25,[18]]]],0,0,0,0,0,0,0,[[10,10],29],[[12,12],29],[[13,13],29],[[14,14],29],[[15,15],29],[[16,16],29],[[17,17],29],[[18,18],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[9,[[25,[6]]]],[[10,30],31],[[2,30],31],[[11,30],31],[[12,30],31],[[13,30],31],[[14,30],31],[[15,30],31],[[16,30],31],[[17,30],31],[[32,30],31],[[33,30],31],[[34,30],31],[[18,30],31],[[19,30],31],[[20,30],31],[[9,30],31],[[6,30],31],[[6,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,[[25,[32,36]]]],[35,[[25,[33,36]]]],[35,[[25,[34,36]]]],[35,[[25,[32,36]]]],[35,[[25,[33,36]]]],[35,[[25,[34,36]]]],0,[27,[[25,[18]]]],[2],[[],[[8,[37]]]],[[],[[8,[37]]]],[[],[[8,[37]]]],[[[23,[22]],13,[8,[[39,[38]]]]],[[25,[24]]]],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[]],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,6],[20,6],[9,6],0,0,0,0,[[13,44],14],0,0,0,[27,[[25,[45,46]]]],0,[47],0,[[26,[23,[22]]],[[25,[24]]]],0,0,0,0,0,[[12,48],25],[[13,48],25],[[14,48],25],[[15,48],25],[[16,48],25],[[17,48],25],[[18,48],25],[6,[[8,[4]]]],[34,[[25,[6]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[32,35],[[25,[36]]]],[[33,35],[[25,[36]]]],[[34,35],[[25,[36]]]],[[32,35],[[25,[36]]]],[[33,35],[[25,[36]]]],[[34,35],[[25,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[51,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,49],52],0,0,[[52,49],52],0,0,[53,[[25,[54,55]]]],[52,[[25,[56,57]]]],[58,51],[51,[[8,[4]]]],[54,54],[53,53],[52,52],[56,56],[59,59],[60,60],[61,61],[58,58],[62,62],[63,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,49],52],0,0,[[],53],[[],52],[54,[[25,[51]]]],[[54,27],[[25,[51]]]],0,[[],53],[[],52],[[],56],[[64,49],[[25,[51]]]],[51,27],[[56,27],[[25,[51]]]],[[53,18],53],0,0,[[53,49],53],0,0,[58,[[25,[51]]]],[[54,30],31],[[55,30],31],[[55,30],31],[[57,30],31],[[57,30],31],[[56,30],31],[[59,30],31],[[60,30],31],[[61,30],31],[[58,30],31],[[62,30],31],[[63,30],31],[[51,30],31],[[51,30],31],[[]],[[]],[[]],[65,55],[[]],[49,55],[[]],[[]],[49,57],[65,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,51],[60,51],[61,51],[58,51],[62,51],[63,51],[54,[[25,[51]]]],[[56,27],[[25,[51]]]],[[53,[8,[56]]],53],0,0,[[53,66],53],0,0,[27,[[25,[67,51]]]],[47],[47],[47],[51,[[8,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],49],[[],49],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[],50],[[56,49],[[25,[51]]]],[54,[[25,[51]]]],[[56,49],[[25,[51]]]],[[52,49],52],0,0,[[52,49],52],0,0,[[52,49],52],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[[23,[[22,[[0,[68,41,69]]]]]],70]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,[[[22,[[0,[68,41,69]]]]],[[72,[71]]]],[[44,73],74],0,[[[72,[71]],75],76],[[[72,[[0,[71,71]]]],48],25],[[74,48],25],[[77,48],25],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],50],[[],50],[[],50],[[]],[[]],[[]]],"c":[],"p":[[6,"Result"],[3,"ConductorState"],[15,"usize"],[8,"Error"],[3,"Command"],[4,"CounterError"],[3,"Backtrace"],[4,"Option"],[3,"MissingBootstrapSnafu"],[4,"EpochType"],[3,"EpochData"],[4,"CounterRequest"],[3,"NormalMessage"],[3,"RelayedMessage"],[3,"ConductorMessage"],[4,"Message"],[4,"ConductorMessageMethod"],[4,"ExecutionEnvironment"],[3,"HandleSnafu"],[3,"FileReadSnafu"],[3,"Duration"],[3,"NetworkNodeHandle"],[3,"Arc"],[4,"NetworkNodeHandleError"],[4,"Result"],[4,"NetworkEvent"],[15,"str"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"WebUi"],[3,"EnvType"],[3,"CliOpt"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"DirectMessageResponse"],[3,"ResponseChannel"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"PeerId"],[3,"Multiaddr"],[4,"Error"],[3,"Demand"],[8,"Serializer"],[3,"String"],[3,"TypeId"],[4,"LossyNetworkError"],[3,"IsolationConfigBuilder"],[3,"LossyNetworkBuilder"],[3,"LossyNetwork"],[4,"LossyNetworkBuilderError"],[3,"IsolationConfig"],[4,"IsolationConfigBuilderError"],[3,"InvalidConfigSnafu"],[3,"RtNetlinkSnafu"],[3,"IoSnafu"],[3,"SetNsSnafu"],[3,"DecodeSnafu"],[3,"AddrParseSnafu"],[3,"Handle"],[3,"UninitializedFieldError"],[3,"NetemQdisc"],[3,"Netns"],[8,"WebInfo"],[8,"Clone"],[4,"SocketAddr"],[8,"Serialize"],[3,"State"],[3,"NetworkNodeConfig"],[3,"NetworkConfig"],[3,"Sender"],[6,"Result"],[3,"ConnectionState"],[13,"Handle"],[13,"FileRead"],[13,"RtNetlink"],[13,"Io"],[13,"SetNs"],[13,"Decode"],[13,"AddrParse"]]},\
"hotshot":{"doc":"Provides a generic rust implementation of the <code>HotShot</code> BFT …","t":"NHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNNRREDDIDNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNNNDDNINLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLAMLLLLLLMKLLMLLALLLLLLLLLLLLLALLLLLLMMLLLLLLLLLLLLLKLLLKLLLLLMLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLCMKLLLLLLLLLLLLMLLLKLLMLLALLLLLLLAKLLMLLLLLLLLLLLLLLLLLLALLLLLLMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLLMLAANNDNDNDNDNNDNDEEDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLGDGHHHHHNNDNDNDNDHHHHHNDNDNNDNDDEEDDDDDDLLLLLLLLLLLLLLLLLMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLFFLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHHHHHHDDMLLLLLLLLMMMLLLLLLLLLLLMLLLLLLLLMMFFMMLLMLLLLLLFLLLIQNNQQQNQQQNNQNNEININIIQGIQNQNNNKKKLLLLLKLLLKKKKKLLLLAALLLLKKKLALLLLLLKKAKKKAKLKKKLKALLLKLKLMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLAADGDDLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLGDRDLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMLLLLLLLLLDDDDDDDDDGDDDMMMMMMMMMMNNDNDNDNDNNEIDNDNDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAMLMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAMMMMMMMNHHHHHHHHHHHHHHHHHHHHHHHHHHDDNNNDNDENDNDDHHHHHHHHHHHHHHHHHHHHHHHHHHDENNDRLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLMLMMLLLLMFFFLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMHHHHHHHHHHHHHHHHHHHHHHHENDDDHHHHHHHHHHHHHHHHHHHHHHHGRLLLLLLLLLLLMMLLLLLLLLLLMMLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLMLLMLLMLLMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHENDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHHHDDHHHHHHHHHENDIDINNDDLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLKLKKLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLMLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLHHHHHHHHDHHHHHHHHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLQQQQQIQIKKKKKKKKKKKGIKLKKKADDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLMLLLLLLLLLNNNNDENNENNNNDNNNQNINDNNNILLLMLLLLLLLLLLLLLLLLLLKLLLLLLLLLLALAMLLLLLLKKKLAMLLLLLLLLLLLLLLLMLMMLMKMMKLLLLLLLLLLLLKMLLLMMMMMMMMMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLNNDENNNMMMMMMMMHHHHHHHHDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLMLLLLMMLLLLLLLL","n":["BadBlockontinue","FailedToBroadcast","FailedToMessageLeader","H_256","H_512","HotShotError","HotShotInitializer","HotShotSequencingConsensusApi","HotShotType","HotShotValidatingConsensusApi","InconsistentBlock","InsufficientValidSignatures","InvalidState","LeafNotFound","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Misc","NetworkFault","StorageError","SystemContext","SystemContextInner","TimeoutError","ViewRunner","ViewTimeoutError","__clone_box","__clone_box","__clone_box","_metrics","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","background_task_handle","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","certificate","channel_maps","clone","clone","clone","clone_into","clone_into","clone_into","config","consensus","consensus","consensus","consensus","create_or_obtain_chan_from_read","create_or_obtain_chan_from_write","demos","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","documentation","drop","drop","drop","drop","drop","drop","event_sender","exchanges","fmt","fmt","from","from","from","from","from","from","from_genesis","from_reload","get_decided_leaf","get_next_view_timeout","get_state","handle_broadcast_consensus_message","handle_broadcast_consensus_message","handle_broadcast_consensus_message","handle_broadcast_data_message","handle_direct_consensus_message","handle_direct_consensus_message","handle_direct_consensus_message","handle_direct_data_message","handle_message","header","id","in_current_span","init","init","init","init","init","init","init","inner","inner","inner","inner","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_transactions","max_transactions","min_transactions","min_transactions","new","private_key","private_key","private_key","propose_max_round_time","propose_max_round_time","propose_min_round_time","propose_min_round_time","provide","public_key","public_key","public_key","publish_transaction_async","rand","recv_network_lookup","run_view","run_view","run_view","send_broadcast_message","send_broadcast_message","send_broadcast_message","send_da_broadcast","send_direct_da_message","send_direct_message","send_direct_message","send_direct_message","send_event","send_event","send_network_lookup","should_start_round","should_start_round","source","spawn_all","spawn_all","spawn_all","storage","store_leaf","store_leaf","tasks","timeout_view","to_owned","to_owned","to_owned","to_string","total_nodes","total_nodes","traits","transactions","transactions","transactions","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","types","vzip","vzip","vzip","vzip","vzip","vzip","context","context","num_valid_signatures","source","source","source","source","source","state","threshold","view_number","QuorumCertificate","__clone_box","as_any","as_any_mut","block_commitment","borrow","borrow_mut","clone","clone_into","commit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fill","fmt","fmt","from","from_signatures_and_commitment","genesis","get_hash","hash","header","init","into","into_any","into_any_arc","into_any_rc","is_genesis","is_genesis","leaf_commitment","leaf_commitment","serialize","set_leaf_commitment","signatures","signatures","tag","to_owned","to_string","try_from","try_into","try_resolve","type_id","view_number","view_number","vzip","sdemo","vdemo","Genesis","GenesisAfterStart","GenesisAfterStartSnafu","GenesisCantHaveTransactions","GenesisCantHaveTransactionsSnafu","GenesisFailed","GenesisFailedSnafu","InvalidBlock","InvalidBlockSnafu","Normal","PreviousStateMismatch","PreviousStateMismatchSnafu","ReusedTxn","ReusedTxnSnafu","SDemoBlock","SDemoError","SDemoGenesisBlock","SDemoNormalBlock","SDemoState","SDemoTransaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_transaction_raw","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block_commitment","block_commitment","block_commitment","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commit","commit","contained_transactions","create_random_transaction","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fail","fail","fail","fill","fill","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","genesis","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","header","header","id","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","new","new","next_block","on_commit","padding","prev_state_commitment","previous_state","provide","serialize","serialize","serialize","serialize","serialize","source","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","try_resolve","txn_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_block","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Account","Addition","Balance","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Genesis","GenesisAfterStart","GenesisAfterStartSnafu","GenesisFailed","GenesisFailedSnafu","InconsistentTransaction","InconsistentTransactionSnafu","InsufficentBalance","InsufficentBalanceSnafu","META","META","META","META","META","NoSuchInputAccount","NoSuchInputAccountSnafu","NoSuchOutputAccount","NoSuchOutputAccountSnafu","Normal","PreviousStateMismatch","PreviousStateMismatchSnafu","ReusedNonce","ReusedNonceSnafu","Subtraction","VDemoBlock","VDemoError","VDemoGenesisBlock","VDemoNode","VDemoNormalBlock","VDemoState","VDemoTransaction","VDemoTypes","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account","account","accounts","add","add_transaction_raw","amount","amount","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","balances","block_commitment","block_commitment","block_commitment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit","commit","commit","compare","contained_transactions","create_random_transaction","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fail","fail","fail","fail","fail","fail","fail","fail","fill","fill","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","genesis","genesis_from","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","new","new","next_block","nonce","on_commit","padding","partial_cmp","previous_state","provide","random_quorum_certificate","random_validating_leaf","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","sub","tag","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","try_resolve","txn_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_block","validate_independence","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","TaskHandle","TaskHandleInner","_types","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","committee_network_broadcast_task_handle","committee_network_direct_task_handle","consensus_task_handle","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","network_broadcast_task_handle","network_direct_task_handle","network_lookup_task","network_task","run_view_channels","shutdown_timeout","start","start_one_round","started","try_from","try_from","try_into","try_into","type_id","type_id","view_runner","vzip","vzip","wait_shutdown","Block","BlockType","CentralizedServer","ChannelSend","CommitteeCommChannel","CommitteeNetwork","ConsensusMessage","CouldNotDeliver","Error","Error","Exchanges","FailedToDeserialize","FailedToSerialize","Leaf","Libp2p","MemoryNetwork","NetworkError","NetworkReliability","NoSuchNode","NodeImplementation","ShutDown","State","Storage","Storage","StorageResult","TestableNodeImplementation","Time","Timeout","Transaction","UnableToCancel","UnimplementedFeature","WebServer","add_transaction_raw","append","append","append_single_view","as_any","as_any_mut","as_error_source","backtrace","block_genesis","borrow","borrow_mut","cause","cleanup_storage_up_to_view","commit","committee_comm_channel_generator","construct_tmp_storage","contained_transactions","deref","deref_mut","description","drop","dummy","election","fmt","fmt","from","from","generate_test_key","get_anchored_view","get_full_state","header","implementations","in_current_span","init","into","into_any","into_any_arc","into_any_rc","leaf_create_random_transaction","network_generator","networking","new","new_channel_maps","next_block","node_implementation","on_commit","provide","quorum_comm_channel_generator","sample_delay","sample_keep","source","state_create_random_transaction","storage","to_string","try_from","try_into","txn_count","type_id","validate_block","vzip","source","source","source","source","source","source","source","DummyState","__clone_box","append","as_any","as_any_mut","block_commitment","borrow","borrow_mut","clone","clone_into","commit","create_random_transaction","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fill","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","next_block","nonce","on_commit","random","serialize","tag","to_owned","try_from","try_into","try_resolve","type_id","validate_block","vzip","static_committee","vrf","GeneralStaticCommittee","StaticCommittee","StaticElectionConfig","StaticVoteToken","__clone_box","__clone_box","__clone_box","_leaf_phantom","_type_phantom","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_commitment","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","commit","create_election","default","default_election_config","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","failure_threshold","fill","fmt","fmt","fmt","from","from","from","get_committee","get_hash","get_leader","get_stake_table","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","make_vote_token","new","nodes","pub_key","serialize","serialize","signature","success_threshold","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","validate_vote_token","vote_count","vzip","vzip","vzip","BlsPubKey","JfPubKey","SORTITION_PARAMETER","VRFStakeTable","__clone_box","__clone_box","_pd","_pd","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_bytes","from_native","from_private","generate_test_key","generated_from_seed_indexed","get_hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","mapping","partial_cmp","pk","serialize","serialize","sign","to_bytes","to_owned","to_owned","total_stake","try_from","try_from","try_into","try_into","type_id","type_id","validate","vzip","vzip","CentralizedCommChannel","CentralizedServerNetwork","DummyReliability","Libp2pCommChannel","Libp2pNetwork","MasterMap","MemoryCommChannel","MemoryNetwork","MemoryStorage","PeerInfoVec","WebCommChannel","WebServerNetwork","WebServerWithFallbackCommChannel","id","inner","inner","inner","inner","inner","map","networks","server_shutdown_signal","server_shutdown_signal","CentralizedServer","ChannelSend","ChannelSendSnafu","CouldNotDeliver","CouldNotDeliverSnafu","FailedToDeserialize","FailedToDeserializeSnafu","FailedToSerialize","FailedToSerializeSnafu","Libp2p","MemoryNetwork","NetworkError","NetworkReliability","NetworkingMetrics","NoSuchNode","NoSuchNodeSnafu","ShutDown","ShutDownSnafu","Timeout","UnableToCancel","UnimplementedFeature","WebServer","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","centralized_server_network","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_peers","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","incoming_message_count","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","libp2p_network","memory_network","message_failed_to_send","new","outgoing_message_count","sample_delay","sample_keep","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","web_server_network","web_sever_libp2p_fallback","source","source","source","source","source","source","source","Begin","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CentralizedCommChannel","CentralizedServerNetwork","Complete","Continue","CouldNotDeserialize","CouldNotDeserializeSnafu","Disconnected","DisconnectedSnafu","Error","FailedToReceive","FailedToReceiveSnafu","FailedToSend","FailedToSendSnafu","Inner","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","MsgStepContext","MsgStepOutcome","Skip","Stream","StreamSnafu","_DERIVE_core_fmt_Debug_FOR_Inner","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accumulated_stream","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast_message","broadcast_message","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","connect_to","connect_with_server_config","connected","consumed_indexes","create","cur_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","direct_message","direct_message","direct_message","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","generate_network","generator","generator","get_broadcasts","get_connected_client_count","get_connected_client_count","get_direct_messages","header","in_current_span","in_flight_message_count","in_flight_message_count","incoming_queue","init","init","init","init","init","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","is_ready","is_ready","known_nodes","lookup_node","lookup_node","message_len","metrics","new","own_key","provide","receiving","receiving_loopback","recv_msgs","recv_msgs","remove_messages_from_queue","request_client_count","request_client_count_sender","run_background","run_background_recv","run_background_send","run_ready","run_ready","running","send_results","send_results","sending","server_shutdown_signal","shut_down","shut_down","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","source","source","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Empty","Empty","Libp2pCommChannel","Libp2pNetwork","Libp2pNetworkInner","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","PeerInfoVec","QC_TOPIC","__clone_box","__clone_box","_add_known_peers","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap_addrs","bootstrap_addrs_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","broadcast_recv","broadcast_send","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dht_timeout","direct_message","direct_message","direct_recv","direct_send","drop","drop","drop","drop","fmt","fmt","from","from","from","from","generate_network","generator","generator","handle","in_flight_message_count","in_flight_message_count","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_bootstrapped","is_ready","is_ready","is_ready","lookup_node","lookup_node","metrics","new","new","pk","pubkey_pid_map","recv_msgs","recv_msgs","serialize","shut_down","shut_down","spawn_connect","spawn_event_generator","to_owned","to_owned","topic_map","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","wait_for_ready","Broadcast","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Combo","Direct","DummyReliability","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","MasterMap","MemoryCommChannel","MemoryNetwork","MemoryNetworkInner","_DERIVE_core_fmt_Debug_FOR_MasterMap","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_input","broadcast_input","broadcast_message","broadcast_message","broadcast_output","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direct_input","direct_input","direct_message","direct_message","direct_output","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","generate_network","generator","generator","id","in_flight_message_count","in_flight_message_count","in_flight_message_count","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_ready","is_ready","lookup_node","lookup_node","map","master_map","metrics","new","new","new","recv_msgs","recv_msgs","sample_delay","sample_keep","shut_down","shut_down","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ConsensusInfo","Inner","META","META","META","META","META","META","META","META","META","MessageType","Proposal","RecvMsg","RecvMsgTrait","SendMsg","SendMsgTrait","Transaction","VoteTimedOut","WebCommChannel","WebServerNetwork","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_is_current_leader","_own_key","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","broadcast_poll_queue","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connected","consensus_info","create","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","direct_message","direct_message","direct_poll_queue","drop","drop","drop","drop","drop","drop","drop","endpoint","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate_network","generator","generator","get_endpoint","get_endpoint","get_message","get_message","get_message","get_message","get_message_from_web_server","in_flight_message_count","in_flight_message_count","init","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_next_leader","is_ready","is_ready","lookup_node","lookup_node","message","message","new","parse_post_message","phantom","poll_web_server","post_message_to_web_server","recv_msgs","recv_msgs","run_background_receive","running","serialize","serialize","server_shutdown_signal","shut_down","shut_down","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_between_polls","wait_for_ready","wait_for_ready","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CombinedNetworks","META","META","META","META","META","META","META","META","WebServerWithFallbackCommChannel","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","broadcast_message","clone","clone_into","deref","deref","deref_mut","deref_mut","direct_message","drop","drop","fallback","fmt","fmt","from","from","generate_network","generator","generator","in_flight_message_count","in_flight_message_count","init","init","inject_consensus_info","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_ready","lookup_node","network","networks","new","recv_msgs","shut_down","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_for_ready","CommitteeCommChannel","CommitteeNetwork","ConsensusMessage","Exchanges","Leaf","NodeImplementation","Storage","TestableNodeImplementation","block_genesis","committee_comm_channel_generator","construct_tmp_storage","generate_test_key","get_full_state","leaf_create_random_transaction","network_generator","new_channel_maps","quorum_comm_channel_generator","state_create_random_transaction","txn_count","Result","Storage","append","append_single_view","cleanup_storage_up_to_view","commit","get_anchored_view","memory_storage","MemoryStorage","MemoryStorageInternal","__clone_box","append","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cleanup_storage_up_to_view","clone","clone_into","commit","construct_tmp_storage","deref","deref","deref_mut","deref_mut","drop","drop","empty","failed","from","from","get_anchored_view","get_full_state","init","init","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","stored","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BadBlock","Continue","Decide","Error","Event","EventType","FailedToBroadcast","FailedToMessageLeader","HotShotError","InconsistentBlock","InsufficientValidSignatures","InvalidState","LeafNotFound","Message","Misc","NetworkFault","NextLeaderViewTimeout","PrivateKey","ReplicaViewTimeout","SignatureKey","StorageError","SystemContextHandle","TimeoutError","ViewFinished","ViewTimeoutError","VoteType","__clone_box","__clone_box","__clone_box","_phantom","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","ed25519","eq","event","event","fmt","fmt","fmt","from","from","from","from_bytes","from_private","generated_from_seed_indexed","get_view_number","handle","hotshot","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","kind","purpose","sender","sender_handle","serialize","shut_down","sign","storage","stream_output","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","view_number","vzip","vzip","vzip","error","leaf_chain","qc","view_number","view_number","view_number","context","context","num_valid_signatures","source","source","source","source","source","state","threshold","view_number","Ed25519Priv","Ed25519Pub","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","compare","compare","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from_bytes","from_bytes","from_private","from_str","from_str","generate","generate_from_seed","generate_test_key","generated_from_seed_indexed","generated_from_seed_indexed","get_hash","hash","header","header","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","priv_key","pub_key","serialize","serialize","sign","to_bytes","to_bytes","to_owned","to_owned","to_string","to_string","to_tagged_base64","to_tagged_base64","try_from","try_from","try_into","try_into","type_id","type_id","validate","vzip","vzip","Decide","Error","Event","EventType","NextLeaderViewTimeout","ReplicaViewTimeout","ViewFinished","event","view_number","error","leaf_chain","qc","view_number","view_number","view_number","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","SystemContextHandle","__clone_box","as_any","as_any_mut","available_events","borrow","borrow_mut","clone","clone_into","collect_round_events","create_yes_message","deref","deref_mut","drop","from","get_current_view","get_decided_leaf","get_leader","get_next_leader_receiver_channel_len","get_next_view_timeout","get_public_key","get_replica_receiver_channel_len","get_state","hotshot","init","into","into_any","into_any_arc","into_any_rc","next_event","send_broadcast_consensus_message","send_direct_consensus_message","sender_handle","shut_down","shut_down","sign_validating_or_commitment_proposal","start","start_one_round","storage","storage","stream_output","submit_transaction","to_owned","try_from","try_into","try_next_event","type_id","vzip","wait_for_networks_ready"],"q":[[0,"hotshot"],[360,"hotshot::HotShotError"],[371,"hotshot::certificate"],[421,"hotshot::demos"],[423,"hotshot::demos::sdemo"],[809,"hotshot::demos::vdemo"],[1390,"hotshot::tasks"],[1463,"hotshot::traits"],[1555,"hotshot::traits::NetworkError"],[1562,"hotshot::traits::dummy"],[1606,"hotshot::traits::election"],[1608,"hotshot::traits::election::static_committee"],[1714,"hotshot::traits::election::vrf"],[1788,"hotshot::traits::implementations"],[1811,"hotshot::traits::networking"],[2008,"hotshot::traits::networking::NetworkError"],[2015,"hotshot::traits::networking::centralized_server_network"],[2392,"hotshot::traits::networking::centralized_server_network::Error"],[2394,"hotshot::traits::networking::libp2p_network"],[2568,"hotshot::traits::networking::memory_network"],[2813,"hotshot::traits::networking::web_server_network"],[3047,"hotshot::traits::networking::web_sever_libp2p_fallback"],[3122,"hotshot::traits::node_implementation"],[3141,"hotshot::traits::storage"],[3149,"hotshot::traits::storage::memory_storage"],[3199,"hotshot::types"],[3316,"hotshot::types::EventType"],[3322,"hotshot::types::HotShotError"],[3333,"hotshot::types::ed25519"],[3422,"hotshot::types::event"],[3431,"hotshot::types::event::EventType"],[3437,"hotshot::types::handle"]],"d":["A block failed verification","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal value used to drive the state machine","Failed to broadcast a message on the network","Failed to Message the leader in the given stage","Length, in bytes, of a 256 bit hash","Length, in bytes, of a 512 bit hash","Reexport error type Error type for <code>HotShot</code>","initializer struct for creating starting block","A handle that exposes the interface that hotstuff needs to …","[<code>HotShot</code>] implementations that depend on […","A handle that exposes the interface that hotstuff needs to …","A block was not consistent with the existing state","Not enough valid signatures for a quorum","Invalid state machine state","Item was not present in storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Miscelaneous error TODO fix this with #181 …","Failure in networking layer","Error accesing storage","Thread safe, shared view of a <code>HotShot</code>","Holds the state needed to participate in <code>HotShot</code> consensus","HotShot timed out waiting for msgs","A view runner implemented by [HotShot] for different types …","HotShot timed out during round","","","","a reference to the metrics that the implementor is using.","Phantom data for consensus type","","","","","","","","","","","","","","Senders to the background tasks.","","","","","","","","","","","","","","","Data availability support Contains structures and …","Channels for sending/recv-ing proposals and votes for …","","","","","","","Configuration items for this hotshot instance","Get the [<code>hotstuff</code>] field of [<code>HotShot</code>].","","","The hotstuff implementation","given a view number and a upgradable read lock on a …","given a view number and a write lock on a channel map, …","Contains implementations of the <code>HotShot</code> traits used in the …","","","","","","","","","","","","","","HotShot: A linear time, committee electing, BFT Protocol.","","","","","","","Sender for <code>Event</code>s","This <code>HotShot</code> instance’s way to interact with the nodes …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","initialize from genesis","reload previous state based on most recent leaf","Returns a copy of the last decided leaf","return the timeout for a view for <code>self</code>","Returns a copy of the state","Handle an incoming [<code>ConsensusMessage</code>] that was broadcasted …","","","Handle an incoming <code>DataMessage</code> that was broadcasted on the …","Handle an incoming [<code>ConsensusMessage</code>] directed at this …","","Handle an incoming <code>ValidatingMessage</code> directed at this node.","Handle an incoming <code>DataMessage</code> that directed at this node","decide which handler to call based on the message variant …","","uid for instrumentation","","","","","","Initializes a new hotshot and does the work of setting up …","","","the leaf specified initialization","Handle to internal hotshot implementation","Reference to the [<code>HotShotInner</code>]","Reference to the [<code>HotShotInner</code>]","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Creates a new hotshot with the given configuration options …","","","The private key of this node","","","","","","","","The public key of this node","Publishes a transaction to the network","Reexport rand crate","for receiving messages in the network lookup task","Executes one view of consensus","","","Send a broadcast message.","","","","","Send a direct message to a given recipient.","","","","","for sending messages to network lookup task","Generates and encodes a vote token","Generates and encodes a vote token","","Spawn all tasks that operate on the given [<code>HotShot</code>].","","","Networking interface for this hotshot instance This <code>HotShot</code>…","","","Provides a number of tasks that run continuously on a […","Marks a given view number as timed out. This should be …","","","","","","","Contains traits consumed by [<code>HotShot</code>]","Get the [<code>transactions</code>] field of [<code>HotShot</code>].","","","Transactions (this is shared btwn hotshot and <code>Consensus</code>)","","","","","","","","","","","","","","","","","","","Contains types used by the crate","","","","","","","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","The type used for Quorum Certificates","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","If this QC is for the genesis block","","commitment to previous leaf","","","","Threshold Signature","","","","","","","","","Which view this QC relates to","","this is a demo for sequencing consensus Sequencing …","this is a demo for validating consensus Validating …","genesis block","Genesis reencountered after initialization","SNAFU context selector for the …","no transasctions added to genesis","SNAFU context selector for the …","Genesis failure","SNAFU context selector for the <code>SDemoError::GenesisFailed</code> …","invalid block","SNAFU context selector for the <code>SDemoError::InvalidBlock</code> …","normal block","Previous state commitment does not match","SNAFU context selector for the …","Nonce was reused","SNAFU context selector for the <code>SDemoError::ReusedTxn</code> …","The block for the sequencing demo","The error type for the sequencing demo","genesis block","Any block after genesis","sequencing demo entry state","The transaction for the sequencing demo","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the block height","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","identifier for the transaction","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a new transaction","","","","padding to add to txn (to make it larger and thereby more …","the previous state commitment","Block state commitment","","","","","","","","","","","","","","","","","","","","","","","","Transaction vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the view number","","","","","","","","","","","","","The account identifier type used by the demo","Records an increase in an account balance","The account balance type used by the demo","","","","","","genesis block","Genesis reencountered after initialization","SNAFU context selector for the …","Genesis failure","SNAFU context selector for the <code>VDemoError::GenesisFailed</code> …","The subtraction and addition amounts for this transaction …","SNAFU context selector for the …","Tried to move more money than was in the account","SNAFU context selector for the …","","","","","","No such input account exists","SNAFU context selector for the …","No such output account exists","SNAFU context selector for the …","normal block","Previous state commitment does not match","SNAFU context selector for the …","Nonce was reused","SNAFU context selector for the <code>VDemoError::ReusedNonce</code> …","Records a reduction in an account balance","The block for the validating demo","The error type for the validating demo","initializes the first state on genesis","The node implementation for the validating demo","Any block after genesis","The state for the validating demo NOTE both fields are …","The transaction for the validating demo","Implementation of <code>NodeType</code> for <code>VDemoNode</code>","","","","","","","","","","","","","","","","","","An account identifier","An account identifier","initializes the first state","An increment to an account balance","","An account balance","An account balance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key/value store of accounts and balances","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","generate a genesis block with the provided initial …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>VDemoNode</code>","","The nonce for a transaction, no two transactions can have …","","Number of bytes to pad to each transaction","","Block state commitment","","Provides a random <code>QuorumCertificate</code>","Provides a random <code>ValidatingLeaf</code>","","","","","","","","","","A decrement to an account balance","","","","","","","","","","","","","","","","","","","","","","","Transaction vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that this transaction is at least consistent with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A handle with senders to send events to the background …","Inner struct of the <code>TaskHandle</code>","Reference to the <code>NodeType</code> used in this configuration","","","","","","","","","Join Handle for committee broadcast network task","Join Handle for committee direct network task","Join handle for <code>consensus_task</code>","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Inner struct of the <code>TaskHandle</code>. This is <code>None</code> by default …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Join handle for <code>network_broadcast_task</code>","Join handle for <code>network_direct_task</code>","Task to look up a node in the future as needed","Continually processes the incoming broadcast messages …","for the client to indicate “increment a view” only …","same as hotshot’s view_timeout such that there is not an …","Start the round runner. This will make it run until <code>pause</code> …","Make the round runner run 1 round. Does/should not block.","Global to signify the <code>HotShot</code> should be started","","","","","","","main thread driving consensus","","","Wait until all underlying handles are shut down","Abstraction over the full contents of a block","The type of block this state is associated with","Centralized server specific errors","Error sending output to consumer of …","Communication channel the DA committee. Only needed for …","Connected network for the DA committee. Only needed for …","Consensus message type.","Could not deliver a message to a specified recipient","The error type for this type of block","The error type for this particular type of ledger state","Consensus type selected exchanges.","Failed to deserealize a network message","Failed to serialize a network message","Leaf type for this consensus implementation","Libp2p specific errors","memory network specific errors","Error type for networking","interface describing how reliable the network is","Attempted to deliver a message to an unknown node","Node implementation aggregate trait","The underlying connection has been shut down","Abstraction over the state that blocks modify","Abstraction over on disk persistence of node state","Storage type for this consensus implementation","Result for a storage type","extra functions required on a node implementation to be …","Time compatibility needed for reward collection","A timeout occurred","The type of the transitions we are applying","unable to cancel a request, the request has already been …","unimplemented functionality","Web server specific errors","Attempts to add a transaction, returning an Error if it …","Appends the given block to this state, returning an new …","Append the list of views to this storage","Insert a single view. Shorthand for","","","","","generate a genesis block","","","","Cleans up the storage up to the given view. The given view …","Commit this storage.","Generate a committee communication channel given the …","Create ephemeral storage Will be deleted/lost immediately …","returns hashes of all the transactions in this block TODO …","","","","","Dummy testing implementations","Sortition trait elections used for consensus","","","","Returns the argument unchanged.","The private key of the node <code>id</code> in a test.","Get the latest anchored view","Return the full internal state. This is useful for …","","Module for publicly usable implementations of the traits","","","Calls <code>U::from(self)</code>.","","","","Creates random transaction if possible otherwise panics …","Generate a quorum network given an expected node count.","Network access compatibility","Construct an empty or genesis block.","Create channels for sending/recv-ing proposals and votes …","Returns an empty, template next block given this current …","Composite trait for node behavior","Gets called to notify the persistence backend that this …","","Generate a quorum communication channel given the network.","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","","Creates random transaction if possible otherwise panics …","Abstraction over on-disk storage of node state","","","","the number of transactions in a block","","Returns true if and only if the provided block is valid …","","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","The dummy state","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","Generate a random <code>DummyState</code>","","","","","","","","","","static (round robin) committee election","generic vrf based election over anything that implements …","Dummy implementation of <code>Membership</code>","static committee using a vrf kp","configuration for static committee. stub for now","Vote token for a static committee","","","","Leaf phantom","Node type phantom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Index the vector of public keys with the current view …","Clone the static table","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Simply make the partial signature","Creates a new dummy elector","The nodes participating","public key","","","signature","","","","","","","","","","","","","","","","","","","","","concrete type for bls public key","type wrapper for VRF’s public key","the sortition committee size parameter","The stake table for VRFs","","","PhantomData","phantom data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","wrap the public key","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the mapping of id -&gt; stake","","the public key","","","","","","","total stake present","","","","","","","","","","libp2p identity communication channel","Handle for connecting to a centralized server","dummy implementation of network reliability","libp2p identity communication channel","Networking implementation that uses libp2p generic over <code>M</code> …","Shared state for in-memory mock networking.","memory identity communication channel","In memory only network simulator.","In memory, ephemeral, storage for a <code>HotShot</code> instance","Type alias for a shared collection of peerid, multiaddrs","Represents the communication channel abstraction for the …","The web server network state","A communication channel with 2 networks, where we can fall …","The id of this <code>MemoryNetwork</code> cluster","The inner state","holds the state of the libp2p network","The actual internal state","The inner, core state of the web server network","The inner state of this <code>MemoryStorage</code>","The list of <code>MemoryNetwork</code>s","The two networks we’ll use for send/recv","An optional shutdown signal. This is only used when this …","An optional shutdown signal. This is only used when this …","Centralized server specific errors","Error sending output to consumer of …","SNAFU context selector for the <code>NetworkError::ChannelSend</code> …","Could not deliver a message to a specified recipient","SNAFU context selector for the …","Failed to deserealize a network message","SNAFU context selector for the …","Failed to serialize a network message","SNAFU context selector for the …","Libp2p specific errors","memory network specific errors","Error type for networking","interface describing how reliable the network is","Contains the metrics that we’re interested in from the …","Attempted to deliver a message to an unknown node","SNAFU context selector for the <code>NetworkError::NoSuchNode</code> …","The underlying connection has been shut down","SNAFU context selector for the <code>NetworkError::ShutDown</code> …","A timeout occurred","unable to cancel a request, the request has already been …","unimplemented functionality","Web server specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","A network implementation that attempts to connect to a …","","","","","","","","","","","","","A <code>Gauge</code> which tracks how many peers are connected","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A <code>Counter</code> which tracks how many messages have been received","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Libp2p based/production networking implementation This …","In memory network simulator","A <code>Counter</code> which tracks how many messages failed to send","Create a new instance of this <code>NetworkingMetrics</code> struct, …","A <code>Counter</code> which tracks how many messages have been send","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A network implementation that connects to a web server.","Networking Implementation that has a primary and a …","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","this is the first step of a multi-step match","","","","","","","","","","","","","","","","","","","","","","","","","","","libp2p identity communication channel","Handle for connecting to a centralized server","this completes a match of one or more steps","this is an intermediate step of a multi-step match","Could not deserialize a message","SNAFU context selector for the <code>Error::CouldNotDeserialize</code> …","We lost connection to the server","SNAFU context selector for the <code>Error::Disconnected</code> variant","Inner error type for the <code>run_background</code> function.","Failed to receive a message on the background task","SNAFU context selector for the <code>Error::FailedToReceive</code> …","Failed to send a message from the background task to the …","SNAFU context selector for the <code>Error::FailedToSend</code> variant","The inner state of the <code>CentralizedServerNetwork</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal implementation detail; retains state for …","Internal implementation detail; effectively allows …","this does not match the closure’s criteria","Generic error occured with the TCP stream","SNAFU context selector for the <code>Error::Stream</code> variant","","","","","","","","","collects the data for a stream, allowing it to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send a broadcast mesasge to the server.","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","Connect to a centralized server","Connect to a given socket address. Will loop and try to …","Connect with the server running at <code>addr</code> and retrieve the …","<code>true</code> if the TCP stream is connected to the server","Accumulates the indexes this stream will consume, if …","Create a <code>CentralizedServerNetwork</code>. Every time a new TCP …","the next ID","","","","","","","","","","","","","","","","","","","","","","","","Send a direct message to the server.","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get all the incoming broadcast messages received from the …","Get the amount of clients that are connected","passthru for example?","Get all the incoming direct messages received from the …","","","","","An internal queue of messages and, for some message types, …","","","","","","","","","","","","","","The inner state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of all known nodes","","","The total size the message will have For streams that …","The networking metrics we’re keeping track of","create new communication channel","Self-identifying public key","","A queue of messages to be received by this node. This is …","A loopback sender that will send to <code>receiving</code>, for …","","","Remove all messages from the internal queue, and then the …","Request the client count from the server","a sender used to immediately broadcast the amount of …","Initialize a <code>TcpStreamUtil</code>. This will send an identify …","Loop on the TCP recv stream.","Loop on the <code>to_background</code> channel.","Returns <code>true</code> if the server indicated that the current run …","<code>true</code> if the server indicated that the run is ready to …","<code>true</code> if the client is still running.","Send the results for this run to the server","passthru for example?","A queue of messages to be send to the server. This is …","An optional shutdown signal. This is only used when this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The inner error","The inner error","","","","","","","","","","","","","","","","","","","","","","","","Stubbed out Ack","Empty value","libp2p identity communication channel","Networking implementation that uses libp2p generic over <code>M</code> …","The underlying state of the libp2p network","","","","","","","","","","","","","","","","","","","","","","","","Type alias for a shared collection of peerid, multiaddrs","hardcoded topic of QC used","","","make network aware of known peers","","","","","","","","","this is really cheating to enable local tests hashset of …","bootstrap","","","","","","","","","","","map of known replica peer ids to public keys","Sender for broadcast messages","","","","","","","","","","","","","max time before dropping message due to DHT error","","","Receiver for direct messages","Sender for direct messages (only used for sending messages …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a boxed function …","Returns a boxed function …","handle to control the network","","","","","","","","","holds the state of the libp2p network","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","whether or not we’ve bootstrapped into the DHT yet","","","whether or not the network is ready to send","","","The networking metrics we’re keeping track of","Constructs new network for a node. Note that this network …","create a new libp2p communication channel","this node’s public key","Bidirectional map from public key provided by espresso to …","","","","","","Initiates connection to the outside world","task to propagate messages to handlers terminates on shut …","","","topic map hash(hashset) -&gt; topic btreemap ordered so is …","","","","","","","","","","","","","","","","","","Returns when network is ready","","Broadcast message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal enum for combining streams","Direct message","dummy implementation of network reliability","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shared state for in-memory mock networking.","memory identity communication channel","In memory only network simulator.","Internal state for a <code>MemoryNetwork</code> instance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send a <code>Vec&lt;u8&gt;</code> message to the inner <code>broadcast_input</code>","Input for broadcast messages","","","Output for broadcast messages","","","","","","","","","","","","","","","","","","","Send a <code>Vec&lt;u8&gt;</code> message to the inner <code>direct_input</code>","Input for direct messages","","","Output for direct messages","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The id of this <code>MemoryNetwork</code> cluster","","","Count of messages that are in-flight (send but not …","","","","","","","","","The actual internal state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The list of <code>MemoryNetwork</code>s","The master map","The networking metrics we’re keeping track of","Create a new, empty, <code>MasterMap</code>","Creates a new <code>MemoryNetwork</code> and hooks it up to the group …","create new communication channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus info that is injected from <code>HotShot</code>","Represents the core of web server networking","","","","","","","","","","Enum for matching messages to their type","Message is a proposal","A message being received from the web server","Trait for messages being received from the web server","A message being sent to the web server","Trait for messages being sent to the web server","Message is a transaction","Message is a vote or time out","Represents the communication channel abstraction for the …","The web server network state","","","","","","Whether this node is the leader of <code>view_number</code>","Our own key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","broadcast message to those listening on the communication …","broadcast message to some subset of nodes blocking","Queue for broadcasted messages","The connectioni to the web server","","","","","","","","","","","The web server connection is ready","Consensus data about the current view number, leader, and …","Creates a new instance of the <code>WebServerNetwork</code>","","","","","","","","","","","","","","","","","","Sends a direct message to a specific node blocking","Sends a direct message to a specific node blocking","Queue for direct messages","","","","","","","","The endpoint to send the message to","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the endpoint to send the message to","","Returns the actual message being sent","Returns the actual message being received","","","Sends a GET request to the webserver for some specified …","","","","","","","","","","","","The inner, core state of the web server network","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Whether this node is the leader of the next view","checks if the network is ready nonblocking","checks if the network is ready nonblocking","look up a node blocking","look up a node blocking","The optional message, or body, to send","The optional message being received","Create new communication channel","Parses a message to find the appropriate endpoint Returns …","Phantom data for generic types","Polls the web server at a given endpoint while the client …","Post a message to the web server and return the result","Moves out the entire queue of received messages of ’…","Moves out the entire queue of received messages of ’…","Launches background tasks for polling the web server","Client is running","","","An optional shutdown signal. This is only used when this …","Shut down this network. Afterwards this network should no …","Blocks until the network is shut down then returns true","","","","","","","","","","","","","","","","","","","","","","","","","","","The latest view number","","","","","","","","The duration to wait between poll attempts","Blocks until node is successfully initialized into the …","Blocks until the network is successfully initialized","","","","","","","","","Wrapper for the tuple of <code>WebServerNetwork</code> and <code>Libp2pNetwork</code>","","","","","","","","","A communication channel with 2 networks, where we can fall …","","","","","","","","","","","","","","","","","","","","Get a ref to the backup network","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get the number of messages in-flight.","Get the number of messages in-flight.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Get a ref to the primary network","The two networks we’ll use for send/recv","Constructor","","","","","","","","","","","","","Communication channel the DA committee. Only needed for …","Connected network for the DA committee. Only needed for …","Consensus message type.","Consensus type selected exchanges.","Leaf type for this consensus implementation","Node implementation aggregate trait","Storage type for this consensus implementation","extra functions required on a node implementation to be …","generate a genesis block","Generate a committee communication channel given the …","Create ephemeral storage Will be deleted/lost immediately …","The private key of the node <code>id</code> in a test.","Return the full internal state. This is useful for …","Creates random transaction if possible otherwise panics …","Generate a quorum network given an expected node count.","Create channels for sending/recv-ing proposals and votes …","Generate a quorum communication channel given the network.","Creates random transaction if possible otherwise panics …","the number of transactions in a block","Result for a storage type","Abstraction over on disk persistence of node state","Append the list of views to this storage","Insert a single view. Shorthand for","Cleans up the storage up to the given view. The given view …","Commit this storage.","Get the latest anchored view","<code>HashMap</code> and <code>Vec</code> based implementation of the storage trait","In memory, ephemeral, storage for a <code>HotShot</code> instance","Internal state for a <code>MemoryStorage</code>","","","","","","","","","","","","","","","","","","","","","","Create a new instance of the memory storage with the given …","The views that have failed","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The inner state of this <code>MemoryStorage</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The views that have been stored","","","","","","","","","","A block failed verification","Internal value used to drive the state machine","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","Failed to broadcast a message on the network","Failed to Message the leader in the given stage","Error type for <code>HotShot</code>","A block was not consistent with the existing state","Not enough valid signatures for a quorum","Invalid state machine state","Item was not present in storage","Incoming message","Miscelaneous error TODO fix this with #181 …","Failure in networking layer","A next leader task was canceled by a timeout interrupt","The private key type for this signature algorithm","A replica task was canceled by a timeout interrupt","Trait for abstracting public key signatures","Error accesing storage","Event streaming handle for a <code>SystemContext</code> instance …","HotShot timed out waiting for msgs","The view has finished.  If values were decided on, a <code>Decide</code>…","HotShot timed out during round","The vote sent by consensus messages.","","","","Phantom data.","","","","","","","","","","","","","","","","","","","The view this vote was cast for.","","","","","","","","","","","Demonstration implementation of the <code>SignatureKey</code> trait …","","Events that a <code>HotShot</code> instance can emit","The underlying event","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a public key from bytes","Produce a public key from a private key","Generate a new key pair","get the view number out of a message","Provides an event-streaming handle for a [<code>HotShot</code>] running …","Internal reference to the underlying [<code>HotShot</code>]","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The message kind","","The sender of this message","The sender for the output stream from the background …","","Global to signify the <code>SystemContext</code> should be closed after …","Produce a signature","Our copy of the <code>Storage</code> view for a hotshot","The <code>BroadcastReceiver</code> we get the events from","Serialize a public key to bytes","","","","","","","","","","","","","Validate a signature","The view number that this event originates from","","","","The underlying error","The chain of Leafs that were committed by this decision","The QC signing the most recent leaf in <code>leaf_chain</code>.","The view that timed out","The view that timed out","The view number that has just finished","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","Private key type for a ed25519 keypair","Public key type for an ed25519 <code>SignatureKey</code> pair","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an existing private key from bytes","","","","","Generate a new private key from scratch","Generate a new private key from a seed","","Generate a new private key from a seed and a number","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Convert a private key to bytes","","","","","","Return the <code>TaggedBase64</code> representation of this key.","Return the <code>TaggedBase64</code> representation of this key.","","","","","","","","","","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","A next leader task was canceled by a timeout interrupt","A replica task was canceled by a timeout interrupt","The view has finished.  If values were decided on, a <code>Decide</code>…","The underlying event","The view number that this event originates from","The underlying error","The chain of Leafs that were committed by this decision","The QC signing the most recent leaf in <code>leaf_chain</code>.","The view that timed out","The view that timed out","The view number that has just finished","","","","","","","","","Event streaming handle for a <code>SystemContext</code> instance …","","","","Will pull all the currently available events out of the …","","","","","iterate through all events on a <code>NodeImplementation</code> and …","create a yes message","","","","Returns the argument unchanged.","Wrapper to get this node’s current view","Gets most recent decided leaf","Wrapper for <code>HotShotConsensusApi</code>’s <code>get_leader</code> function","Get length of the next leaders’s receiver channel","return the timeout for a view of the underlying …","Wrapper to get this node’s public key","Get length of the replica’s receiver channel","Gets the current committed state of the [<code>HotShot</code>] instance","Internal reference to the underlying [<code>HotShot</code>]","","Calls <code>U::from(self)</code>.","","","","Will return the next event in the queue","Wrapper around <code>HotShotConsensusApi</code>’s …","Wrapper around <code>HotShotConsensusApi</code>’s …","The sender for the output stream from the background …","Shut down the the inner hotshot and wait until all …","Global to signify the <code>SystemContext</code> should be closed after …","Wrapper around <code>HotShotConsensusApi</code>’s …","Signals to the underlying <code>SystemContext</code> to unpause","Signals the underlying <code>SystemContext</code> to run one round, if …","Provides a reference to the underlying storage for this …","Our copy of the <code>Storage</code> view for a hotshot","The <code>BroadcastReceiver</code> we get the events from","Submits a transaction to the backing [<code>HotShot</code>] instance.","","","","Will attempt to immediately pull an event out of the queue","","","Block the underlying quorum (and committee) networking …"],"i":[5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,5,0,5,11,12,13,202,11,202,30,5,11,12,13,202,30,5,11,12,13,5,202,5,202,30,5,11,12,13,202,30,5,11,12,13,5,0,202,11,12,13,11,12,13,202,203,11,11,202,11,11,0,202,30,5,11,12,13,202,30,5,11,12,13,5,0,202,30,5,11,12,13,202,202,5,5,202,30,5,11,12,13,30,30,11,11,11,203,11,11,203,203,11,11,203,203,5,202,5,202,30,5,11,11,12,13,30,11,12,13,202,30,5,11,12,13,202,30,5,11,12,13,202,30,5,11,12,13,202,30,5,11,12,13,12,13,12,13,11,12,13,202,12,13,12,13,5,12,13,202,11,0,202,204,11,11,11,12,13,13,13,11,12,13,12,13,202,12,13,5,203,11,11,202,12,13,0,11,11,12,13,5,12,13,0,203,11,11,202,202,30,5,11,12,13,202,30,5,11,12,13,202,30,5,11,12,13,0,202,30,5,11,12,13,205,206,207,208,209,210,211,212,213,207,213,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,73,75,0,75,0,75,0,75,0,73,75,0,75,0,0,0,0,0,0,0,82,83,84,73,74,76,77,78,79,80,81,73,74,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,75,75,82,73,74,74,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,76,77,78,79,80,81,75,82,83,84,73,74,76,77,78,79,80,81,82,83,84,73,74,76,77,78,79,80,81,82,73,74,73,74,74,82,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,75,82,83,84,73,74,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,82,82,82,83,83,83,84,84,84,73,73,73,74,74,74,76,77,78,79,80,81,82,73,74,82,83,84,73,73,74,75,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,73,82,83,84,73,74,82,83,84,73,74,73,75,82,75,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,76,77,78,79,80,81,82,73,74,74,82,74,84,75,82,83,84,73,74,75,82,73,74,82,83,84,73,74,76,77,78,79,80,81,73,75,84,82,83,84,73,74,75,76,77,78,79,80,81,82,83,84,73,74,75,76,77,78,79,80,81,82,73,74,73,82,83,84,73,74,75,76,77,78,79,80,81,74,74,82,83,84,73,74,75,76,77,78,79,80,81,0,0,0,0,0,0,0,0,88,90,0,90,0,90,0,90,0,0,0,0,0,0,90,0,90,0,88,90,0,90,0,0,0,0,0,0,0,0,0,0,99,100,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,102,101,88,99,100,89,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,90,90,89,101,89,88,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,91,92,93,94,95,96,97,98,90,99,100,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,104,101,89,88,104,88,89,89,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,90,99,100,101,89,102,103,88,104,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,101,89,102,103,88,104,99,99,99,100,100,100,101,101,101,89,89,89,102,102,102,103,103,103,88,88,88,104,104,104,91,92,93,94,95,96,97,98,101,89,88,99,100,90,90,91,92,93,94,95,96,97,98,101,89,102,103,88,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,88,88,99,100,101,89,102,103,88,104,99,100,101,89,102,103,88,104,90,88,90,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,91,92,93,94,95,96,97,98,88,106,89,101,89,101,104,103,90,0,0,99,100,101,89,102,103,88,104,90,101,101,89,88,99,100,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,90,88,103,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,101,89,88,88,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,89,101,99,100,90,91,92,93,94,95,96,97,98,101,89,102,103,88,104,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,113,214,113,214,113,214,113,214,113,214,214,214,113,214,113,214,113,214,113,214,113,214,113,113,214,113,214,113,214,113,214,113,214,214,0,0,214,214,113,113,214,214,113,214,113,214,113,0,214,113,113,0,215,54,54,216,216,10,54,217,215,10,54,54,10,54,54,0,0,54,0,54,0,0,10,0,0,215,54,217,54,54,54,217,215,218,218,54,54,54,54,216,54,54,54,218,218,216,216,217,54,54,54,54,0,0,54,54,54,54,216,218,216,54,0,54,54,54,54,54,54,216,216,0,217,10,215,0,215,54,216,180,180,54,216,0,54,54,54,216,54,215,54,219,220,221,222,223,224,225,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,0,0,0,0,0,127,128,129,127,127,127,128,129,127,128,129,128,127,128,129,127,128,129,127,128,129,127,128,129,128,127,129,127,127,128,129,127,128,129,128,129,127,128,129,127,128,127,127,127,128,128,128,127,128,127,128,129,127,128,129,127,128,127,127,128,127,128,129,127,128,129,127,128,129,127,128,129,127,128,129,127,127,127,128,128,129,128,127,128,127,128,129,127,128,129,127,128,129,128,127,128,129,127,128,127,128,129,0,0,0,0,134,136,134,136,134,136,134,136,134,136,134,136,134,136,134,136,136,136,134,136,134,136,134,136,134,136,136,136,136,136,134,136,134,136,136,136,136,136,136,136,136,134,136,134,136,134,136,134,136,134,136,134,136,136,134,136,136,136,134,136,134,134,136,134,136,134,136,136,134,136,0,0,0,0,0,0,0,0,0,0,0,0,0,179,150,171,175,183,194,179,192,150,183,54,54,0,54,0,54,0,54,0,54,54,0,0,0,54,0,54,0,54,54,54,54,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,139,140,141,142,0,139,140,143,144,141,142,139,140,143,144,141,142,145,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,139,140,141,142,139,140,143,144,141,142,145,139,140,143,144,141,142,145,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,139,140,143,144,141,142,0,0,145,145,145,180,180,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,145,139,140,143,144,141,142,0,0,219,220,221,222,223,224,225,226,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,226,146,0,146,0,0,146,0,146,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,146,0,0,150,158,155,156,159,157,154,227,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,146,146,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,148,150,154,155,156,157,146,150,158,155,156,159,157,154,150,158,155,156,159,157,154,150,150,150,148,227,150,148,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,146,148,150,154,226,227,148,150,150,146,158,155,156,159,157,154,155,156,157,148,150,146,146,158,155,156,159,157,154,226,227,148,150,146,146,158,155,156,159,157,154,154,150,154,148,150,154,148,146,146,150,154,148,226,227,148,150,146,158,155,156,159,157,154,150,154,150,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,158,155,156,159,157,150,154,148,150,154,227,148,154,148,146,148,148,150,154,148,148,148,0,0,0,150,148,148,150,154,148,150,150,154,146,150,158,155,156,159,157,154,146,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,226,227,148,150,146,158,155,156,159,157,154,150,154,228,229,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,172,171,230,174,171,172,230,174,171,172,230,230,230,174,171,172,230,174,171,172,171,172,230,230,171,172,171,172,230,174,171,172,230,174,171,172,230,171,172,230,230,230,174,171,172,171,172,230,174,171,172,172,171,172,230,171,172,230,174,171,172,171,172,171,230,174,171,172,230,174,171,172,230,174,171,172,230,174,171,172,230,171,172,230,171,172,230,171,172,230,230,171,172,174,171,172,171,171,171,172,230,230,174,171,172,230,174,171,172,230,174,171,172,230,174,171,172,171,171,172,231,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,175,177,231,232,178,179,175,177,231,232,178,179,175,177,231,232,178,179,175,177,231,232,178,179,175,177,175,232,175,177,232,178,175,177,178,175,177,231,232,178,179,175,177,231,232,178,179,175,177,175,232,175,177,232,231,232,178,179,175,177,178,179,175,177,231,232,178,179,175,177,177,175,177,179,175,177,232,231,232,178,179,175,177,175,177,175,231,232,178,179,175,177,231,232,178,179,175,177,231,232,178,179,175,177,231,232,178,179,175,177,175,177,175,177,179,232,232,179,175,177,175,177,178,178,175,177,178,175,177,231,232,178,179,175,177,231,232,178,179,175,177,231,232,178,179,175,177,231,232,178,179,175,177,175,177,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,188,188,0,0,181,183,184,185,186,184,189,181,183,184,189,185,186,188,181,183,184,189,185,186,188,181,183,184,189,185,186,188,181,183,184,189,185,186,188,181,183,189,189,181,183,184,185,186,181,183,184,185,186,189,189,183,184,181,183,184,189,185,186,188,181,183,184,189,185,186,188,185,186,181,183,189,181,183,184,189,185,186,188,185,185,186,188,181,183,184,189,185,186,181,183,184,189,185,186,188,181,181,183,233,185,233,234,185,186,189,181,183,181,183,184,189,185,186,188,181,183,183,181,183,184,189,185,186,188,181,183,184,189,185,186,188,181,183,184,189,185,186,188,181,183,184,189,185,186,188,184,181,183,181,183,185,186,181,183,189,189,183,181,183,183,189,185,186,183,181,183,181,183,184,185,186,181,183,184,189,185,186,188,181,183,184,189,185,186,188,181,183,184,189,185,186,188,184,181,183,184,189,185,186,188,189,181,183,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,192,193,192,193,192,193,192,193,192,192,192,192,193,192,193,192,192,193,192,192,193,192,193,192,192,193,192,193,192,193,192,192,193,192,193,192,193,192,193,192,192,192,192,192,192,192,192,192,193,192,193,192,193,192,193,192,216,216,10,10,10,0,10,0,216,216,216,216,216,216,216,10,216,216,216,0,0,218,218,218,218,218,0,0,0,194,194,235,194,235,194,235,194,235,194,194,194,194,194,194,235,194,235,194,235,194,194,235,235,194,194,194,235,194,194,235,194,235,194,235,194,235,194,235,194,235,194,235,194,235,194,235,194,5,5,196,196,0,0,5,5,0,5,5,5,5,0,5,5,196,126,196,0,5,0,5,196,5,0,55,196,39,39,55,196,39,55,196,39,55,196,39,55,196,39,55,196,39,55,196,39,153,55,196,39,55,196,39,39,55,196,39,0,39,0,55,55,196,39,55,196,39,126,126,126,39,0,46,55,196,39,55,196,39,55,196,39,55,196,39,55,196,39,39,39,39,46,39,46,126,46,46,126,55,196,39,55,196,39,55,196,39,55,196,39,126,55,55,196,39,236,237,237,238,239,240,205,206,207,208,209,210,211,212,213,207,213,0,0,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,198,198,199,199,199,198,199,199,198,199,198,199,199,198,199,198,198,199,198,199,199,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,199,198,199,198,199,198,199,198,199,198,199,198,199,198,199,199,198,199,196,196,0,0,196,196,196,55,55,236,237,237,238,239,240,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],0,[[[5,[4]]],[[7,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],[[7,[3]]]],0,0,[[[11,[[0,[8,9]],[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]],[[11,[[0,[8,9]],[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]]],[[[12,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]],[[12,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]]],[[[13,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]],[[13,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]]],[[]],[[]],[[]],0,[[],[[16,[[15,[14]]]]]],[[[11,[17,4,[10,[4]]]]],[[16,[[15,[[14,[4]]]]]]]],[[[11,[18,4,[10,[4]]]]],[[16,[[15,[[14,[4]]]]]]]],0,[[[20,[[19,[4,[10,[4]]]]]]],[[21,[4,[10,[4]]]]]],[[[22,[[19,[4,[10,[4]]]]]]],[[21,[4,[10,[4]]]]]],0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[[5,[4]]],24],0,[23],[23],[23],[23],[23],[23],0,0,[[[5,[4]],25],[[27,[26]]]],[[[5,[[0,[28,4]]]],25],[[27,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[27,[[30,[4,29]],[5,[4]]]]]],[29,[[30,[4,29]]]],[[[11,[4,[10,[4]]]]]],[[[11,[4,[10,[4]]]]],31],[[[11,[4,[10,[4]]]]]],[[],[[34,[[33,[32]]]]]],[[[11,[18,4,[10,[4]]]],[35,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[11,[17,4,[10,[4]]]],[36,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[37,38],[[34,[[33,[32]]]]]],[[],[[34,[[33,[32]]]]]],[[[11,[18,4,[10,[4]]]],[35,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[11,[17,4,[10,[4]]]],[36,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[37,38],[[34,[[33,[32]]]]]],[[37,39,40],[[34,[[33,[32]]]]]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],0,[[]],[[],23],[[],23],[[],23],[[],23],[[31,44,[30,[4]],[33,[45]]],[[27,[[46,[4,[10,[4]]]],[5,[4]]]]]],[[],23],[[],23],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[[[12,[4,[10,[4]]]]],49],[[[13,[4,[10,[4]]]]],49],[[[12,[4,[10,[4]]]]],23],[[[13,[4,[10,[4]]]]],23],[[31,44,[30,[4]],[33,[45]]],[[27,[[11,[4,[10,[4]]]],[5,[4]]]]]],[[[12,[4,[10,[4]]]]]],[[[13,[4,[10,[4]]]]]],0,[[[12,[4,[10,[4]]]]],50],[[[13,[4,[10,[4]]]]],50],[[[12,[4,[10,[4]]]]],50],[[[13,[4,[10,[4]]]]],50],[51],[[[12,[4,[10,[4]]]]]],[[[13,[4,[10,[4]]]]]],0,[[[11,[4,[10,[4]]]]],[[27,[[5,[4]]]]]],0,0,[11,[[34,[[33,[32]]]]]],[[[11,[18,4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[11,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[11,[4,[10,[4]]]],[53,[[52,[4,[10,[4]]]]]]],[[27,[54]]]],[[[12,[4,[10,[4]]]],[36,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]],[35,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]],[35,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]],[35,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[11,[4,[10,[4]]]],[53,[[52,[4,[10,[4]]]]]]],[[27,[54]]]],[[[12,[4,[10,[4]]]],[36,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]],[35,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[12,[4,[10,[4]]]],[55,[4]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]],[55,[4]]],[[34,[[33,[32]]]]]],0,[[[12,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[5,[4]]],[[7,[3]]]],[[],[[34,[[33,[32]]]]]],[[[11,[18,4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[11,[17,4,[10,[4]]]]],[[34,[[33,[32]]]]]],0,[[[12,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[13,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],0,[[[11,[4,[10,[4]]]],56,[7,[56]]]],[[]],[[]],[[]],[[],57],[[[12,[4,[10,[4]]]]],49],[[[13,[4,[10,[4]]]]],49],0,[[],[[16,[[60,[[59,[58]]]]]]]],[[[11,[18,4,[10,[4]]]]],[[16,[[60,[[59,[58]]]]]]]],[[[11,[17,4,[10,[4]]]]],[[16,[[60,[[59,[58]]]]]]]],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],58],[[]],[[]],[[[62,[[0,[8,4]],[0,[8,29]]]]],[[62,[[0,[8,4]],[0,[8,29]]]]]],[[]],[[[62,[4,29]]],[[58,[[62,[4,29]]]]]],[23],[23],[63,[[27,[[62,[4,29]]]]]],[23],[[[62,[[0,[[64,[[0,[[64,[[0,[[64,[[0,[64,4]]]],4]]]],4]]]],4]],[0,[[64,[[0,[[64,[[0,[[64,[[0,[64,29]]]],29]]]],29]]]],29]]]],[62,[[0,[[64,[[0,[[64,[[0,[[64,[[0,[64,4]]]],4]]]],4]]]],4]],[0,[[64,[[0,[[64,[[0,[[64,[[0,[64,29]]]],29]]]],29]]]],29]]]]],65],[[],65],[[],65],[[],65],[[],27],[[[62,[4,29]],25],[[27,[26]]]],[[[62,[4,29]],25],[[27,[26]]]],[[]],[[[66,[29]],[58,[29]]],[[62,[4,29]]]],[[],[[62,[4,29]]]],[[[0,[67,68]],69],31],[[[62,[[0,[67,4]],[0,[67,29]]]],70]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[],23],[[]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[[[62,[4,29]]],65],0,[[[62,[4,29]]],[[58,[29]]]],0,[[[62,[4,[0,[29,71]]]],72],27],[[[62,[4,29]],[58,[29]]]],[[[62,[4,29]]],[[66,[29]]]],0,[[],57],[[]],[[],57],[[],27],[[],27],[[],27],[[],61],[[[62,[4,29]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[73,[[27,[73]]]],[74,[[27,[74]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[75,[[7,[6]]]],[[],58],[[],58],[[],58],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,75],[77,75],[78,75],[79,75],[80,75],[81,75],[75,[[7,[3]]]],[82,82],[83,83],[84,84],[73,73],[74,74],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,[[58,[82]]]],[73,[[58,[73]]]],[74,[[58,[74]]]],[73,[[85,[58]]]],[[[7,[74]],86,31]],[[],74],[23],[82],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[75,24],[63,[[27,[82]]]],[63,[[27,[83]]]],[63,[[27,[84]]]],[63,[[27,[73]]]],[63,[[27,[74]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[82,82],65],[[83,83],65],[[84,84],65],[[73,73],65],[[74,74],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[76,[[27,[75]]]],[77,[[27,[75]]]],[78,[[27,[75]]]],[79,[[27,[75]]]],[80,[[27,[75]]]],[81,[[27,[75]]]],[[],27],[[],27],[[],27],[[82,25],87],[[83,25],87],[[84,25],87],[[73,25],87],[[73,25],87],[[74,25],87],[[75,25],87],[[75,25],87],[[76,25],87],[[77,25],87],[[78,25],87],[[79,25],87],[[80,25],87],[[81,25],87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[82,70]],[[83,70]],[[84,70]],[[73,70]],[[74,70]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],0,[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[76,75],[77,75],[78,75],[79,75],[80,75],[81,75],[31,82],[[],73],[[[7,[74]]]],[74],0,0,0,[51],[[82,72],27],[[83,72],27],[[84,72],27],[[73,72],27],[[74,72],27],[75,[[7,[3]]]],[[],57],[[],57],[[],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],57],[[],57],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[73,31],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[74,65],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,0,[88,[[27,[88]]]],0,0,[89,[[27,[89]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[90,[[7,[6]]]],0,[[],58],[[],58],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[91,90],[92,90],[93,90],[94,90],[95,90],[96,90],[97,90],[98,90],[90,[[7,[3]]]],[99,99],[100,100],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[101,101],[89,89],[102,102],[103,103],[88,88],[104,104],[[[106,[[0,[[105,[104]],28]]]]],[[106,[[0,[[105,[104]],28]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[104,104],107],[101,[[58,[101]]]],[89,[[58,[89]]]],[88,[[58,[88]]]],[[],107],[88,[[85,[[58,[101]]]]]],[[[7,[89]],86,31]],[[],89],[[],104],[[],[[106,[[0,[[105,[104]],28]]]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[90,24],[63,[[27,[99]]]],[63,[[27,[100]]]],[63,[[27,[101]]]],[63,[[27,[89]]]],[63,[[27,[102]]]],[63,[[27,[103]]]],[63,[[27,[88]]]],[63,[[27,[104]]]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[99,99],65],[[100,100],65],[[101,101],65],[[89,89],65],[[102,102],65],[[103,103],65],[[88,88],65],[[104,104],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[91,[[27,[90]]]],[92,[[27,[90]]]],[93,[[27,[90]]]],[94,[[27,[90]]]],[95,[[27,[90]]]],[96,[[27,[90]]]],[97,[[27,[90]]]],[98,[[27,[90]]]],[[],27],[[],27],[[],27],[[99,25],87],[[100,25],87],[[90,25],87],[[90,25],87],[[91,25],87],[[92,25],87],[[93,25],87],[[94,25],87],[[95,25],87],[[96,25],87],[[97,25],87],[[98,25],87],[[101,25],87],[[89,25],87],[[102,25],87],[[103,25],87],[[88,25],87],[[88,25],87],[[104,25],87],[[[106,[[0,[[105,[104]],28]]]],25],87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],88],[[[110,[108,109]]],88],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[[0,[67,68]],69],31],[[99,70]],[[100,70]],[[101,70]],[[89,70]],[[102,70]],[[103,70]],[[88,70]],[[104,70]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[91,90],[92,90],[93,90],[94,90],[95,90],[96,90],[97,90],[98,90],[[],88],[[],[[106,[[0,[[105,[104]],28]]]]]],[[[7,[89]]]],0,[89],0,[[104,104],[[7,[107]]]],0,[51],[86,[[62,[4,29]]]],[86,[[111,[4]]]],[[99,72],27],[[100,72],27],[[101,72],27],[[89,72],27],[[102,72],27],[[103,72],27],[[88,72],27],[[104,72],27],[90,[[7,[3]]]],0,[[],57],[[],57],[[],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],57],[[],57],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[88,31],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[89,65],[101,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,0,0,[[],[[113,[[0,[112,4]]]]]],[23],[23],[23],[23],[23],[23],[[]],[[]],[[],23],[[],23],0,[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],0,0,[[[11,[4,[10,[4]]]],[16,[114]]]],[[[11,[4,[10,[4]]]],[16,[114]],40,[16,[[115,[4,[39,[4,[10,[4]]]]]]]]]],0,0,[[[113,[4]]]],[[[113,[4]]]],0,[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[[11,[4,[10,[4]]]],[16,[114]],[16,[114]],[7,[116]]]],[[]],[[]],[[[113,[4]],[56,[7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],27],[[],27],[[[118,[117,47]]],[[34,[[33,[32,47]]]]]],[119,[[34,[[33,[32,47]]]]]],[[],2],[[],2],[[],3],[54,[[7,[6]]]],[[]],[[]],[[]],[54,[[7,[3]]]],[[],[[34,[[33,[32,47]]]]]],[[],[[34,[[33,[32,47]]]]]],[[],[[33,[120,47]]]],[[],[[27,[121]]]],[[],[[85,[58,122]]]],[23],[23],[54,24],[23],0,0,[[54,25],[[27,[26]]]],[[54,25],[[27,[26]]]],[123,54],[[]],[31],[[],[[34,[[33,[32,47]]]]]],[[],[[34,[[33,[32,47]]]]]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],0,[[]],[[],23],[[]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[[86,31]],[[23,23,23],[[33,[120,47]]]],0,[[]],[[]],[7],0,[[]],[51],[[],[[33,[120,47]]]],[[],50],[[],65],[54,[[7,[3]]]],[[7,86,31]],0,[[],57],[[],27],[[],27],[[],31],[[],61],[[],65],[[]],0,0,0,0,0,0,0,0,[1],[124,[[27,[124]]]],[[],2],[[],2],[[],58],[[]],[[]],[124,124],[[]],[124,[[58,[124]]]],[[[7,[124]],86,31],125],[[],124],[23],[23],[63,[[27,[124]]]],[23],[[124,124],65],[[],65],[[],65],[[],65],[[],27],[[124,25],[[27,[26]]]],[[]],[[[0,[67,68]],69],31],[[124,70]],[[],23],[[]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[[[7,[124]]]],0,[124],[86,124],[[124,72],27],[[],57],[[]],[[],27],[[],27],[[],27],[[],61],[124,65],[[]],0,0,0,0,0,0,[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],58],[[]],[[]],[[]],[[]],[[]],[[]],[[[127,[8,[0,[8,29]],[0,[8,126]]]]],[[127,[8,[0,[8,29]],[0,[8,126]]]]]],[[[128,[[0,[8,126]]]]],[[128,[[0,[8,126]]]]]],[129,129],[[]],[[]],[[]],[[[128,[126]]],[[58,[[128,[126]]]]]],[[[118,[126]]],[[127,[4,29,126]]]],[[],129],[31],[23],[23],[23],[23],[23],[23],[63,[[27,[[128,[126]]]]]],[63,[[27,[129]]]],[23],[23],[23],[[[127,[64,[0,[64,29]],[0,[64,126]]]],[127,[64,[0,[64,29]],[0,[64,126]]]]],65],[[[128,[[0,[64,126]]]],[128,[[0,[64,126]]]]],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[[127,[4,29,126]]],130],[[],27],[[[127,[28,[0,[28,29]],[0,[28,126]]]],25],87],[[[128,[[0,[28,126]]]],25],87],[[129,25],87],[[]],[[]],[[]],[[[127,[4,29,126]]],131],[[[0,[67,68]],69],31],[[[127,[4,29,126]]],126],[[[127,[4,29,126]]]],[[[128,[[0,[67,126]]]],70]],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[[[127,[4,29,126]]],[[27,[[7,[[128,[126]]]],132]]]],[[[118,[126]]],[[127,[29,126]]]],0,0,[[[128,[[0,[71,126]]]],72],27],[[129,72],27],0,[[[127,[4,29,126]]],130],[[],57],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[[127,[4,29,126]],126,133],[[27,[133,132]]]],[[[128,[126]]],130],[[]],[[]],[[]],0,0,0,0,[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[134,134],[[[136,[135]]],[[136,[135]]]],[[]],[[]],[[[136,[135]],[136,[135]]],107],[[],107],[23],[23],[23],[23],[63,[[27,[134]]]],[63,[[27,[[136,[135]]]]]],[23],[23],[[[136,[135]],[136,[135]]],65],[[],65],[[],65],[[],65],[[[134,[28,28,28]],25],87],[[[136,[135]],25],87],[[]],[[]],[137,[[7,[[136,[135]]]]]],[[],[[136,[135]]]],[[],[[136,[135]]]],[31],[31],[[[0,[67,68]],69],31],[[[136,[135]],70]],[[],23],[[],23],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],0,[[[136,[135]],[136,[135]]],[[7,[107]]]],0,[[134,72],27],[[[136,[135]],72],27],[[],138],[[[136,[135]]],137],[[]],[[]],0,[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[[136,[135]],138],65],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[139,54],[140,54],[141,54],[142,54],0,[139,139],[140,140],[143,143],[144,144],[141,141],[142,142],[[]],[[]],[[]],[[]],[[]],[[]],0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[139,[[27,[54]]]],[140,[[27,[54]]]],[141,[[27,[54]]]],[142,[[27,[54]]]],[[139,25],[[27,[26]]]],[[140,25],[[27,[26]]]],[[143,25],[[27,[26]]]],[[144,25],[[27,[26]]]],[[141,25],[[27,[26]]]],[[142,25],[[27,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[139,54],[140,54],[143,54],[144,54],[141,54],[142,54],0,0,0,[45,145],0,[[],50],[[],65],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[146,[[7,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[148,[126,147]],[118,[149]]]],[[[150,[126,147]],151,[131,[126]]],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]],[105,[4]]],[[34,[[33,[32]]]]]],[155,146],[156,146],[157,146],[146,[[7,[3]]]],[[[150,[[0,[8,126]],[0,[8,147]]]]],[[150,[[0,[8,126]],[0,[8,147]]]]]],[158,158],[155,155],[156,156],[159,159],[157,157],[[[154,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]],[[154,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[45,[118,[126]],160,126],[[150,[126,147]]]],[160,161],[[[33,[45]],160]],0,0,[[45,[118,[126]],[0,[162,42]],126],[[150,[126,147]]]],0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[146,24],[[[148,[126,147]],126,[118,[149]]]],[[[150,[126,147]],151,126],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[23],[23],[23],[[[150,[126,147]]]],[23],[23],[23],[23],[23],[23],[23],[23],[155,[[27,[146]]]],[156,[[27,[146]]]],[157,[[27,[146]]]],[[[148,[[0,[28,126]],147]],25],87],[[[150,[[0,[28,126]],[0,[28,147]]]],25],87],[[146,25],87],[[146,25],87],[[158,25],87],[[155,25],87],[[156,25],87],[[159,25],87],[[157,25],87],[[[154,[[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]],[0,[28,[105,[[0,[28,4]]]]]]]],25],87],[[]],[[]],[[]],[[]],[163,146],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[[148,[126,147]]],[[118,[[27,[[0,[71,164,42,37,8]],165]]]]]],[[[150,[126,147]]],166],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],166],[[[148,[126,147]]],[[118,[[27,[[0,[71,164,42,37,8]],165]]]]]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[]],[150,[[7,[23]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[7,[23]]]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[150,[126,147]]],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[158,146],[155,146],[156,146],[159,146],[157,146],[[[150,[126,147]]],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,[[[150,[126,147]],126],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,0,[[[16,[150]]],[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]]],0,[51],0,0,[[[150,[126,147]],40],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]],40],[[34,[[33,[32]]]]]],[[[148,[126,147]],120],118],[[[148,[126,147]],[167,[166]]]],0,[[168,169,126,116,56,[16,[[148,[126,147]]]]],[[27,[146]]]],[[168,56,[16,[[148,[126,147]]]]],[[27,[146]]]],[[169,116],[[27,[146]]]],[[[150,[126,147]]],65],0,0,[[[150,[126,147]],170]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]],170]],0,0,[[[150,[126,147]]],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[146,[[7,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],57],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[150,[126,147]]],[[34,[[33,[32]]]]]],[[[154,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[[171,[151,126]],118],[[27,[54]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[171,[151,126]],151,[131,[126]]],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]],[105,[4]]],[[34,[[33,[32]]]]]],0,0,[[[171,[[0,[8,151]],[0,[8,126]]]]],[[171,[[0,[8,151]],[0,[8,126]]]]]],[[[172,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]],[[172,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],0,[[[171,[151,126]],151,126],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],0,0,[23],[23],[23],[23],[[[171,[151,126]],25],87],[[[172,[[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]],[0,[28,[105,[[0,[28,4]]]]]]]],25],87],[[]],[[]],[[]],[[]],[[],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],0,[[[171,[[39,[4,[10,[4]]]]]]],[[7,[23]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[7,[23]]]],[[],23],[[],23],[[],23],[[],23],[[[171,[151,126]]],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],0,[[[171,[151,126]]],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,[[[171,[151,126]],126],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,[[[33,[45]],173,126,[16,[[15,[118]]]],23,23,[131,[126]],[131,[126]]],[[27,[[171,[151,126]],54]]]],[[[16,[[171,[[39,[4,[10,[4]]]]]]]]],[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]]],0,0,[[[171,[151,126]],40],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]],40],[[34,[[33,[32]]]]]],[[174,72],27],[[[171,[151,126]]],[[34,[[33,[32]]]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[171,[151,126]],23]],[[[171,[151,126]],[56,[151]],[56,[151]]]],[[]],[[]],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[[171,[151,126]]],[[34,[[33,[32]]]]]],[[[171,[151,126]]]],[[[172,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[175,[151,126]],[118,[149]]],[[27,[[176,[[118,[149]]]]]]]],0,[[[175,[151,126]],151,[131,[126]]],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]],[105,[4]]],[[34,[[33,[32]]]]]],0,[178,178],[[[175,[[0,[8,151]],[0,[8,126]]]]],[[175,[[0,[8,151]],[0,[8,126]]]]]],[[[177,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]],[[177,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[[[175,[151,126]],[118,[149]]],[[27,[[176,[[118,[149]]]]]]]],0,[[[175,[151,126]],151,126],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],0,[23],[23],[23],[23],[23],[23],[[178,25],87],[[[179,[151,126]],25],87],[[[175,[151,126]],25],87],[[[177,[[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]],[0,[28,[105,[[0,[28,4]]]]]]]],25],87],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],0,[[[175,[[39,[4,[10,[4]]]]]]],[[7,[23]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[7,[23]]]],0,[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[175,[151,126]]],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[[[175,[151,126]]],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[175,[151,126]],126],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,0,0,[[],[[16,[[179,[151,126]]]]]],[[126,[33,[45]],[16,[[179,[151,126]]]],[7,[[16,[180]]]]],[[175,[151,126]]]],[[[16,[[175,[[39,[4,[10,[4]]]]]]]]],[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]]],[[[175,[151,126]],40],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]],40],[[34,[[33,[32]]]]]],[178,50],[178,65],[[[175,[151,126]]],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[[175,[151,126]]],[[34,[[33,[32]]]]]],[[[177,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]],[105,[4]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]],[0,[151,[182,[4]]]],[131,[126]]],[[34,[[33,[32]]]]]],0,0,[[[181,[[0,[8,9]],[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]],[[181,[[0,[8,9]],[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]]],[[[183,[[0,[8,151]],[0,[8,126]],[0,[8,147]],[0,[8,4]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]]]]],[[183,[[0,[8,151]],[0,[8,126]],[0,[8,147]],[0,[8,4]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]]]]]],[184,184],[[[185,[[0,[8,151]]]]],[[185,[[0,[8,151]]]]]],[[[186,[[0,[8,151]]]]],[[186,[[0,[8,151]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[24,187,50],[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]]]],[[],184],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[63,[[27,[[185,[151]]]]]],[63,[[27,[[186,[151]]]]]],[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]],[0,[151,[182,[4]]]],126],[[34,[[33,[32]]]]]],0,[23],[23],[23],[23],[23],[23],[23],0,[[[185,[[0,[64,151]]]],[185,[[0,[64,151]]]]],65],[[[186,[[0,[64,151]]]],[186,[[0,[64,151]]]]],65],[[188,188],65],[[[181,[[0,[28,9]],[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]],[0,[28,[105,[[0,[28,4]]]]]]]],25],87],[[[183,[[0,[28,151]],[0,[28,126]],[0,[28,147]],[0,[28,4]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]]]],25],87],[[184,25],87],[[[189,[[0,[28,151]],[0,[28,126]],[0,[28,147]],[0,[28,4]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]]]],25],87],[[[185,[[0,[28,151]]]],25],87],[[[186,[[0,[28,151]]]],25],87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[],57],[[[185,[151]]],57],[[],7],[[],7],[[[185,[151]]],[[7,[151]]]],[[[186,[151]]],[[7,[151]]]],[[[189,[151,126,147,4,152,[153,[4]]]],57],[[27,[[7,[[118,[[186,[151]]]]]],54]]]],[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[7,[23]]]],[[[183,[[39,[4,[10,[4]]]],4,152,[153,[4]]]]],[[7,[23]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]]],[[34,[[33,[32]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],0,[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]]],[[34,[[33,[32]]]]]],[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]],126],[[34,[[33,[32]]]]]],0,0,[[[16,[[183,[[39,[4,[10,[4]]]],4,152,[153,[4]]]]]]],[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]]],[[[0,[151,[182,[4]]]]],[[27,[[185,[[0,[151,[182,[4]]]]]],190]]]],0,[[[189,[151,126,147,4,152,[153,[4]]]],188,31],[[27,[54]]]],[[[183,[151,126,147,4,152,[153,[4]]]],[185,[151]]],[[27,[54]]]],[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]],40],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]],40],[[34,[[33,[32]]]]]],[[[16,[[189,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]]]]],[[27,[191]]]],0,[[[185,[[0,[71,151]]]],72],27],[[[186,[[0,[71,151]]]],72],27],0,[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]]],[[34,[[33,[32]]]]]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[181,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[183,[[0,[151,[182,[4]]]],126,147,4,152,[153,[4]]]]],[[34,[[33,[32]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]],[105,[4]]],[[34,[[33,[32]]]]]],[[[192,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]],[[192,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]],[0,[8,152]],[0,[8,[153,[[0,[8,4]]]]]],[0,[8,[105,[[0,[8,4]]]]]]]]]],[[]],[23],[23],[23],[23],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]],[39,[4,[10,[4]]]]],[[34,[[33,[32]]]]]],[23],[23],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[171,[[39,[4,[10,[4]]]]]]]],[[[192,[[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]],[0,[28,[105,[[0,[28,4]]]]]]]],25],87],[[[193,[[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]],[0,[28,152]],[0,[28,[153,[[0,[28,4]]]]]],[0,[28,[105,[[0,[28,4]]]]]]]],25],87],[[]],[[]],[[],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[23,23,23,23],[[33,[120]]]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[7,[23]]]],[[[193,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[7,[23]]]],[[],23],[[],23],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[183,[[39,[4,[10,[4]]]],4,152,[153,[4]]]]]],0,[[[16,[[193,[4,[10,[4]],152,[153,[4]],[105,[4]]]]]]],[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]],40],[[34,[[33,[32]]]]]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],[[]],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[]],[[]],[[[192,[4,[10,[4]],152,[153,[4]],[105,[4]]]]],[[34,[[33,[32]]]]]],0,0,0,0,0,0,0,0,[[]],[[],[[33,[120,47]]]],[[],[[27,[121]]]],[31],[[],[[34,[[33,[32,47]]]]]],[[86,31]],[[23,23,23],[[33,[120,47]]]],[[]],[[],[[33,[120,47]]]],[[7,86,31]],[[],31],0,0,[[[118,[117,47]]],[[34,[[33,[32,47]]]]]],[119,[[34,[[33,[32,47]]]]]],[[],[[34,[[33,[32,47]]]]]],[[],[[34,[[33,[32,47]]]]]],[[],[[34,[[33,[32,47]]]]]],0,0,0,[1],[[[194,[4,29]],[118,[[117,[4,29]]]]],[[34,[[33,[32]]]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[194,[4,29]]],[[34,[[33,[32]]]]]],[[[194,[[0,[8,4]],[0,[8,29]]]]],[[194,[[0,[8,4]],[0,[8,29]]]]]],[[]],[[[194,[4,29]]],[[34,[[33,[32]]]]]],[[],[[195,[[194,[4,29]]]]]],[23],[23],[23],[23],[23],[23],[[],[[194,[4,29]]]],0,[[]],[[]],[[[194,[4,29]]],[[34,[[33,[32]]]]]],[[[194,[4,29]]],[[34,[[33,[32]]]]]],[[],23],[[],23],0,[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],0,[[]],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[[0,[8,4]],[0,[8,29]]]]],[[55,[[0,[8,4]],[0,[8,29]]]]]],[[[196,[[0,[8,4]],[0,[8,29]]]]],[[196,[[0,[8,4]],[0,[8,29]]]]]],[[[39,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]],[[39,[[0,[8,4]],[0,[8,[10,[[0,[8,4]]]]]]]]]],[[]],[[]],[[]],[[]],[23],[23],[23],[23],[23],[23],[63,[[27,[[39,[4,[10,[4]]]]]]]],[23],[23],[23],0,[[[39,[4,[10,[4]]]],[39,[4,[10,[4]]]]],65],0,0,[[[55,[[0,[28,4]],[0,[28,29]]]],25],[[27,[26]]]],[[[196,[[0,[28,4]],[0,[28,29]]]],25],[[27,[26]]]],[[[39,[[0,[28,4]],[0,[28,[10,[[0,[28,4]]]]]]]],25],[[27,[26]]]],[[]],[[]],[[]],[137,7],[[]],[31],[[[39,[4,[10,[4]]]]]],0,0,[[],23],[[],23],[[],23],[[]],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],0,[[[39,[4,[10,[4]]]]],197],0,0,[[[39,[4,[10,[4]]]],72],27],0,[[],138],0,0,[[],137],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[],61],[138,65],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[198,198],[199,199],[[]],[[]],[[198,198],107],[[199,199],107],[[],107],[[],107],[23],[23],[23],[23],[63,[[27,[198]]]],[63,[[27,[199]]]],[23],[23],[[198,198],65],[[199,199],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[],65],[[198,25],[[27,[26]]]],[[199,25],[[27,[26]]]],[[199,25],[[27,[26]]]],[[]],[[]],[[],[[7,[198]]]],[137,[[7,[199]]]],[[],199],[24,[[27,[198,57]]]],[24,[[27,[199,57]]]],[[],198],[[],198],[31],[31,198],[31],[[[0,[67,68]],69],31],[[199,70]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[[0,[41,42,37]]],[[43,[[0,[41,42,37]]]]]],[[],23],[[],23],[[]],[[]],[[[33,[47]]],[[33,[2,47]]]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[48,[[48,[2]]]],[[198,198],[[7,[107]]]],[[199,199],[[7,[107]]]],0,0,[[198,72],27],[[199,72],27],[[],138],[198,[[118,[149,47]]]],[199,137],[[]],[[]],[[],57],[[],57],[198,200],[199,200],[[],27],[[],27],[[],27],[[],27],[[],61],[[],61],[[199,138],65],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[[46,[4,[10,[4]]]]],[[27,[[118,[[55,[4]]]],[5,[4]]]]]],[[]],[[]],[[[46,[4,[10,[4]]]]],[[46,[4,[10,[4]]]]]],[[]],[[[46,[4,[10,[4]]]]],[[27,[[5,[4]]]]]],[[[46,[4,[10,[4]]]],[58,[[62,[4]]]],58],[[201,[4,[10,[4]]]]]],[23],[23],[23],[[]],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]],[[7,[23]]]],[[[46,[4,[10,[4]]]]],31],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]],[[7,[23]]]],[[[46,[4,[10,[4]]]]]],0,[[],23],[[]],[[[33,[47]]],[[33,[2,47]]]],[16,[[16,[2]]]],[48,[[48,[2]]]],[[[46,[4,[10,[4]]]]],[[27,[[55,[4]],[5,[4]]]]]],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]]],0,[[[46,[4,[10,[4]]]]]],0,[[[46,[4,[10,[4]]]],58],138],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]]],[[[46,[4,[10,[4]]]]]],0,0,[[[46,[4,[10,[4]]]]],[[27,[[5,[4]]]]]],[[]],[[],27],[[],27],[[[46,[4,[10,[4]]]]],[[27,[[7,[[55,[4]]]],[5,[4]]]]]],[[],61],[[]],[[[46,[4,[10,[4]]]]]]],"c":[],"p":[[3,"Private"],[8,"Any"],[8,"Error"],[8,"NodeType"],[4,"HotShotError"],[3,"Backtrace"],[4,"Option"],[8,"Clone"],[8,"ConsensusType"],[8,"NodeImplementation"],[3,"SystemContext"],[3,"HotShotValidatingConsensusApi"],[3,"HotShotSequencingConsensusApi"],[3,"Consensus"],[3,"RwLock"],[3,"Arc"],[3,"ValidatingConsensus"],[3,"SequencingConsensus"],[3,"SendToTasks"],[3,"RwLockUpgradableReadGuard"],[3,"ViewQueue"],[3,"RwLockWriteGuard"],[15,"usize"],[15,"str"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Debug"],[8,"LeafType"],[3,"HotShotInitializer"],[15,"u64"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SequencingMessage"],[3,"ValidatingMessage"],[8,"Sync"],[4,"DataMessage"],[3,"Message"],[4,"TransmitType"],[8,"Display"],[8,"Send"],[3,"IndentedSection"],[3,"HotShotConfig"],[8,"Metrics"],[3,"SystemContextHandle"],[3,"Global"],[3,"Rc"],[3,"NonZeroUsize"],[3,"Duration"],[3,"Demand"],[4,"MessageKind"],[8,"Into"],[4,"NetworkError"],[3,"Event"],[3,"UnboundedSender"],[3,"String"],[3,"Commitment"],[3,"HashMap"],[3,"SubscribableRwLock"],[3,"TypeId"],[3,"QuorumCertificate"],[8,"Deserializer"],[8,"PartialEq"],[15,"bool"],[4,"YesNoSignature"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[8,"Serialize"],[8,"Serializer"],[4,"SDemoBlock"],[3,"SDemoState"],[4,"SDemoError"],[3,"PreviousStateMismatchSnafu"],[3,"ReusedTxnSnafu"],[3,"GenesisFailedSnafu"],[3,"GenesisAfterStartSnafu"],[3,"GenesisCantHaveTransactionsSnafu"],[3,"InvalidBlockSnafu"],[3,"SDemoTransaction"],[3,"SDemoGenesisBlock"],[3,"SDemoNormalBlock"],[3,"HashSet"],[8,"RngCore"],[6,"Result"],[4,"VDemoBlock"],[3,"VDemoState"],[4,"VDemoError"],[3,"InconsistentTransactionSnafu"],[3,"NoSuchInputAccountSnafu"],[3,"NoSuchOutputAccountSnafu"],[3,"InsufficentBalanceSnafu"],[3,"PreviousStateMismatchSnafu"],[3,"ReusedNonceSnafu"],[3,"GenesisFailedSnafu"],[3,"GenesisAfterStartSnafu"],[3,"Subtraction"],[3,"Addition"],[3,"VDemoTransaction"],[3,"VDemoGenesisBlock"],[3,"VDemoNormalBlock"],[3,"VDemoTypes"],[8,"Membership"],[3,"VDemoNode"],[4,"Ordering"],[6,"Account"],[6,"Balance"],[3,"BTreeMap"],[3,"ValidatingLeaf"],[8,"Default"],[3,"TaskHandle"],[3,"AtomicBool"],[8,"ConsensusExchange"],[3,"UnboundedReceiver"],[4,"ViewEntry"],[3,"Vec"],[3,"StoredView"],[8,"Fn"],[4,"StorageError"],[3,"RandomState"],[4,"NetworkNodeHandleError"],[3,"DummyState"],[4,"DummyTransaction"],[8,"SignatureKey"],[3,"GeneralStaticCommittee"],[3,"StaticVoteToken"],[3,"StaticElectionConfig"],[3,"NonZeroU64"],[3,"BTreeSet"],[4,"ElectionError"],[4,"Checked"],[3,"VRFStakeTable"],[8,"SignatureScheme"],[3,"JfPubKey"],[3,"EncodedPublicKey"],[3,"EncodedSignature"],[3,"CouldNotDeliverSnafu"],[3,"NoSuchNodeSnafu"],[3,"ChannelSendSnafu"],[3,"ShutDownSnafu"],[3,"FailedToSerializeSnafu"],[3,"FailedToDeserializeSnafu"],[3,"NetworkingMetrics"],[4,"Error"],[8,"ElectionConfig"],[3,"Inner"],[15,"u8"],[3,"CentralizedServerNetwork"],[8,"NetworkMsg"],[8,"ProposalType"],[8,"VoteType"],[3,"CentralizedCommChannel"],[3,"FailedToReceiveSnafu"],[3,"FailedToSendSnafu"],[3,"DisconnectedSnafu"],[3,"StreamSnafu"],[3,"CouldNotDeserializeSnafu"],[4,"SocketAddr"],[6,"BoxFuture"],[8,"FnMut"],[4,"Error"],[8,"DeserializeOwned"],[6,"Error"],[15,"u32"],[3,"OneShotSender"],[3,"TcpStreamRecvUtil"],[3,"TcpStreamSendUtil"],[3,"RunResults"],[3,"Libp2pNetwork"],[3,"Libp2pCommChannel"],[3,"NetworkNodeConfig"],[4,"Empty"],[3,"MemoryNetwork"],[3,"SendError"],[3,"MemoryCommChannel"],[3,"DummyReliability"],[3,"MasterMap"],[8,"NetworkReliability"],[3,"WebCommChannel"],[8,"ViewMessage"],[3,"WebServerNetwork"],[3,"ConsensusInfo"],[3,"SendMsg"],[3,"RecvMsg"],[15,"u16"],[4,"MessageType"],[3,"Inner"],[4,"WebServerNetworkError"],[3,"ServerError"],[3,"WebServerWithFallbackCommChannel"],[3,"CombinedNetworks"],[3,"MemoryStorage"],[6,"StorageResult"],[4,"EventType"],[4,"MessagePurpose"],[3,"Ed25519Priv"],[3,"Ed25519Pub"],[3,"TaggedBase64"],[4,"GeneralConsensusMessage"],[3,"SystemContextInner"],[8,"HotShotType"],[8,"ViewRunner"],[13,"Misc"],[13,"InvalidState"],[13,"InsufficientValidSignatures"],[13,"StorageError"],[13,"TimeoutError"],[13,"FailedToMessageLeader"],[13,"FailedToBroadcast"],[13,"NetworkFault"],[13,"ViewTimeoutError"],[3,"TaskHandleInner"],[8,"State"],[8,"TestableNodeImplementation"],[8,"Block"],[8,"Storage"],[13,"Libp2p"],[13,"MemoryNetwork"],[13,"CentralizedServer"],[13,"WebServer"],[13,"FailedToSerialize"],[13,"FailedToDeserialize"],[13,"Timeout"],[4,"MsgStepOutcome"],[3,"MsgStepContext"],[13,"Stream"],[13,"CouldNotDeserialize"],[3,"Libp2pNetworkInner"],[4,"Combo"],[3,"MemoryNetworkInner"],[8,"SendMsgTrait"],[8,"RecvMsgTrait"],[3,"MemoryStorageInternal"],[13,"Error"],[13,"Decide"],[13,"ReplicaViewTimeout"],[13,"NextLeaderViewTimeout"],[13,"ViewFinished"]]},\
"hotshot_centralized_server":{"doc":"","t":"NDNNNHHHHHHHHNNNNNDNNNNDEDENNNNNNNDRHHHHHHHHCNNNQNNNNDDDNNDNNDDDIIEENDQNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALALLLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLKLLLLLLMMLMALLLLLLLMMLMLMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLKLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMHHHHHHHHHHHHHHHHFFHDHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHHHHDMMMMFIINNIDEDDNIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLL","n":["BackgroundShutdown","BackgroundShutdownSnafu","Broadcast","Broadcast","BroadcastPayload","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ClientConnected","ClientCount","ClientDisconnected","Config","Decode","DecodeSnafu","Direct","Direct","DirectPayload","Disconnected","DisconnectedSnafu","Error","FromBackground","FromServer","GetConfig","Identify","IncomingBroadcast","IncomingBroadcastChunk","IncomingDirectMessage","IncomingDirectMessageChunk","Io","IoSnafu","MAX_CHUNK_SIZE","META","META","META","META","META","META","META","META","NetworkConfig","NewClient","NodeConnected","NodeDisconnected","ReadStream","RequestClientCount","RequestClientCount","Results","Results","Run","RunResults","Server","Shutdown","SizeMismatch","SizeMismatchSnafu","Start","StartRun","TcpStreamRecvUtil","TcpStreamSendUtil","TcpStreamUtil","TcpStreamUtilWithRecv","TcpStreamUtilWithSend","ToBackground","ToServer","VecToArray","VecToArraySnafu","WriteStream","_0","_1","__PrivResult","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","background_task","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast_payload","build","build","build","build","cause","client","client_count","clients","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","config","connect","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","direct","direct_payload","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","listener","new","new","new","new","node_connected","node_disconnected","node_index","passed_len","payload","payload_len","payload_len","provide","read_stream","read_stream","read_stream","recv","recv_raw","recv_raw_all","recv_raw_impl","rounds_succeeded","rounds_timed_out","run","run","runs","send","send_raw","serialize","serialize","serialize","serialize","serialize","shutdown","slice_len","source","source_len","start","stream","stream","stream","target_len","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_time_in_seconds","transaction_size_bytes","transactions_rejected","transactions_submitted","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_round_config","with_shutdown_signal","write_stream","write_stream","write_stream","passed_len","slice_len","source","source","source_len","target_len","config","key","key","message_len","message_len","payload_len","payload_len","payload_len","payload_len","run","source","source","source","source","addr","key","key","message_chunk","message_chunk","message_len","message_len","receiver","receiver","results","run","run","run","run","run","run","run","sender","sender","sender","sender","sender","sender","sender","key","message_len","message_len","target","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","run_client","spawn","CALLSITE","Clients","META","OrdKey","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","broadcast","broadcast_except_self","clone","clone_into","cmp","compare","deref","deref","deref_mut","deref_mut","direct_message","drop","drop","ensure_run_exists","eq","equivalent","equivalent","equivalent","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_socketlike","init","init","insert","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","key","len","new","partial_cmp","prune_nodes","pubkey","remove","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ClientConfig","HotShotConfigFile","Libp2pConfig","Libp2pConfigFile","NetworkConfig","NetworkConfigFile","RoundConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_result","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","base_port","base_port","bootstrap_mesh_n","bootstrap_mesh_n","bootstrap_mesh_n_high","bootstrap_mesh_n_high","bootstrap_mesh_n_low","bootstrap_mesh_n_low","bootstrap_mesh_outbound_min","bootstrap_mesh_outbound_min","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","config","configs","current_round_client_count","current_run","current_run_full","default","default","default_config","default_padding","default_rounds","default_start_delay_seconds","default_transactions_per_round","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","election_config_type_name","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_next_config","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_type_name","libp2p_config","libp2p_config","libp2p_config_sender","max_transactions","mesh_n","mesh_n","mesh_n_high","mesh_n_high","mesh_n_low","mesh_n_low","mesh_outbound_min","mesh_outbound_min","min_transactions","new","next_node_index","next_view_timeout","next_view_timeout","next_view_timeout","node_index","node_index","node_index","num_bootstrap","num_txn_per_round","num_txn_per_round","online_time","online_time","padding","padding","propose_max_round_time","propose_max_round_time","propose_max_round_time","propose_min_round_time","propose_min_round_time","propose_min_round_time","public_ip","round_start_delay","rounds","rounds","run","run","seed","seed","serialize","serialize","serialize","serialize","serialize","start_delay","start_delay_seconds","start_delay_seconds","timeout_ratio","to_owned","to_owned","to_owned","to_owned","to_owned","total_nodes","transactions_per_round","transactions_per_round","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","META","META","META","RoundConfig","configs","current_run","libp2p_config_sender","next_node_index","set_config","AsyncReadStream","AsyncWriteStream","Both","Read","ReadExt","ReadTcpStream","Shutdown","TcpListener","TcpStream","Write","WriteExt","WriteTcpStream","__clone_box","__clone_box","accept","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_fd","as_raw_fd","as_raw_filelike","as_raw_filelike","as_raw_socketlike","as_raw_socketlike","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","by_ref","bytes","chain","clone","clone","clone_into","clone_into","connect","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","flush","fmt","fmt","fmt","from","from","from","from","from","from_raw_fd","from_raw_fd","from_raw_filelike","from_raw_filelike","from_raw_socketlike","from_raw_socketlike","incoming","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_incoming","into_raw_fd","into_raw_fd","into_raw_filelike","into_raw_filelike","into_raw_socketlike","into_raw_socketlike","local_addr","local_addr","nodelay","peek","peer_addr","poll_close","poll_close","poll_flush","poll_flush","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_write","poll_write","poll_write_vectored","poll_write_vectored","read","read_exact","read_to_end","read_to_string","read_vectored","set_nodelay","set_ttl","shutdown","take","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ttl","type_id","type_id","type_id","vzip","vzip","vzip","watcher","watcher","watcher","watcher","write","write_all","write_fmt","write_vectored"],"q":[[0,"hotshot_centralized_server"],[537,"hotshot_centralized_server::Error"],[543,"hotshot_centralized_server::FromServer"],[557,"hotshot_centralized_server::ToBackground"],[581,"hotshot_centralized_server::ToServer"],[585,"hotshot_centralized_server::client"],[603,"hotshot_centralized_server::clients"],[670,"hotshot_centralized_server::config"],[910,"hotshot_centralized_server::runs"],[922,"hotshot_centralized_server::types"]],"d":["","SNAFU context selector for the <code>Error::BackgroundShutdown</code> …","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Decode</code> variant","","","","","SNAFU context selector for the <code>Error::Disconnected</code> variant","","","","","","","","","","","SNAFU context selector for the <code>Error::Io</code> variant","256KB, assumed to be the kernel receive buffer …","","","","","","","","","","","","","","","","","","the run of execution we are on","","","","","SNAFU context selector for the <code>Error::SizeMismatch</code> variant","","","Utility struct that wraps a <code>TcpStream</code> and expects a length …","Utility struct that wraps a <code>TcpStream</code> and prefixes all …","Utility struct that wraps a <code>TcpStream</code> and handles length …","","","","","","SNAFU context selector for the <code>Error::VecToArray</code> variant","","","","","","","","","","","","","","","","Get the address that this server is running on","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “background” task. This is a central task that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of the centralized server.","","","","","","","","","","","","","","","","","","","","","Run the server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the network config. Setting this will allow clients to …","Register a signal that can be used to shut down this server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Holds configuration for a <code>HotShot</code>","","","","","Contains information about the current round","","","","","","Will write the results for this node to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum transactions per block","","","","","","","","","Minimum transactions per block","","","","","Base duration for next-view timeout, in milliseconds","","","","Number of network bootstrap nodes","","","","","","","","","The maximum amount of time a leader can wait to start a …","","","The minimum amount of time a leader has to wait to start a …","","The delay a leader inserts before starting pre-commit, in …","","","","FIXME this should be removed","","","","","","","","Delay after init before starting consensus, in milliseconds","","","The exponential backoff ration for the next-view timeout","","","","","","Total number of nodes in the network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains information about the current round","","","","","","","","Both the reading and the writing portions of the <code>TcpStream</code> …","The reading portion of the <code>TcpStream</code> should be shut down.","Extension methods for <code>Read</code>.","A TCP stream between a local and a remote socket.","Possible values which can be passed to the …","A TCP socket server, listening for connections.","A TCP stream between a local and a remote socket.","The writing portion of the <code>TcpStream</code> should be shut down.","Extension methods for <code>Write</code>.","A TCP stream between a local and a remote socket.","","","Accepts a new incoming connection to this listener.","","","","","","","","","","","","","Creates a new <code>TcpListener</code> which will be bound to the …","","","","","","","Creates a “by reference” adaptor for this instance of …","Transforms this <code>Read</code> instance to a <code>Stream</code> over its bytes.","Creates an adaptor which will chain this stream with …","","","","","Creates a new TCP stream connected to the specified …","","","","","","","","","","","","","","Flushes the stream to ensure that all buffered contents …","","","","Converts a <code>std::net::TcpListener</code> into its asynchronous …","Returns the argument unchanged.","Converts a <code>std::net::TcpStream</code> into its asynchronous …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a stream of incoming connections.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Turn this into a stream over the connections being …","","","","","","","Returns the local address that this listener is bound to.","Returns the local address that this stream is connected to.","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Receives data on the socket from the remote address to …","Returns the remote address that this stream is connected …","","","","","","","","","","","","","Reads some bytes from the byte stream.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads all bytes from the byte stream.","Reads all bytes from the byte stream and appends them into …","Like <code>read</code>, except that it reads into a slice of buffers.","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Shuts down the read, write, or both halves of this …","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","Gets the value of the <code>IP_TTL</code> option for this socket.","","","","","","","","","","","Writes some bytes into the byte stream.","Writes an entire buffer into the byte stream.","Writes a formatted string into this writer, returning any …","Like <code>write</code>, except that it writes from a slice of buffers."],"i":[13,0,28,31,31,0,0,0,0,0,0,0,0,8,31,8,31,13,0,28,31,31,13,0,0,0,0,28,28,8,8,8,8,13,0,0,0,0,0,0,0,0,0,0,0,8,31,31,110,28,8,28,8,0,0,0,8,13,0,31,8,0,0,0,0,0,0,0,13,0,111,112,112,0,28,29,30,31,19,32,20,21,33,24,25,4,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,13,0,13,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,19,19,20,21,24,25,13,0,19,0,28,29,30,31,19,32,20,21,33,24,25,28,29,30,31,19,32,20,21,33,24,25,0,19,4,35,30,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,13,28,29,30,31,19,19,19,4,40,40,41,41,35,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,30,30,30,30,20,21,24,25,28,29,30,31,19,8,13,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,13,19,13,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,32,20,21,33,24,25,4,4,40,41,35,19,19,29,24,19,28,31,13,110,41,35,110,110,110,110,29,29,4,29,0,111,111,28,29,30,31,19,4,24,13,25,19,40,41,35,25,28,29,30,31,19,32,20,21,33,24,25,13,29,29,29,29,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,0,4,40,41,35,28,29,30,31,19,112,8,13,32,20,21,33,24,25,4,4,111,40,35,113,113,114,115,116,116,117,118,119,120,121,120,122,121,123,117,120,122,121,123,124,125,126,127,128,129,130,130,128,131,125,126,129,130,127,128,132,125,129,130,127,128,132,124,133,134,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,67,68,67,68,67,68,67,68,67,67,68,68,68,68,67,68,67,68,67,67,68,67,68,68,68,68,67,68,68,68,68,68,68,68,68,67,68,67,67,68,67,68,67,68,67,68,68,67,67,68,67,68,67,68,67,68,67,68,67,68,67,68,0,0,0,0,0,0,0,75,76,34,77,78,11,79,11,75,76,34,77,78,79,11,75,76,34,77,78,75,76,75,76,75,76,75,76,75,76,75,79,11,75,76,34,77,78,79,11,75,76,34,77,78,75,76,34,77,78,75,76,34,77,78,79,34,77,11,11,11,11,79,34,0,0,0,0,0,79,11,75,76,34,77,78,79,11,75,76,34,77,78,75,76,34,77,78,79,11,75,76,34,77,78,34,75,76,34,77,78,79,11,75,76,34,34,77,78,11,79,11,75,76,34,77,78,79,11,75,76,34,77,78,79,11,75,76,34,77,78,79,11,75,76,34,77,78,79,11,75,76,34,77,78,34,34,77,11,78,75,76,75,76,75,76,75,76,78,11,11,75,76,78,75,34,77,78,75,76,75,76,34,77,75,76,78,75,76,78,75,78,34,77,79,75,34,77,75,76,34,77,78,78,34,77,78,75,76,34,77,78,78,34,77,79,11,75,76,34,77,78,79,11,75,76,34,77,78,79,11,75,76,34,77,78,79,11,75,76,34,77,78,0,0,0,0,0,0,0,11,11,11,11,0,0,0,88,88,0,0,0,0,0,88,0,0,56,88,81,81,56,88,81,56,88,81,56,81,56,81,56,81,81,56,88,81,56,88,136,136,136,56,88,56,88,56,81,56,88,81,56,88,81,56,88,88,88,88,88,137,81,56,88,81,81,56,56,88,81,56,81,56,81,56,81,81,56,88,81,56,88,81,56,88,81,56,88,81,56,88,81,81,56,81,56,81,56,81,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,136,136,136,136,136,56,56,56,136,56,88,81,56,88,81,56,88,56,81,56,88,81,56,88,81,56,56,56,137,137,137,137],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[[4,[2,3]]],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[[9,[[8,[2,3]]]],[10,[[8,[2,3]]]],[12,[[11,[2,3]]]]],[[14,[13]]]],[13,[[12,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[16,[12,[[18,[17]]]]],19],[[[18,[17]]],19],[20,13],[21,13],[[[24,[[23,[22]],[23,[22]]]]],13],[[[25,[[23,[22]],[23,[22]]]]],13],[13,[[12,[7]]]],0,[26,19],0,[[[28,[27]]],[[28,[27]]]],[29,29],[30,30],[[[31,[27,27]]],[[31,[27,27]]]],[[[19,[27,27]]],[[19,[27,27]]]],[32,32],[20,20],[21,21],[33,33],[[[24,[27,27]]],[[24,[27,27]]]],[[[25,[27,27]]],[[25,[27,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[34,30],19],0,[5,[[36,[35]]]],[[],30],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[13,37],[38,[[14,[[28,[39]]]]]],[38,[[14,[29]]]],[38,[[14,[30]]]],[38,[[14,[[31,[39,39]]]]]],[38,[[14,[[19,[39,39]]]]]],[[16,[12,[[18,[17]]]]],19],[[[18,[17]]],19],[22],[22],[40],[22],[41],[22],[35],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[[30,30],42],[[],42],[[],42],[[],42],[20,[[14,[13]]]],[21,[[14,[13]]]],[[[24,[[23,[22]],[23,[22]]]]],[[14,[13]]]],[[[25,[[23,[22]],[23,[22]]]]],[[14,[13]]]],[[[28,[43]],44],45],[[29,44],45],[[30,44],45],[[[31,[43,43]],44],45],[[[19,[43,43]],44],45],[[[8,[43,43]],44],45],[[13,44],45],[[13,44],45],[[32,44],45],[[20,44],45],[[21,44],45],[[33,44],45],[[[24,[43,43]],44],45],[[[25,[43,43]],44],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[46,47,48]]],[[49,[[0,[46,47,48]]]]]],0,[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[32,13],[20,13],[21,13],[33,13],[[[24,[[23,[22]],[23,[22]]]]],13],[[[25,[[23,[22]],[23,[22]]]]],13],0,[[54,55],[[4,[2,3]]]],[56,40],[56,41],[56,35],[[],19],[[],19],0,0,0,[28,[[12,[57]]]],[31,[[12,[57]]]],[58],[[]],[41],[35],[47,[[60,[[51,[59]]]]]],[[47,22],[[60,[[51,[59]]]]]],[[47,22],[[60,[[51,[59]]]]]],[[47,22,42],[[60,[[51,[59]]]]]],0,0,[[[4,[2,3]]]],0,0,[[47,[0,[61,47]]],[[60,[[51,[59]]]]]],[[47,22],[[60,[[51,[59]]]]]],[[[28,[61]],62],14],[[29,62],14],[[30,62],14],[[[31,[61,61]],62],14],[[[19,[61,61]],62],14],0,0,[13,[[12,[7]]]],0,[[],19],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],63],0,0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[2,3]],[11,[2,3]]],[[4,[2,3]]]],[[[4,[2,3]],65],[[4,[2,3]]]],[[]],[40],[35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,56,[12,[2]],[12,[30]],[9,[[8,[2,3]]]]],[[14,[13]]]],[[5,56,[9,[[8,[2,3]]]]]],0,0,0,0,[1],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[67,[[0,[2,66]],3]],30,[19,[[0,[2,66]],3]]]],[[[67,[[0,[2,66]],3]],30,[0,[2,66]],[19,[[0,[2,66]],3]]]],[[[68,[[0,[27,2]]]]],[[68,[[0,[27,2]]]]]],[[]],[[[68,[2]],[68,[2]]],69],[[],69],[22],[22],[22],[22],[[[67,[[0,[2,66]],3]],30,[0,[2,66]],[19,[[0,[2,66]],3]]]],[22],[22],[[[67,[[0,[2,66]],3]],30]],[[[68,[[0,[66,2]]]],[68,[[0,[66,2]]]]],42],[[],42],[[],42],[[],42],[[]],[[]],[2,[[68,[2]]]],[70],[71],[71],[72],[73],[71],[[],22],[[],22],[[[67,[[0,[2,66]],3]],30,[0,[2,66]],[9,[[19,[[0,[2,66]],3]]]]]],[[]],[[]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],0,[[[67,[[0,[2,66]],3]],30],22],[[],[[67,[[0,[2,66]],3]]]],[[[68,[2]],[68,[2]]],[[12,[69]]]],[[[67,[[0,[2,66]],3]],30,[74,[[68,[[0,[2,66]]]]]]]],0,[[[67,[[0,[2,66]],3]],30,[0,[2,66]]]],[[]],[[],14],[[],14],[[],14],[[],14],[[],64],[[],64],[[]],[[]],0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[[[11,[61,61]],29],36],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[76,76],[[[34,[27,27]]],[[34,[27,27]]]],[77,77],[78,78],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[11,22],0,[11,42],[[],79],[[],34],[[],78],[[],22],[[],22],[[],16],[[],22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[38,[[14,[75]]]],[38,[[14,[76]]]],[38,[[14,[[34,[39,39]]]]]],[38,[[14,[77]]]],[38,[[14,[78]]]],[22],[22],[22],[22],[22],[22],[22],0,[[75,44],45],[[76,44],45],[[[34,[43,43]],44],45],[[77,44],45],[[78,44],45],[[]],[[]],[[]],[[]],[[]],[77,34],[[]],[[]],[[[11,[[0,[43,27,47]],[0,[43,27,47]]]],54,[80,[[79,[[0,[43,27,47]],[0,[43,27,47]]]]]],[9,[[8,[[0,[43,27,47]],[0,[43,27,47]]]]]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[18,[34]]],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[75,62],14],[[76,62],14],[[[34,[61,61]],62],14],[[77,62],14],[[78,62],14],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[34,54,30,16],34],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[81,59],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[81,82],[56,82],[[],82],[[],82],[[],82],[[],82],[83,59],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[84,[[85,[84]]]],[[84,86],[[87,[84,86]]]],[56,56],[88,88],[[]],[[]],[83,59],[22],[22],[22],[22],[22],[22],[22],[22],[22],[[88,88],42],[[],42],[[],42],[[],42],[89,[[90,[89]]]],[[81,44],[[14,[91]]]],[[56,44],[[14,[91]]]],[[88,44],[[14,[91]]]],[92,81],[[]],[93,56],[[]],[[]],[82,81],[82,56],[82],[82],[82],[82],[81,94],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[[[51,[50]]],[[51,[6,50]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[52,[[52,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[53,[[53,[6]]]],[81,[[0,[95,47]]]],[81,82],[56,82],[[],82],[[],82],[[],82],[[],82],[81,[[14,[5,96]]]],[56,[[14,[5,96]]]],[56,[[14,[42,96]]]],[56,59],[56,[[14,[5,96]]]],[[[60,[56]],97],[[98,[[14,[96]]]]]],[[[60,[56]],97],[[98,[[14,[96]]]]]],[[[60,[56]],97],[[98,[[14,[96]]]]]],[[[60,[56]],97],[[98,[[14,[96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[[[60,[56]],97],[[98,[[14,[22,96]]]]]],[89,[[99,[89]]]],[89,[[100,[89]]]],[[89,[18,[17,50]]],[[101,[89]]]],[[89,63],[[102,[89]]]],[89,[[103,[89]]]],[[56,42],[[14,[96]]]],[[56,26],[[14,[96]]]],[[56,88],[[14,[96]]]],[[84,16],[[104,[84]]]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[56,[[14,[26,96]]]],[[],64],[[],64],[[],64],[[]],[[]],[[]],0,0,0,0,[89,[[105,[89]]]],[89,[[106,[89]]]],[[89,107],[[108,[89]]]],[89,[[109,[89]]]]],"c":[],"p":[[3,"Private"],[8,"SignatureKey"],[8,"ElectionConfig"],[3,"Server"],[4,"SocketAddr"],[8,"Any"],[8,"Error"],[4,"ToBackground"],[3,"Sender"],[3,"Receiver"],[3,"RoundConfig"],[4,"Option"],[4,"Error"],[4,"Result"],[3,"Backtrace"],[15,"u64"],[15,"u8"],[3,"Vec"],[3,"FromBackground"],[3,"BackgroundShutdownSnafu"],[3,"DisconnectedSnafu"],[15,"usize"],[8,"Into"],[3,"SizeMismatchSnafu"],[3,"VecToArraySnafu"],[15,"u32"],[8,"Clone"],[4,"ToServer"],[3,"RunResults"],[3,"Run"],[4,"FromServer"],[3,"IoSnafu"],[3,"DecodeSnafu"],[3,"NetworkConfig"],[3,"TcpStreamUtil"],[6,"Result"],[15,"str"],[8,"Deserializer"],[8,"Deserialize"],[3,"TcpStreamSendUtil"],[3,"TcpStreamRecvUtil"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"IpAddr"],[15,"u16"],[3,"ReadTcpStream"],[3,"NonZeroUsize"],[3,"Demand"],[8,"Future"],[3,"Pin"],[8,"Serialize"],[8,"Serializer"],[3,"String"],[3,"TypeId"],[3,"OneShotReceiver"],[8,"PartialEq"],[3,"Clients"],[3,"OrdKey"],[4,"Ordering"],[15,"never"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[3,"BTreeSet"],[3,"Libp2pConfig"],[3,"Libp2pConfigFile"],[3,"NetworkConfigFile"],[3,"HotShotConfigFile"],[3,"ClientConfig"],[3,"OneShotSender"],[3,"TcpListener"],[15,"i32"],[8,"ToSocketAddrs"],[8,"Sized"],[3,"Bytes"],[8,"AsyncRead"],[3,"Chain"],[4,"Shutdown"],[8,"Unpin"],[3,"FlushFuture"],[3,"Error"],[3,"TcpListener"],[3,"TcpStream"],[3,"Incoming"],[8,"Stream"],[3,"Error"],[3,"Context"],[4,"Poll"],[3,"ReadFuture"],[3,"ReadExactFuture"],[3,"ReadToEndFuture"],[3,"ReadToStringFuture"],[3,"ReadVectoredFuture"],[3,"Take"],[3,"WriteFuture"],[3,"WriteAllFuture"],[3,"Arguments"],[3,"WriteFmtFuture"],[3,"WriteVectoredFuture"],[8,"TcpStreamUtilWithRecv"],[8,"TcpStreamUtilWithSend"],[4,"__PrivResult"],[13,"SizeMismatch"],[13,"Io"],[13,"Decode"],[13,"VecToArray"],[13,"Config"],[13,"NodeConnected"],[13,"NodeDisconnected"],[13,"Broadcast"],[13,"Direct"],[13,"BroadcastPayload"],[13,"DirectPayload"],[13,"ClientConnected"],[13,"NewClient"],[13,"ClientDisconnected"],[13,"IncomingBroadcastChunk"],[13,"IncomingDirectMessageChunk"],[13,"IncomingBroadcast"],[13,"IncomingDirectMessage"],[13,"Results"],[13,"RequestClientCount"],[13,"Identify"],[13,"Broadcast"],[13,"Direct"],[8,"ReadExt"],[8,"WriteExt"]]},\
"hotshot_consensus":{"doc":"The consensus layer for hotshot. This currently implements …","t":"DHGDDDDINDDNNHDDIDIDDEDRLLMMMMMMMMMMMMMMMMLLLLLLLLMLLLLLLLLMMLLLLLMMMMMMMMMMMMMMMMMMMALLLLLLLLLLMMLLLLMMMMMMLLLLLLMMLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLMMMAMKMMKLAMMMMMMMMKMMMMMKKKMMMMMMLAMMKKKKKKKMAAKMKLLKAMMMLLLLLLLLLLLLAMMLMMMMLLLLMMHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHLMMLLLLLLMMLLLMLLLMMLLLLLMLLLLLLHHHHHHHHHHHHHHHHHHHHDLMMLLLLLLMMLLLMLLMMLLLLLLLMLLLLHHHHHHDRLMMLLLLLLMLLLMLLMMLLLLLMLLLLLMLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDLMMLLLLLLMMLLLMLLLMMLLLLLMLLLLLLHHHHHHHHHHHHHHHHHDDDHHHHHHHHHHHHHHHHHLMMMMMMLLLLLLMLLLLLLMLLMMMMMMMLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLMLMMMLLLLMLLLLLLLLLMMLLLLLHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDLMMLLLLLLMMMLLLLLLLMMLLLLLMMLLLLLLIIIKKKKKKKKKLLKKKKLLLLLLLLKKKNNNNNDEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMM","n":["BlockStore","CALLSITE","CommitmentMap","Consensus","ConsensusLeader","ConsensusMetrics","ConsensusNextLeader","ConsensusSharedApi","DA","DALeader","DAMember","Failed","Leaf","META","NextValidatingLeader","Replica","SequencingConsensusApi","SequencingReplica","ValidatingConsensusApi","ValidatingLeader","View","ViewInner","ViewQueue","_DERIVE_core_fmt_Debug_FOR_Consensus","__clone_box","__clone_box","_pd","_pd","_pd","_pd","_pd","_pd","_pd","_pd","api","api","api","api","api","api","api","api","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_messages_received","cert","clone","clone","clone_into","clone_into","collect_garbage","committee_exchange","committee_exchange","consensus","consensus","consensus","consensus","consensus","consensus","consensus","cur_view","cur_view","cur_view","cur_view","cur_view","cur_view","cur_view","cur_view","cur_view","current_view","da_member","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","direct_messages_received","discarded_views_per_decide_event","drop","drop","drop","drop","empty_views_per_decide_event","exchange","exchange","exchange","exchange","failed_to_send_messages","fmt","fmt","from","from","from","from","generic_qc","generic_qc","get","get_decided_leaf","get_transactions","has_received_proposal","high_qc","high_qc","high_qc","high_qc","high_qc","high_qc","high_qc","id","id","id","id","id","id","id","id","increment_view","init","init","init","init","insert","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalid_qc","invalid_qc_views","last_decided_view","leader","locked_view","max_transactions","metrics","metrics","min_transactions","new","next_leader","number_of_timeouts","number_of_views_per_decide_event","number_of_views_since_last_commit","outgoing_broadcast_messages","outgoing_direct_messages","outstanding_transactions","outstanding_transactions_memory_size","parent","private_key","proposal_build_duration","proposal_collection_chan","proposal_collection_chan","proposal_collection_chan","proposal_wait_duration","propose_max_round_time","propose_min_round_time","public_key","quorum_exchange","quorum_exchange","quorum_exchange","quorum_exchange","receiver_chan","rejected_transactions","remove","replica","saved_blocks","saved_leaves","send_broadcast_message","send_broadcast_message","send_da_broadcast","send_direct_da_message","send_direct_message","send_direct_message","send_event","sender_chan","sequencing_leader","sequencing_replica","should_start_round","state_map","store_leaf","to_owned","to_owned","total_nodes","traits","transactions","transactions","transactions","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","utils","view_duration","view_inner","visit_leaf_ancestors","vote_collection_chan","vote_collection_chan","vote_collection_chan","vote_validate_duration","vzip","vzip","vzip","vzip","block","leaf","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DAMember","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","__clone_box","_pd","api","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","consensus","cur_view","deref","deref_mut","drop","exchange","find_valid_msg","fmt","from","high_qc","id","init","into","into_any","into_any_arc","into_any_rc","proposal_collection_chan","run_view","to_owned","try_from","try_into","type_id","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","ValidatingLeader","__clone_box","_pd","api","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","consensus","cur_view","deref","deref_mut","drop","exchange","fmt","from","high_qc","id","init","into","into_any","into_any_arc","into_any_rc","run_view","to_owned","transactions","try_from","try_into","type_id","vzip","CALLSITE","CALLSITE","CALLSITE","META","META","META","NextValidatingLeader","_DERIVE_core_fmt_Debug_FOR_NextValidatingLeader","__clone_box","_pd","api","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cur_view","deref","deref_mut","drop","exchange","fmt","from","generic_qc","id","init","into","into_any","into_any_arc","into_any_rc","metrics","run_view","to_owned","try_from","try_into","type_id","vote_collection_chan","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Replica","__clone_box","_pd","api","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","consensus","cur_view","deref","deref_mut","drop","exchange","find_valid_msg","fmt","from","high_qc","id","init","into","into_any","into_any_arc","into_any_rc","proposal_collection_chan","run_view","to_owned","try_from","try_into","type_id","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ConsensusLeader","ConsensusNextLeader","DALeader","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","__clone_box","_pd","_pd","_pd","api","api","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone_into","committee_exchange","consensus","consensus","consensus","cur_view","cur_view","cur_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","generic_qc","high_qc","high_qc","id","id","id","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","parent","parent_leaf","quorum_exchange","quorum_exchange","quorum_exchange","run_view","run_view","run_view","to_owned","transactions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_collection_chan","vote_collection_chan","vzip","vzip","vzip","wait_for_transactions","wait_for_votes","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","SequencingReplica","__clone_box","_pd","api","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","committee_exchange","consensus","cur_view","deref","deref_mut","drop","find_valid_msg","fmt","from","genesis_leaf","high_qc","id","init","into","into_any","into_any_arc","into_any_rc","proposal_collection_chan","quorum_exchange","run_view","to_owned","try_from","try_into","type_id","vzip","ConsensusSharedApi","SequencingConsensusApi","ValidatingConsensusApi","max_transactions","min_transactions","private_key","propose_max_round_time","propose_min_round_time","public_key","send_broadcast_message","send_broadcast_message","send_da_broadcast","send_decide","send_decide","send_direct_da_message","send_direct_message","send_direct_message","send_event","send_next_leader_timeout","send_next_leader_timeout","send_replica_timeout","send_replica_timeout","send_view_error","send_view_error","send_view_finished","send_view_finished","should_start_round","store_leaf","total_nodes","DA","Exclusive","Failed","Inclusive","Leaf","RoundFinishedEvent","Terminator","View","ViewInner","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_block_commitment","get_leaf_commitment","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view_inner","view_number","vzip","vzip","vzip","vzip","block","leaf"],"q":[[0,"hotshot_consensus"],[239,"hotshot_consensus::ViewInner"],[241,"hotshot_consensus::da_member"],[304,"hotshot_consensus::leader"],[356,"hotshot_consensus::next_leader"],[395,"hotshot_consensus::replica"],[476,"hotshot_consensus::sequencing_leader"],[603,"hotshot_consensus::sequencing_replica"],[694,"hotshot_consensus::traits"],[723,"hotshot_consensus::utils"],[817,"hotshot_consensus::utils::ViewInner"]],"d":["Mapping from block commitments to full blocks.","","A type alias for <code>HashMap&lt;Commitment&lt;T&gt;, T&gt;</code>","A reference to the consensus algorithm","Implemenation of the consensus leader for a DA/Sequencing …","The metrics being collected for the consensus algorithm","Implenting the next leader.  Collect votes on the previous …","The API that [<code>HotStuff</code>] needs to talk to the system, …","A pending view with an available block but not leaf …","This view’s DA committee leader","This view’s DA committee member.","Leaf has failed","Undecided view","","The next view’s validating leader","This view’s replica","The API that [<code>HotStuff</code>] needs to talk to the system, for …","This view’s replica for sequencing consensus.","The API that [<code>HotStuff</code>] needs to talk to the system for …","This view’s validating leader","This exists so we can perform state transitions mutably","A view’s state","struct containing messages for a view to send to a replica …","","","","needed to tyep check","needed to type check","needed for type checking","needed for type checking","needed to type check","neeeded to typecheck","needed to typecheck","needed to typecheck","Limited access to the consensus protocol","Limited access to the consensus protocol","HotShot consensus API.","Limited access to the consensus protocol","Limited access to the consensus protocol","hotshot consensus api","Limited access to the consensus protocol","HotShot consensus API.","","","","","","","","","The block corresponding to the DA cert","","","","","","","","","Total broadcast messages received","The Certificate generated for the transactions commited to …","","","","","garbage collects based on state change right now, this …","the committee exchange","the committee exchange","Reference to consensus. Leader will require a read lock on …","Reference to consensus. Leader will require a read lock on …","Reference to consensus. DA committee member will require a …","Reference to consensus. Validating leader will require a …","Reference to consensus. Replica will require a write lock …","Reference to consensus. Leader will require a read lock on …","Reference to consensus. The replica will require a write …","The view number we’re running on","The view number we’re running on","View number this view is executing in.","The view number we’re running on","The view number we’re running on","view number this view is executing in","The view number we’re running on","View number this view is executing in.","cur_view from pseudocode","The current view","Contains the <code>DAMember</code> struct used for the committee member …","","create new view queue","","","","","","","","","Total messages received","Number of views that were discarded since from one achor …","","","","","Views where no proposal was seen from one anchor to the …","the committee exchange","the quorum exchange","quorum exchange","quorum exchange","Total number of messages which couldn’t be sent","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generic_qc before starting this","generic_qc before starting this","Get a saved block, if available.","Gets the last decided state","return a clone of the internal storage of unclaimed …","<code>true</code> if this queue has already received a proposal","The <code>high_qc</code> per spec","The High QC.","The <code>high_qc</code> per spec","genericQC from the pseudocode","The <code>high_qc</code> per spec","The High QC.","the highqc per spec","id of node","id of node","ID of node.","id of node","id of node","id of node","id of node","ID of node.","increment the current view NOTE may need to do gc here","","","","","Save <code>block</code> for later retrieval.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Amount of invalid QCs we’ve seen since the last commit …","Number of invalid QCs between anchors","last view had a successful decide event","Contains the <code>ValidatingLeader</code> struct used for the leader …","The <code>locked_qc</code> view number","Retuns the maximum transactions allowed in a block","Metrics for reporting stats","A reference to the metrics trait","Returns the minimum transactions that must be in a block","Create a new instance of this <code>ConsensusMetrics</code> struct, …","Contains the <code>NextValidatingLeader</code> struct used for the next …","Number of views that timed out","Number of views that are in-flight since the last anchor …","Number of views that are in-flight since the last …","Total broadcasts sent","Total direct messages this node sent out","Number of outstanding transactions","Memory size in bytes of the serialized transactions still …","Leaf this proposal will chain from","Get a reference to the private key.","The duration to build the proposal","Channel for accepting leader proposals and timeouts …","channel for accepting leader proposals and timeouts …","Channel for accepting leader proposals and timeouts …","The duration we waited for txns before building the …","The maximum amount of time a leader can wait before …","The minimum amount of time a leader has to wait before …","Get a reference to the public key.","the quorum exchange","the quorum exchnage","the quorum exchange","the quorum exchange","to recv networking events for a replica or DA committee …","Number of rejected transactions","Drop a reference to a saved block.","Contains the <code>Replica</code> struct used for the replica step in …","Saved blocks","Map of leaf hash -&gt; leaf","Send a broadcast message to the entire network.","Send a broadcast message to the entire network.","Send a broadcast to the DA comitee, stub for now","send a direct message using the DA communication channel","Send a direct message to the given recipient","Send a direct message to the given recipient","Notify the system of an event within <code>hotshot-consensus</code>.","to send networking events to a replica or DA committee …","Contains the <code>DALeader</code>, <code>ConsensusLeader</code> and …","Contains the <code>SequencingReplica</code> struct used for the replica …","Returns <code>true</code> if hotstuff should start the given round. A …","The phases that are currently loaded in memory","Store a leaf in the storage","","","Total number of nodes in the network. Also known as <code>n</code>.","Contains the <code>SequencingConsensusApi</code> and …","Lock over the transactions list","Lock over the transactions list","A list of undecided transactions","","","","","","","","","","","","","Utility functions, type aliases, helper structs and enum …","The duration of each view, in seconds","The view data. Wrapped in a struct so we can mutate","gather information from the parent chain of leafs","channel through which the leader collects votes","channel through which the leader collects votes","channel through which the leader collects votes","The duration to collect votes in a view (only applies when …","","","","","Available block.","Proposed leaf","","","","","","","","","","","","","","","","This view’s DA committee member.","","","","","","","","","","","","","","","","","needed for type checking","HotShot consensus API.","","","","","","","Reference to consensus. DA committee member will require a …","View number this view is executing in.","","","","the committee exchange","DA committee member task that spins until a valid DA …","","Returns the argument unchanged.","The High QC.","ID of node.","","Calls <code>U::from(self)</code>.","","","","Channel for accepting leader proposals and timeouts …","Run one view of DA committee member.","","","","","","","","","","","","","","","","","","","","","","","","","","This view’s validating leader","","needed for type checking","Limited access to the consensus protocol","","","","","","","Reference to consensus. Validating leader will require a …","The view number we’re running on","","","","the quorum exchange","","Returns the argument unchanged.","The <code>high_qc</code> per spec","id of node","","Calls <code>U::from(self)</code>.","","","","Run one view of the leader task","","Lock over the transactions list","","","","","","","","","","","The next view’s validating leader","","","needed to type check","Limited access to the consensus protocol","","","","","","","The view number we’re running on","","","","quorum exchange","","Returns the argument unchanged.","generic_qc before starting this","id of node","","Calls <code>U::from(self)</code>.","","","","Metrics for reporting stats","Run one view of the next leader task","","","","","channel through which the leader collects votes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This view’s replica","","neeeded to typecheck","hotshot consensus api","","","","","","","Reference to consensus. Replica will require a write lock …","view number this view is executing in","","","","quorum exchange","portion of the replica task that spins until a valid QC …","","Returns the argument unchanged.","genericQC from the pseudocode","id of node","","Calls <code>U::from(self)</code>.","","","","channel for accepting leader proposals and timeouts …","run one view of replica returns the <code>high_qc</code>","","","","","","","","","","","","","","","","","","","","","","","Implemenation of the consensus leader for a DA/Sequencing …","Implenting the next leader.  Collect votes on the previous …","This view’s DA committee leader","","","","","","","","","","","","","","","","","","","needed to tyep check","needed to type check","needed to typecheck","Limited access to the consensus protocol","Limited access to the consensus protocol","Limited access to the consensus protocol","","","","","","","The block corresponding to the DA cert","","","","","","","The Certificate generated for the transactions commited to …","","","the committee exchange","Reference to consensus. Leader will require a read lock on …","Reference to consensus. Leader will require a read lock on …","Reference to consensus. Leader will require a read lock on …","The view number we’re running on","The view number we’re running on","The view number we’re running on","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generic_qc before starting this","The <code>high_qc</code> per spec","The <code>high_qc</code> per spec","id of node","id of node","id of node","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Leaf this proposal will chain from","Returns the parent leaf of the proposal we are building","the quorum exchange","the quorum exchnage","the quorum exchange","Run one view of the DA leader task","Run one view of the next leader, collect votes and build a …","Run one view of the DA leader task","","Lock over the transactions list","","","","","","","","","","channel through which the leader collects votes","channel through which the leader collects votes","","","","return None if we can’t get transactions","Accumulate votes for a proposal and return either the cert …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This view’s replica for sequencing consensus.","","needed to typecheck","HotShot consensus API.","","","","","","","the committee exchange","Reference to consensus. The replica will require a write …","View number this view is executing in.","","","","Replica task for sequencing consensus that spins until a …","","Returns the argument unchanged.","The leaf from the genesis view.","The High QC.","ID of node.","","Calls <code>U::from(self)</code>.","","","","Channel for accepting leader proposals and timeouts …","the quorum exchange","Run one view of the replica for sequencing consensus.","","","","","","The API that [<code>HotStuff</code>] needs to talk to the system, …","The API that [<code>HotStuff</code>] needs to talk to the system, for …","The API that [<code>HotStuff</code>] needs to talk to the system for …","Retuns the maximum transactions allowed in a block","Returns the minimum transactions that must be in a block","Get a reference to the private key.","The maximum amount of time a leader can wait before …","The minimum amount of time a leader has to wait before …","Get a reference to the public key.","Send a broadcast message to the entire network.","Send a broadcast message to the entire network.","Send a broadcast to the DA comitee, stub for now","sends a decide event down the channel","sends a decide event down the channel","send a direct message using the DA communication channel","Send a direct message to the given recipient","Send a direct message to the given recipient","Notify the system of an event within <code>hotshot-consensus</code>.","notifies client of a next leader timeout","notifies client of a next leader timeout","notifies client of a replica timeout","notifies client of a replica timeout","notifies client of an error","notifies client of an error","Sends a <code>ViewFinished</code> event","Sends a <code>ViewFinished</code> event","Returns <code>true</code> if hotstuff should start the given round. A …","Store a leaf in the storage","Total number of nodes in the network. Also known as <code>n</code>.","A pending view with an available block but not leaf …","Stop right before this view number","Leaf has failed","Stop including this view number","Undecided view","A struct containing information about a finished round.","Whether or not to stop inclusively or exclusively when …","This exists so we can perform state transitions mutably","A view’s state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","return the underlying block hash if it exists","return the underlying leaf hash if it exists","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The view data. Wrapped in a struct so we can mutate","The round that finished","","","","","Available block.","Proposed leaf"],"i":[0,0,0,0,0,0,0,0,57,0,0,57,57,0,0,0,0,0,0,0,0,0,0,0,5,8,49,50,40,44,45,46,48,54,49,50,40,44,45,46,48,54,25,10,5,8,25,10,5,8,49,25,10,5,8,25,10,5,8,25,49,5,8,5,8,10,48,54,49,50,40,44,46,48,54,49,50,40,44,45,46,48,54,10,25,0,5,8,25,10,5,8,25,10,5,8,25,25,25,10,5,8,25,40,44,45,46,25,10,5,25,10,5,8,50,45,5,10,10,8,49,40,44,46,48,54,10,49,50,40,44,45,46,48,54,10,25,10,5,8,5,25,10,5,8,25,10,5,8,25,10,5,8,25,10,5,8,10,25,10,0,10,59,45,10,59,25,0,25,25,25,25,25,25,25,49,59,25,40,46,54,25,59,59,59,49,50,48,54,8,25,5,0,10,10,43,39,39,39,43,39,59,8,0,0,59,10,59,5,8,59,0,44,48,10,25,10,5,8,25,10,5,8,25,10,5,8,0,25,56,10,50,45,48,25,25,10,5,8,60,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,48,49,50,48,49,50,48,49,50,48,49,49,50,48,49,50,48,49,48,48,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,48,49,50,48,50,49,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,50,48,49,48,49,50,48,49,50,48,48,48,49,50,48,49,50,48,49,50,48,50,48,49,50,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,59,59,59,59,59,59,43,39,39,59,59,39,43,39,59,59,59,59,59,59,59,59,59,59,59,59,57,34,57,34,57,0,0,0,0,55,34,57,56,55,34,57,56,55,34,57,56,55,34,57,56,55,34,55,34,55,34,57,56,56,55,34,57,56,55,34,57,56,55,34,57,56,55,34,57,56,55,34,57,57,57,56,55,34,57,56,55,34,57,56,55,34,57,56,55,34,57,56,55,34,55,34,57,56,55,34,57,56,55,34,57,56,55,34,56,55,57,56,55,34,60,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[8,[[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[8,[[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],[[]],[[[10,[6,9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[4]]]],[[],[[8,[6,[7,[6]]]]]],[11],[11],[11],[11],[11],[11],[11],[11],0,0,[11],[11],[11],[11],0,0,0,0,0,0,[[[10,[6,9]],12],13],[[[5,[[0,[14,4]]]],12],13],[[]],[[]],[[]],[[]],0,0,[[[5,[4]],[15,[4]]],[[16,[4]]]],[[[10,[6,9]]],9],[[[10,[6,9]]],[[19,[[18,[[17,[15]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[10,[6,9]]]],[[],11],[[],11],[[],11],[[],11],[[[5,[4]],4]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],0,0,0,0,0,[[],23],0,0,[[],11],[24,25],0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,[[],26],[[],26],[[]],0,0,0,0,0,0,[[[5,[4]],[15,[4]]],[[16,[4]]]],0,0,0,[27,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[27,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[31,[[29,[[21,[28]]]]]],0,0,0,[[],[[29,[[21,[28]]]]]],0,[[],[[29,[[21,[28]]]]]],[[]],[[]],[[],23],0,0,0,0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],33],[[],33],0,0,0,[[[10,[6,9]],34,35,36],[[32,[[37,[6]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[[],2],[[],2],[[]],[[]],[[[40,[[0,[3,[39,[[0,[3,6]],[38,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[40,[[0,[3,[39,[[0,[3,6]],[38,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],0,0,[11],[11],[11],0,[[[40,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],16],[[[40,[[0,[14,[39,[[0,[14,6]],[38,[[0,[14,6]]]],[0,[14,[7,[[0,[14,6]]]]]]]]]],[0,[14,6]],[0,[14,[7,[[0,[14,6]]]]]]]],12],13],[[]],0,0,[[],11],[[]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],0,[[[40,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[38,[6]]]]]],[[]],[[],32],[[],32],[[],33],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[[],2],[[],2],[[]],[[]],[[[44,[[0,[3,[43,[[0,[3,6]],[42,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[44,[[0,[3,[43,[[0,[3,6]],[42,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],0,0,[11],[11],[11],0,[[[44,[[0,[14,[43,[[0,[14,6]],[42,[[0,[14,6]]]],[0,[14,[7,[[0,[14,6]]]]]]]]]],[0,[14,6]],[0,[14,[7,[[0,[14,6]]]]]]]],12],13],[[]],0,0,[[],11],[[]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],[[[44,[[43,[6,[42,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[42,[6]]]]]],[[]],0,[[],32],[[],32],[[],33],[[]],0,0,0,0,0,0,0,0,[1],0,0,[[],2],[[],2],[[]],[[]],[[[45,[[0,[3,[43,[[0,[3,6]],[42,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[45,[[0,[3,[43,[[0,[3,6]],[42,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],0,[11],[11],[11],0,[[[45,[[0,[14,[43,[6,[42,[6]],[7,[6]]]]]],6,[7,[6]]]],12],13],[[]],0,0,[[],11],[[]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],0,[[[45,[[43,[6,[42,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[42,[6]]]]]],[[]],[[],32],[[],32],[[],33],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[[],2],[[],2],[[]],[[]],[[[46,[[0,[3,[43,[[0,[3,6]],[42,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[46,[[0,[3,[43,[[0,[3,6]],[42,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],0,0,[11],[11],[11],0,[[[46,[[43,[6,[42,[6]],[7,[6]]]],6,[7,[6]]]],[47,[[10,[6,[42,[6]]]]]]]],[[[46,[[0,[14,[43,[[0,[14,6]],[42,[[0,[14,6]]]],[0,[14,[7,[[0,[14,6]]]]]]]]]],[0,[14,6]],[0,[14,[7,[[0,[14,6]]]]]]]],12],13],[[]],0,0,[[],11],[[]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],0,[[[46,[[43,[6,[42,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[42,[6]]]]]],[[]],[[],32],[[],32],[[],33],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[[48,[[0,[3,[39,[[0,[3,6]],[38,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[48,[[0,[3,[39,[[0,[3,6]],[38,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],0,0,0,0,0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[[[48,[[0,[14,[39,[[0,[14,6]],[38,[[0,[14,6]]]],[0,[14,[7,[[0,[14,6]]]]]]]]]],[0,[14,6]],[0,[14,[7,[[0,[14,6]]]]]]]],12],13],[[]],[[]],[[]],0,0,0,0,0,0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],0,[[[48,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[16,[[38,[6]]]]]],0,0,0,[[[49,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[38,[6]]]]]],[[[50,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[38,[6]]]]]],[[[48,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],16],[[]],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],33],0,0,[[]],[[]],[[]],[[[48,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[16,[51]]]],[[[48,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]],52,15],[[16,[[53,[6]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[[],2],[[],2],[[]],[[]],[[[54,[[0,[3,[39,[[0,[3,6]],[38,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]],[[54,[[0,[3,[39,[[0,[3,6]],[38,[[0,[3,6]]]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[0,[3,6]],[0,[3,[7,[[0,[3,6]]]]]]]]]],[[]],0,0,0,[11],[11],[11],[[[54,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]],[47,[[10,[6,[38,[6]]]]]]]],[[[54,[[0,[14,[39,[[0,[14,6]],[38,[[0,[14,6]]]],[0,[14,[7,[[0,[14,6]]]]]]]]]],[0,[14,6]],[0,[14,[7,[[0,[14,6]]]]]]]],12],13],[[]],[[[54,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[16,[[38,[6]]]]]],0,0,[[],11],[[]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],0,0,[[[54,[[39,[6,[38,[6]],[7,[6]]]],6,[7,[6]]]]],[[41,[6,[38,[6]]]]]],[[]],[[],32],[[],32],[[],33],[[]],0,0,0,[[],23],[[],11],[[]],[[],26],[[],26],[[]],[27,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[[51,41],[[29,[[21,[28]]]]]],[[51,41],[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[27,[[29,[[21,[28]]]]]],[30,[[29,[[21,[28]]]]]],[31,[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[[19,[37]]],[[29,[[21,[28]]]]]],[[[19,[37]]],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],[[29,[[21,[28]]]]]],[[],23],0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[55,[[0,[3,6]]]]],[[55,[[0,[3,6]]]]]],[[[34,[3]]],[[34,[3]]]],[[]],[[]],[11],[[[56,[6,9]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[[57,[[0,[14,6]],[0,[14,9]]]],12],13],[[[56,[[0,[14,6]],[0,[14,9]]]],12],13],[[[55,[[0,[14,6]]]],12],13],[[[34,[14]],12],13],[[]],[[]],[[]],[[]],[[[57,[6,9]]],[[16,[[15,[[58,[9]]]]]]]],[[[57,[6,9]]],[[16,[[15,[9]]]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[[[21,[20]]],[[21,[2,20]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[19,[[19,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[22,[[22,[2]]]],[[]],[[]],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],33],[[],33],[[],33],[[],33],0,0,[[]],[[]],[[]],[[]],0,0],"c":[],"p":[[3,"Private"],[8,"Any"],[8,"Clone"],[8,"Committable"],[3,"BlockStore"],[8,"NodeType"],[8,"NodeImplementation"],[3,"ViewQueue"],[8,"LeafType"],[3,"Consensus"],[15,"usize"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Commitment"],[4,"Option"],[3,"HashMap"],[3,"SubscribableRwLock"],[3,"Arc"],[3,"Global"],[3,"Box"],[3,"Rc"],[3,"NonZeroUsize"],[8,"Metrics"],[3,"ConsensusMetrics"],[3,"Duration"],[3,"ValidatingMessage"],[8,"Future"],[3,"Pin"],[3,"SequencingMessage"],[3,"Event"],[4,"Result"],[3,"TypeId"],[4,"Terminator"],[15,"bool"],[8,"FnMut"],[4,"HotShotError"],[3,"SequencingLeaf"],[8,"SequencingConsensusApi"],[3,"DAMember"],[3,"QuorumCertificate"],[3,"ValidatingLeaf"],[8,"ValidatingConsensusApi"],[3,"ValidatingLeader"],[3,"NextValidatingLeader"],[3,"Replica"],[3,"RwLockUpgradableReadGuard"],[3,"DALeader"],[3,"ConsensusLeader"],[3,"ConsensusNextLeader"],[3,"Vec"],[3,"NonZeroU64"],[3,"DACertificate"],[3,"SequencingReplica"],[3,"RoundFinishedEvent"],[3,"View"],[4,"ViewInner"],[6,"LeafBlock"],[8,"ConsensusSharedApi"],[13,"DA"],[13,"Leaf"]]},\
"hotshot_orchestrator":{"doc":"","t":"IDLLLLLMLLAMLFLLLLKLLLLLLMFLMKLKLKLKLFMLLLLLDDDDDDLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLMMMMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["OrchestratorApi","OrchestratorState","__clone_box","as_any","as_any_mut","borrow","borrow_mut","client","clone","clone_into","config","config","default","define_api","deref","deref_mut","drop","from","get_start","get_start","init","into","into_any","into_any_arc","into_any_rc","latest_index","libp2p_generate_indexed_identity","new","nodes_connected","post_getconfig","post_getconfig","post_identity","post_identity","post_ready","post_ready","post_run_results","post_run_results","run_orchestrator","start","to_owned","try_from","try_into","type_id","vzip","HotShotConfigFile","Libp2pConfig","Libp2pConfigFile","NetworkConfig","NetworkConfigFile","WebServerConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","base_port","base_port","bootstrap_mesh_n","bootstrap_mesh_n","bootstrap_mesh_n_high","bootstrap_mesh_n_high","bootstrap_mesh_n_low","bootstrap_mesh_n_low","bootstrap_mesh_outbound_min","bootstrap_mesh_outbound_min","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","config","default","default_config","default_padding","default_rounds","default_start_delay_seconds","default_transactions_per_round","default_web_server_config","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","election_config_type_name","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","host","index_ports","index_ports","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_type_name","libp2p_config","libp2p_config","max_transactions","mesh_n","mesh_n","mesh_n_high","mesh_n_high","mesh_n_low","mesh_n_low","mesh_outbound_min","mesh_outbound_min","min_transactions","next_view_timeout","next_view_timeout","next_view_timeout","node_index","node_index","node_index","num_bootstrap","num_bootstrap_nodes","num_bootstrap_nodes","num_txn_per_round","num_txn_per_round","online_time","online_time","padding","padding","port","propose_max_round_time","propose_max_round_time","propose_max_round_time","propose_min_round_time","propose_min_round_time","propose_min_round_time","public_ip","round_start_delay","rounds","rounds","seed","seed","serialize","serialize","serialize","serialize","serialize","serialize","start_delay","start_delay_seconds","start_delay_seconds","timeout_ratio","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_nodes","transactions_per_round","transactions_per_round","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wait_between_polls","web_server_config","web_server_config"],"q":[[0,"hotshot_orchestrator"],[44,"hotshot_orchestrator::config"]],"d":["","","","","","","","connection to the web server","","","","The network configuration","","Sets up all API routes","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Tracks the latest node index we have generated a …","yeesh maybe we should just implement SignatureKey for this…","","The total nodes that have posted they are ready to start","","","","","","","","","Runs the orchestrator","Whether nodes should start their HotShot instances Will be …","","","","","","Holds configuration for a <code>HotShot</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Maximum transactions per block","","","","","","","","","Minimum transactions per block","","","Base duration for next-view timeout, in milliseconds","","","","Number of network bootstrap nodes","","","","","","","","","","","","The maximum amount of time a leader can wait to start a …","","","The minimum amount of time a leader has to wait to start a …","","The delay a leader inserts before starting pre-commit, in …","","","","","","","","","","","Delay after init before starting consensus, in milliseconds","","","The exponential backoff ration for the next-view timeout","","","","","","","Total number of nodes in the network","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,4,4,4,4,4,0,4,4,0,4,4,4,4,42,4,4,4,4,4,4,4,0,4,4,42,4,42,4,42,4,42,4,0,4,4,4,4,4,4,0,0,0,0,0,0,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,30,31,30,31,30,31,30,31,30,31,30,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,25,33,25,0,0,0,0,0,0,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,25,30,31,32,25,33,34,30,31,32,25,25,33,34,32,30,31,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,25,25,33,34,30,31,30,31,30,31,30,31,34,30,31,34,30,25,33,34,30,31,30,31,30,31,25,33,32,30,31,34,30,31,34,30,34,25,33,25,33,30,31,32,25,33,34,34,25,33,34,30,31,32,25,33,34,34,25,33,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,30,31,32,25,33,34,32,25,33],"f":[0,0,[1],[[],2],[[],2],[[]],[[]],0,[[[4,[3,3]]],[[4,[3,3]]]],[[]],0,0,[[],[[4,[5,5]]]],[[],[[13,[[11,[[0,[6,7,8,9]],10]],12]]]],[14],[14],[14],[[]],[[],[[13,[15,10]]]],[[[4,[[0,[16,3,17]],[0,[16,3,6]]]]],[[13,[15,10]]]],[[],14],[[]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],0,[22,23],[[[25,[17,24]]],[[4,[17,24]]]],0,[26,[[13,[25,10]]]],[[[4,[[0,[16,3,17]],[0,[16,3,6]]]],26],[[13,[[25,[[0,[16,3,17]],[0,[16,3,6]]]],10]]]],[27,[[13,[26,10]]]],[[[4,[[0,[16,3,17]],[0,[16,3,6]]]],27],[[13,[26,10]]]],[[],[[13,[10]]]],[[[4,[[0,[16,3,17]],[0,[16,3,6]]]]],[[13,[10]]]],[[],[[13,[10]]]],[[[4,[[0,[16,3,17]],[0,[16,3,6]]]]],[[13,[10]]]],[[[25,[[0,[17,16]],[0,[24,16]]]],27,26],28],0,[[]],[[],13],[[],13],[[],29],[[]],0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[31,31],[32,32],[[[25,[3,3]]],[[25,[3,3]]]],[33,33],[34,34],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],25],[[],34],[[],14],[[],14],[[],22],[[],14],[[],[[35,[32]]]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[36,[[13,[30]]]],[36,[[13,[31]]]],[36,[[13,[32]]]],[36,[[13,[[25,[37,37]]]]]],[36,[[13,[33]]]],[36,[[13,[34]]]],[14],[14],[14],[14],[14],[14],0,[[30,38],39],[[31,38],39],[[32,38],39],[[[25,[40,40]],38],39],[[33,38],39],[[34,38],39],[[]],[[]],[[]],[[]],[33,25],[[]],[[]],0,0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[[[19,[18]]],[[19,[2,18]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[20,[[20,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],[21,[[21,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[30,41],13],[[31,41],13],[[32,41],13],[[[25,[16,16]],41],13],[[33,41],13],[[34,41],13],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0],"c":[],"p":[[3,"Private"],[8,"Any"],[8,"Clone"],[3,"OrchestratorState"],[8,"Default"],[8,"Send"],[8,"Sync"],[8,"ReadState"],[8,"WriteState"],[3,"ServerError"],[3,"Api"],[4,"ApiError"],[4,"Result"],[15,"usize"],[15,"bool"],[8,"Serialize"],[8,"SignatureKey"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"u64"],[4,"Keypair"],[8,"ElectionConfig"],[3,"NetworkConfig"],[15,"u16"],[4,"IpAddr"],[6,"Result"],[3,"TypeId"],[3,"Libp2pConfig"],[3,"Libp2pConfigFile"],[3,"WebServerConfig"],[3,"NetworkConfigFile"],[3,"HotShotConfigFile"],[4,"Option"],[8,"Deserializer"],[8,"Deserialize"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Serializer"],[8,"OrchestratorApi"]]},\
"hotshot_task":{"doc":"Abstractions meant for usage with long running consensus …","t":"DIDDDFMMMMMMMMMMMMLLLLLLLLALLLLALLLLLLFLLLLAAAALLLLLLLLLLLLLDDDIQGQLLLLLLLLLLLLLLMLLLLLMLKLLKLLMLLLLLLLLLLLKLLDGDDLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLHNQQQDNDIDNDNEEINNHQQINNQNIDDDFMMMMLLLLLLLLLLLLLLLLLLLKLLLLLLLLLMMMLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLMMMMMMLLLLMMMLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIIDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNDERRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLM","n":["Merge","MergeMustNotImplDrop","__Merge","__MergeProjection","__MergeProjectionRef","__assert_not_repr_packed","__field0","__field1","__pin_project_use_generics","a","a","a","a_first","a_first","a_first","b","b","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","event_stream","from","from","from","from","global_registry","into","into","into","into","into_stream","new","poll_next","poll_next","project","project_ref","size_hint","task","task_impls","task_launcher","task_state","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","ChannelStream","ChannelStreamInner","DummyStream","EventStream","EventType","StreamId","StreamType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","from","from","from","inner","into","into","into","into_stream","new","next_stream_id","poll_next","publish","publish","publish","subscribe","subscribe","subscribe","subscribers","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsubscribe","unsubscribe","unsubscribe","GlobalRegistry","HotShotTaskId","Modifier","ShutdownFn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","fmt","from","from","from","get_task_state","into","into","into","operate_on_task","pause_task","register","run_task","shutdown_task","spawn_new","state_cache","state_list","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_cache","CALLSITE","Error","Error","Event","EventStream","FilterEvent","FilterEvent","HST","HSTMustNotImplDrop","HandleEvent","HandleEvent","HandleMessage","HandleMessage","HotShotTaskCompleted","HotShotTaskHandler","HotShotTaskTypes","LostReturnValue","LostState","META","Message","MessageStream","PassType","ShutDown","Shutdown","State","StreamsDied","TS","__HST","__HSTProjection","__HSTProjectionRef","__assert_not_repr_packed","__field0","__field1","__field2","__pin_project_use_generics","base_check","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","default","default","deref","deref","deref","eq","event_check","event_stream","event_stream","event_stream","fmt","from","from","from","from","from","from","from","from","from","handle_event","handle_event","handle_event","handle_message","handle_message","handle_message","in_progress_fut","in_progress_fut","in_progress_fut","in_progress_shutdown_fut","in_progress_shutdown_fut","in_progress_shutdown_fut","into","into","into","into","into","into","into","into","into","into_future","into_future","launch","message_check","message_stream","message_stream","message_stream","name","name","name","new","poll","project","project_ref","r_val","r_val","r_val","register_event_stream","register_handler","register_message_stream","register_registry","register_state","shutdown_fns","shutdown_fns","shutdown_fns","state","state","state","status","status","status","tid","tid","tid","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","HSTWithEvent","HSTWithEventAndMessage","HSTWithMessage","ImplEventStream","ImplMessageStream","TaskBuilder","_pd","_pd","_pd","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","from","from","from","from","get_task_id","into","into","into","into","new","register_event_handler","register_event_stream","register_message_handler","register_message_stream","register_registry","register_state","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AtomicTaskStatus","Completed","NotStarted","Paused","Running","TaskState","TaskStatus","USIZE_Completed","USIZE_NotStarted","USIZE_Paused","USIZE_Running","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare_and_swap","compare_exchange","compare_exchange_weak","default","deserialize","eq","fmt","fmt","fmt","from","from","from","from","from_status","from_usize","get","get_status","into","into","into","into_inner","into_stream","load","new","new","next","partial_cmp","poll_next","prev","serialize","set","set_state","store","swap","swap_mut","to_owned","to_owned","to_usize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wakers"],"q":[[0,"hotshot_task"],[60,"hotshot_task::event_stream"],[110,"hotshot_task::global_registry"],[153,"hotshot_task::task"],[313,"hotshot_task::task_impls"],[361,"hotshot_task::task_state"]],"d":["Stream returned by the <code>merge</code> method.","","","","","","","","","","","first stream to merge","","","When <code>true</code>, poll <code>a</code> first, otherwise, <code>poll</code> b`.","","","second stream to merge","","","","","","","","","mpmc streamable to all subscribed tasks","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","the global registry storing the status of all tasks as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create a new Merged stream","poll the next item in the merged stream","","","","","The <code>HotShot</code> Task. The main point of this library. Uses all …","the task implementations with different features","The hotshot task launcher. Useful for constructing tasks","Astractions over the state of a task and a stream …","","","","","","","","","","","","","","Event stream implementation using channels as the …","trick to make the event stream clonable","a stream that does nothing. it’s immediately closed","Async pub sub event stream NOTE: static bound indicates …","the type of event to process","this is only used for indexing","the type of stream to use","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","inner field. Useful for having the stream itself be clone","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","construct a new event stream","the next unused assignable id","","publish an event to the event stream","","publish an event to the event stream","subscribe to a particular set of events specified by <code>filter</code>…","","","the subscribers to the channel","","","","","","","","","","","","unsubscribe from the stream","","","the global registry provides a place to:","id of task. Usize instead of u64 because used for …","function to modify state","function to shut down gobal registry","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","if the <code>uid</code> is registered with the global registry return …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","internal function to run <code>modifier</code> on <code>uid</code> if it exists","set <code>uid</code>’s state to paused returns true upon success and …","register with the global registry return a function to the …","set <code>uid</code>’s state to running returns true upon success and …","shut down a task from a different thread returns true if …","create new registry","possibly stale read version of state NOTE: must include …","up-to-date shared list of statuses only used if <code>state_cpy</code> …","","","","","","","","","","","","update the cache","","the task encountered an error","the error to return","the event type from the event stream","the global event stream","Return <code>true</code> if the event should be filtered","filter an event","hot shot task this is for <code>in_progress_fut</code>. The type is …","","Type wrapper for handling an event","handle an event","Type wrapper for handling a message","handle a message","enum describing how the tasks completed","ADT for wrapping all possible handler types","group of types needed for a hotshot task","lost the return value somehow","we somehow lost the state this is definitely a bug.","","the message stream to receive","the steam of messages from other tasks","restrictions on types we wish to pass around. Includes …","the task shut down successfully","deregister with the registry","the state of the task","the streams the task was listening for died","the task state","","","","","","","","","Do a consistency check on the <code>HST</code> construction","","","","","","","","","","","","","","","","","","","build a task NOTE: done here and not on <code>TaskBuilder</code> because","","","","","","","","","perform event sanity checks","","","shared stream","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","handler for events","","","handler for messages","","","the in progress future","","","if we have a future for tracking shutdown progress","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","launch the task NOTE: the only way to get a <code>HST</code> is by usage","perform message sanity checks","","","stream of messages","","","name of task","create a new task","","","","","","the eventual return value, post-cleanup","register an event stream with the task","register a handler with the task","register a message with the task","register with the registry","register state with the task","","","functions performing cleanup one should shut down the task …","","","state","","","state of the task","","","task id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a hotshot task with an event stream","hotshot task with even and message","a hotshot task with a message","trait to specify features","trait to specify features","builder for task","phantom data","phantom data","phantom data","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","get the task id in the global registry","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new task builder","register an event handler","register an event stream","register a message handler","register a message stream","register with the global registry","register the state","","","","","","","","","","","","","A wrapper around <code>TaskStatus</code> which can be safely shared …","the task completed","the task hasn’t started running","NOTE: not useful generally, but VERY useful for byzantine …","the task is running","The state of a task <code>AtomicTaskStatus</code> + book keeping to …","Nit: wish this was for u8 but sadly no Represents the …","","","","","","","","","","","","","","","","Stores a value into the atomic if the current value is the …","Stores a value into the atomic if the current value is the …","Stores a value into the atomic if the current value is the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","create a task state from a task status","","Gets the value of the atomic without performing an atomic …","gets a possibly stale version of the state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the atomic and returns the contained value.","","Loads a value from the atomic.","Creates a new atomic <code>TaskStatus</code>.","create a new state","next status","","","previous status","","Sets the value of the atomic without performing an atomic …","sets the state","Stores a value into the atomic.","Stores a value into the atomic, returning the previous …","Stores a value into the atomic, returning the previous …","","","","","","","","","","","","","using <code>std::sync::mutex</code> here because it’s faster than …"],"i":[0,0,0,0,0,0,56,56,56,7,8,1,7,8,1,7,8,1,7,8,56,1,7,8,56,1,0,7,8,56,1,0,7,8,56,1,1,1,0,1,1,1,1,0,0,0,0,7,8,56,1,7,8,56,1,1,7,8,56,1,0,0,0,0,43,0,43,57,11,14,57,11,14,11,14,11,14,14,57,11,14,14,57,11,14,11,14,57,11,43,11,14,43,11,14,57,11,14,57,11,14,57,11,14,57,11,14,43,11,14,0,0,0,0,25,19,20,25,19,20,19,20,19,20,19,20,25,19,20,20,25,19,20,20,20,20,20,20,20,20,20,19,20,25,19,20,25,19,20,25,19,20,20,0,37,31,31,31,0,41,0,0,0,41,0,41,0,0,0,37,37,0,31,31,0,37,41,31,37,0,0,0,0,0,58,58,58,58,32,41,35,36,39,40,58,32,17,37,41,35,36,39,40,58,32,17,37,31,17,17,35,17,35,36,17,37,32,39,40,32,37,41,35,36,39,40,58,32,17,37,39,40,32,39,40,32,39,40,32,39,40,32,41,35,36,39,40,58,32,17,37,32,32,32,32,39,40,32,39,40,32,32,32,32,32,39,40,32,32,32,32,32,32,39,40,32,39,40,32,39,40,32,39,40,32,17,41,35,36,39,40,58,32,17,37,41,35,36,39,40,58,32,17,37,41,35,36,39,40,58,32,17,37,0,0,0,0,0,0,45,46,47,34,45,46,47,34,45,46,47,45,46,47,34,45,46,47,34,34,45,46,47,34,34,34,34,34,34,34,34,45,46,47,34,45,46,47,34,45,46,47,0,24,24,24,24,0,0,0,0,0,0,51,24,29,51,24,29,24,29,24,29,24,51,51,51,29,24,24,51,24,29,51,51,24,29,29,51,51,29,51,24,29,51,29,51,51,29,29,24,29,29,24,51,29,51,51,51,24,29,51,51,24,29,51,24,29,51,24,29,29],"f":[0,0,0,0,0,[1],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[2,2],[[1,[2,2]]]],[[[3,[2]],[3,[2]],4],[[6,[5]]]],[[[3,[[1,[2,2]]]],4],[[6,[5]]]],[[[3,[1]]],7],[[[3,[1]]],8],[[[1,[2,2]]]],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[3,4],[[6,[[5,[9]]]]]],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11,11],[[[14,[[0,[12,13]]]]],[[14,[[0,[12,13]]]]]],[[]],[[]],[[],[[14,[13]]]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[],[[14,[13]]]],0,[[[3,[11]],4],[[6,[5]]]],[[],[[3,[[16,[15]]]]]],[11,[[3,[[16,[15]]]]]],[[[14,[13]]],[[3,[[16,[15]]]]]],[17,[[3,[[16,[15]]]]]],[[11,17],[[3,[[16,[15]]]]]],[[[14,[13]],17],[[3,[[16,[15]]]]]],0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[18,[[3,[[16,[15]]]]]],[[11,18],[[3,[[16,[15]]]]]],[[[14,[13]],18],[[3,[[16,[15]]]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[19,19],[20,20],[[]],[[]],[19],[[20,21],22],[[]],[[]],[[]],[[20,23],[[5,[24]]]],[[]],[[]],[[]],[[20,23,25],[[27,[24,26]]]],[[20,23],26],[[20,28,29]],[[20,23],26],[[20,30],26],[[],20],0,0,[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[32,[31]]]],0,0,0,0,[[[32,[31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[34,[33]]],[[32,[33]]]],[[[17,[[0,[12,13]]]]],[[17,[[0,[12,13]]]]]],[[]],[[],[[35,[31]]]],[[],[[17,[13]]]],[[[35,[31]]]],[[[36,[31]]]],[[[17,[13]]]],[[[37,[31]],[37,[31]]],26],[[[32,[31]]]],0,0,0,[[[37,[31]],21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[32,[31]]],[[37,[31]]]],[[[32,[31]]]],0,0,0,0,0,0,[38,[[32,[31]]]],[[[3,[[32,[31]]]],4],6],[[[3,[[32,[31]]]]],[[39,[31]]]],[[[3,[[32,[31]]]]],[[40,[31]]]],0,0,0,[[[32,[31]],17],[[32,[31]]]],[[[32,[31]],[41,[31]]],[[32,[31]]]],[[[32,[31]]],[[32,[31]]]],[[[32,[31]],20],[[32,[31]]]],[[[32,[31]]],[[32,[31]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[34,[[45,[42,13,43,44]]]]],[[32,[[45,[42,13,43,44]]]]]],[[[34,[[46,[42,13,2,44]]]]],[[32,[[46,[42,13,2,44]]]]]],[[[34,[[47,[42,13,43,13,2,44]]]]],[[32,[[47,[42,13,43,13,2,44]]]]]],[[]],[[]],[[]],[[]],[[[34,[31]]],[[5,[23]]]],[[]],[[]],[[]],[[]],[38,[[34,[31]]]],[[[34,[48,31]],[35,[48,31]]],[[34,[48,31]]]],[[[34,[48,31]],17],[[34,[48,31]]]],[[[34,[49,31]],[36,[49,31]]],[[34,[49,31]]]],[[[34,[49,31]]],[[34,[49,31]]]],[[[34,[31]],20],[[34,[31]]]],[[[34,[31]]],[[34,[31]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[29,29],[[]],[[]],[[24,24],50],[[51,24,24,52],24],[[51,24,24,52,52],[[9,[24,24]]]],[[51,24,24,52,52],[[9,[24,24]]]],[[],29],[53,[[9,[24]]]],[[24,24],26],[[51,21],22],[[24,21],22],[[29,21],22],[24,51],[[]],[[]],[[]],[[[54,[51]]],29],[30,24],[51,24],[29,24],[[]],[[]],[[]],[51,24],[[]],[[51,52],24],[24,51],[[],29],0,[[24,24],[[5,[50]]]],[[[3,[29]],4],[[6,[5]]]],0,[[24,55],9],[[51,24]],[[29,24]],[[51,24,52]],[[51,24,52],24],[[51,24],24],[[]],[[]],[24,30],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0],"c":[383],"p":[[3,"Merge"],[8,"Stream"],[3,"Pin"],[3,"Context"],[4,"Option"],[4,"Poll"],[3,"__MergeProjection"],[3,"__MergeProjectionRef"],[4,"Result"],[3,"TypeId"],[3,"DummyStream"],[8,"Clone"],[8,"PassType"],[3,"ChannelStream"],[8,"Future"],[3,"Box"],[3,"FilterEvent"],[6,"StreamId"],[3,"ShutdownFn"],[3,"GlobalRegistry"],[3,"Formatter"],[6,"Result"],[6,"HotShotTaskId"],[4,"TaskStatus"],[3,"Modifier"],[15,"bool"],[4,"Either"],[15,"str"],[3,"TaskState"],[15,"usize"],[8,"HotShotTaskTypes"],[3,"HST"],[8,"Sized"],[3,"TaskBuilder"],[3,"HandleEvent"],[3,"HandleMessage"],[4,"HotShotTaskCompleted"],[3,"String"],[3,"__HSTProjection"],[3,"__HSTProjectionRef"],[4,"HotShotTaskHandler"],[8,"Error"],[8,"EventStream"],[8,"TS"],[3,"HSTWithEvent"],[3,"HSTWithMessage"],[3,"HSTWithEventAndMessage"],[8,"ImplEventStream"],[8,"ImplMessageStream"],[4,"Ordering"],[3,"AtomicTaskStatus"],[4,"Ordering"],[8,"Deserializer"],[3,"Arc"],[8,"Serializer"],[3,"__Merge"],[3,"ChannelStreamInner"],[3,"__HST"]]},\
"hotshot_testing":{"doc":"Testing harness for the hotshot repository","t":"AAAAAAAADDDLLLLLLLLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLLLLLLLLLMMMLLLLLLLLLLLLLLLHHDDDDDDGLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLMMLLLLLLLLLLLLMLLLLLLMLLLLLLHHHHHHHDNHHHHHHHDDNELLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLMMLLLLENDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLMMLMMMMLLLLMLLLLLLLLLLLLLLLLLLLLMNDENDENDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDDLLLLLLLLMMLLLLLLLLMLLLLLLLLLLMLMLLMMMLLLLLLLLLLLLLLHHHHHHHHHHHHHHGGHHHHHHHHHHHHHHDGDLLLLLLLLLLLLFLLLLLLLLLLLMLLLLLLLLLLMLLMMLMLLLLLLLLLLLLLLGDDGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["network_reliability","round","round_builder","test_builder","test_errors","test_launcher","test_runner","test_types","AsynchronousNetwork","PartiallySynchronousNetwork","SynchronousNetwork","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","asynchronous","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","delay_high_ms","delay_low_ms","delay_low_ms","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","gst","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","keep_denominator","keep_numerator","new","new","new","sample_delay","sample_delay","sample_delay","sample_keep","sample_keep","sample_keep","start","synchronous","timeout_ms","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CALLSITE","META","Round","RoundCtx","RoundHook","RoundResult","RoundSafetyCheck","RoundSetup","StateAndBlock","__clone_box","__clone_box","__clone_box","__clone_box","agreed_block","agreed_leaf","agreed_state","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","empty","empty_safety_check","empty_setup_round","failed_nodes","fmt","fmt","from","from","from","from","from","from","hooks","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","print_summary","prior_round_results","safety_check","setup_round","success","success_nodes","to_owned","to_owned","to_owned","to_owned","total_failed_views","total_successful_views","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txns","type_id","type_id","type_id","type_id","type_id","type_id","views_since_progress","vzip","vzip","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ChangeNode","Down","META","META","META","META","META","META","META","RoundSafetyCheckBuilder","RoundSetupBuilder","Up","UpDown","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","check_block","check_leaf","check_state","check_transactions","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","idx","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","num_failed_consecutive_rounds","num_failed_rounds_total","num_out_of_sync","num_txns_per_round","scheduled_changes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","updown","view","vzip","vzip","vzip","vzip","RoundError","SystemContext","SystemContextSnafu","TestBuilder","TestMetadata","TimingData","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","check","clone","clone","clone","clone_into","clone_into","clone_into","da_committee_size","default","default","default","default_multiple_rounds","default_multiple_rounds_da","default_stress","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","failure_threshold","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","gen_sane_round","get_threshold","get_tolerance","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","max_transactions","metadata","min_transactions","network_reliability","next_view_timeout","num_bootstrap_nodes","num_succeeds","num_txns_per_round","propose_max_round_time","propose_min_round_time","provide","round_start_delay","setup","source","start_delay","start_nodes","timeout_ratio","timing_data","to_owned","to_owned","to_owned","to_string","total_nodes","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","source","CompletedTestSuccessfully","CompletedTestSuccessfullySnafu","ConsensusRoundError","ConsensusSafetyFailed","ConsensusSafetyFailedSnafu","ConsensusTestError","CustomError","CustomSnafu","InconsistentBlocks","InconsistentBlocksSnafu","InconsistentLeaves","InconsistentLeavesSnafu","InconsistentStates","InconsistentStatesSnafu","NoMajorityProgress","NoMajorityProgressSnafu","NoSuchNode","NoSuchNodeSnafu","TooManyConsecutiveFailures","TooManyConsecutiveFailuresSnafu","TooManyFailures","TooManyFailuresSnafu","TooManyTimedOutNodes","TooManyTimedOutNodesSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","in_current_span","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","node_ids","provide","provide","requested_id","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","description","err","node_ids","requested_id","ResourceGenerators","TestLauncher","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","committee_network","config","deref","deref","deref_mut","deref_mut","drop","drop","from","from","generator","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","launch","metadata","modify_default_config","network_generator","new","push_hook","quorum_network","round","storage","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_default_config","with_hooks","with_round","with_safety_check","with_setup","with_storage","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CommitteeNetworkGenerator","Generator","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Node","QuorumNetworkGenerator","TestRunner","add_node_with_config","add_nodes","add_random_transaction","add_random_transactions","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","concise_leaf_and_node","deref","deref","deref_mut","deref_mut","drop","drop","execute_round","execute_rounds","from","from","get_handle","handle","ids","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","launcher","new","next_node_id","next_node_id","node_id","nodes","nodes","num_succeeds","run_one_round","run_test","shutdown","shutdown_all","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_round","AppliedTestRunner","StandardNodeImplType","StaticCommitteeTestTypes","StaticCommunication","StaticMembership","StaticNodeImplType","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_hash","hash","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new_channel_maps","partial_cmp","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"hotshot_testing"],[8,"hotshot_testing::network_reliability"],[99,"hotshot_testing::round"],[248,"hotshot_testing::round_builder"],[372,"hotshot_testing::test_builder"],[520,"hotshot_testing::test_builder::RoundError"],[521,"hotshot_testing::test_errors"],[880,"hotshot_testing::test_errors::ConsensusTestError"],[884,"hotshot_testing::test_launcher"],[937,"hotshot_testing::test_runner"],[1026,"hotshot_testing::test_types"]],"d":["implementations of various networking models","describe a round of consensus","helper functions to build a round","structs and infra to describe the tests to be written","errors for tests","test launcher infrastructure","test runner","set of commonly used test types for our tests","An asynchronous network. Packets may be dropped entirely …","An partially synchronous network. Behaves asynchronously …","A synchronous network. Packets may be delayed, but are …","","","","","","","","","","asynchronous portion of network","","","","","","","","","","","","","","","","highest value in milliseconds that a packet may be delayed","Lowest value in milliseconds that a packet may be delayed","lowest value in milliseconds that a packet may be delayed","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","time when GST occurs","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","denominator for probability of keeping packets","numerator for probability of keeping packets","create new <code>SynchronousNetwork</code>","create new <code>AsynchronousNetwork</code>","create new <code>PartiallySynchronousNetwork</code>","","","","never drop a packet","","never drop a packet","when the network was started","synchronous portion of network","Max delay of packet before arrival","","","","","","","","","","","","","","","","","","functions to run a round of consensus the control flow is: …","context for a round TODO eventually we want these to just …","Type of function used for checking results after running a …","Result of running a round of consensus","Type of function used for checking results after running a …","Type of function used for configuring a round of consensus","Alias for <code>(Vec&lt;S&gt;, Vec&lt;B&gt;)</code>. Used in <code>RoundResult</code>.","","","","","block of the majority of the nodes","leaf of the majority of the nodes","state of the majority of the nodes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","an empty <code>Round</code>","an empty <code>RoundSafetyCheck</code>","an empty <code>RoundSetup</code>","Nodes that failed to commit this round","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety check before round is set up and run to ensure …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","prints a summary TODO this should probably include a …","results from previous rounds","Safety check after round is complete","Round set up","whether or not the round succeeded (for a custom defn of …","Nodes that committed this round id -&gt; (leaf, qc)","","","","","totall number o failed views. TODO this will need to change","successful views","","","","","","","","","","","","","Transactions that were submitted","","","","","","","views since we had a successful commit","","","","","","","","","","","","","","denotes a change in node state","spin the node down","","","","","","","","description to be passed to the view checker","describes how to set up the round","spin the node up","Spin the node up or down","","","","","","","","","","","","","","","","","","","","","build the round setup","builds a saety check based on a <code>RoundSafetyCheckBuilder</code>","whether or not to check the block","whether or not to check the leaf","whether or not to check the state","whether or not to check the transaction pool","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","the index of the node","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","num of consecutive failed rounds before failing","num of total rounds allowed to fail","number of out of sync nodes before considered failed","TODO add in sampling number of transactions to submit per …","scheduled changes (spinning a node up or down)","","","","","","","","","","","","","","","","","spin the node up or down","the view on which to take action","","","","","","","SNAFU context selector for the <code>RoundError::SystemContext</code> …","Builder for a test","metadata describing a test","data describing how a round should be timed.","","","","","","","","","","","","","","","","","","","","","","","","","","build a test description from a detailed testing spec","","optional override to build safety check","","","","","","","Size of the DA committee for the test.  0 == no DA.","by default, just a single round","","","Default constructor for multiple rounds.","Default Constructor for multiple rounds and a DA committee","Default constructor for stress testing.","","","","","","","","","","","","","","","","","max number of failing rounds before test is failed","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generate a reasonable round description","given <code>num_nodes</code>, calculate min number of honest nodes for …","given <code>num_nodes</code>, calculate max number of byzantine nodes","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Maximum transactions allowed in a block","metadata with which to generate round","Minimum transactions required for a block","Description of the network reliability <code>None</code> == perfect …","Base duration for next-view timeout, in milliseconds","number of bootstrap nodes","number of successful/passing rounds required for test to …","number of txn per round TODO in the future we should make …","The maximum amount of time a leader can wait to start a …","The minimum amount of time a leader has to wait to start a …","","The delay a leader inserts before starting pre-commit, in …","optional override to build setup","","Delay after init before starting consensus, in milliseconds","nodes available at start","The exponential backoff ration for the next-view timeout","timing data","","","","","Total number of nodes in the test","","","","","","","","","","","","","","","","","","","","","","HACK successul completion","SNAFU context selector for the …","A view specific error","safety violation","SNAFU context selector for the …","An overarching consensus test failure","custom correctness property failed","SNAFU context selector for the …","inconsistent blocks","SNAFU context selector for the …","inconsistent leaves","SNAFU context selector for the …","inconsistent states","SNAFU context selector for the …","lack of progress","SNAFU context selector for the …","No node exists","SNAFU context selector for the …","too many consecutive failures","SNAFU context selector for the …","Too many nodes failed","SNAFU context selector for the …","Too Many timed out nodes","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","description of error","description","the existing nodes","the node requested","generators for resources used by each node","A launcher for <code>TestRunner</code>, allowing you to customize the …","","","","","","","","","generate a new committee network for each node","configuration used to generate each hotshot node","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Launch the <code>TestRunner</code>. This function is only available if …","","Modifies the config used when generating nodes with <code>f</code>","generate the underlying quorum network used for each node","Create a new launcher. Note that <code>expected_node_count</code> …","push a hook","generate a new quorum network for each node","round information","generate a new storage for each node","","","","","","","","","Set the default config of each node. Note that this can …","directly override hooks","directly override the round information","directly override safety check","directly override hooks","Set a custom storage generator. Note that this can also be …","","","","","","","","","","","","","","","Wrapper Type for committee function that takes a …","Wrapper for a function that takes a <code>node_id</code> and returns an …","","","","","","","","","","","","","","","","Wrapper Type for quorum function that takes a …","The runner of a test network spin up and down nodes, …","Add a node with the given config. This can be used to fine …","Add <code>count</code> nodes to the network. These will be spawned with …","Add a random transaction to this runner.","add <code>n</code> transactions TODO error handling to make sure entire …","","","","","","","","","HACK we want a concise and a wordy way to print things …","","","","","","","Execute a single round of consensus This consists of the …","repeatedly executes consensus until either:","Returns the argument unchanged.","Returns the argument unchanged.","returns the requested handle specified by <code>id</code> if it exists …","","return curent node ids","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Get the next node id that would be used for …","","","Iterate over the <code>SystemContextHandle</code> nodes in this runner.","","return the number of juccesses needed","Internal function that unpauses hotshots and waits for …","run the test","In-place shut down an individual node with id <code>node_id</code>","Gracefully shut down this system","","","","","","","","","replace round list","type alias for the test runner type","type alias for a “usable” node impl type","vrf test types static committee test types","","","type alias for static committee node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,4,3,4,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,4,4,3,4,5,3,4,5,3,4,5,5,5,3,3,4,5,3,4,5,3,4,5,3,4,5,3,4,5,0,0,0,0,0,0,0,0,0,21,23,24,25,27,27,27,21,27,28,23,24,25,21,27,28,23,24,25,21,27,28,23,24,25,21,27,28,23,24,25,21,23,24,25,21,23,24,25,21,27,28,21,27,28,23,23,24,24,25,25,21,27,28,23,24,25,21,27,28,23,24,25,21,0,0,27,27,28,21,27,28,23,24,25,21,21,27,28,23,24,25,21,27,28,23,24,25,21,27,28,23,24,25,27,28,21,27,28,23,24,25,28,28,21,21,27,27,21,23,24,25,28,28,21,27,28,23,24,25,21,27,28,23,24,25,27,21,27,28,23,24,25,28,21,27,28,23,24,25,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,36,0,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,34,35,35,35,35,35,34,36,37,35,34,36,37,35,34,35,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,37,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,35,35,35,34,34,34,36,37,35,34,36,37,35,34,36,37,35,34,36,37,35,37,37,34,36,37,35,0,39,0,0,0,0,44,45,46,44,39,45,46,42,44,39,45,46,42,39,39,44,39,45,46,42,44,39,45,46,42,42,39,42,44,45,46,44,45,46,44,44,46,42,42,42,42,44,39,45,46,42,44,39,45,46,42,39,44,39,45,46,42,44,44,39,39,45,46,44,39,45,46,42,44,0,0,39,39,44,39,45,46,42,44,39,45,46,42,44,39,45,46,42,44,39,45,46,42,44,39,45,46,42,45,44,42,44,44,46,44,44,44,46,46,39,46,42,39,46,44,46,44,44,45,46,39,44,44,39,45,46,42,44,39,45,46,42,44,39,45,46,42,44,39,45,46,42,87,30,0,0,30,0,0,30,0,54,0,54,0,54,0,54,0,30,0,30,0,30,0,54,0,55,56,57,59,60,61,62,63,64,65,66,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,30,54,30,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,62,63,64,65,66,30,54,55,56,57,59,60,61,62,63,64,65,66,55,56,57,59,60,61,62,63,64,65,66,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,30,54,59,55,56,57,59,60,61,30,62,63,64,65,66,54,61,55,56,57,59,60,61,62,63,64,65,66,55,56,57,59,60,61,30,30,62,63,64,65,66,54,54,55,56,57,59,60,61,30,62,63,64,65,66,54,30,54,30,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,62,63,64,65,66,60,30,54,60,30,54,55,56,57,59,60,61,62,63,64,65,66,30,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,55,56,57,59,60,61,30,62,63,64,65,66,54,88,89,90,90,0,0,91,43,91,43,91,43,91,43,91,91,91,43,91,43,91,43,91,43,43,91,43,91,43,91,43,91,91,43,43,43,43,91,43,43,91,43,91,91,43,91,43,91,43,91,43,43,43,43,43,43,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,29,29,92,29,92,29,92,29,92,0,29,92,29,92,29,92,29,29,29,92,29,92,29,29,92,29,92,29,92,92,29,92,29,29,29,29,92,29,29,29,29,29,29,29,29,92,29,92,29,92,29,92,29,0,0,0,0,0,0,76,77,78,76,77,78,76,77,78,76,77,78,76,77,78,76,77,78,76,77,78,76,76,76,76,77,78,76,77,78,76,77,78,76,77,78,76,76,76,76,76,77,78,76,77,78,76,76,76,77,78,76,77,78,76,77,78,76,77,78,76,77,78,78,76,76,77,78,76,77,78,76,77,78,76,77,78,76,77,78,76,77,78],"f":[0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[],3],[[],4],[[],5],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[[3,7],8],[[4,7],8],[[5,7],8],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],0,0,[[13,13],3],[[14,14,13,13],4],[[4,3,15],5],[3,15],[4,15],[5,15],[3,16],[4,16],[5,16],0,0,0,[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[19,[20,[19]]]]],[[21,[19,[20,[19]]]]]],[[[23,[[0,[22,19]],[0,[22,[20,[[0,[22,19]]]]]]]]],[[23,[[0,[22,19]],[0,[22,[20,[[0,[22,19]]]]]]]]]],[[[24,[[0,[22,19]],[0,[22,[20,[[0,[22,19]]]]]]]]],[[24,[[0,[22,19]],[0,[22,[20,[[0,[22,19]]]]]]]]]],[[[25,[[0,[22,19]],[0,[22,[20,[[0,[22,19]]]]]]]]],[[25,[[0,[22,19]],[0,[22,[20,[[0,[22,19]]]]]]]]]],[[]],[[]],[[]],[[]],[[],[[21,[19,[20,[19]]]]]],[[],[[27,[19,26]]]],[[],[[28,[19,[20,[19]]]]]],[6],[6],[6],[6],[[[23,[19,[20,[19]]]]]],[[[24,[19,[20,[19]]]]]],[6],[[[25,[19,[20,[19]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[21,[19,[20,[19]]]]]],[[[29,[19,[20,[19]]]],[28,[19,[20,[19]]]],[27,[19]]],[[31,[[17,[30]]]]]],[[[29,[19,[20,[19]]]],[28,[19,[20,[19]]]]],[[31,[32]]]],0,[[[27,[[0,[33,19]],[0,[33,26]]]],7],8],[[[28,[[0,[33,19]],[0,[33,[20,[[0,[33,19]]]]]]]],7],8],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[[[28,[19,[20,[19]]]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,[[25,[19,[20,[19]]]]]],[35,[[23,[19,[20,[19]]]]]],0,0,0,0,[34,34],[36,36],[37,37],[35,35],[[]],[[]],[[]],[[]],[[],34],[[],35],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[34,7],8],[[36,7],8],[[37,7],8],[[35,7],8],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],38],[[[39,[19]]],[[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,[[43,[19,[20,[19]]]]]],[[[39,[19]]],[[41,[38]]]],0,[44,44],[45,45],[46,46],[[]],[[]],[[]],0,[[],44],[[],46],[[],42],[[],42],[[],42],[[],42],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[39,[19]]],47],[6],[6],[6],[6],[6],0,[[44,7],8],[[[39,[[0,[33,19]]]],7],8],[[[39,[19]],7],8],[[45,7],8],[[46,7],8],[[]],[[]],[[]],[[]],[[]],[44,[[21,[19,[20,[19]]]]]],[13,13],[13,13],[[[0,[48,49,50]]],[[51,[[0,[48,49,50]]]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[45,[[39,[19]]]],0,0,0,0,0,0,0,0,0,0,[52],0,0,[[[39,[19]]],[[41,[38]]]],0,0,0,0,[[]],[[]],[[]],[[],53],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],38],[[],38],[30,[[41,[40]]]],[54,[[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,30],[56,30],[57,30],[[[59,[[58,[53]]]]],30],[[[60,[[58,[[32,[13]]]],[58,[13]]]]],30],[[[61,[[58,[53]]]]],30],[62,54],[63,54],[64,54],[65,54],[66,54],[30,[[41,[38]]]],[54,[[41,[38]]]],[55,55],[56,56],[57,57],[[[59,[22]]],[[59,[22]]]],[[[60,[22,22]]],[[60,[22,22]]]],[[[61,[22]]],[[61,[22]]]],[62,62],[63,63],[64,64],[65,65],[66,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[30,47],[54,47],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[55,[[17,[30]]]],[56,[[17,[30]]]],[57,[[17,[30]]]],[[[59,[[58,[53]]]]],[[17,[30]]]],[[[60,[[58,[[32,[13]]]],[58,[13]]]]],[[17,[30]]]],[[[61,[[58,[53]]]]],[[17,[30]]]],[62,[[17,[54]]]],[63,[[17,[54]]]],[64,[[17,[54]]]],[65,[[17,[54]]]],[66,[[17,[54]]]],[[55,7],8],[[56,7],8],[[57,7],8],[[[59,[33]],7],8],[[[60,[33,33]],7],8],[[[61,[33]],7],8],[[30,7],8],[[30,7],8],[[62,7],8],[[63,7],8],[[64,7],8],[[65,7],8],[[66,7],8],[[54,7],8],[[54,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[48,49,50]]],[[51,[[0,[48,49,50]]]]]],[[[0,[48,49,50]]],[[51,[[0,[48,49,50]]]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[55,30],[56,30],[57,30],[[[59,[[58,[53]]]]],30],[[[60,[[58,[[32,[13]]]],[58,[13]]]]],30],[[[61,[[58,[53]]]]],30],[62,54],[63,54],[64,54],[65,54],[66,54],0,[52],[52],0,[30,[[41,[38]]]],[54,[[41,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],53],[[],53],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[[]],[[]],0,[[],6],[[],6],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[[[43,[19,[20,[19]]]]],[[29,[19,[20,[19]]]]]],0,[[[43,[19,[20,[19]]]],67],[[43,[19,[20,[19]]]]]],0,[[44,[21,[19,[20,[19]]]]],[[43,[19,[20,[19]]]]]],[[[43,[19,[20,[19]]]],[24,[19,[20,[19]]]]],[[43,[19,[20,[19]]]]]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],[[[43,[19,[20,[19]]]],68],[[43,[19,[20,[19]]]]]],[[[43,[19,[20,[19]]]],[32,[[24,[19,[20,[19]]]]]]],[[43,[19,[20,[19]]]]]],[[[43,[19,[20,[19]]]],[21,[19,[20,[19]]]]],[[43,[19,[20,[19]]]]]],[[[43,[19,[20,[19]]]],[23,[19,[20,[19]]]]],[[43,[19,[20,[19]]]]]],[[[43,[19,[20,[19]]]],[25,[19,[20,[19]]]]],[[43,[19,[20,[19]]]]]],[[[43,[19,[20,[19]]]],69],[[43,[19,[20,[19]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[29,[19,[20,[19]]]],[70,[19,[20,[19]]]],[71,[19]],68],13],[[[29,[19,[20,[19]]]],6],[[32,[13]]]],[[[29,[19,[20,[19]]]],[41,[6]],72]],[[[29,[19,[20,[19]]]],6,72],[[41,[32]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[17,[[73,[19]]]]],53],[6],[6],[6],[6],[6],[6],[[[29,[19,[20,[19]]]],[28,[19,[20,[19]]]]],[[17,[30]]]],[[[29,[19,[20,[19]]]],6,6],[[17,[30]]]],[[]],[[]],[[[29,[19,[20,[19]]]],13],[[41,[[74,[19,[20,[19]]]]]]]],0,[[[29,[19,[20,[19]]]]],[[32,[13]]]],[[],6],[[],6],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],0,[[[43,[19,[20,[19]]]]],[[29,[19,[20,[19]]]]]],[[[29,[19,[20,[19]]]]],13],0,0,[[[29,[19,[20,[19]]]]],75],0,[[[29,[19,[20,[19]]]]],6],[[[29,[19,[20,[19]]]],32],[[27,[19]]]],[[[29,[19,[20,[19]]]]],[[17,[30]]]],[[[29,[19,[20,[19]]]],13],[[17,[30]]]],[[[29,[19,[20,[19]]]]]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],[[[29,[19,[20,[19]]]],[21,[19,[20,[19]]]]]],0,0,0,0,0,0,[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[77,77],[78,78],[[]],[[]],[[]],[[76,76],79],[[],79],[[],76],[6],[6],[6],[6],[6],[6],[80,[[17,[76]]]],[80,[[17,[77]]]],[80,[[17,[78]]]],[6],[6],[6],[[76,76],16],[[],16],[[],16],[[],16],[[76,7],8],[[77,7],8],[[78,7],8],[[]],[[]],[[]],[[[0,[81,82]],83],13],[[76,84]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[[[10,[9]]],[[10,[2,9]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[11,[[11,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[12,[[12,[2]]]],[85],[[76,76],[[41,[79]]]],[[76,86],17],[[77,86],17],[[78,86],17],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"SynchronousNetwork"],[3,"AsynchronousNetwork"],[3,"PartiallySynchronousNetwork"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"u64"],[15,"u32"],[3,"Duration"],[15,"bool"],[4,"Result"],[3,"TypeId"],[8,"NodeType"],[8,"TestableNodeImplementation"],[3,"Round"],[8,"Clone"],[3,"RoundSafetyCheck"],[3,"RoundHook"],[3,"RoundSetup"],[8,"LeafType"],[3,"RoundResult"],[3,"RoundCtx"],[3,"TestRunner"],[4,"ConsensusTestError"],[6,"LocalBoxFuture"],[3,"Vec"],[8,"Debug"],[3,"RoundSetupBuilder"],[3,"RoundSafetyCheckBuilder"],[4,"UpDown"],[3,"ChangeNode"],[8,"Error"],[4,"RoundError"],[3,"Backtrace"],[4,"Option"],[3,"TestBuilder"],[3,"TestLauncher"],[3,"TestMetadata"],[3,"SystemContextSnafu"],[3,"TimingData"],[15,"str"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Demand"],[3,"String"],[4,"ConsensusRoundError"],[3,"TooManyFailuresSnafu"],[3,"TooManyConsecutiveFailuresSnafu"],[3,"CompletedTestSuccessfullySnafu"],[8,"Into"],[3,"ConsensusSafetyFailedSnafu"],[3,"NoSuchNodeSnafu"],[3,"CustomSnafu"],[3,"InconsistentBlocksSnafu"],[3,"InconsistentStatesSnafu"],[3,"InconsistentLeavesSnafu"],[3,"NoMajorityProgressSnafu"],[3,"TooManyTimedOutNodesSnafu"],[8,"FnMut"],[3,"HotShotConfig"],[8,"Fn"],[6,"QuorumCommChannel"],[3,"HotShotInitializer"],[8,"RngCore"],[4,"HotShotError"],[3,"SystemContextHandle"],[8,"Iterator"],[3,"StaticCommitteeTestTypes"],[3,"StandardNodeImplType"],[3,"StaticNodeImplType"],[4,"Ordering"],[8,"Deserializer"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[3,"ViewNumber"],[8,"Serializer"],[13,"SystemContext"],[13,"ConsensusSafetyFailed"],[13,"CustomError"],[13,"NoSuchNode"],[3,"ResourceGenerators"],[3,"Node"]]},\
"hotshot_testing_macros":{"doc":"","t":"DDEDDENEDDEINNNNNNNHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLOOFLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLMMLMMLLLMMMMMMLMMLMMLLLMMMMMMLLLMMMMMMLMMLMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CrossAllTypesSpec","CrossAllTypesSpecBuilder","CrossAllTypesSpecBuilderError","CrossTestData","CrossTestDataBuilder","CrossTestDataBuilderError","SequencingConsensus","SupportedConsensusTypes","TestData","TestDataBuilder","TestDataBuilderError","ToLowerSnakeStr","UninitializedField","UninitializedField","UninitializedField","ValidatingConsensus","ValidationError","ValidationError","ValidationError","_DECLS","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comm_channel","comm_channel","comm_channel","comm_channels","comm_channels","comm_channels","create_empty","create_empty","create_empty","cross_all_types","cross_tests","cross_tests_internal","default","default","default","demo_types","demo_types","demo_types","demo_types","demo_types","demo_types","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_test","into","into","into","into","into","into","into","into","into","into","is_ready","is_ready","keywords","parse","parse","provide","provide","provide","signature_key_type","signature_key_type","signature_key_type","signature_key_types","signature_key_types","signature_key_types","slow","slow","slow","slow","slow","slow","slow","slow","slow","storage","storage","storage","storages","storages","storages","test_builder","test_builder","test_builder","test_builder","test_builder","test_builder","test_builder","test_builder","test_builder","test_name","test_name","test_name","test_name","test_name","test_name","test_name","test_name","test_name","time_type","time_type","time_type","time_types","time_types","time_types","to_lower_snake_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CommChannel","DemoType","SignatureKey","Slow","Storage","TestBuilder","TestName","Time","Vote","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","display","display","display","display","display","display","display","display","display","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","parse","parse","parse","parse","parse","parse","parse","parse","parse","peek","peek","peek","peek","peek","peek","peek","peek","peek","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"hotshot_testing_macros"],[209,"hotshot_testing_macros::keywords"]],"d":["we internally choose types","Builder for <code>CrossAllTypesSpec</code>.","Error type for CrossAllTypesSpecBuilder","description of a crosstest","Builder for <code>CrossTestData</code>.","Error type for CrossTestDataBuilder","","Supported consensus types by macro","requisite data to generate a single test","Builder for <code>TestData</code>.","Error type for TestDataBuilder","trait make a string lower and snake case","Uninitialized field","Uninitialized field","Uninitialized field","","Custom validation error","Custom validation error","Custom validation error","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>CrossTestData</code>.","Builds a new <code>CrossAllTypesSpec</code>.","Builds a new <code>TestData</code>.","","","","","","","","","","","","","","","","","","communication channel impls","communication channel impls","communication channel impls","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Generate a cartesian product of tests across all impls …","Generate a cartesian product of tests across all types …","","","","","demo type list of tuples","","demo type list of tuples","demo type list of tuples","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","macro specific custom keywords","","","","","","","","","signature key impls","signature key impls","signature key impls","whether or not to hide behind slow feature flag","whether or not to hide behind slow feature flag","","whether or not to hide behind slow feature flag","whether or not to hide behind slow feature flag","whether or not to hide behind slow feature flag","whether or not to hide behind slow feature flag","","","","","","storage impls","storage impls","storage impls","test description/spec","test description/spec","","test description/spec","test description/spec","test description/spec","test description/spec","","","name of the test","name of the test","","name of the test","name of the test","name of the test","name of the test","","","","","","consensus time impls","consensus time impls","consensus time impls","make a lower and snake case string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,11,0,0,0,0,0,3,7,10,11,3,7,10,0,11,2,1,3,6,5,7,9,8,10,11,2,1,3,6,5,7,9,8,10,1,5,8,11,2,1,6,5,9,8,11,2,1,6,5,9,8,8,9,8,1,2,1,1,5,8,0,0,0,1,5,8,1,8,2,1,9,8,11,2,3,3,6,7,7,9,10,10,11,2,1,3,3,3,6,5,7,7,7,9,8,10,10,10,9,11,2,1,3,6,5,7,9,8,10,1,5,0,2,6,3,7,10,8,9,8,1,2,1,1,5,8,2,1,6,5,9,8,8,9,8,1,2,1,1,5,8,2,1,6,5,9,8,1,5,8,2,1,6,5,9,8,8,9,8,1,2,1,43,11,2,1,6,5,9,8,3,7,10,11,2,1,3,6,5,7,9,8,10,11,2,1,3,6,5,7,9,8,10,11,2,1,3,6,5,7,9,8,10,0,0,0,0,0,0,0,0,0,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37,29,30,31,32,33,34,35,36,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[2,3]]]],[5,[[4,[6,7]]]],[8,[[4,[9,10]]]],[11,11],[2,2],[1,1],[6,6],[5,5],[9,9],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,12],8],0,0,[[1,13],1],0,0,[[],1],[[],5],[[],8],0,0,[2,14],[[],1],[[],5],[[],8],[[1,13],1],[[8,15],8],0,0,0,0,[[11,16],17],[[2,16],17],[[3,16],17],[[3,16],17],[[6,16],17],[[7,16],17],[[7,16],17],[[9,16],17],[[10,16],17],[[10,16],17],[[]],[[]],[[]],[18,3],[[]],[19,3],[[]],[[]],[18,7],[19,7],[[]],[[]],[[]],[[]],[19,10],[18,10],[9,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,21],[5,21],0,[22,[[23,[2]]]],[22,[[23,[6]]]],[24],[24],[24],[[8,12],8],0,0,[[1,13],1],0,0,[[1,25],1],[[5,25],5],[[8,25],8],0,0,0,0,0,0,[[8,12],8],0,0,[[1,13],1],0,0,[[1,26],1],[[5,26],5],[[8,26],8],0,0,0,0,0,0,[[1,27],1],[[5,27],5],[[8,27],8],0,0,0,0,0,0,[[8,12],8],0,0,[[1,13],1],0,0,[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],30],[[],31],[[],32],[[],33],[[],34],[[],35],[[],36],[[],37],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[29,29],39],[[30,30],39],[[31,31],39],[[32,32],39],[[33,33],39],[[34,34],39],[[35,35],39],[[36,36],39],[[37,37],39],[[29,16],17],[[30,16],17],[[31,16],17],[[32,16],17],[[33,16],17],[[34,16],17],[[35,16],17],[[36,16],17],[[37,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,40]],[[30,40]],[[31,40]],[[32,40]],[[33,40]],[[34,40]],[[35,40]],[[36,40]],[[37,40]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[23,[29]]]],[22,[[23,[30]]]],[22,[[23,[31]]]],[22,[[23,[32]]]],[22,[[23,[33]]]],[22,[[23,[34]]]],[22,[[23,[35]]]],[22,[[23,[36]]]],[22,[[23,[37]]]],[41,21],[41,21],[41,21],[41,21],[41,21],[41,21],[41,21],[41,21],[41,21],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,20]],[[30,20]],[[31,20]],[[32,20]],[[33,20]],[[34,20]],[[35,20]],[[36,20]],[[37,20]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28]],"c":[],"p":[[3,"CrossTestDataBuilder"],[3,"CrossTestData"],[4,"CrossTestDataBuilderError"],[4,"Result"],[3,"CrossAllTypesSpecBuilder"],[3,"CrossAllTypesSpec"],[4,"CrossAllTypesSpecBuilderError"],[3,"TestDataBuilder"],[3,"TestData"],[4,"TestDataBuilderError"],[4,"SupportedConsensusTypes"],[3,"ExprPath"],[3,"ExprArray"],[3,"TokenStream"],[3,"ExprTuple"],[3,"Formatter"],[6,"Result"],[3,"UninitializedFieldError"],[3,"String"],[3,"TokenStream"],[15,"bool"],[6,"ParseStream"],[6,"Result"],[3,"Demand"],[3,"LitBool"],[4,"Expr"],[3,"Ident"],[3,"TypeId"],[3,"Time"],[3,"DemoType"],[3,"SignatureKey"],[3,"Vote"],[3,"TestName"],[3,"TestBuilder"],[3,"Slow"],[3,"CommChannel"],[3,"Storage"],[15,"str"],[6,"bool"],[8,"Hasher"],[3,"Cursor"],[3,"Span"],[8,"ToLowerSnakeStr"]]},\
"hotshot_types":{"doc":"Types and Traits for the <code>HotShot</code> consensus module","t":"NEDNLLLLLLLLLLALLLLAMALLLLLLLLMAAMLLLLLLLLLLLLLLMMAMMMMMMLLMMLLMALLLLLLALLDNDDDNERRLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLRFDIQQDDGGGGGGGIQQQQIDDIGGDDDRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLKLLKLLKLLKLLKLLKLLKLLKKLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLMMMLMMMMLFMMMLLLLLLLLLLKLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLMMMMMLLLLLLLLNDNDNDNDENDNDNDNNNNNNDNDNDNNNNENDNNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMMMMMMMMNNDENNNLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMNEQNINNNNNNEEQNENNDEEEQEGDNNNDINNDINNENNNNNLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLCCAAAAAAAAAIDQIQLKLLLLLLLKLLLLALLLLLLLLLLKLLLLLLLNDDCELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLIAADILLLLLLLLLLLLLLLLLLLLLLDILLLLLLLLLLLLLLLLLLLLLLHQENQDIINIENNHNDIQQNNQDIIQNDINNNNDIEQEINLLLLLLMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLKLKKLKLKLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKKKKKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKLLKLLLMMMKLLLMMMKLLLMMMLKLLLMMMLLKKLKLKLKLKLKLKLKLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLIIIIIDLKLKLLLLLLLLKLKLKLKLLLLLLLLLLLLKKLLKLLLLLKLLNNEDNDNDNDIINDNNDNDNDNDNDNEDQEEIINDNDNNNDNDIINDENDNDINEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLKKKKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMMMMMQDGQGQGGQGGQQQQIQQIIGGGQGGGGDDIGQQQIQQDIGDQLLLLMMLLLLLLLLLLKLLLLLLLLLLMLLLLLLLLKKLMKKLLMLLLLLLLLLLLLLLLLLLLLLLLKKMLLLLLLLLLLLLLLLLLLLLLLLLLKKLLKMKKLLMMMMKLLKLLLLLLLLLLLLLLKLLLLLMLLLLLKLLDDDDQIIRRLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLALLLLLLLLLLLMMLLLLKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLKLLLLDDAAMMHHDHHLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLHHHHHDHHHHHLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLQIQIIIQKKAKLKKKKKDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLNNDGIEDDNIELLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKKMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLMMMLLLLLLLLLLLLLLLLLLLMLLLLLINDNNNENDDEDDGINDLLLLLLLKLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLMMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLM","n":["Continuous","ExecutionType","HotShotConfig","Incremental","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","certificate","clone","clone","clone_into","clone_into","constants","da_committee_nodes","data","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","election_config","error","event","execution_type","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","known_nodes","max_transactions","message","min_transactions","next_view_timeout","num_bootstrap","propose_max_round_time","propose_min_round_time","round_start_delay","serialize","serialize","start_delay","timeout_ratio","to_owned","to_owned","total_nodes","traits","try_from","try_from","try_into","try_into","type_id","type_id","vote","vzip","vzip","DACertificate","No","QuorumCertificate","ViewSyncCertificate","VoteMetaData","Yes","YesNoSignature","_DERIVE_core_fmt_Debug_FOR_QuorumCertificate","_DERIVE_core_fmt_Debug_FOR_ViewSyncCertificate","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_commitment","block_commitment","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","commit","commitment","data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","encoded_key","encoded_signature","eq","eq","eq","eq","equivalent","equivalent","equivalent","fill","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_signatures_and_commitment","from_signatures_and_commitment","from_signatures_and_commitment","genesis","genesis","genesis","hash","hash","hash","hash","header","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_genesis","is_genesis","is_genesis","is_genesis","leaf_commitment","leaf_commitment","leaf_commitment","leaf_commitment","relay","round","serialize","serialize","serialize","serialize","set_leaf_commitment","set_leaf_commitment","set_leaf_commitment","signatures","signatures","signatures","signatures","signatures","signatures","tag","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_resolve","type_id","type_id","type_id","type_id","type_id","view_number","view_number","view_number","view_number","view_number","view_number","vote_token","vzip","vzip","vzip","vzip","vzip","LOOK_AHEAD","genesis_proposer_id","DAProposal","DeltasType","DeltasType","Error","InconsistentDeltasError","InconsistentDeltasSnafu","LeafBlock","LeafDeltas","LeafDeltasError","LeafNode","LeafState","LeafTime","LeafTransaction","LeafType","MaybeState","NodeType","NodeType","NodeType","ProposalType","QuorumProposal","SequencingLeaf","TestableLeaf","Transaction","TxnCommitment","ValidatingLeaf","ValidatingProposal","ViewNumber","_DERIVE_core_fmt_Debug_FOR_DAProposal","_DERIVE_core_fmt_Debug_FOR_QuorumProposal","_DERIVE_core_fmt_Debug_FOR_ValidatingProposal","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block","block","block_commitment","block_commitment","block_commitment","block_commitment","block_commitment","block_commitment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit","commit","commit","commitment","commitment","create_random_transaction","create_random_transaction","create_random_transaction","dac","deltas","deltas","deltas","deltas","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fail","fake_commitment","fill","fill","fill","fill","fill_deltas","fill_deltas","fill_deltas","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_stored_view","from_stored_view","from_stored_view","genesis","genesis","get_deltas","get_deltas","get_deltas","get_deltas_commitment","get_deltas_commitment","get_deltas_commitment","get_height","get_height","get_height","get_justify_qc","get_justify_qc","get_justify_qc","get_parent_commitment","get_parent_commitment","get_parent_commitment","get_proposer_id","get_proposer_id","get_proposer_id","get_rejected","get_rejected","get_rejected","get_state","get_state","get_state","get_timestamp","get_timestamp","get_timestamp","get_view_number","get_view_number","get_view_number","get_view_number","get_view_number","get_view_number","get_view_number","hash","hash","hash","hash","header","header","header","height","height","height","height","in_current_span","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","justify_qc","justify_qc","justify_qc","justify_qc","new","new","new","new","new","parent_commitment","parent_commitment","parent_commitment","partial_cmp","proposer_id","proposer_id","proposer_id","proposer_id","provide","random_commitment","rejected","rejected","rejected","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","set_height","set_height","set_height","source","state","state_commitment","tag","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_resolve","try_resolve","try_resolve","try_resolve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_size","view_number","view_number","view_number","view_number","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BadBlock","BadBlockSnafu","Continue","ContinueSnafu","FailedToBroadcast","FailedToBroadcastSnafu","FailedToMessageLeader","FailedToMessageLeaderSnafu","HotShotError","InconsistentBlock","InconsistentBlockSnafu","InsufficientValidSignatures","InsufficientValidSignaturesSnafu","InvalidState","InvalidStateSnafu","LeaderMinRoundTimeNotReached","LeaderWaitingForCommitVotes","LeaderWaitingForHighQC","LeaderWaitingForPreCommitVotes","LeaderWaitingForPrepareVotes","LeafNotFound","LeafNotFoundSnafu","Misc","MiscSnafu","NetworkFault","NetworkFaultSnafu","ReplicaWaitingForCommit","ReplicaWaitingForDecide","ReplicaWaitingForPreCommit","ReplicaWaitingForPrepare","RoundTimedoutState","StorageError","StorageSnafu","TestCollectRoundEventsTimedOut","TimeoutError","TimeoutSnafu","ViewTimeoutError","ViewTimeoutSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","num_valid_signatures","provide","source","state","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","context","context","num_valid_signatures","source","source","source","source","source","state","threshold","view_number","Decide","Error","Event","EventType","NextLeaderViewTimeout","ReplicaViewTimeout","ViewFinished","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","event","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view_number","vzip","vzip","error","leaf_chain","qc","view_number","view_number","view_number","Certificate","CommitteeConsensusMessage","CommitteeConsensusMessage","Consensus","ConsensusMessageType","DAProposal","DAProposal","DAVote","DAVote","Data","Data","DataMessage","GeneralConsensusMessage","GeneralConsensusMessage","Internal","InternalTrigger","InternalTrigger","InternalTrigger","Message","MessageKind","MessagePurpose","ProcessedCommitteeConsensusMessage","ProcessedConsensusMessage","ProcessedGeneralConsensusMessage","ProcessedSequencingMessage","Proposal","Proposal","Proposal","Proposal","SequencingMessage","SequencingMessageType","SubmitTransaction","Timeout","ValidatingMessage","ValidatingMessageType","ViewSync","ViewSync","ViewSyncMessageType","Vote","Vote","Vote","Vote","_Unreachable","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_phantom","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_consensus_message","get_view_number","get_view_number","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kind","new","new","purpose","purpose","purpose","purpose","purpose","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","view_number","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Block","State","block_contents","consensus_type","election","metrics","network","node_implementation","signature_key","state","storage","Block","BlockCommitment","Error","Transaction","Transaction","__clone_box","add_transaction_raw","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","contained_transactions","deref","deref_mut","deserialize","drop","dummy","eq","equivalent","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","new","partial_cmp","serialize","to_owned","try_from","try_into","type_id","vzip","Dummy","DummyBlock","DummyError","DummyState","DummyTransaction","__clone_box","__clone_box","add_transaction_raw","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","block_commitment","block_commitment","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit","contained_transactions","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fill","fill","fmt","fmt","fmt","fmt","fmt","from","from","from","genesis","hash","hash","header","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","nonce","provide","random","serialize","serialize","tag","tag","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_resolve","try_resolve","txn_count","type_id","type_id","type_id","vzip","vzip","vzip","ConsensusType","sequencing_consensus","validating_consensus","SequencingConsensus","SequencingConsensusType","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","ValidatingConsensus","ValidatingConsensusType","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","CALLSITE","Certificate","Checked","Commit","Commitment","CommitteeExchange","CommitteeExchangeType","ConsensusExchange","DA","ElectionConfig","ElectionError","Finalize","Inval","META","MathError","MathSnafu","Membership","Membership","Networking","No","PreCommit","Proposal","QuorumExchange","QuorumExchangeType","SignedCertificate","StakeTable","StubError","StubSnafu","TestableElection","Timeout","Unchecked","Valid","ViewSync","ViewSyncExchange","ViewSyncExchangeType","ViewSyncVoteData","Vote","VoteData","VoteToken","Yes","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_encryption_key","_encryption_key","_encryption_key","accumulate_vote","accumulate_vote","accumulate_vote","accumulate_vote","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create","create","create","create","create_commit_message","create_commit_message","create_da_message","create_da_message","create_election","create_finalize_message","create_finalize_message","create_no_message","create_no_message","create_precommit_message","create_precommit_message","create_timeout_message","create_timeout_message","create_yes_message","create_yes_message","default_election_config","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fail","fail","failure_threshold","failure_threshold","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_signatures_and_commitment","generate_test_vote_token","genesis","get_committee","get_leader","get_leader","get_stake_table","hash","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","is_genesis","is_leader","is_valid_cert","is_valid_vote","leaf_commitment","make_vote_token","make_vote_token","make_vote_token","membership","membership","membership","membership","membership","membership","membership","network","network","network","network","network","network","network","private_key","private_key","private_key","private_key","private_key","private_key","private_key","provide","public_key","public_key","public_key","public_key","public_key","public_key","public_key","serialize","serialize","set_leaf_commitment","sign_commit_message","sign_commit_message","sign_da_proposal","sign_da_proposal","sign_da_vote","sign_da_vote","sign_finalize_message","sign_finalize_message","sign_no_vote","sign_no_vote","sign_precommit_message","sign_precommit_message","sign_timeout_vote","sign_timeout_vote","sign_validating_or_commitment_proposal","sign_validating_or_commitment_proposal","sign_yes_vote","sign_yes_vote","signatures","source","success_threshold","success_threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_vote_token","view_number","vote_count","vote_data","vote_data","vote_data","vote_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Counter","Gauge","Histogram","Label","Metrics","NoMetrics","__clone_box","add","add","add_point","add_point","as_any","as_any_mut","borrow","borrow_mut","boxed","clone","clone_into","create_counter","create_counter","create_gauge","create_gauge","create_histogram","create_histogram","create_label","create_label","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","set","set","set","set","subgroup","subgroup","to_owned","try_from","try_into","type_id","update","update","vzip","Broadcast","CentralizedServer","CentralizedServerNetworkError","CentralizedServerSnafu","ChannelSend","ChannelSendSnafu","ClientDisconnected","ClientDisconnectedSnafu","ClientError","ClientSnafu","CommunicationChannel","ConnectedNetwork","CouldNotDeliver","CouldNotDeliverSnafu","Direct","EndpointError","EndpointSnafu","FailedToDeserialize","FailedToDeserializeSnafu","FailedToSerialize","FailedToSerializeSnafu","IncorrectConsensusData","IncorrectConsensusDataSnafu","Libp2p","Libp2pSnafu","MemoryNetwork","MemoryNetworkError","MemoryNetworkSnafu","NETWORK","NetworkChange","NetworkError","NetworkMsg","NetworkReliability","NoMessagesInQueue","NoMessagesInQueueSnafu","NoSuchNode","NoSuchNodeSnafu","NodeConnected","NodeDisconnected","ShutDown","ShutDownSnafu","Stub","StubSnafu","TestableChannelImplementation","TestableNetworkingImplementation","Timeout","TimeoutSnafu","TransmitType","UnableToCancel","UnableToCancelSnafu","UnimplementedFeature","UnimplementedFeatureSnafu","ViewMessage","WebServer","WebServerNetworkError","WebServerSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","as_error_source","as_error_source","backtrace","backtrace","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","build","build","build","build","build","build","build","build","build","build","build","build","cause","cause","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","direct_message","direct_message","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_network","generator","get_view_number","header","header","header","header","in_current_span","in_current_span","in_current_span","in_current_span","in_flight_message_count","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_ready","is_ready","lookup_node","lookup_node","provide","provide","provide","provide","purpose","recv_msgs","recv_msgs","sample_delay","sample_keep","serialize","shut_down","shut_down","source","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","source","source","source","source","source","source","source","BlockType","ChannelMaps","CommitteeCommChannel","CommitteeCommChannel","CommitteeEx","CommitteeExchange","CommitteeMembership","CommitteeNetwork","CommitteeNetwork","CommitteeProposalType","CommitteeVote","ConsensusMessage","ConsensusType","ElectionConfigType","Exchanges","ExchangesType","Leaf","Networks","NodeImplementation","NodeType","ProcessedConsensusMessageType","QuorumCommChannel","QuorumEx","QuorumExchange","QuorumMembership","QuorumNetwork","QuorumProposalType","QuorumVoteType","SendToTasks","SequencingExchanges","SequencingExchangesType","SequencingQuorumEx","SignatureKey","StateType","Storage","TestableNodeImplementation","Time","Transaction","ValidatingExchanges","ValidatingExchangesType","ValidatingQuorumEx","ViewQueue","VoteTokenType","__clone_box","__clone_box","__clone_box","__clone_box","_phantom","_phantom","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_genesis","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_map","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committee_comm_channel_generator","committee_exchange","committee_exchange","committee_exchange","construct_tmp_storage","create","create","create","cur_view","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","generate_test_key","get_full_state","has_received_proposal","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leaf_create_random_transaction","network_generator","new","new","new_channel_maps","proposal_channel","quorum_comm_channel_generator","quorum_exchange","quorum_exchange","quorum_exchange","quorum_exchange","quorum_exchange","receiver_chan","sender_chan","shut_down_networks","shut_down_networks","shut_down_networks","state_create_random_transaction","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","txn_count","type_id","type_id","type_id","type_id","type_id","vote_channel","vzip","vzip","vzip","vzip","vzip","wait_for_networks_ready","wait_for_networks_ready","wait_for_networks_ready","DebugWith","DebugWith","EncodedPublicKey","EncodedSignature","PrivateKey","SignatureKey","TestableSignatureKey","_DERIVE_core_fmt_Debug_FOR_EncodedPublicKey","_DERIVE_core_fmt_Debug_FOR_EncodedSignature","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bits","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","data","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_unchecked","deserialize_uncompressed","drop","drop","drop","drop","ed25519","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_private","from_str","generate_test_key","generated_from_seed_indexed","hash","hash","header","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","protocol_name","serialize","serialize","serialize","serialize_unchecked","serialize_uncompressed","serialized_size","sign","tag","to_bytes","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uncompressed_size","validate","vzip","vzip","vzip","vzip","Ed25519Priv","Ed25519Pub","ed25519_priv","ed25519_pub","priv_key","pub_key","CALLSITE","CALLSITE","Ed25519Priv","META","META","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","from_str","generate","generate_from_seed","generated_from_seed_indexed","header","init","into","into_any","into_any_arc","into_any_rc","partial_cmp","priv_key","serialize","to_bytes","to_owned","to_string","to_tagged_base64","try_from","try_into","type_id","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Ed25519Pub","META","META","META","META","META","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from_bytes","from_private","from_str","generate_test_key","generated_from_seed_indexed","hash","header","init","into","into_any","into_any_arc","into_any_rc","partial_cmp","pub_key","serialize","sign","to_bytes","to_owned","to_string","to_tagged_base64","try_from","try_into","type_id","validate","vzip","BlockType","ConsensusTime","Error","State","TestableBlock","TestableState","Time","append","create_random_transaction","dummy","genesis","genesis","new","next_block","on_commit","txn_count","validate_block","DummyState","__clone_box","append","as_any","as_any_mut","block_commitment","borrow","borrow_mut","clone","clone_into","commit","create_random_transaction","default","deref","deref_mut","deserialize","drop","eq","equivalent","fill","fmt","from","hash","init","into","into_any","into_any_arc","into_any_rc","next_block","nonce","on_commit","random","serialize","tag","to_owned","try_from","try_into","try_resolve","type_id","validate_block","vzip","Failed","NoGenesisView","NoGenesisViewSnafu","Result","Storage","StorageError","StorageState","StoredView","Success","TestableStorage","ViewEntry","__clone_box","__clone_box","__clone_box","append","append_single_view","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","cleanup_storage_up_to_view","clone","clone","clone","clone_into","clone_into","clone_into","commit","construct_tmp_storage","deltas","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","eq","eq","eq","fail","failed","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_fd","from_fd","from_filelike","from_filelike","from_into_filelike","from_into_filelike","from_into_socketlike","from_into_socketlike","from_qc_block_and_state","from_socketlike","from_socketlike","get_anchored_view","get_full_state","header","height","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","justify_qc","parent","proposer_id","provide","rejected","source","state","stored","timestamp","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","Accumulator","Commit","DAVote","Finalize","No","PreCommit","QuorumVote","Timeout","TimeoutVote","ViewSyncData","ViewSyncVote","ViewSyncVoteInternal","VoteAccumulator","VoteMap","VoteType","Yes","YesOrNoVote","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","append","append","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","block_commitment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","current_view","current_view","current_view","current_view","current_view","current_view","current_view","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","failure_threshold","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","justify_qc","justify_qc_commitment","justify_qc_commitment","leaf_commitment","no_vote_outcomes","relay","relay","round","round","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signature","signature","success_threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_vote_outcomes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_data","vote_data","vote_data","vote_data","vote_token","vote_token","vote_token","vote_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","yes_vote_outcomes"],"q":[[0,"hotshot_types"],[74,"hotshot_types::certificate"],[252,"hotshot_types::constants"],[254,"hotshot_types::data"],[631,"hotshot_types::error"],[1040,"hotshot_types::error::HotShotError"],[1051,"hotshot_types::event"],[1104,"hotshot_types::event::EventType"],[1110,"hotshot_types::message"],[1494,"hotshot_types::traits"],[1505,"hotshot_types::traits::block_contents"],[1543,"hotshot_types::traits::block_contents::dummy"],[1646,"hotshot_types::traits::consensus_type"],[1649,"hotshot_types::traits::consensus_type::sequencing_consensus"],[1673,"hotshot_types::traits::consensus_type::validating_consensus"],[1697,"hotshot_types::traits::election"],[2049,"hotshot_types::traits::metrics"],[2099,"hotshot_types::traits::network"],[2794,"hotshot_types::traits::network::NetworkError"],[2801,"hotshot_types::traits::node_implementation"],[2987,"hotshot_types::traits::signature_key"],[3123,"hotshot_types::traits::signature_key::ed25519"],[3129,"hotshot_types::traits::signature_key::ed25519::ed25519_priv"],[3172,"hotshot_types::traits::signature_key::ed25519::ed25519_pub"],[3225,"hotshot_types::traits::state"],[3242,"hotshot_types::traits::state::dummy"],[3283,"hotshot_types::traits::storage"],[3446,"hotshot_types::vote"]],"d":["constantly increment view as soon as view finishes","the type of consensus to run. Either: wait for a signal to …","Holds configuration for a <code>HotShot</code>","wait for a signal","","","","","","","","","","","Provides two types of cerrtificates and their accumulators.","","","","","configurable constants for hotshot","List of DA committee nodes for static DA committe","Provides types useful for representing <code>HotShot</code>’s data …","","","","","","","","","the election configuration","Error type for <code>HotShot</code>","Events that a <code>HotShot</code> instance can emit","Whether to run one view or continuous views","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","List of known node’s public keys, including own, sorted …","Maximum transactions per block","Network message types","Minimum transactions per block","Base duration for next-view timeout, in milliseconds","Number of network bootstrap nodes","The maximum amount of time a leader can wait to start a …","The minimum amount of time a leader has to wait to start a …","The delay a leader inserts before starting pre-commit, in …","","","Delay after init before starting consensus, in milliseconds","The exponential backoff ration for the next-view timeout","","","Total number of nodes in the network","Common traits for the <code>HotShot</code> protocol","","","","","","","Vote and vote accumulator types","","","A <code>DACertificate</code> is a threshold signature that some data is …","These signatures are for a ‘No’ QC","The type used for Quorum Certificates","A view sync certificate representing a quorum of votes for …","Data from a vote needed to accumulate into a …","These signatures are for a ‘Yes’ QC","Enum representing whether a QC’s signatures are for a ‘…","","","","","","","","","","","","","","","","","","committment to the block","","","","","","","","","","","","","","","","","","","","Commitment to what’s voted on.  E.g. the leaf for a …","Data of the vote, yes, no, timeout, or DA","","","","","","","","","","","","","","","","","","","","Voter’s public key","Votes signature","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Build a QC from the threshold signature and commitment","","","To be used only for generating the genesis quorum …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Get whether the certificate is for the genesis block.","If this QC is for the genesis block","","","Get the leaf commitment.","commitment to previous leaf","Relay the votes are intended for","View number the network is attempting to synchronize on","","","","","","","Set the leaf commitment.","","","Get signatures.","The list of signatures establishing the validity of this …","Threshold Signature","Threshold Signature","","","","","","","","","","","","","","","","","","","","","","","","","Get the view number.","View number for the vote","The view number this quorum certificate was generated …","Which view this QC relates to","The votes’s token","","","","","","the number of views to gather information for ahead of time","the genesis proposer pk unfortunately need to allocate on …","A proposal to start providing data availability for a …","A state change encoded in a leaf.","Type of block contained by this leaf.","Errors reported by this type.","Error which occurs when <code>DeltasType::fill</code> is called with a …","SNAFU context selector for the <code>InconsistentDeltasError</code> …","The <code>Block</code> in a <code>LeafType</code>.","The <code>DeltasType</code> in a <code>LeafType</code>.","Errors reported by the <code>DeltasType</code> in a <code>LeafType</code>.","The <code>NodeType</code> in a <code>LeafType</code>.","The [<code>StateType</code>] in a <code>LeafType</code>.","The <code>ConsensusTime</code> used by a <code>LeafType</code>.","The <code>Transaction</code> in a <code>LeafType</code>.","An item which is appended to a blockchain.","Either state or empty","Type of nodes that can vote on this proposal.","Type of nodes participating in the network.","Type of nodes participating in the network.","A proposal to a network of voting nodes.","A proposal to append a new block commitment to the log.","This is the consensus-internal analogous concept to a …","Additional functions required to use a <code>LeafType</code> with …","The <code>Transaction</code> type associated with a <code>State</code>, as a …","<code>Commitment</code> to the <code>Transaction</code> type associated with a <code>State</code>…","This is the consensus-internal analogous concept to a …","subset of state that we stick into a leaf. original …","Type-safe wrapper around <code>u64</code> so we know the thing we’re …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block with the wrong commitment.","Get a cryptographic commitment to the block represented by …","","","","current view’s block commitment","The commitment to append.","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","The expected commitment.","Create a transaction that can be added to the block …","","","Data availibity certificate","Block leaf wants to apply","Block leaf wants to apply","Block leaf wants to apply","The block or block commitment to be applied","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Fake the thing a genesis block points to. Needed to avoid …","Fill this <code>DeltasType</code> by providing a complete block.","","","","Fill this leaf with the entire corresponding block.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Create a leaf from information stored about a view.","","","Create a genesis view number (0)","Creates the genesis Leaf for the genesis View (special …","The block contained in this leaf.","","","A commitment to the block contained in this leaf.","","","Height of this leaf in the chain.","","","The QC linking this leaf to its parent in the chain.","","","Commitment to this leaf’s parent.","","","Identity of the network participant who proposed this leaf.","","","Transactions rejected or invalidated by the application of …","","","The blockchain state after appending this leaf.","","","Real-world time when this leaf was created.","","","Time at which this proposal is valid.","Time when this leaf was created.","","","","","","","","","","","","","Height from leader when proposing leaf","Height from leader when proposing leaf","Number of leaves before this one in the chain","Number of leaves before this one in the chain","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Per spec, justification","Per spec, justification","Per spec, justification","Per spec, justification","Create a new leaf from its components.","Create a new <code>ViewNumber</code> with the given value.","Creates a new leaf with the specified block and parent","","","The hash of the parent <code>Leaf</code> So we can ask if it extends","The hash of the parent <code>Leaf</code> So we can ask if it extends","The hash of the parent <code>SequencingLeaf</code> So we can ask if it …","","the propser id","the propser id","the proposer id of the leaf","the proposer id of the leaf","","create a random commitment","Transactions that were marked for rejection while …","Transactions that were marked for rejection while …","Transactions that were marked for rejection while …","","","","","","","","","","","Change the height of this leaf.","","","","What the state should be AFTER applying <code>self.deltas</code>","What the state should be after applying <code>self.deltas</code>","","the timestamp the leaf was constructed at, in nanoseconds. …","the timestamp the leaf was constructed at, in nanoseconds. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the full block if it is available, otherwise return …","","","","","","","","","","","","","CurView from leader when proposing leaf","View this proposal applies to","CurView from leader when proposing leaf","CurView from leader when proposing leaf","CurView from leader when proposing leaf","","","","","","","","","A block failed verification","SNAFU context selector for the <code>HotShotError::BadBlock</code> …","Internal value used to drive the state machine","SNAFU context selector for the <code>HotShotError::Continue</code> …","Failed to broadcast a message on the network","SNAFU context selector for the …","Failed to Message the leader in the given stage","SNAFU context selector for the …","Error type for <code>HotShot</code>","A block was not consistent with the existing state","SNAFU context selector for the …","Not enough valid signatures for a quorum","SNAFU context selector for the …","Invalid state machine state","SNAFU context selector for the <code>HotShotError::InvalidState</code> …","Leader is in a Prepare phase and timed out before the …","Leader is waiting for commit votes","Leader is in a Prepare phase and is waiting for a HighQC","Leader is waiting for precommit votes","Leader is waiting for prepare votes","Item was not present in storage","SNAFU context selector for the <code>HotShotError::LeafNotFound</code> …","Miscelaneous error TODO fix this with #181 …","SNAFU context selector for the <code>HotShotError::Misc</code> variant","Failure in networking layer","SNAFU context selector for the <code>HotShotError::NetworkFault</code> …","Replica is waiting for a commit message","Replica is waiting for a decide message","Replica is waiting for a pre-commit message","Replica is waiting for a prepare message","Contains information about what the state of the …","Error accesing storage","SNAFU context selector for the <code>HotShotError::StorageError</code> …","HotShot-testing tried to collect round events, but it …","HotShot timed out waiting for msgs","SNAFU context selector for the <code>HotShotError::TimeoutError</code> …","HotShot timed out during round","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","A next leader task was canceled by a timeout interrupt","A replica task was canceled by a timeout interrupt","The view has finished.  If values were decided on, a <code>Decide</code>…","","","","","","","","","","","","","","","","","","","","","The underlying event","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The view number that this event originates from","","","The underlying error","The chain of Leafs that were committed by this decision","The QC signing the most recent leaf in <code>leaf_chain</code>.","The view that timed out","The view that timed out","The view number that has just finished","A view sync certificate","Messages related to the sequencing consensus protocol for …","Messages for DA committee only.","Messages related to the consensus protocol","Messages related to the consensus protocol.","Proposal for data availability committee","Proposal for data availability committee","vote from the DA committee","vote for data availability committee","Data message","Messages relating to sharing data between nodes","Messages related to sending data between nodes","Messages related to both validating and sequencing …","The type of messages for both validating and sequencing …","Message for internal use","Internal triggers sent by consensus messages.","Internal ONLY message indicating a view interrupt.","Internal ONLY message indicating a view interrupt.","Incoming message","Enum representation of any message type","A message type agnostic description of a messages purpose","A processed consensus message for the DA committee in …","The type of processed consensus messages.","A processed consensus message for both validating and …","A processed consensus message for sequencing consensus.","Prepare qc from the leader","Message contains a proposal","Leader’s proposal for full Quorom voting","Leader’s proposal for full quorum voting","Messages for sequencing consensus.","Messages related to the sequencing consensus protocol.","Contains a transaction to be submitted TODO rethink this …","Internal timeout at the specified view number.","Messages for validating consensus.","Messages related to the validating consensus protocol.","A view sync related message - either a vote or certificate","View Sync related message - either a vote or certificate","A view sync message","Message contains a vote","Replica’s vote on a proposal.","Replica’s vote on a proposal.","A view sync vote","Phantom data.","","","","","","","","","","","","","Phantom data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data being proposed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a <code>MessageKind</code> from [<code>I::ConsensusMessage</code>].","get the view number out of a message","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The message kind","Create a <code>ProcessedGeneralConsensusMessage</code> from a …","Create a <code>ProcessedCommitteeConsensusMessage</code> from a …","Get the message purpose.","","","","","The sender of this message","","","","","","","","","","","","","The proposal must be signed by the view leader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the view number when the message was sent or the view …","","","","","","","","","","","","","","","","","","Abstraction over the contents of a block","The <code>ConsensusType</code> trait allows consensus-specific …","The election trait, used to decide which node is the …","The <code>Metrics</code> trait is used to collect information from …","Network access compatibility","Composite trait for node behavior","Minimal compatibility over public key signatures","Abstraction over the global state that blocks modify","Abstraction over on-disk storage of node state","Abstraction over the full contents of a block","Commitment to a block, used by data availibity","The error type for this type of block","Abstraction over any type of transaction. Used by <code>Block</code>.","The type of the transitions we are applying","","Attempts to add a transaction, returning an Error if it …","","","","","","","","returns hashes of all the transactions in this block TODO …","","","","","Dummy implementation of <code>BlockContents</code> for unit tests","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Construct an empty or genesis block.","","","","","","","","the only variant. Dummy.","The dummy block","Dummy error","","dummy transaction. No functionality","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Some dummy data","","Generate a random <code>DummyBlock</code>","","","","","","","","","","","","","","","","","","","","","","","","<code>ConsensusType</code> generalized trait","The <code>SequencingConsensusType</code> trait allows …","The <code>ValidatingConsensusType</code> trait allows …","Consensus which provides availability and ordering but not …","Marker trait for consensus which provides availability and …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Consensus which provides ordering and execution.","Marker trait for consensus which provides ordering and …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A <code>SignedCertificate</code> attesting to a decision taken by the …","For items that will always have the same validity outcome …","A commit vote","Commitments to items which are the subject of proposals …","Standard implementation of <code>CommitteeExchangeType</code> utilizing …","A <code>ConsensusExchange</code> where participants vote to provide …","Protocol for exchanging proposals and votes to make …","Vote to provide availability for a block.","election config","Error for election problems","A finalize vote","This item has been checked, and is not valid","","Math error doing something NOTE: it would be better to …","SNAFU context selector for the <code>ElectionError::MathError</code> …","A protocol for determining membership in and participating …","The committee eligible to make decisions.","Network used by <code>Membership</code> to communicate.","Vote to reject a leaf from the log.","A precommit vote","A proposal for participants to vote on.","Standard implementation of [<code>QuroumExchangeType</code>] based on …","A <code>ConsensusExchange</code> where participants vote to append …","A certificate of some property which has been signed by a …","Data used to determine the weight (voting power) of …","stub error to be filled in","SNAFU context selector for the <code>ElectionError::StubError</code> …","Testable implementation of a <code>Membership</code>. Will expose a …","Vote to time out and proceed to the next view.","This item has not been checked","This item has been checked, and is valid","Vote to synch the network on a particular view","Standard implementation of <code>ViewSyncExchangeType</code> based on …","A <code>ConsensusExchange</code> where participants synchronize which …","Data which <code>ViewSyncVotes</code> are signed over","A vote on a <code>Proposal</code>.","Data to vote on for different types of votes.","Proof of this entity’s right to vote, and of the weight …","Vote to append a leaf to the log.","","","","","","","This participant’s encryption key.","This participant’s encryption key.","This participant’s encryption key","Add a vote to the accumulating signature.  Return The …","","Add a vote to the accumulating signature.  Return The …","Add a vote to the accumulating signature.  Return The …","","","","","","","","","","","","","","","","","","","Convert vote data into bytes.","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","Join a <code>ConsensusExchange</code> with the given identity (<code>pk</code> and <code>sk</code>…","","","","Creates a commit vote","","Create a message with a vote on DA proposal.","Create a message with a vote on DA proposal.","create an election TODO may want to move this to a …","Creates a finalize vote","","Create a message with a negative vote on validating or …","Create a message with a negative vote on validating or …","Creates a precommit vote","","Create a message with a timeout vote on validating or …","Create a message with a timeout vote on validating or …","Create a message with a positive vote on validating or …","Create a message with a positive vote on validating or …","generate a default election configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Returns the threshold for a specific <code>Membership</code> …","Threshold required to know a success threshold will not be …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Build a QC from the threshold signature and commitment","Generate a vote token used for testing.","To be used only for generating the genesis quorum …","The members of the committee for view <code>view_number</code>.","The leader of the committee for view <code>view_number</code>.","The leader of the <code>Membership</code> at time <code>view_number</code>.","Returns the table from the current committed state","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get whether the certificate is for the genesis block.","Whether this participant is leader at time <code>view_number</code>.","Validate a QC.","Validate a vote by checking its signature and token.","Get the leaf commitment.","Attempts to generate a vote token for self","Attempts to generate a vote token for participation at …","","The committee which votes on proposals.","","","","The committee which votes on proposals.","The committee which votes on proposals.","The committee which votes on proposals.","The network being used by this exchange.","","","","The network being used by this exchange.","The network being used by this exchange.","The network being used by this exchange.","This participant’s private key.","","","","This participant’s private key.","This participant’s private key.","This participant’s private key.","","This participant’s public key.","","","","This participant’s public key.","This participant’s public key.","This participant’s public key.","","","Set the leaf commitment.","Signs a commit vote","","Sign a DA proposal.","Sign a DA proposal.","Sign a vote on DA proposal.","Sign a vote on DA proposal.","Sings a finalize vote","","Sign a neagtive vote on validating or commitment proposal.","Sign a neagtive vote on validating or commitment proposal.","Signs a precommit vote","","Sign a timeout vote.","Sign a timeout vote.","Sign a validating or commitment proposal.","Sign a validating or commitment proposal.","Sign a positive vote on validating or commitment proposal.","Sign a positive vote on validating or commitment proposal.","Get signatures.","","Returns the threshold for a specific <code>Membership</code> …","Threshold required to approve a <code>Proposal</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks the claims of a received vote token","Get the view number.","the count, which validation will confirm","The contents of a vote on <code>commit</code>.","","","","","","","","","","","","","An ever-incrementing counter","A gauge that stores the latest value.","A histogram which will record a series of points.","A label that stores the last string value.","The metrics type.","Use this if you’re not planning to use any metrics. All …","","Add a value to the counter","","Add a point to this histogram.","","","","","","Create a new <code>Box&lt;dyn Metrics&gt;</code> with this <code>NoMetrics</code>","","","Create a <code>Counter</code> with an optional <code>unit_label</code>.","","Create a <code>Gauge</code> with an optional <code>unit_label</code>.","","Create a <code>Histogram</code> with an optional <code>unit_label</code>.","","Create a <code>Label</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Set the gauge value","Set the label value","","","Create a subgroup with a specified prefix.","","","","","","Update the guage value","","","broadcast the message to all","Centralized server specific errors","Centralized server specific errors","SNAFU context selector for the …","Error sending output to consumer of …","SNAFU context selector for the <code>NetworkError::ChannelSend</code> …","Client disconnected","SNAFU context selector for the …","The client returned an error","SNAFU context selector for the …","API for interacting directly with a consensus committee …","represents a networking implmentration exposes low level …","Could not deliver a message to a specified recipient","SNAFU context selector for the …","directly transmit","Endpoint parsed incorrectly","SNAFU context selector for the …","Failed to deserealize a network message","SNAFU context selector for the …","Failed to serialize a network message","SNAFU context selector for the …","The injected consensus data is incorrect","SNAFU context selector for the …","Libp2p specific errors","SNAFU context selector for the <code>NetworkError::Libp2p</code> variant","memory network specific errors","for any errors we decide to add to memory network","SNAFU context selector for the <code>NetworkError::MemoryNetwork</code> …","Underlying Network implementation’s type","Changes that can occur in the network","Error type for networking","common traits we would like our network messages to …","interface describing how reliable the network is","The centralized server could not find a specific message.","SNAFU context selector for the …","Attempted to deliver a message to an unknown node","SNAFU context selector for the <code>NetworkError::NoSuchNode</code> …","A node is connected","A node is disconnected","The underlying connection has been shut down","SNAFU context selector for the <code>NetworkError::ShutDown</code> …","stub","SNAFU context selector for the <code>MemoryNetworkError::Stub</code> …","Describes additional functionality needed by the test …","Describes additional functionality needed by the test …","A timeout occurred","SNAFU context selector for the <code>NetworkError::Timeout</code> …","the type of transmission","unable to cancel a request, the request has already been …","SNAFU context selector for the <code>NetworkError::UnableToCancel</code>…","unimplemented functionality","SNAFU context selector for the …","a message","Web server specific errors","Web server specific errors","SNAFU context selector for the <code>NetworkError::WebServer</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","broadcast message to those listening on the communication …","broadcast message to some subset of nodes blocking","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends a direct message to a specific node blocking","Sends a direct message to a specific node blocking","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","generates the <code>CommunicationChannel</code> given it’s associated …","generates a network given an expected node count","get the view out of the message","","","","","","","","","Get the number of messages in-flight.","","","","","","","","","","","","","","","","","","","","","","","","","","Injects consensus data such as view number into the …","Injects consensus data such as view number into the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","checks if the network is ready nonblocking","checks if the network is ready nonblocking","look up a node blocking","look up a node blocking","","","","","get the purpose of the message","Moves out the entire queue of received messages of ’…","Moves out the entire queue of received messages of ’…","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","","Shut down this network. Afterwards this network should no …","Blocks until the network is shut down then returns true","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks until node is successfully initialized into the …","Blocks until the network is successfully initialized","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","The block type that this hotshot setup is using.","Channels for sending/recv-ing proposals and votes.","Communication channel for <code>CommitteeProposalType</code> and [<code>DAVote</code>…","Communication channel the DA committee. Only needed for …","Alias for the [<code>CommitteeExchange</code>] type.","Protocol for exchanging data availability proposals and …","Protocol for determining membership in a DA committee.","Type for the underlying committee <code>ConnectedNetwork</code> that …","Connected network for the DA committee. Only needed for …","A proposal to provide data availability for a new leaf.","A vote on a [<code>ComitteeProposal</code>].","Consensus message type.","the type of consensus (seuqencing or validating)","The election config type that this hotshot setup is using.","Consensus type selected exchanges.","Contains the protocols for exchanging proposals and votes.","Leaf type for this consensus implementation","Networking implementations for quorum and committee …","Node implementation aggregate trait","Trait with all the type definitions that are used in the …","Alias for the [<code>ProcessedConsensusMessage</code>] type of a …","Communication channel for <code>QuorumProposalType</code> and […","Alias for the [<code>QuorumExchange</code>] type.","Protocol for exchanging quorum proposals and votes.","Protocol for determining membership in a consensus …","Type for the underlying quorum <code>ConnectedNetwork</code> that will …","A proposal to append a new leaf to the log which is output …","A vote on a <code>QuorumProposalType</code>.","metadata for sending information to the leader, replica, …","Implementes <code>SequencingExchangesType</code>.","An <code>ExchangesType</code> for sequencing consensus.","Alias for the [<code>CommitteeExchange</code>] type for sequencing …","The signature key that this hotshot setup is using.","The state type that this hotshot setup is using.","Storage type for this consensus implementation","extra functions required on a node implementation to be …","The time type that this hotshot setup is using.","The transaction type that this hotshot setup is using.","Implements <code>ValidatingExchangesType</code>.","An <code>ExchangesType</code> for validating consensus.","Alias for the [<code>CommitteeExchange</code>] type for validating …","struct containing messages for a view to send to a replica …","The vote token that this hotshot setup is using.","","","","","Phantom data.","Phantom data.","","","","","","","","","","","generate a genesis block","","","","","","","","","","","a map from view number to ViewQueue one of (replica|next …","","","","","","","","","Generate a committee communication channel given the …","Get the committee exchange.","","Committee exchange.","Create ephemeral storage Will be deleted/lost immediately …","Create all exchanges.","","","the current view number this should always be in sync with …","create new view queue","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The private key of the node <code>id</code> in a test.","Return the full internal state. This is useful for …","<code>true</code> if this queue has already received a proposal","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates random transaction if possible otherwise panics …","Generate a quorum network given an expected node count.","create new sendtosasks","Create channels starting from a given view.","Create channels for sending/recv-ing proposals and votes …","Channel for the next consensus leader or DA leader.","Generate a quorum communication channel given the network.","Get the quorum exchange.","","","Quorum exchange.","Quorum exchange.","to recv networking events for a replica or DA committee …","to send networking events to a replica or DA committee …","Shut down the the underlying networking interfaces.","","","Creates random transaction if possible otherwise panics …","","","","","","","","","","","","","","","the number of transactions in a block","","","","","","Channel for the replica or DA committee member.","","","","","","Block the underlying networking interfaces until node is …","","","","","Type saftey wrapper for byte encoded keys","Type saftey wrapper for byte encoded signature","The private key type for this signature algorithm","Trait for abstracting public key signatures","TODO we don’t need this if we have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Demonstration implementation of the <code>SignatureKey</code> trait …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a public key from bytes","Produce a public key from a private key","","Generates a private key from the given integer seed","Generate a new key pair","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Produce a signature","","Serialize a public key to bytes","","","","","","","","","","","","","","","","","","","","Validate a signature","","","","","Private key type for a ed25519 keypair","Public key type for an ed25519 <code>SignatureKey</code> pair","<code>Ed25519Priv</code> implementation","<code>Ed25519Pub</code> implementation","The private key for  this keypair","The public key for this keypair","","","Private key type for a ed25519 keypair","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create an existing private key from bytes","","Generate a new private key from scratch","Generate a new private key from a seed","Generate a new private key from a seed and a number","","","Calls <code>U::from(self)</code>.","","","","","The private key for  this keypair","","Convert a private key to bytes","","","Return the <code>TaggedBase64</code> representation of this key.","","","","","","","","","","Public key type for an ed25519 <code>SignatureKey</code> pair","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","The public key for this keypair","","","","","","Return the <code>TaggedBase64</code> representation of this key.","","","","","","The type of block this state is associated with","Trait for time compatibility needed for reward collection","The error type for this particular type of ledger state","Abstraction over the state that blocks modify","extra functions required on block to be usable by …","extra functions required on state to be usable by …","Time compatibility needed for reward collection","Appends the given block to this state, returning an new …","Creates random transaction if possible otherwise panics …","Dummy implementation of <code>State</code> for unit tests","generate a genesis block","Create a new instance of this time unit at time number 0","Create a new instance of this time unit","Returns an empty, template next block given this current …","Gets called to notify the persistence backend that this …","the number of transactions in this block","Returns true if and only if the provided block is valid …","The dummy state","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Some dummy data","","Generate a random <code>DummyState</code>","","","","","","","","","","A failed view","No genesis view was inserted","SNAFU context selector for the <code>StorageError::NoGenesisView</code> …","Result for a storage type","Abstraction over on disk persistence of node state","Errors that can occur in the storage layer.","An internal representation of the data stored in a <code>Storage</code>.","A view stored in the <code>Storage</code>","A succeeded view","Extra requirements on Storage implementations required for …","An entry to <code>Storage::append</code>. This makes it possible to …","","","","Append the list of views to this storage","Insert a single view. Shorthand for","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","Cleans up the storage up to the given view. The given view …","","","","","","","Commit this storage.","Create ephemeral storage Will be deleted/lost immediately …","The deltas of this view","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","The views that have failed","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Create a new <code>StoredView</code> from the given QC, Block and State.","","","Get the latest anchored view","Return the full internal state. This is useful for …","","The index of <code>parent</code> in the chain","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The justify QC of this view. See the hotstuff paper for …","The parent of this view","the proposer id","","transactions rejected in this view","","The state of this view","The views that have been successful","the timestamp this view was recv-ed in nanonseconds","","","","","","","","","","","","","","","","","","","","The view number of this view","","","","","","The aggreation of votes, implemented by <code>VoteAccumulator</code>.","Commit vote","A vote on DA proposal.","Finalize vote","Negative vote.","PreCommit vote","Votes on validating or commitment proposal.","Timeout vote.","A timeout vote.","The data View Sync votes are signed over","Votes to synchronize the network on a single view","The internals of a view sync vote","Describe the process of collecting signatures on block or …","Mapping of commitments to vote tokens by key.","The vote sent by consensus messages.","Posivite vote.","A positive or negative vote on validating or commitment …","","","","","","","","Accumate the <code>val</code> to the current state.","","","","","","","","","","","","","","","","","","The block commitment being voted on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The view this vote was cast for.","","","","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enough stake to know that we cannot possibly get a quorum, …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The justification qc for this view","TODO we should remove this this is correct, but highly …","TODO we should remove this this is correct, but highly …","The leaf commitment being voted on.","Map of all no signatures accumlated so far","The relay this vote is intended for","The relay this vote is intended for","The view number we are trying to sync on","The view number we are trying to sync on","","","","","","","","The signature share associated with this vote TODO ct/vrf …","The signature share associated with this vote TODO ct/vrf …","The signature share associated with this vote TODO ct/vrf …","This node’s signature over the VoteData","A quorum’s worth of stake, generall 2f + 1","","","","","","","","Map of all signatures accumlated so far","","","","","","","","","","","","","","","","","","","","","","","","","The vote data this vote is signed over","The vote data this vote is signed over","The vote data this vote is signed over","The vote data this vote is signed over","The vote token generated by this replica","The vote token generated by this replica","The vote token generated by this replica","The vote token generated by this replica","","","","","","","","","Map of all yes signatures accumlated so far"],"i":[3,0,0,3,3,5,3,5,3,5,3,5,3,5,0,3,5,3,5,0,5,0,3,5,3,5,3,5,3,5,5,0,0,5,3,5,3,5,3,5,3,5,3,5,3,5,3,5,5,5,0,5,5,5,5,5,5,3,5,5,5,3,5,5,0,3,5,3,5,3,5,0,3,5,0,28,0,0,0,28,0,0,0,22,24,25,28,203,22,24,25,28,203,22,24,25,28,24,22,203,22,24,25,28,203,22,24,25,28,22,24,25,28,22,24,25,28,24,203,203,203,22,24,25,28,203,22,24,25,28,22,24,25,28,203,22,24,25,28,203,203,22,24,25,28,22,24,25,24,22,24,24,25,28,203,22,24,25,28,22,24,25,22,24,25,22,24,25,28,24,203,22,24,25,28,203,22,24,25,28,203,22,24,25,28,203,22,24,25,28,203,22,24,25,28,22,24,25,24,22,24,25,24,25,25,22,24,25,28,22,24,25,22,24,25,22,24,25,24,22,24,25,28,24,203,22,24,25,28,203,22,24,25,28,24,203,22,24,25,28,22,24,25,203,22,24,203,203,22,24,25,28,0,0,0,0,23,204,0,0,0,0,0,0,0,0,0,0,23,99,23,205,0,0,0,0,0,0,0,0,0,0,0,0,40,48,49,50,47,43,51,52,40,40,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,43,43,47,43,204,40,51,52,48,50,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,47,43,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,40,40,51,52,47,43,205,51,52,50,48,49,51,52,40,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,43,40,40,48,49,50,51,52,40,40,40,48,49,50,47,43,51,52,40,48,49,50,51,52,40,48,49,50,51,52,47,0,204,40,51,52,23,51,52,40,48,49,50,47,43,43,51,51,52,52,40,48,48,49,50,47,43,51,51,52,23,51,52,40,51,23,51,52,23,51,52,23,51,52,23,51,52,23,51,52,23,51,52,23,51,52,23,51,52,23,51,52,99,23,48,49,50,51,52,40,48,51,52,43,51,52,48,50,51,52,43,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,47,48,50,51,52,23,40,51,51,52,48,51,52,40,48,50,51,52,43,0,48,51,52,40,40,48,49,50,51,52,40,40,40,23,51,52,43,51,48,51,51,52,40,48,49,50,47,43,51,52,43,51,52,40,48,49,50,47,43,51,52,40,48,49,50,47,43,51,52,204,40,51,52,40,48,49,50,47,43,51,52,40,48,49,50,51,52,40,48,49,50,47,43,51,52,68,0,68,0,68,0,68,0,0,68,0,68,0,68,0,73,73,73,73,73,68,0,68,0,68,0,73,73,73,73,0,68,0,73,68,0,68,0,79,80,69,70,81,71,82,72,83,74,76,77,78,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,68,68,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,69,70,71,72,74,76,77,78,68,79,80,69,70,81,71,82,72,83,74,76,77,78,73,79,80,69,70,81,71,82,72,83,74,76,77,78,73,72,77,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,68,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,69,70,71,72,74,76,77,78,79,80,69,70,81,71,82,72,83,74,76,77,78,68,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,68,68,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,76,68,68,74,76,79,80,69,70,81,71,82,72,83,74,76,77,78,73,68,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,74,79,80,69,70,81,71,82,72,83,74,76,77,78,68,73,206,207,208,209,210,211,212,213,214,208,214,85,85,0,0,85,85,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,84,85,215,216,216,217,218,219,94,0,220,89,0,92,95,92,95,102,89,0,0,221,102,0,91,93,0,0,0,0,221,0,0,0,102,91,93,0,0,98,90,0,0,91,93,0,102,91,93,94,89,87,89,90,91,92,93,94,95,96,97,98,100,87,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,87,89,90,91,92,93,94,95,96,97,98,100,87,89,90,91,92,93,94,95,96,97,98,100,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,87,89,90,91,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,87,89,90,91,92,93,94,95,98,100,90,98,100,87,89,90,91,92,93,94,95,96,97,98,100,102,101,87,89,89,90,91,92,93,93,94,95,95,96,96,97,97,98,100,89,87,89,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,87,91,92,221,87,89,96,97,87,87,89,90,91,92,93,94,95,96,97,98,100,100,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,102,87,89,90,91,92,93,94,95,96,97,98,100,221,96,97,102,87,89,90,91,92,93,94,95,96,97,98,100,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,103,104,103,104,104,104,104,104,104,104,103,104,104,104,104,0,104,104,104,104,104,104,104,104,104,104,103,104,104,104,104,104,104,104,109,0,0,0,0,108,109,108,108,110,109,108,110,109,110,108,109,108,110,109,108,110,109,108,109,108,109,108,109,108,108,110,109,108,110,109,108,109,108,110,109,108,109,108,109,108,109,108,108,110,110,109,108,110,109,108,108,109,108,110,110,108,110,109,108,110,109,108,110,109,108,110,109,108,110,109,108,108,110,108,108,109,108,109,108,109,108,110,108,110,109,108,110,109,108,109,108,108,110,109,108,110,109,0,0,0,0,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,222,0,130,222,0,0,0,114,0,0,130,133,0,127,0,0,222,222,114,130,222,0,0,0,117,127,0,0,114,133,133,114,0,0,0,222,0,0,114,128,129,114,130,123,125,121,123,125,222,121,123,125,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,114,127,127,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,128,129,127,128,129,114,130,123,125,128,129,114,130,123,125,222,121,123,125,223,121,177,123,117,223,121,175,125,223,121,175,125,175,125,117,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,127,114,130,133,121,127,128,129,114,130,123,125,114,130,114,130,128,129,117,222,127,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,224,225,224,117,117,222,117,114,130,127,127,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,128,129,224,222,222,222,224,117,222,123,222,121,123,125,121,123,125,222,121,123,125,121,123,125,222,121,123,125,121,123,125,127,222,121,123,125,121,123,125,114,130,224,223,121,177,123,177,123,223,121,175,125,223,121,175,125,175,125,175,125,224,127,117,222,128,129,114,130,123,125,127,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,133,121,127,128,129,114,130,123,125,117,224,27,222,121,123,125,133,121,127,128,129,114,130,123,125,0,0,0,0,0,0,134,137,134,139,134,134,134,134,134,134,134,134,136,134,136,134,136,134,136,134,134,134,134,134,134,134,134,134,134,134,134,138,140,134,134,136,134,134,134,134,134,138,134,134,160,145,0,0,145,0,144,0,144,0,0,0,145,0,160,144,0,145,0,145,0,144,0,145,0,145,0,0,120,0,0,0,0,143,0,145,0,169,169,145,0,142,0,0,0,145,0,0,145,0,145,0,0,145,0,0,148,149,150,151,152,153,160,161,162,163,164,154,155,156,165,166,167,157,158,159,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,142,143,144,145,142,143,144,145,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,120,226,148,149,150,151,152,153,154,155,156,157,158,159,142,143,144,145,148,149,150,151,152,153,160,161,162,163,164,154,155,156,165,166,167,157,158,159,148,149,150,151,152,153,160,161,162,163,164,154,155,156,165,166,167,157,158,159,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,142,143,144,145,160,120,226,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,149,150,151,152,153,154,155,156,157,158,159,148,142,142,149,143,143,150,151,152,153,144,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,145,169,227,228,229,142,143,144,145,142,143,144,145,228,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,120,226,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,149,150,151,152,153,161,162,163,164,154,155,156,165,166,167,157,158,159,120,226,120,226,142,143,144,145,229,120,226,230,230,160,120,226,142,143,144,145,148,149,150,151,152,153,160,161,162,163,164,154,155,156,165,166,167,157,158,159,142,143,144,145,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,148,142,149,143,150,151,152,153,144,160,161,162,163,164,154,155,156,165,166,167,157,158,159,145,169,120,226,231,232,233,234,235,236,237,21,0,0,238,0,239,0,0,238,0,0,86,21,21,86,0,86,240,0,0,0,0,0,240,0,0,0,0,0,0,0,0,21,21,86,0,21,21,0,0,0,0,21,173,174,176,178,176,178,180,173,174,176,178,180,173,174,176,178,238,180,173,174,176,178,180,173,174,176,178,180,173,174,176,178,173,174,176,178,238,239,178,178,238,240,176,178,180,173,180,173,174,176,178,180,173,174,176,178,180,173,174,176,178,176,178,180,173,174,176,178,238,238,173,180,173,174,176,178,180,173,174,176,178,180,173,174,176,178,180,173,174,176,178,180,173,174,176,178,238,238,180,174,86,174,238,240,176,178,176,178,173,173,240,176,178,238,173,174,176,178,180,173,174,176,178,180,173,174,176,178,238,180,173,174,176,178,174,180,173,174,176,178,240,176,178,0,0,0,0,168,0,0,0,0,39,113,39,185,113,186,39,185,113,186,113,113,39,185,113,186,39,185,113,186,39,113,39,113,39,113,185,186,39,185,113,186,39,185,113,186,39,39,113,39,39,39,185,113,186,0,113,113,39,113,39,113,39,39,185,113,186,185,186,39,185,113,186,168,168,39,241,168,39,113,39,39,185,113,186,39,185,113,186,39,185,113,186,39,185,113,186,39,185,113,186,39,113,113,39,39,113,39,39,39,168,39,168,39,113,39,113,39,39,39,185,113,186,39,185,113,186,39,185,113,186,39,168,39,185,113,186,0,0,0,0,189,190,0,0,0,0,0,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,0,0,0,0,0,0,0,0,0,0,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,242,0,242,0,0,0,242,242,243,0,244,245,245,242,242,244,242,0,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,192,179,0,0,0,0,0,0,192,0,0,193,179,60,246,246,193,179,195,192,60,193,179,195,192,60,179,179,193,179,195,192,60,193,179,195,192,60,193,179,246,193,179,60,193,179,60,246,247,60,193,179,195,192,60,193,179,195,192,60,179,193,179,195,192,60,195,192,60,193,195,193,179,179,195,192,60,193,179,195,192,192,192,192,60,60,60,192,60,192,60,192,60,192,60,60,192,60,246,247,179,60,179,193,179,195,192,60,193,179,195,192,60,193,179,195,192,60,193,179,195,192,60,193,179,195,192,60,193,60,60,60,179,60,179,60,195,60,193,179,60,179,193,179,195,192,60,193,179,195,192,60,193,179,195,192,60,60,193,179,195,192,60,0,119,0,119,124,119,0,124,0,0,0,0,0,0,0,124,0,122,200,201,202,31,119,124,248,115,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,122,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,122,200,201,202,31,119,124,122,200,201,202,31,119,124,31,249,122,119,124,122,200,201,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,31,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,201,122,200,200,115,202,31,202,31,122,200,201,202,31,119,124,122,200,201,202,115,122,200,201,202,31,119,124,115,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,115,122,200,201,202,31,119,124,122,200,201,202,122,200,201,202,115,122,200,201,202,31,119,124,115],"f":[0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,[3,3],[[[5,[4,4]]],[[5,[4,4]]]],[[]],[[]],0,0,0,[6],[6],[6],[6],[7,[[8,[3]]]],[7,[[8,[[5,[9,9]]]]]],[6],[6],0,0,0,0,[[3,10],11],[[[5,[12,12]],10],11],[[]],[[]],[[],6],[[],6],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,0,0,0,0,0,0,0,0,[[3,17],8],[[[5,[18,18]],17],8],0,0,[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],0,[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],20],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[[0,[4,21]]]]],[[22,[[0,[4,21]]]]]],[[[24,[[0,[4,21]],[0,[4,23]]]]],[[24,[[0,[4,21]],[0,[4,23]]]]]],[[[25,[[0,[4,21]]]]],[[25,[[0,[4,21]]]]]],[[[28,[[0,[4,26,18,4]],[0,[4,27]]]]],[[28,[[0,[4,26,18,4]],[0,[4,27]]]]]],[[]],[[]],[[]],[[]],[[[24,[21,23]]],[[20,[[24,[21,23]]]]]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[[22,[21]]]]]],[7,[[8,[[24,[21,23]]]]]],[7,[[8,[[25,[21]]]]]],[7,[[8,[[28,[[0,[26,18,4]],27]]]]]],[6],[6],[6],[6],[6],0,0,[[[22,[[0,[29,21]]]],[22,[[0,[29,21]]]]],30],[[[24,[[0,[29,21]],[0,[29,23]]]],[24,[[0,[29,21]],[0,[29,23]]]]],30],[[[25,[[0,[29,21]]]],[25,[[0,[29,21]]]]],30],[[[28,[[0,[29,26,18,4]],[0,[29,27]]]],[28,[[0,[29,26,18,4]],[0,[29,27]]]]],30],[[],30],[[],30],[[],30],[[],8],[[[22,[[0,[12,21]]]],10],11],[[[24,[21,23]],10],11],[[[24,[21,23]],10],11],[[[25,[21]],10],11],[[[28,[[0,[12,26,18,4]],[0,[12,27]]]],10],11],[[]],[[]],[[]],[[]],[[]],[[28,20],[[22,[21]]]],[[[28,[23]],[20,[23]]],[[24,[21,23]]]],[[[28,[[31,[21]]]],[20,[[31,[21]]]]],[[25,[21]]]],[[],[[22,[21]]]],[[],[[24,[21,23]]]],[[],[[25,[21]]]],[[[22,[[0,[32,21]]]],33]],[[[24,[[0,[32,21]],[0,[32,23]]]],33]],[[[25,[[0,[32,21]]]],33]],[[[28,[[0,[32,26,18,4]],[0,[32,27]]]],33]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[[22,[21]]],30],[[[24,[21,23]]],30],[[[25,[21]]],30],0,[[[22,[21]]],20],[[[24,[21,23]]],[[20,[23]]]],[[[25,[21]]],[[20,[[31,[21]]]]]],0,0,0,[[[22,[21]],17],8],[[[24,[21,[0,[18,23]]]],17],8],[[[25,[[0,[18,21]]]],17],8],[[[28,[[0,[18,26,18,4]],[0,[18,27]]]],17],8],[[[22,[21]],20]],[[[24,[21,23]],[20,[23]]]],[[[25,[21]],[20,[[31,[21]]]]]],[[[22,[21]]],28],[[[24,[21,23]]],[[28,[23]]]],[[[25,[21]]],[[28,[[31,[21]]]]]],0,0,0,[[],38],[[]],[[]],[[]],[[]],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[[22,[21]]]],[[[24,[21,23]]]],[[[25,[21]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,[[],39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[[40,41]],[[40,41]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],42],[[[43,[[0,[26,12]]]]],[[45,[44]]]],0,0,[[],20],[[],20],[[],20],[[],20],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[47,[[46,[[0,[26,12]]]],[46,[[20,[[0,[26,12]]]]]]]]],[[43,[[0,[26,12]]]]]],[[[43,[[0,[26,12]]]]],[[45,[42]]]],[40,40],[[[48,[[0,[4,21]],[0,[26,4,23]]]]],[[48,[[0,[4,21]],[0,[26,4,23]]]]]],[[[49,[[0,[4,21]]]]],[[49,[[0,[4,21]]]]]],[[[50,[[0,[4,21]],[0,[4,23]]]]],[[50,[[0,[4,21]],[0,[4,23]]]]]],[[[47,[4,4]]],[[47,[4,4]]]],[[[43,[[0,[4,26,12]]]]],[[43,[[0,[4,26,12]]]]]],[[[51,[[0,[4,21]]]]],[[51,[[0,[4,21]]]]]],[[[52,[[0,[4,21]]]]],[[52,[[0,[4,21]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[40,40],53],[40,[[20,[40]]]],[[[51,[21]]],[[20,[[51,[21]]]]]],[[[52,[21]]],[[20,[[52,[21]]]]]],0,0,[[54,41]],[[[51,[21]],54,41]],[[[52,[21]],54,41]],0,0,0,0,0,[40],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[43,[[0,[26,12]]]]],55],[56,[[8,[40,57]]]],[7,[[8,[40]]]],[7,[[8,[[48,[21,[0,[26,23]]]]]]]],[7,[[8,[[49,[21]]]]]],[7,[[8,[[50,[21,23]]]]]],[7,[[8,[[51,[21]]]]]],[7,[[8,[[52,[21]]]]]],[56,[[8,[40,57]]]],[56,[[8,[40,57]]]],[6],[6],[6],[6],[6],[6],[6],[6],[[40,40],30],[[[48,[[0,[29,21]],[0,[26,29,23]]]],[48,[[0,[29,21]],[0,[26,29,23]]]]],30],[[[49,[[0,[29,21]]]],[49,[[0,[29,21]]]]],30],[[[50,[[0,[29,21]],[0,[29,23]]]],[50,[[0,[29,21]],[0,[29,23]]]]],30],[[[51,[[0,[29,21]]]],[51,[[0,[29,21]]]]],30],[[[52,[[0,[29,21]]]],[52,[[0,[29,21]]]]],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[47,[[46,[[0,[26,12]]]],[46,[[20,[[0,[26,12]]]]]]]]],[[8,[[43,[[0,[26,12]]]]]]]],[[],[[20,[26]]]],[[],8],[[],8],[[],8],[[],8],[58,[[8,[59]]]],[[[51,[21]],[58,[[51,[21]]]]],[[8,[[59,[[51,[21]]]]]]]],[[[52,[21]],[58,[[52,[21]]]]],[[8,[[59,[[52,[21]]]]]]]],[[40,10],11],[[[48,[21,[0,[26,23]]]],10],11],[[[49,[21]],10],11],[[[50,[21,23]],10],11],[[[47,[12,12]],10],11],[[[43,[[0,[12,26,12]]]],10],11],[[[43,[[0,[26,12]]]],10],11],[[[51,[[0,[12,21]]]],10],11],[[[51,[21]],10],11],[[[52,[[0,[12,21]]]],10],11],[[[52,[21]],10],11],[[]],[[]],[[[51,[21]]],[[48,[21,[51,[21]]]]]],[[]],[[]],[[]],[[]],[[[60,[21,[51,[21]]]]],[[51,[21]]]],[[]],[[]],[60],[[[60,[[51,[21]]]]],[[51,[21]]]],[[[60,[[52,[21]]]]],[[52,[21]]]],[[],40],[[],[[51,[21]]]],[[]],[[[51,[21]]]],[[[52,[21]]]],[[],[[20,[58]]]],[[[51,[21]]],20],[[[52,[21]]],20],[[],41],[[[51,[21]]],41],[[[52,[21]]],41],[[],24],[[[51,[21]]],[[24,[21,[51,[21]]]]]],[[[52,[21]]],[[24,[21,[52,[21]]]]]],[[],20],[[[51,[21]]],[[20,[[51,[21]]]]]],[[[52,[21]]],[[20,[[52,[21]]]]]],[[],39],[[[51,[21]]],39],[[[52,[21]]],39],[[],[[62,[61]]]],[[[51,[21]]],62],[[[52,[21]]],62],[[]],[[[51,[21]]]],[[[52,[21]]]],[[],63],[[[51,[21]]],63],[[[52,[21]]],63],[[]],[[],64],[[[48,[21,23]]]],[[[49,[21]]]],[[[50,[21,23]]]],[[[51,[21]]]],[[[52,[21]]]],[[40,33]],[[[48,[[0,[32,21]],[0,[26,32,23]]]],33]],[[[51,[[0,[32,21]]]],33]],[[[52,[[0,[32,21]]]],33]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],0,0,0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[[47,[[46,[[0,[26,12]]]],[46,[[20,[[0,[26,12]]]]]]]]],[[43,[[0,[26,12]]]]]],0,0,0,0,[[64,24,58,65]],[41,40],[[[20,[[51,[21]]]],[24,[21,[51,[21]]]],41,62,63,39],[[51,[21]]]],[[[24,[[51,[21]]]]],[[51,[21]]]],[[[24,[[52,[21]]]]],[[52,[21]]]],0,0,0,[[40,40],[[45,[53]]]],0,0,0,0,[66],[54,[[20,[26]]]],0,0,0,[[40,67],[[8,[57]]]],[[40,17],8],[[[48,[[0,[18,21]],[0,[26,18,23]]]],17],8],[[[49,[21]],17],8],[[[50,[[0,[18,21]],[0,[18,23]]]],17],8],[[[51,[[0,[18,21]]]],17],8],[[[52,[[0,[18,21]]]],17],8],[[40,67],[[8,[57]]]],[[40,67],[[8,[57]]]],[40,6],[41],[[[51,[21]],41]],[[[52,[21]],41]],[[[43,[[0,[26,12]]]]],[[45,[42]]]],0,0,[[],38],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[40,6],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],42],[[[68,[21]]],[[45,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[68,[21]]]],[70,[[68,[21]]]],[71,[[68,[21]]]],[[[72,[[46,[38]]]]],[[68,[21]]]],[[[74,[46,[46,[73]]]]],[[68,[21]]]],[[[76,[[46,[6]],[46,[75]]]]],[[68,[21]]]],[[[77,[[46,[38]]]]],[[68,[21]]]],[78,[[68,[21]]]],[[[68,[21]]],[[45,[42]]]],[79,79],[80,80],[69,69],[70,70],[81,81],[71,71],[82,82],[[[72,[4]]],[[72,[4]]]],[83,83],[[[74,[4,4]]],[[74,[4,4]]]],[[[76,[4,4]]],[[76,[4,4]]]],[[[77,[4]]],[[77,[4]]]],[78,78],[73,73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[68,[21]]],55],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[69,[[8,[[68,[21]]]]]],[70,[[8,[[68,[21]]]]]],[71,[[8,[[68,[21]]]]]],[[[72,[[46,[38]]]]],[[8,[[68,[21]]]]]],[[[74,[46,[46,[73]]]]],[[8,[[68,[21]]]]]],[[[76,[[46,[6]],[46,[75]]]]],[[8,[[68,[21]]]]]],[[[77,[[46,[38]]]]],[[8,[[68,[21]]]]]],[78,[[8,[[68,[21]]]]]],[[79,10],11],[[80,10],11],[[69,10],11],[[70,10],11],[[81,10],11],[[71,10],11],[[82,10],11],[[[72,[12]],10],11],[[83,10],11],[[[74,[12,12]],10],11],[[[76,[12,12]],10],11],[[[77,[12]],10],11],[[78,10],11],[[[68,[[0,[12,21]]]],10],11],[[[68,[21]],10],11],[[73,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[79,[[68,[21]]]],[80,[[68,[21]]]],[69,[[68,[21]]]],[70,[[68,[21]]]],[81,[[68,[21]]]],[71,[[68,[21]]]],[82,[[68,[21]]]],[[[72,[[46,[38]]]]],[[68,[21]]]],[83,[[68,[21]]]],[[[74,[46,[46,[73]]]]],[[68,[21]]]],[[[76,[[46,[6]],[46,[75]]]]],[[68,[21]]]],[[[77,[[46,[38]]]]],[[68,[21]]]],[78,[[68,[21]]]],0,[66],[[[68,[21]]],[[45,[42]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[84,[[0,[4,21]],[0,[4,23]]]]],[[84,[[0,[4,21]],[0,[4,23]]]]]],[[[85,[[0,[4,21]],[0,[4,23]]]]],[[85,[[0,[4,21]],[0,[4,23]]]]]],[[]],[[]],[6],[6],[6],[6],[6],[6],0,[[[84,[[0,[12,21]],[0,[12,23]]]],10],11],[[[85,[[0,[12,21]],[0,[12,23]]]],10],11],[[]],[[]],[[],6],[[],6],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[87,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[89,[[0,[4,88]],[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[89,[[0,[4,88]],[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[90,[[0,[4,21]]]]],[[90,[[0,[4,21]]]]]],[[[91,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[91,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[92,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[92,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[93,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[93,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[94,[[0,[4,21]]]]],[[94,[[0,[4,21]]]]]],[[[95,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[95,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[96,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[96,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[97,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[97,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[98,[[0,[4,21]]]]],[[98,[[0,[4,21]]]]]],[[[100,[[0,[4,99]]]]],[[100,[[0,[4,99]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[[87,[21,[86,[21]]]]]]]],[7,[[8,[[89,[88,21,[86,[21]]]]]]]],[7,[[8,[[90,[21]]]]]],[7,[[8,[[91,[21,[86,[21]]]]]]]],[7,[[8,[[93,[21,[86,[21]]]]]]]],[7,[[8,[[94,[21]]]]]],[7,[[8,[[95,[21,[86,[21]]]]]]]],[7,[[8,[[96,[21,[86,[21]]]]]]]],[7,[[8,[[97,[21,[86,[21]]]]]]]],[7,[[8,[[98,[21]]]]]],[7,[[8,[[100,[99]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[87,[21,[86,[21]]]],[87,[21,[86,[21]]]]],30],[[[89,[[0,[29,88]],[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]],[89,[[0,[29,88]],[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]]],30],[[[90,[[0,[29,21]]]],[90,[[0,[29,21]]]]],30],[[[91,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]],[91,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]]],30],[[[92,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]],[92,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]]],30],[[[93,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]],[93,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]]],30],[[[94,[[0,[29,21]]]],[94,[[0,[29,21]]]]],30],[[[95,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]],[95,[[0,[29,21]],[0,[29,[86,[[0,[29,21]]]]]]]]],30],[[[98,[[0,[29,21]]]],[98,[[0,[29,21]]]]],30],[[[100,[[0,[29,99]]]],[100,[[0,[29,99]]]]],30],[[],30],[[],30],[[],30],[[[87,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[89,[[0,[12,88]],[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[90,[[0,[12,21]]]],10],11],[[[91,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[92,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[93,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[94,[[0,[12,21]]]],10],11],[[[95,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[96,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[97,[[0,[12,21]],[0,[12,[86,[[0,[12,21]]]]]]]],10],11],[[[98,[[0,[12,21]]]],10],11],[[[100,[[0,[12,99]]]],10],11],[[]],[[[91,[21,[86,[21]]]]],[[101,[21,[86,[21]]]]]],[[]],[[[98,[21]]],[[89,[88,21,[86,[21]]]]]],[[]],[[]],[[]],[[]],[[]],[[[91,[21,[86,[21]]]]],[[93,[21,[86,[21]]]]]],[[]],[[[92,[21,[86,[21]]]]],[[95,[21,[86,[21]]]]]],[[]],[[[91,[21,[86,[21]]]]],[[96,[21,[86,[21]]]]]],[[]],[[[101,[21,[86,[21]]]]],[[97,[21,[86,[21]]]]]],[[]],[[]],[[]],[[],[[89,[88,21,[86,[21]]]]]],[[[87,[21,[86,[21]]]]]],[[[89,[88,21,[86,[21]]]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,[[[93,[21,[86,[21]]]]],[[91,[21,[86,[21]]]]]],[[[95,[21,[86,[21]]]]],[[92,[21,[86,[21]]]]]],[[],102],[[[87,[21,[86,[21]]]]],102],[[[89,[88,21,[86,[21]]]]],102],[[[96,[21,[86,[21]]]]],102],[[[97,[21,[86,[21]]]]],102],0,[[[87,[21,[86,[21]]]],17],8],[[[89,[88,21,[86,[21]]]],17],8],[[[90,[21]],17],8],[[[91,[[0,[18,21]],[0,[18,[86,[[0,[18,21]]]]]]]],17],8],[[[92,[[0,[18,21]],[86,[[0,[18,21]]]]]],17],8],[[[93,[21,[86,[21]]]],17],8],[[[94,[21]],17],8],[[[95,[21,[86,[21]]]],17],8],[[[96,[21,[86,[21]]]],17],8],[[[97,[21,[86,[21]]]],17],8],[[[98,[21]],17],8],[[[100,[[0,[18,99]]]],17],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[[96,[21,[86,[21]]]]]],[[[97,[21,[86,[21]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[],8],[[],2],[[],2],[[]],[[]],[[[104,[[0,[4,103]]]]],[[104,[[0,[4,103]]]]]],[[]],[[[104,[[0,[105,103]]]],[104,[[0,[105,103]]]]],53],[[],[[106,[20]]]],[6],[6],[7,[[8,[[104,[103]]]]]],[6],0,[[[104,[[0,[29,103]]]],[104,[[0,[29,103]]]]],30],[[],30],[[[104,[[0,[12,103]]]],10],11],[[]],[[[104,[[0,[32,103]]]],33]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[]],[[[104,[[0,[107,103]]]],[104,[[0,[107,103]]]]],[[45,[53]]]],[[[104,[[0,[18,103]]]],17],8],[[]],[[],8],[[],8],[[],19],[[]],0,0,0,0,0,[1],[1],[108,[[8,[108]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],42],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[108,108],[109,109],[[]],[[]],[108,[[20,[108]]]],[109,[[20,[109]]]],[108,[[106,[20]]]],[6],[6],[6],[6],[6],[6],[7,[[8,[108]]]],[7,[[8,[109]]]],[6],[6],[6],[[108,108],30],[[109,109],30],[[],30],[[],30],[[],8],[[],8],[[108,10],11],[[108,10],11],[[110,10],11],[[110,10],11],[[109,10],11],[[]],[[]],[[]],[[],108],[[108,33]],[[109,33]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[],108],0,[66],[54,108],[[108,17],8],[[109,17],8],[[],38],[[],38],[[]],[[]],[[],38],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[108,41],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[111,111],[[]],[6],[6],[6],[[111,10],11],[[]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[]],[[],8],[[],8],[[],19],[[]],0,0,[1],[[],2],[[],2],[[]],[[]],[112,112],[[]],[6],[6],[6],[[112,10],11],[[]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[]],[[],8],[[],8],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],0,0,0,[[39,113,20,114,115],[[116,[115]]]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]],39,113,[20,[[31,[21]]]],114,[115,[[31,[21]]]]],[[116,[[115,[[31,[21]]]]]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]],39,113,20,114,115],[[116,[115]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],39,113,[20,[23]],114,[115,[23]]],[[116,[[115,[23]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[114,[[0,[26,18,4]]]]],[[62,[126]]]],[[],42],[127,[[45,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128,127],[129,127],[127,[[45,[42]]]],[128,128],[129,129],[[[114,[[0,[4,26,18,4]]]]],[[114,[[0,[4,26,18,4]]]]]],[[[130,[[0,[4,26,18,4]]]]],[[130,[[0,[4,26,18,4]]]]]],[[[123,[21,[0,[4,[117,[21]]]],[0,[4,[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[0,[4,[117,[21]]]]]]]],118]]],[[123,[21,[0,[4,[117,[21]]]],[0,[4,[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[0,[4,[117,[21]]]]]]]],118]]]],[[[125,[21,23,99,[0,[4,[117,[21]]]],[0,[4,[120,[21,118,99,[124,[21,23]],[0,[4,[117,[21]]]]]]]],118]]],[[125,[21,23,99,[0,[4,[117,[21]]]],[0,[4,[120,[21,118,99,[124,[21,23]],[0,[4,[117,[21]]]]]]]],118]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[62,131]],[[62,131],[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[62,131],[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]]]],[[62,131],[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]]]],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[[20,[24]],20],[[95,[86]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]],[20,[[24,[21]]]],20],[[95,[21,[86,[21]]]]]],[62],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[[20,[24]],20],[[93,[86]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],[20,[[24,[21,23]]]],[20,[23]]],[[93,[21,[86,[21]]]]]],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[24,[[93,[86]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],[24,[21,23]]],[[93,[21,[86,[21]]]]]],[[20,20],[[93,[86]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],[20,[[24,[21,23]]]],[20,[23]]],[[93,[21,[86,[21]]]]]],[41],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[127,55],[7,[[8,[[114,[[0,[26,18,4]]]]]]]],[7,[[8,[[130,[[0,[26,18,4]]]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[114,[[0,[29,26,18,4]]]],[114,[[0,[29,26,18,4]]]]],30],[[[130,[[0,[29,26,18,4]]]],[130,[[0,[29,26,18,4]]]]],30],[[],30],[[],30],[128,[[8,[127]]]],[129,[[8,[127]]]],[[],75],[[],75],[[127,10],11],[[127,10],11],[[128,10],11],[[129,10],11],[[[114,[[0,[12,26,18,4]]]],10],11],[[[130,[[0,[12,26,18,4]]]],10],11],[[[123,[21,[0,[12,[117,[21]]]],[0,[12,[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[0,[12,[117,[21]]]]]]]],118]],10],11],[[[125,[21,23,99,[0,[12,[117,[21]]]],[0,[12,[120,[21,118,99,[124,[21,23]],[0,[12,[117,[21]]]]]]]],118]],10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,20]],[[]],[[]],[[],132],[[]],[[]],[[]],[[[114,[[0,[32,26,18,4]]]],33]],[[[130,[[0,[32,26,18,4]]]],33]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[128,127],[129,127],[[],30],[[],30],[20,30],[[39,113,114,133],30],[[],20],[[],[[8,[45,127]]]],[[],[[8,[45,127]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]]],[[8,[45,127]]]],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]]]],0,0,0,[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]],[[120,[21,118,99,[119,[21]],[117,[21]]]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]]],[[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]]],[[120,[21,118,99,[124,[21,23]],[117,[21]]]]]],0,0,0,[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]]]],0,0,0,[66],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]]]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]]]],0,0,0,[[[114,[[0,[18,26,18,4]]]],17],8],[[[130,[[0,[18,26,18,4]]]],17],8],[20],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[20,113],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]],20],113],[20],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]],20]],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[20],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],[20,[23]]]],[[]],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]]]],[[]],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]]]],[20,113],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],[20,[23]]],113],[20],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],[20,[23]]]],[[],28],[127,[[45,[42]]]],[[],75],[[],75],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[133,[[8,[133,127]]]],[[]],[[],75],[20,114],[[[121,[21,99,[117,[21]],[120,[21,118,99,[119,[21]],[117,[21]]]],118]],20],114],[[[123,[21,[117,[21]],[120,[21,118,[49,[21]],[122,[21,[52,[21]]]],[117,[21]]]],118]],20],114],[[[125,[21,23,99,[117,[21]],[120,[21,118,99,[124,[21,23]],[117,[21]]]],118]],20],114],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[6],[[134,6]],[135],[[134,135]],[[],2],[[],2],[[]],[[]],[[],[[14,[136]]]],[134,134],[[]],[[38,[45,[38]]],[[14,[137]]]],[[134,38,[45,[38]]],[[14,[137]]]],[[38,[45,[38]]],[[14,[138]]]],[[134,38,[45,[38]]],[[14,[138]]]],[[38,[45,[38]]],[[14,[139]]]],[[134,38,[45,[38]]],[[14,[139]]]],[38,[[14,[140]]]],[[134,38],[[14,[140]]]],[[],134],[6],[6],[6],[[134,10],11],[[]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[6],[38],[[134,6]],[[134,38]],[38,[[14,[136]]]],[[134,38],[[14,[136]]]],[[]],[[],8],[[],8],[[],19],[141],[[134,141]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],42],[[],42],[[],42],[[],42],[142,[[45,[44]]]],[143,[[45,[44]]]],[144,[[45,[44]]]],[145,[[45,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[147,[[14,[146]]]]]],[132,[[147,[[14,[146]]]]]],[148,142],[149,143],[150,144],[151,144],[152,144],[153,144],[154,145],[155,145],[156,145],[157,145],[158,145],[159,145],[142,[[45,[42]]]],[143,[[45,[42]]]],[144,[[45,[42]]]],[145,[[45,[42]]]],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[160,160],[161,161],[162,162],[163,163],[164,164],[154,154],[155,155],[156,156],[165,165],[166,166],[167,167],[157,157],[158,158],[159,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[142,55],[143,55],[144,55],[145,55],[7,[[8,[160]]]],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[148,[[8,[142]]]],[149,[[8,[143]]]],[150,[[8,[144]]]],[151,[[8,[144]]]],[152,[[8,[144]]]],[153,[[8,[144]]]],[154,[[8,[145]]]],[155,[[8,[145]]]],[156,[[8,[145]]]],[157,[[8,[145]]]],[158,[[8,[145]]]],[159,[[8,[145]]]],[[148,10],11],[[142,10],11],[[142,10],11],[[149,10],11],[[143,10],11],[[143,10],11],[[150,10],11],[[151,10],11],[[152,10],11],[[153,10],11],[[144,10],11],[[144,10],11],[[160,10],11],[[161,10],11],[[162,10],11],[[163,10],11],[[164,10],11],[[154,10],11],[[155,10],11],[[156,10],11],[[165,10],11],[[166,10],11],[[167,10],11],[[157,10],11],[[158,10],11],[[159,10],11],[[145,10],11],[[145,10],11],[[[169,[[0,[12,168]]]],10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,145],[[]],[[],[[14,[171]]]],[[6,6,6,6],[[14,[171]]]],[[]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[]],[[]],[[]],[[]],[[],[[45,[6]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[148,142],[149,143],[150,144],[151,144],[152,144],[153,144],[161,145],[162,145],[163,145],[164,145],[154,145],[155,145],[156,145],[165,145],[166,145],[167,145],[157,145],[158,145],[159,145],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[66],[66],[66],[66],[[],102],[160,[[147,[[14,[146]]]]]],[160,[[147,[[14,[146]]]]]],[[],172],[[],30],[[160,17],8],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[142,[[45,[42]]]],[143,[[45,[42]]]],[144,[[45,[42]]]],[145,[[45,[42]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[173,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[173,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[174,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]],[[174,[[0,[4,21]],[0,[4,[86,[[0,[4,21]]]]]]]]]],[[[176,[[0,[4,21]],[0,[4,118]],[0,[4,[175,[[0,[4,21]],[51,[[0,[4,21]]]],[0,[4,118]]]]]]]]],[[176,[[0,[4,21]],[0,[4,118]],[0,[4,[175,[[0,[4,21]],[51,[[0,[4,21]]]],[0,[4,118]]]]]]]]]],[[[178,[[0,[4,21]],[0,[4,118]],[0,[4,[175,[[0,[4,21]],[52,[[0,[4,21]]]],[0,[4,118]]]]]],[0,[4,[177,[[0,[4,21]],[0,[4,118]]]]]]]]],[[178,[[0,[4,21]],[0,[4,118]],[0,[4,[175,[[0,[4,21]],[52,[[0,[4,21]]]],[0,[4,118]]]]]],[0,[4,[177,[[0,[4,21]],[0,[4,118]]]]]]]]]],[[]],[[]],[[]],[[]],[[],[[14,[171]]]],[[]],[[[178,[21,118,[0,[[175,[21,[52,[21]],118]],4,12]],[0,[[177,[21,118]],4,12]]]]],[[0,[[177,[21,118]],4,12]]]],0,[[],[[8,[179]]]],[[62,131]],[[62,131],[[176,[21,118,[0,[[175,[21,[51,[21]],118]],4,12]]]]]],[[62,131],[[178,[21,118,[0,[[175,[21,[52,[21]],118]],4,12]],[0,[[177,[21,118]],4]]]]]],0,[[],[[173,[21,[86,[21]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[[176,[[0,[12,21]],[0,[12,118]],[0,[12,[175,[[0,[12,21]],[51,[[0,[12,21]]]],[0,[12,118]]]]]]]],10],11],[[[178,[[0,[12,21]],[0,[12,118]],[0,[12,[175,[[0,[12,21]],[52,[[0,[12,21]]]],[0,[12,118]]]]]],[0,[12,[177,[[0,[12,21]],[0,[12,118]]]]]]]],10],11],[[]],[[]],[[]],[[]],[[]],[41],[[],[[147,[[14,[146]]]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[54,41]],[[6,6,6],[[14,[171]]]],[[],[[180,[21,[86,[21]]]]]],[[],[[174,[21,[86,[21]]]]]],[[]],0,[[],[[14,[171]]]],[[]],[[[176,[21,118,[0,[[175,[21,[51,[21]],118]],4,12]]]]]],[[[178,[21,118,[0,[[175,[21,[52,[21]],118]],4,12]],[0,[[177,[21,118]],4]]]]]],0,0,0,0,[[],[[147,[[14,[146]]]]]],[[[176,[21,118,[0,[[175,[21,[51,[21]],118]],4,12]]]]],[[147,[[14,[146]]]]]],[[[178,[21,118,[0,[[175,[21,[52,[21]],118]],4,12]],[0,[[177,[21,118]],4]]]]],[[147,[[14,[146]]]]]],[[45,54,41]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],41],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[],[[147,[[14,[146]]]]]],[[[176,[21,118,[0,[[175,[21,[51,[21]],118]],4,12]]]]],[[147,[[14,[146]]]]]],[[[178,[21,118,[0,[[175,[21,[52,[21]],118]],4,12]],[0,[[177,[21,118]],4]]]]],[[147,[[14,[146]]]]]],0,0,0,0,0,0,0,0,0,[1],[1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[182,[181]]]],[113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[113,113],[[]],[[]],[[39,39],53],[[113,113],53],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[39]]]],[56,[[8,[39,57]]]],[7,[[8,[113]]]],[56,[[8,[39,57]]]],[56,[[8,[39,57]]]],[6],[6],[6],[6],0,[[],[[184,[183]]]],[[],[[184,[183]]]],[[39,39],30],[[113,113],30],[[],30],[[],30],[[39,10],11],[[39,10],11],[[185,10],11],[[113,10],11],[[186,10],11],0,0,[[]],[[]],[[]],[[]],[39,45],[[]],[55,[[8,[39]]]],[41],[41],[[39,33]],[[113,33]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[[39,39],[[45,[53]]]],[[113,113],[[45,[53]]]],[[]],[[39,17],8],[[39,67],[[8,[57]]]],[[113,17],8],[[39,67],[[8,[57]]]],[[39,67],[[8,[57]]]],[39,6],[[],113],[[],38],[[],39],[[]],[[]],[[],38],[[],[[8,[[182,[181]],187]]]],[[],8],[188,[[8,[39]]]],[188,[[8,[39]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[39,6],[113,30],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[189,189],[[]],[[189,189],53],[6],[6],[7,[[8,[189]]]],[6],[[189,189],30],[[],30],[[189,10],11],[[]],[[],[[45,[189]]]],[55,[[8,[189,38]]]],[[],189],[[],189],[41,189],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[189,189],[[45,[53]]]],0,[[189,17],8],[189,[[62,[126]]]],[[]],[[],38],[189,188],[[],8],[[],8],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[190,190],[[]],[[190,190],53],[6],[6],[7,[[8,[190]]]],[6],[[190,190],30],[[],30],[[190,10],11],[[190,10],11],[[]],[39,[[45,[190]]]],[[],190],[55,[[8,[190,38]]]],[41],[41],[[190,33]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[190,190],[[45,[53]]]],0,[[190,17],8],[[],113],[190,39],[[]],[[],38],[190,188],[[],8],[[],8],[[],19],[[190,113],30],[[]],0,0,0,0,0,0,0,[[],8],[[45,54,41]],0,[[]],[[]],[41],[45],[[]],[[],41],[[],30],0,[1],[191,[[8,[191]]]],[[],2],[[],2],[[],20],[[]],[[]],[191,191],[[]],[191,[[20,[191]]]],[[[45,[191]],54,41],109],[[],191],[6],[6],[7,[[8,[191]]]],[6],[[191,191],30],[[],30],[[],8],[[191,10],11],[[]],[[191,33]],[[],6],[[]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[[[45,[191]]]],0,[191],[54,191],[[191,17],8],[[],38],[[]],[[],8],[[],8],[[],8],[[],19],[191,30],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[[62,[192]]],[[147,[[14,[146]]]]]],[60,[[147,[[14,[146]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],42],[179,[[45,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[193,179],[179,[[45,[42]]]],[[],[[147,[[14,[146]]]]]],[193,193],[179,179],[[[60,[[0,[4,21]],[0,[4,23]]]]],[[60,[[0,[4,21]],[0,[4,23]]]]]],[[]],[[]],[[]],[[],[[147,[[14,[146]]]]]],[[],194],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[179,55],[6],[6],[6],[6],[6],[[[195,[[0,[29,21]],[0,[29,23]]]],[195,[[0,[29,21]],[0,[29,23]]]]],30],[[[192,[[0,[21,29]],[0,[23,29]]]],[192,[[0,[21,29]],[0,[23,29]]]]],30],[[[60,[[0,[29,21]],[0,[29,23]]]],[60,[[0,[29,21]],[0,[29,23]]]]],30],[193,[[8,[179]]]],0,[[193,10],11],[[179,10],11],[[179,10],11],[[[195,[[0,[12,21]],[0,[12,23]]]],10],11],[[[192,[[0,[21,12]],[0,[23,12]]]],10],11],[[[60,[[0,[12,21]],[0,[12,23]]]],10],11],[[]],[[]],[[]],[[[60,[21,23]]],[[192,[21,23]]]],[23,[[192,[21,23]]]],[196],[[]],[[]],[196],[23,[[60,[21,23]]]],[197],[197],[197],[197],[198],[198],[199],[199],[[[24,[21,23]],41,[20,[23]],62,39],[[60,[21,23]]]],[197],[197],[[],[[147,[[14,[146]]]]]],[[],[[147,[[14,[146]]]]]],[[[0,[34,35,36]]],[[37,[[0,[34,35,36]]]]]],0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[193,179],0,0,0,[66],0,[179,[[45,[42]]]],0,0,0,[[]],[[]],[[]],[[],38],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[[],116],[[[115,[[0,[4,27]],[0,[26,18,4]]]]],[[116,[[115,[[0,[4,27]],[0,[26,18,4]]]],[28,[[0,[26,18,4]],[0,[4,27]]]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[122,[[0,[4,21]],[0,[4,23]]]]],[[122,[[0,[4,21]],[0,[4,23]]]]]],[[[200,[[0,[4,21]],[0,[4,23]]]]],[[200,[[0,[4,21]],[0,[4,23]]]]]],[[[201,[[0,[4,21]],[0,[4,23]]]]],[[201,[[0,[4,21]],[0,[4,23]]]]]],[[[202,[[0,[4,21]]]]],[[202,[[0,[4,21]]]]]],[[[31,[[0,[4,21]]]]],[[31,[[0,[4,21]]]]]],[[[119,[[0,[4,21]]]]],[[119,[[0,[4,21]]]]]],[[[124,[[0,[4,21]],[0,[4,23]]]]],[[124,[[0,[4,21]],[0,[4,23]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[21]]],[[20,[[31,[21]]]]]],[[]],[[[122,[21,23]]]],[[[119,[21]]]],[[[124,[21,23]]]],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[[122,[21,23]]]]]],[7,[[8,[[200,[21,23]]]]]],[7,[[8,[[201,[21,23]]]]]],[7,[[8,[[202,[21]]]]]],[7,[[8,[[31,[21]]]]]],[7,[[8,[[119,[21]]]]]],[7,[[8,[[124,[21,23]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],[[[122,[[0,[29,21]],[0,[29,23]]]],[122,[[0,[29,21]],[0,[29,23]]]]],30],[[[200,[[0,[29,21]],[0,[29,23]]]],[200,[[0,[29,21]],[0,[29,23]]]]],30],[[[201,[[0,[29,21]],[0,[29,23]]]],[201,[[0,[29,21]],[0,[29,23]]]]],30],[[[202,[[0,[29,21]]]],[202,[[0,[29,21]]]]],30],[[[31,[[0,[29,21]]]],[31,[[0,[29,21]]]]],30],[[[119,[[0,[29,21]]]],[119,[[0,[29,21]]]]],30],[[[124,[[0,[29,21]],[0,[29,23]]]],[124,[[0,[29,21]],[0,[29,23]]]]],30],0,[[[122,[[0,[12,21]],[0,[12,23]]]],10],11],[[[200,[[0,[12,21]],[0,[12,23]]]],10],11],[[[201,[[0,[12,21]],[0,[12,23]]]],10],11],[[[202,[[0,[12,21]]]],10],11],[[[31,[[0,[12,21]]]],10],11],[[[119,[[0,[12,21]]]],10],11],[[[124,[[0,[12,21]],[0,[12,23]]]],10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[[0,[32,21]]]],33]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[[[14,[13]]],[[14,[2,13]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[15,[[15,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],[16,[[16,[2]]]],0,0,0,0,0,0,0,0,0,[[[122,[[0,[18,21]],[0,[18,23]]]],17],8],[[[200,[[0,[18,21]],[0,[18,23]]]],17],8],[[[201,[[0,[18,21]],[0,[18,23]]]],17],8],[[[202,[[0,[18,21]]]],17],8],[[[31,[21]],17],8],[[[119,[[0,[18,21]]]],17],8],[[[124,[[0,[18,21]],[0,[18,23]]]],17],8],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0],"c":[],"p":[[3,"Private"],[8,"Any"],[4,"ExecutionType"],[8,"Clone"],[3,"HotShotConfig"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[8,"Deserialize"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Serializer"],[8,"Serialize"],[3,"TypeId"],[3,"Commitment"],[8,"NodeType"],[3,"DACertificate"],[8,"LeafType"],[3,"QuorumCertificate"],[3,"ViewSyncCertificate"],[8,"Committable"],[8,"VoteToken"],[4,"YesNoSignature"],[8,"PartialEq"],[15,"bool"],[3,"ViewSyncData"],[8,"Hash"],[8,"Hasher"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"String"],[3,"EncodedPublicKey"],[3,"ViewNumber"],[15,"u64"],[8,"Error"],[3,"InconsistentDeltasError"],[3,"Backtrace"],[4,"Option"],[8,"Into"],[3,"InconsistentDeltasSnafu"],[3,"ValidatingProposal"],[3,"DAProposal"],[3,"QuorumProposal"],[3,"ValidatingLeaf"],[3,"SequencingLeaf"],[4,"Ordering"],[8,"RngCore"],[15,"str"],[8,"Read"],[4,"SerializationError"],[6,"LeafBlock"],[6,"LeafDeltasError"],[3,"StoredView"],[6,"LeafTransaction"],[3,"Vec"],[15,"i128"],[6,"LeafTime"],[6,"LeafState"],[3,"Demand"],[8,"Write"],[4,"HotShotError"],[3,"BadBlockSnafu"],[3,"InconsistentBlockSnafu"],[3,"LeafNotFoundSnafu"],[3,"InvalidStateSnafu"],[4,"RoundTimedoutState"],[3,"ViewTimeoutSnafu"],[3,"NonZeroU64"],[3,"InsufficientValidSignaturesSnafu"],[3,"MiscSnafu"],[3,"ContinueSnafu"],[3,"FailedToMessageLeaderSnafu"],[3,"FailedToBroadcastSnafu"],[3,"NetworkFaultSnafu"],[3,"StorageSnafu"],[3,"TimeoutSnafu"],[3,"Event"],[4,"EventType"],[8,"NodeImplementation"],[3,"Message"],[8,"ConsensusType"],[4,"MessageKind"],[4,"InternalTrigger"],[4,"ProcessedGeneralConsensusMessage"],[4,"ProcessedCommitteeConsensusMessage"],[4,"GeneralConsensusMessage"],[4,"ViewSyncMessageType"],[4,"CommitteeConsensusMessage"],[3,"ValidatingMessage"],[3,"SequencingMessage"],[4,"DataMessage"],[8,"ProposalType"],[3,"Proposal"],[6,"ProcessedSequencingMessage"],[4,"MessagePurpose"],[8,"Block"],[3,"BlockCommitment"],[8,"Ord"],[3,"HashSet"],[8,"PartialOrd"],[3,"DummyBlock"],[4,"DummyTransaction"],[3,"DummyError"],[3,"SequencingConsensus"],[3,"ValidatingConsensus"],[3,"EncodedSignature"],[4,"VoteData"],[3,"VoteAccumulator"],[4,"Either"],[8,"Membership"],[8,"NetworkMsg"],[4,"ViewSyncVote"],[8,"CommunicationChannel"],[3,"ViewSyncExchange"],[3,"DAVote"],[3,"CommitteeExchange"],[4,"QuorumVote"],[3,"QuorumExchange"],[15,"u8"],[4,"ElectionError"],[3,"StubSnafu"],[3,"MathSnafu"],[4,"ViewSyncVoteData"],[3,"KeyPair"],[3,"BTreeSet"],[4,"Checked"],[3,"NoMetrics"],[15,"f64"],[8,"Metrics"],[8,"Counter"],[8,"Gauge"],[8,"Histogram"],[8,"Label"],[15,"i64"],[4,"MemoryNetworkError"],[4,"CentralizedServerNetworkError"],[4,"WebServerNetworkError"],[4,"NetworkError"],[8,"Future"],[3,"Pin"],[3,"StubSnafu"],[3,"NoMessagesInQueueSnafu"],[3,"IncorrectConsensusDataSnafu"],[3,"ClientSnafu"],[3,"EndpointSnafu"],[3,"ClientDisconnectedSnafu"],[3,"UnimplementedFeatureSnafu"],[3,"CouldNotDeliverSnafu"],[3,"NoSuchNodeSnafu"],[3,"ChannelSendSnafu"],[3,"ShutDownSnafu"],[3,"UnableToCancelSnafu"],[4,"TransmitType"],[3,"Libp2pSnafu"],[3,"MemoryNetworkSnafu"],[3,"CentralizedServerSnafu"],[3,"WebServerSnafu"],[3,"FailedToSerializeSnafu"],[3,"FailedToDeserializeSnafu"],[3,"TimeoutSnafu"],[8,"SignatureKey"],[4,"NetworkChange"],[4,"NetworkNodeHandleError"],[8,"Fn"],[3,"Duration"],[3,"ViewQueue"],[3,"ChannelMaps"],[8,"QuorumExchangeType"],[3,"ValidatingExchanges"],[8,"CommitteeExchangeType"],[3,"SequencingExchanges"],[4,"StorageError"],[3,"SendToTasks"],[8,"BitOrder"],[3,"BitSlice"],[15,"char"],[8,"FromIterator"],[3,"DebugWith"],[3,"DebugWith"],[4,"BitSpanError"],[3,"TaggedBase64"],[3,"Ed25519Priv"],[3,"Ed25519Pub"],[3,"DummyState"],[4,"ViewEntry"],[3,"NoGenesisViewSnafu"],[6,"Result"],[3,"StorageState"],[15,"never"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[3,"YesOrNoVote"],[3,"TimeoutVote"],[3,"ViewSyncVoteInternal"],[3,"VoteMetaData"],[8,"DeltasType"],[8,"TestableLeaf"],[13,"Misc"],[13,"InvalidState"],[13,"InsufficientValidSignatures"],[13,"StorageError"],[13,"TimeoutError"],[13,"FailedToMessageLeader"],[13,"FailedToBroadcast"],[13,"NetworkFault"],[13,"ViewTimeoutError"],[13,"Error"],[13,"Decide"],[13,"ReplicaViewTimeout"],[13,"NextLeaderViewTimeout"],[13,"ViewFinished"],[8,"SequencingMessageType"],[8,"ConsensusMessageType"],[8,"ConsensusExchange"],[8,"ViewSyncExchangeType"],[8,"SignedCertificate"],[8,"TestableElection"],[8,"ConnectedNetwork"],[8,"TestableChannelImplementation"],[8,"TestableNetworkingImplementation"],[8,"ViewMessage"],[8,"NetworkReliability"],[13,"Libp2p"],[13,"MemoryNetwork"],[13,"CentralizedServer"],[13,"WebServer"],[13,"FailedToSerialize"],[13,"FailedToDeserialize"],[13,"Timeout"],[8,"TestableNodeImplementation"],[8,"SequencingExchangesType"],[8,"ExchangesType"],[8,"TestableSignatureKey"],[8,"State"],[8,"TestableState"],[8,"TestableBlock"],[8,"ConsensusTime"],[8,"Storage"],[8,"TestableStorage"],[8,"Accumulator"],[8,"VoteType"]]},\
"hotshot_utils":{"doc":"Contains general utility structures and methods","t":"AF","n":["bincode","bincode_opts"],"q":[[0,"hotshot_utils"],[1,"hotshot_utils::bincode"]],"d":["Provides bincode options","For the wire format, we use bincode with the following …"],"i":[0,0],"f":[0,[[],[[9,[[7,[[5,[[3,[1,2]],4]],6]],8]]]]],"c":[],"p":[[3,"DefaultOptions"],[3,"Infinite"],[3,"WithOtherLimit"],[3,"LittleEndian"],[3,"WithOtherEndian"],[3,"VarintEncoding"],[3,"WithOtherIntEncoding"],[3,"RejectTrailing"],[3,"WithOtherTrailing"]]},\
"hotshot_web_server":{"doc":"","t":"HHGRRHHDGIDMMLLLLLLLLLLALFLLLLLLLLLLKLKLKLLLLLLLLLLLLLMMMKLKLKLKLKLKLMFMMMLLLLLLLLMMLLLRFFFFFFF","n":["CALLSITE","CALLSITE","Error","MAX_TXNS","MAX_VIEWS","META","META","Options","State","WebServerDataSource","WebServerState","_prng","api_path","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","config","default","define_api","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches_mut","get_proposal","get_proposal","get_transactions","get_transactions","get_votes","get_votes","group_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","num_txns","oldest_proposal","oldest_vote","post_proposal","post_proposal","post_secret_proposal","post_secret_proposal","post_staketable","post_staketable","post_transaction","post_transaction","post_vote","post_vote","proposal","proposal","proposals","run_web_server","shutdown","stake_table","transactions","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_index","votes","vzip","vzip","with_shutdown_signal","DEFAULT_WEB_SERVER_PORT","get_proposal_route","get_transactions_route","get_vote_route","post_proposal_route","post_staketable_route","post_transactions_route","post_vote_route"],"q":[[0,"hotshot_web_server"],[87,"hotshot_web_server::config"]],"d":["","","","How many transactions to keep in memory","How many views to keep in memory","","","","","Trait defining methods needed for the <code>WebServerState</code>","State that tracks proposals and votes the server receives …","prng for generating endpoint","","","","","","","","","","","","","","Sets up all API routes","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Return the proposal the server has received for a …","","Return the transaction at the specified index (which will …","","Return all votes the server has received for a particular …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","highest transaction index","view for oldest proposals in memory","view number of oldest votes in memory","","Stores a received proposal in the <code>WebServerState</code>","","","","","","Stores a received group of transactions in the …","","Stores a received vote in the <code>WebServerState</code>","","","view number -&gt; (secret, proposal)","","shutdown signal","stake table with leader keys","index -&gt; transaction","","","","","","","","","view number -&gt; highest vote index for that view number","view number -&gt; Vec(index, vote)","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,20,3,20,3,20,3,3,3,20,3,20,3,0,3,0,20,3,20,3,20,3,20,3,3,3,30,20,30,20,30,20,3,20,3,20,3,20,3,20,3,20,3,20,20,20,20,30,20,30,20,30,20,30,20,30,20,30,20,20,0,20,20,20,20,3,20,3,20,3,3,3,20,20,20,3,20,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[2,2],[2,2],[[]],[[]],[[]],[[]],0,[[],3],[3,[[11,[[9,[[0,[4,5,6,7]],8]],10]]]],[12],[12],[12],[12],[12],[12],[[]],[[]],[13,[[11,[3,14]]]],[13,[[11,[3,14]]]],[15,[[11,[[18,[[17,[[17,[16]]]]]],8]]]],[[[20,[19]],15],[[11,[[18,[[17,[[17,[16]]]]]],8]]]],[15,[[11,[[18,[[17,[[17,[16]]]]]],8]]]],[[[20,[19]],15],[[11,[[18,[[17,[[17,[16]]]]]],8]]]],[[15,15],[[11,[[18,[[17,[[17,[16]]]]]],8]]]],[[[20,[19]],15,15],[[11,[[18,[[17,[[17,[16]]]]]],8]]]],[[],[[18,[21]]]],[[],12],[[],12],[[]],[[]],[[[23,[22]]],[[23,[1,22]]]],[[[23,[22]]],[[23,[1,22]]]],[24,[[24,[1]]]],[24,[[24,[1]]]],[25,[[25,[1]]]],[25,[[25,[1]]]],[[],[[20,[19]]]],0,0,0,[[15,[17,[16]]],[[11,[8]]]],[[[20,[19]],15,[17,[16]]],[[11,[8]]]],[[15,[17,[16]]],[[11,[8]]]],[[[20,[19]],15,[17,[16]]],[[11,[8]]]],[[[17,[16]]],[[11,[8]]]],[[[20,[19]],[17,[16]]],[[11,[8]]]],[[[17,[16]]],[[11,[8]]]],[[[20,[19]],[17,[16]]],[[11,[8]]]],[[15,[17,[16]]],[[11,[8]]]],[[[20,[19]],15,[17,[16]]],[[11,[8]]]],[15,18],[[[20,[19]],15],18],0,[[[18,[26]]],27],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],28],[[],28],[[3,13],[[11,[14]]]],[[3,13],[[11,[14]]]],0,0,[[]],[[]],[[[20,[19]],[18,[26]]],[[20,[19]]]],0,[15,29],[15,29],[[15,15],29],[15,29],[[],29],[[],29],[15,29]],"c":[],"p":[[8,"Any"],[3,"Command"],[3,"Options"],[8,"Send"],[8,"Sync"],[8,"ReadState"],[8,"WriteState"],[3,"ServerError"],[3,"Api"],[4,"ApiError"],[4,"Result"],[15,"usize"],[3,"ArgMatches"],[6,"Error"],[15,"u64"],[15,"u8"],[3,"Vec"],[4,"Option"],[8,"SignatureKey"],[3,"WebServerState"],[3,"Id"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"OneShotReceiver"],[6,"Result"],[3,"TypeId"],[3,"String"],[8,"WebServerDataSource"]]},\
"libp2p_networking":{"doc":"Library for p2p communication","t":"AAADLLLLMLLLLLLMLLMLLLLNNNHHHNENNNNNNNNNNNNNNNNNNNNNNHHHDDCNEEDDDEDEENNNNNNNNNNNNNNNALLLLLLLLMMLLMALLFMLLALLLLLLLLLLLLLFFFMMMMMMLLLLMMMMMMMMAAMMMMMMMMMLFFMMMMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMAAAAADHHHHHHHHHHHHHHHHHHHHHHHDEENNNDDRHHHHHHHHHHHHHHHHHHHHHHHRNNDNELLMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMLLMMMLLMLLMMLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLHHHHHHHHDEDNNHHHHHHHHLLLMLLLLLLMMLLLLLLLLLMLLLLLLMMLLMMLLLLLLLLLLLLDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLMLMMLLLLLHHHHHHHHHDENHHHHHHHHHMLLLLLLLLLLLLLMLLLLMLLLLLMLLLMLLLLLLLLLLRDRLLLLLMLLLMLLLLMLLLLLLLMLLLLLLNDENDNDNNDENDNDENDNDNDNDNDNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMDDDDDDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHRRHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHCDCCCCCCNNRELLLLLAMLLLLALLMLLCLLLMLLMLLLLLLLLRDDDENNRLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMMLMMLMMLLMMLMMLLLLLLLLLLLLLLLLLLLLHHHHHHHHHHNDNDNDNDNDHHHHHHHHHHNDEDDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLMALLLLMLLLLLLMMMLMLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMCCCCCCDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["message","network","reexport","Message","borrow","borrow_mut","clone","clone_into","content","deserialize","eq","equivalent","fmt","from","into","sender","serialize","to_owned","topic","try_from","try_into","type_id","vzip","AddKnownPeers","BeginBootstrap","Bootstrap","CALLSITE","CALLSITE","CALLSITE","CantKillTwice","ClientRequest","Conductor","ConnectTimeout","DHTError","DHTEvent","DMEvent","DeserializationError","DirectRequest","DirectRequest","DirectResponse","DirectResponse","GetConnectedPeerNum","GetConnectedPeers","GetDHT","GetRoutingTable","GossipEvent","GossipMsg","GossipMsg","IdentifyEvent","IgnorePeers","IsBootstrapped","Killed","LookupPeer","META","META","META","MeshParams","NetworkDef","NetworkError","NetworkError","NetworkEvent","NetworkEventInternal","NetworkNode","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeType","NoSuchTopic","NodeConfigError","Prune","PutDHT","ReceiverEnded","RecvError","Regular","SendError","SerializationError","Shutdown","Subscribe","TimeoutError","UninitializedField","Unsubscribe","ValidationError","behaviours","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","bound_addr","clone","clone_into","config","def","default","deserialize","deserialize_msg","dht","eq","equivalent","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","gen_multiaddr","gen_transport","get_random_handle","gossipsub","id","identify","identity","identity","identity","into","into","into","into","listen_addr","mesh_n","mesh_n_high","mesh_n_low","mesh_outbound_min","mesh_params","mesh_params","network_config","network_node_handle_error","node","node_type","node_type","peer_id","peer_id","receiver","replication_factor","replication_factor","request_response","send_network","serialize","serialize_msg","spin_up_swarm","state","swarm","to_connect_addrs","to_connect_addrs","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","webui_listeners","contents","key","key","notify","notify","pid","retry_count","retry_count","value","source","source","source","source","source","source","source","source","dht","direct_message","direct_message_codec","exponential_backoff","gossip","Bootstrap","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DHTBehaviour","DHTEvent","DHTProgress","Finished","InProgress","IsBootstrapped","KadGetQuery","KadPutQuery","MAX_DHT_QUERY_SIZE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NUM_REPLICATED_TO_TRUST","NotStarted","NotStarted","RandomWalk","Started","State","add_address","add_bootstrap_nodes","backoff","backoff","backoff","backoff","begin_bootstrap","begin_bootstrap","bootstrap_nodes","bootstrap_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","dht_handle_event","eq","eq","eq","equivalent","equivalent","equivalent","event_queue","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_record","handle_established_inbound_connection","handle_established_outbound_connection","handle_get_query","handle_pending_inbound_connection","handle_pending_outbound_connection","handle_put_query","hash","in_progress_get_closest_peers","in_progress_get_record_queries","in_progress_put_record_queries","into","into","into","into","into","into","into","into","kadem","key","key","lookup_peer","new","notify","notify","num_replicas","on_connection_handler_event","on_swarm_event","peer_id","poll","print_routing_table","progress","progress","put_record","query_closest_peers","queued_get_record_queries","queued_put_record_queries","random_walk","records","replication_factor","retry_count","state","state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DMBehaviour","DMEvent","DMRequest","DirectRequest","DirectResponse","META","META","META","META","META","META","META","META","add_address","add_direct_request","add_direct_response","backoff","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","failed_rr","fmt","from","from","from","handle_dm_event","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","in_progress_rr","into","into","into","new","on_connection_handler_event","on_swarm_event","out_event_queue","peer_id","poll","remove_address","request_response","retry_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DirectMessageCodec","DirectMessageProtocol","DirectMessageRequest","DirectMessageResponse","MAX_MSG_SIZE_DM","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","protocol_name","read_request","read_response","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_request","write_response","ExponentialBackoff","backoff_factor","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","hash","into","is_expired","new","reset","reset_val","start_next","started","timeout","to_owned","try_from","try_into","type_id","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","GossipBehaviour","GossipEvent","GossipMsg","META","META","META","META","META","META","META","META","META","backoff","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drain_publish_gossips","eq","equivalent","fmt","from","from","gossip_handle_event","gossipsub","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","in_progress_gossip","into","into","new","on_connection_handler_event","on_swarm_event","out_event_queue","poll","publish_gossip","subscribe_gossip","subscribed_topics","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsubscribe_gossip","vzip","vzip","NUM_REPLICATED_TO_TRUST","NetworkDef","_DERIVE_core_fmt_Debug_FOR_NetworkDef","add_address","add_direct_request","add_direct_response","borrow","borrow_mut","dht","fmt","from","get_record","gossipsub","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","identify","into","new","on_connection_handler_event","on_swarm_event","poll","publish_gossip","put_record","request_response","subscribe_gossip","try_from","try_into","type_id","unsubscribe_gossip","vzip","CancelledRequest","CancelledRequestSnafu","DHTError","DialError","DialSnafu","Disagreement","DisagreementSnafu","GetRecord","GetRecordError","GetRecordSnafu","GetRecordWrapperError","GossipsubBuild","GossipsubBuildSnafu","GossipsubConfig","GossipsubConfigSnafu","NetworkError","NoKnownPeers","NoKnownPeersSnafu","NotFound","NotFoundSnafu","PublishError","PublishSnafu","PutRecord","PutRecordSnafu","StreamClosed","StreamClosedSnafu","Transport","TransportLaunch","TransportLaunchSnafu","TransportSnafu","as_error_source","as_error_source","as_error_source","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","description","description","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","header","in_current_span","in_current_span","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","message","message","provide","provide","provide","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","source","source","message","message","source","source","source","source","NetworkSnafu","NodeConfigSnafu","RecvSnafu","SendSnafu","SerializationSnafu","TimeoutSnafu","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ESTABLISHED_LIMIT","ESTABLISHED_LIMIT_UNWR","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","MeshParams","NetworkNode","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeReceiver","_0","_1","_DERIVE_core_fmt_Debug_FOR_NetworkNode","__PrivResult","add_known_peers","borrow","borrow","borrow_mut","borrow_mut","config","config","connected_pids","fmt","from","from","handle","handle_client_requests","handle_swarm_events","identity","into","into","network_node_handle_error","new","num_connected","peer_id","peer_id","spawn_listeners","start_listen","swarm","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DEFAULT_REPLICATION_FACTOR","MeshParams","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","UninitializedField","ValidationError","_DERIVE_core_fmt_Debug_FOR_NetworkNodeConfig","as_error_source","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","bound_addr","bound_addr","build","clone","clone","clone","clone_into","clone_into","clone_into","create_empty","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from","from","header","identity","identity","identity","in_current_span","into","into","into","into","mesh_n","mesh_n_high","mesh_n_low","mesh_outbound_min","mesh_params","mesh_params","mesh_params","node_type","node_type","node_type","provide","replication_factor","replication_factor","replication_factor","to_connect_addrs","to_connect_addrs","to_connect_addrs","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CantKillTwice","CantKillTwiceSnafu","ConnectTimeout","ConnectTimeoutSnafu","DHTError","DHTSnafu","DeserializationError","DeserializationSnafu","Killed","KilledSnafu","META","META","META","META","META","META","META","META","META","META","NetworkError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeReceiver","NetworkSnafu","NoSuchTopic","NoSuchTopicSnafu","NodeConfigError","NodeConfigSnafu","ReceiverEnded","ReceiverEndedSnafu","RecvError","RecvSnafu","SendError","SendSnafu","SerializationError","SerializationSnafu","TimeoutError","TimeoutSnafu","add_known_peers","as_error_source","backtrace","begin_bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","connected_pids","description","direct_request","direct_response","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_record","get_record_timeout","gossip","header","id","id","ignore_peers","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_killed","kill_switch","killed","listen_addr","listen_addr","lookup_pid","modify_state","network_config","network_node_handle_error","new","notify_webui","num_connected","peer_id","peer_id","print_routing_table","provide","prune_peer","put_record","put_record_timeout","receiver","receiver","receiver","receiver_spawned","recv","recv_kill","register_webui_listener","send_network","send_request","shutdown","source","spawn_handler","state","state","state_wait_timeout_until","state_wait_timeout_until_with_trigger","state_wait_until","subscribe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_to_connect","webui_listeners","source","source","source","source","source","source","source","source","NetworkSnafu","NodeConfigSnafu","RecvSnafu","SendSnafu","SerializationSnafu","TimeoutSnafu","Multiaddr","PeerId","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","empty","encode_hex","encode_hex_upper","ends_with","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_iter","from_multihash","from_public_key","from_str","from_str","hash","hash","header","header","into","into","into_iter","is_empty","is_public_key","iter","len","multihash","partial_cmp","partial_cmp","pop","protocol_name","protocol_stack","push","random","replace","serialize","serialize","to_base58","to_bytes","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_multiaddr","try_into","try_into","type_id","type_id","vzip","vzip","with","with_capacity"],"q":[[0,"libp2p_networking"],[3,"libp2p_networking::message"],[23,"libp2p_networking::network"],[176,"libp2p_networking::network::ClientRequest"],[185,"libp2p_networking::network::NetworkNodeHandleError"],[193,"libp2p_networking::network::behaviours"],[198,"libp2p_networking::network::behaviours::dht"],[397,"libp2p_networking::network::behaviours::direct_message"],[464,"libp2p_networking::network::behaviours::direct_message_codec"],[528,"libp2p_networking::network::behaviours::exponential_backoff"],[553,"libp2p_networking::network::behaviours::gossip"],[614,"libp2p_networking::network::def"],[646,"libp2p_networking::network::error"],[918,"libp2p_networking::network::error::DHTError"],[921,"libp2p_networking::network::error::GetRecordWrapperError"],[922,"libp2p_networking::network::error::NetworkError"],[928,"libp2p_networking::network::network_node_handle_error"],[934,"libp2p_networking::network::node"],[1047,"libp2p_networking::network::node::config"],[1134,"libp2p_networking::network::node::handle"],[1449,"libp2p_networking::network::node::handle::NetworkNodeHandleError"],[1457,"libp2p_networking::network::node::handle::network_node_handle_error"],[1463,"libp2p_networking::reexport"]],"d":["Example message used by the UI library","Network logic","symbols needed to implement a networking instance over …","example message that may be sent to the swarm. Used in the …","","","","","the content of the message","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","the peerid of the sender","","","the topic associated with the msg","","","","","add vec of known peers or addresses","Start the bootstrap process to kademlia","bootstrap node accepts all connections","","","","The inner <code>NetworkNode</code> has already been killed","Actions to send from the client to the swarm","conductor node is never pruned","Could not connect to the network in time","Error in the kademlia DHT","a DHT event","a direct message event","Failure to deserialize a message","client request to send a direct serialized message","Recv-ed a direct message from a node","client request to send a direct reply to a message","Recv-ed a direct response from a node (that hopefully was …","Request the number of connected peers","Request the set of connected peers","Get(Key, Chan)","Print the routing  table to stderr, debugging only","a gossip  event","broadcast a serialized message","Recv-ed a broadcast","a identify event. Is boxed because this event is much …","Ignore peers. Only here for debugging purposes. Allows us …","Report that kademlia has successfully bootstrapped into …","The network node has been killed","Get address of peer","","","","NOTE: …","Overarching network behaviour performing:","","Error generating network","events generated by the swarm that we wish to relay to the …","internal representation of the network events only used …","Network definition","describe the configuration of the network","Builder for <code>NetworkNodeConfig</code>.","Error type for NetworkNodeConfigBuilder","A handle containing:","Error wrapper type for interacting with swarm handle","this is mostly to estimate how many network connections a …","no known topic matches the hashset of keys","Error building Node config","prune a peer","Put(Key, Value) into DHT relay success back on channel","The receiver was unable to receive a new message","Error receiving message from network","regular node has a limit to the number of connections to …","Error sending request to network","Failure to serialize a message","kill the swarm","subscribe to a topic","Error waiting for connections","Uninitialized field","unsubscribe from a topic","Custom validation error","networking behaviours wrapping libp2p’s behaviours","","","","","","","","","address to bind to","address to bind to","","","the configuration parameters of the netework","","","","Deserialize an arbitrary message","purpose: peer routing purpose: storing pub key &lt;-&gt; peer id …","","","Contains the <code>NetworkError</code> snafu types","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Bind all interfaces on port <code>port</code> NOTE we may want …","Generate authenticated transport, copied from …","Given a slice of handles assumed to be larger than 0, …","purpose: broadcasting messages to many peers NOTE …","human readable id","purpose: identifying the addresses from an outside POV","optional identity","optional identity","pub/private key from with peer_id is derived","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the local address we’re listening on","mesh_n from gossipsub","mesh_n_high from gossipsub","mesh_n_low from gossipsub","mesh_outbound_min from gossipsub","parameters for gossipsub mesh network","parameters for gossipsub mesh network","network configuration","Re-exports of the snafu errors that <code>NetworkNodeHandleError</code> …","","The type of node (bootstrap etc)","The type of node (bootstrap etc)","the peer id of the networkbehaviour","peer id of network node","","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","purpose: directly messaging peer","send an action to the networkbehaviour","","Serialize an arbitrary message","a single node, connects them to each other and waits for …","the state of the replica","the swarm of networkbehaviours","list of addresses to connect to at initialization","list of addresses to connect to at initialization","","","","","","","","","","","","","","","","","","A list of webui listeners that are listening for changes …","msg contents","Key to publish under","Key to search for","Channel to notify caller of result of publishing","Channel to notify caller of value (or failure to find …","peer id","number of retries","number of retries to make","Value to publish under","source of error","source of error","source of error","source of error","source of error","source of error","dummy source","source of error","Wrapper around Kademlia","Wrapper around <code>RequestResponse</code>","Implementation of a codec for sending messages for …","exponential backoff type","Wrapper around gossipsub","State of bootstrapping","","","","","","","","","","","","","","","","","","","","","","","","Behaviour wrapping libp2p’s kademlia included:","DHT event enum","represents progress through DHT","Sucessfully completed","The query has been started","Only event tracked currently is when we successfully …","Metadata holder for get query","Metadata holder for get query","","","","","","","","","","","","","","","","","","","","","","","","","","Not in progress","The query has not been started","State of the periodic random walk","In progress","State used for random walk and bootstrapping","Passthru to kademlia Associate address with kademlia peer","Save in case kademlia forgets about bootstrap nodes","Retry timeout","Retry timeout","Exponential retry backoff","Exponential retry backoff","Begin the bootstrap process","client approval to begin bootstrap","bootstrap nodes","State of bootstrapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of kademlia events","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a value for a key from the DHT. Value …","","","update state based on recv-ed get query","","","Update state based on put query","","in progress queries for nearby peers","List of in-progress get requests","List of in-progress put requests","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kademlia behaviour","the key to look up","the key to put","query a peer (e.g. obtain its address if it exists)","Create a new DHT behaviour","notify client of result","notify client of result","number of replicas required to replicate over","","","the peer id (useful only for debugging right now)","","print out the routing table to stderr","progress through DHT query","progress through DHT query","Publish a key/value to the kv store. Once replicated upon …","Start a query for the closest peers","List of previously failled get requests","List of previously failled put requests","State of last random walk","already received records","replication factor","the number of remaining retries before giving up","State of random walk","State of bootstrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the value to put","","","","","","","","","","","","","","","","","Wrapper metadata around libp2p’s request response usage: …","Lilst of direct message output events","Request to direct message a peert","We received as Direct Request","We received a Direct Response","","","","","","","","","Add address to request response behaviour","Add a direct request for a given peer","Add a direct response for a channel","backoff since last attempted request","","","","","","","the data","Failed queries to be retried","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","In progress queries","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new behaviour based on request response","","","lsit of out events for parent behaviour","the recv-ers peer id","","Remove address from request response behaviour","The wrapped behaviour","the number of remaining retries before giving up","","","","","","","","","","","","","Codec for direct messages","Protocol for direct messages","Wrapper type describing a serialized direct message","wrapper type describing the response to direct message","Maximum size of a direct message","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Track (with exponential backoff) sending of some sort of …","factor to back off by","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Whether or not the timeout is expired","Create new backoff","reset backoff","Value to reset to when reset is called","start next timeout result: whether or not we succeeded if …","when we started the timeout","the current timeout amount","","","","","","","","","","","","","","","wrapper metadata around libp2p’s gossip protocol","Output event","We received a gossip","","","","","","","","","","Timeout trackidng when to retry gossip","","","","","","","Attempt to drain the internal gossip list, publishing each …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","The gossip behaviour","","","","","The in progress gossip queries","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new gossip behavioru based on gossipsub","","","Output events to parent behavioru","","Publish a given gossip","Subscribe to a given topic","Set of topics we are subscribed to","","","","","","","","Unsubscribe from a given topic","","","","Overarching network behaviour performing:","","Add an address","Add a direct request for a given peer","Add a direct response for a channel","","","purpose: peer routing purpose: storing pub key &lt;-&gt; peer id …","","Returns the argument unchanged.","Retrieve a value for a key from the DHT. Value …","purpose: broadcasting messages to many peers NOTE …","","","","","purpose: identifying the addresses from an outside POV","Calls <code>U::from(self)</code>.","Create a new instance of a <code>NetworkDef</code>","","","","Publish a given gossip","Publish a key/value to the kv store. Once replicated upon …","purpose: directly messaging peer","Subscribe to a given topic","","","","Unsubscribe from a given topic","","request was ignored serverside","SNAFU context selector for the <code>DHTError::CancelledRequest</code> …","Error enum for querying store because for some reason, …","Error initiating dial of peer","SNAFU context selector for the <code>NetworkError::DialError</code> …","nodes disagreed on the value","SNAFU context selector for the <code>DHTError::Disagreement</code> …","Get Record Error","wrapper","SNAFU context selector for the <code>DHTError::GetRecord</code> variant","Wrapper Error enum for <code>libp2p::kad::GetRecordError</code>. …","Error building the gossipsub instance","SNAFU context selector for the <code>NetworkError::GossipsubBuild</code>…","Error building the gossipsub configuration","SNAFU context selector for the …","wrapper type for errors generated by the <code>Network</code>","Error when there are no known peers to bootstrap off","SNAFU context selector for the <code>NetworkError::NoKnownPeers</code> …","could not find 2 or more nodes that had the value","SNAFU context selector for the <code>DHTError::NotFound</code> variant","Error publishing a gossipsub message","SNAFU context selector for the <code>NetworkError::PublishError</code> …","Get Record Error","SNAFU context selector for the <code>DHTError::PutRecord</code> variant","Error if one of the channels to or from the swarm is closed","SNAFU context selector for the <code>NetworkError::StreamClosed</code> …","Error during dialing or listening","Error establishing backend connection","SNAFU context selector for the …","SNAFU context selector for the <code>NetworkError::Transport</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","source of error","source of error","source of error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapped num of connections","Number of connections to a single peer before logging an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Network definition","","","","","","","","","","","initialize the DHT with known peers add the peers to …","","","","","","the configuration parameters of the netework","return hashset of PIDs this node is connected to","","Returns the argument unchanged.","Returns the argument unchanged.","","event handler for client events currectly supported …","event handler for events emited from the swarm","pub/private key from with peer_id is derived","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new <code>Network</code> with the given settings.","Returns number of peers this node is connected to","Get a reference to the network node’s peer id.","peer id of network node","Spawn a task to listen for requests on the returned channel","starts the swarm listening on <code>listen_addr</code> and optionally …","the swarm of networkbehaviours","","","","","","","","","replication factor for kademlia","NOTE: …","describe the configuration of the network","Builder for <code>NetworkNodeConfig</code>.","Error type for NetworkNodeConfigBuilder","Uninitialized field","Custom validation error","","","","","","","","","","","address to bind to","address to bind to","address to bind to","Builds a new <code>NetworkNodeConfig</code>.","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","optional identity","optional identity","optional identity","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","mesh_n from gossipsub","mesh_n_high from gossipsub","mesh_n_low from gossipsub","mesh_outbound_min from gossipsub","parameters for gossipsub mesh network","parameters for gossipsub mesh network","parameters for gossipsub mesh network","The type of node (bootstrap etc)","The type of node (bootstrap etc)","The type of node (bootstrap etc)","","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","list of addresses to connect to at initialization","list of addresses to connect to at initialization","list of addresses to connect to at initialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The inner <code>NetworkNode</code> has already been killed","SNAFU context selector for the …","Could not connect to the network in time","SNAFU context selector for the …","Error in the kademlia DHT","SNAFU context selector for the …","Failure to deserialize a message","SNAFU context selector for the …","The network node has been killed","SNAFU context selector for the …","","","","","","","","","","","Error generating network","A handle containing:","Error wrapper type for interacting with swarm handle","internal network node receiver","SNAFU context selector for the …","no known topic matches the hashset of keys","SNAFU context selector for the …","Error building Node config","SNAFU context selector for the …","The receiver was unable to receive a new message","SNAFU context selector for the …","Error receiving message from network","SNAFU context selector for the …","Error sending request to network","SNAFU context selector for the …","Failure to serialize a message","SNAFU context selector for the …","Error waiting for connections","SNAFU context selector for the …","Tell libp2p about known network nodes","","","Notify the network to begin the bootstrap process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a reference to the network config","return hashset of PIDs this node is connected to","","Make a direct request to <code>peer_id</code> containing <code>msg</code>","Reply with <code>msg</code> to a request over <code>chan</code>","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Receive a record from the kademlia DHT if it exists. Must …","Get a record from the kademlia DHT with a timeout","Gossip a message to peers","","Get a reference to the network node handle’s id.","human readable id","Ignore <code>peers</code> when pruning e.g. maintain their connection","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns <code>true</code> if the network state is killed","kill the event handler for events from the swarm","whether or not the handle has been killed","Get a reference to the network node handle’s listen addr.","the local address we’re listening on","Look up a peer’s addresses in kademlia NOTE: this should …","Modify the state. This will automatically call …","network configuration","Re-exports of the snafu errors that <code>NetworkNodeHandleError</code> …","constructs a new node listening on <code>known_addr</code>","Notify the webui that either the <code>state</code> or <code>connection_state</code> …","Returns number of peers this node is connected to","Get a reference to the network node handle’s peer id.","the peer id of the networkbehaviour","Print out the routing table used by kademlia NOTE: only …","","Forcefully disconnet from a peer","Insert a record into the kademlia DHT","Insert a record into the kademlia DHT with a timeout","Receives a reference of the internal <code>NetworkNodeReceiver</code>, …","","the receiver","whether or not the receiver is started","","kill switch","Register a webui listener","send an action to the networkbehaviour","Send a client request to the network","Cleanly shuts down a swarm node This is done by sending a …","","Spawn a handler <code>F</code> that will be notified every time a new …","Get a clone of the internal state","the state of the replica","Call <code>wait_timeout_until</code> on the state’s <code>SubscribableMutex</code>","Call <code>wait_timeout_until_with_trigger</code> on the state’s …","Call <code>wait_until</code> on the state’s <code>SubscribableMutex</code>","Subscribe to a topic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe from a topic","","","","","","","","","","","","","","","","","Wait until at least <code>num_peers</code> have connected, or until …","A list of webui listeners that are listening for changes …","source of error","source of error","source of error","source of error","source of error","source of error","dummy source","source of error","","","","","","","Representation of a Multiaddr.","Identifier of a peer of the network.","","","","","","","","","","","","","","","","Create a new, empty multiaddress.","","","Checks whether the given <code>Multiaddr</code> is a suffix of this …","","","","","","Convert a Multiaddr to a string","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the length of this multiaddress is 0.","Checks whether the public key passed as parameter matches …","Returns the components of this multiaddress.","Return the length in bytes of this multiaddress.","","","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …","","Returns &amp;str identifiers for the protocol names themselves.","Adds an already-parsed address component to the end of …","Generates a random peer ID from a cryptographically secure …","Replace a <code>Protocol</code> at some position in this <code>Multiaddr</code>.","","","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","Return a copy of this <code>Multiaddr</code>’s byte representation.","","","","","","","","Tries to extract a <code>PeerId</code> from the given <code>Multiaddr</code>.","","","","","","","Like <code>Multiaddr::push</code> but consumes <code>self</code>.","Create a new, empty multiaddress with the given capacity."],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,13,9,0,0,0,37,0,9,37,37,15,15,37,13,14,13,14,13,13,13,13,15,13,14,15,13,14,37,13,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,37,37,13,13,37,37,9,37,37,13,13,37,127,13,127,0,9,13,14,15,9,13,14,15,33,126,9,9,118,0,9,9,0,91,9,9,0,9,13,14,15,9,13,14,15,15,15,15,15,9,0,0,0,91,27,91,33,126,118,9,13,14,15,27,128,128,128,128,33,126,27,0,0,33,126,27,118,27,33,126,91,27,9,0,0,27,118,33,126,9,9,13,14,15,9,13,14,15,9,13,14,15,9,13,14,15,27,166,167,168,167,168,166,166,168,167,169,170,171,172,173,174,175,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,0,43,0,38,38,177,42,46,47,38,38,38,38,38,177,42,43,16,46,47,44,38,177,42,43,16,46,47,44,42,43,16,44,42,43,16,44,38,43,16,44,43,16,44,38,42,43,16,46,47,44,38,177,42,43,16,46,47,44,38,38,38,38,38,38,38,44,38,38,38,38,177,42,43,16,46,47,44,38,46,47,38,38,46,47,46,38,38,38,38,38,46,47,38,38,38,38,38,46,38,46,177,42,42,43,16,44,38,177,42,43,16,46,47,44,38,177,42,43,16,46,47,44,38,177,42,43,16,46,47,44,47,38,177,42,43,16,46,47,44,0,0,0,0,0,0,0,0,0,0,0,19,19,0,0,0,0,0,0,0,0,69,69,69,70,70,69,19,70,69,19,70,69,19,70,69,19,69,69,69,69,69,69,70,69,19,69,69,69,69,70,69,69,69,70,70,69,19,70,69,19,70,69,19,70,69,19,0,0,0,0,0,78,75,73,71,78,75,73,71,78,75,73,71,78,75,73,71,75,73,71,73,71,78,75,73,71,78,75,73,71,78,75,73,71,78,75,75,75,78,75,73,71,78,75,73,71,78,75,73,71,78,75,73,71,78,75,73,71,75,75,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,86,86,18,86,18,18,18,86,18,18,18,86,18,86,86,86,86,86,86,86,86,18,86,86,86,86,86,86,86,86,18,86,18,86,18,86,18,86,86,18,0,0,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,96,0,0,25,0,96,0,96,113,0,0,25,0,25,0,0,25,0,96,0,25,0,96,0,25,0,25,25,0,0,25,96,113,25,96,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,99,100,101,102,103,104,25,96,105,106,107,99,100,101,109,102,110,111,103,104,112,96,113,105,106,107,99,100,101,109,102,110,111,103,104,112,96,113,25,96,99,100,101,102,103,104,105,106,107,99,100,101,109,102,25,25,110,111,103,104,112,96,96,113,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,25,96,113,25,96,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,105,106,107,99,100,101,109,102,110,111,103,104,112,99,100,25,96,113,25,96,105,106,107,99,100,101,109,102,110,111,103,104,112,96,113,25,96,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,105,106,107,99,100,101,109,102,25,110,111,103,104,112,96,113,178,179,180,181,182,183,184,185,186,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,188,0,0,118,118,188,118,188,0,118,118,118,118,188,0,118,118,118,118,188,0,118,118,118,118,118,118,118,118,188,118,188,118,188,118,188,0,0,0,0,0,127,127,0,127,33,126,127,128,33,126,127,128,126,33,126,126,33,126,128,33,126,128,126,33,126,128,33,127,127,128,33,126,127,127,127,128,127,126,33,126,127,33,126,127,128,128,128,128,128,126,33,126,126,33,126,127,126,33,126,126,33,126,33,126,128,127,33,126,127,128,33,126,127,128,33,126,127,128,33,126,127,128,0,0,0,0,0,0,0,0,0,0,37,0,37,0,37,0,37,0,37,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,0,37,0,37,0,37,0,37,0,37,0,37,0,37,0,27,37,37,27,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,130,131,132,133,134,37,135,136,137,130,131,138,139,132,140,141,133,142,134,135,136,137,130,131,138,139,132,140,141,133,142,134,27,27,37,27,27,130,131,132,133,134,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,37,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,27,27,37,27,27,27,37,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,135,136,137,130,131,138,139,132,140,141,133,142,134,27,143,143,27,27,27,27,27,0,27,27,27,27,27,27,37,27,27,27,27,27,143,143,143,143,27,27,27,27,37,27,27,27,27,27,27,27,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,27,143,135,136,137,130,131,138,139,132,140,141,133,142,134,37,27,27,169,170,171,172,173,174,175,176,0,0,0,0,0,0,0,0,22,39,22,39,22,39,22,22,39,22,39,22,39,22,39,22,22,22,22,22,39,22,39,22,22,39,39,22,22,22,22,22,39,39,39,39,22,39,39,22,39,22,39,22,39,22,39,22,22,39,22,22,39,22,39,22,22,22,22,39,22,22,39,39,39,22,39,22,39,22,22,22,22,22,39,39,39,39,22,39,22,39,22,39,22,22],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],0,[2,[[3,[1]]]],[[1,1],4],[[],4],[[1,5],6],[[]],[[]],0,[[1,7],3],[[]],0,[[],3],[[],3],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[9,9],[[]],0,0,[[],9],[2,[[3,[9]]]],[[],[[3,[10,[12,[11]]]]]],0,[[9,9],4],[[],4],0,[[9,5],6],[[13,5],6],[[14,5],6],[[15,5],6],[[]],[[]],[[]],[16,15],[17,15],[[]],[18,15],[19,15],[20,[[3,[9]]]],[21,22],[23,[[3,[24,25]]]],[26,[[28,[27]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,7],3],[29,[[3,[[31,[30]],[12,[11]]]]]],[[32,31,33,34,[28,[[27,[[0,[35,36]]]]]]],[[3,[37]]]],0,0,0,0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[38,39,22]],[[38,[41,[39,[40,[22]]]]]],0,0,0,0,[38],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[16,16],[44,44],[[]],[[]],[[]],[[]],[[38,45]],[[43,43],4],[[16,16],4],[[44,44],4],[[],4],[[],4],[[],4],0,[[42,5],6],[[43,5],6],[[16,5],6],[[46,5],6],[[47,5],6],[[44,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,[31,[30]],[48,[[31,[30]]]],49,50,30]],[[38,51,39,22,22],[[3,[[52,[38]],53]]]],[[38,51,39,22,54],[[3,[[52,[38]],53]]]],[[38,55,56,4]],[[38,51,22,22],[[3,[53]]]],[[38,51,[57,[39]],54],[[3,[[31,[22]],53]]]],[[38,58,56]],[[44,59]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[38,39,48]],[[[61,[60]],39,49],38],0,0,0,[[38,39,51,[62,[38]]]],[[38,63]],0,[[38,64,65],[[68,[[67,[16,[66,[56]]]]]]]],[38],0,0,[[38,47]],[[38,39]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[69,39,22]],[[69,70]],[[69,[72,[71]],[31,[30]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[19,5],6],[[]],[[]],[[]],[[69,[74,[73,71]]]],[[69,51,39,22,22],[[3,[[52,[69]],53]]]],[[69,51,39,22,54],[[3,[[52,[69]],53]]]],[[69,51,22,22],[[3,[53]]]],[[69,51,[57,[39]],54],[[3,[[31,[22]],53]]]],0,[[]],[[]],[[]],[[[76,[75]]],69],[[69,39,51,[62,[69]]]],[[69,63]],0,0,[[69,64,65],[[68,[[67,[19,[77,[75]]]]]]]],[[69,39,22]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,78],[75,75],[73,73],[71,71],[[]],[[]],[[]],[[]],[2,[[3,[75]]]],[[73,73],4],[[71,71],4],[[],4],[[],4],[[78,5],6],[[75,5],6],[[73,5],6],[[71,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78],[[75,78,[0,[79,80,81]]],[[83,[[12,[82]]]]]],[[75,78,[0,[79,80,81]]],[[83,[[12,[82]]]]]],[[75,7],3],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[75,78,[0,[84,80,81]],73],[[83,[[12,[82]]]]]],[[75,78,[0,[84,80,81]],71],[[83,[[12,[82]]]]]],0,0,[[]],[[]],[50,50],[[]],[[],50],[[50,50],4],[[],4],[[50,5],6],[[]],[[50,59]],[[]],[50,4],[[85,32],50],[50],0,[[50,4]],0,0,[[]],[[],3],[[],3],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[18,18],[[]],[86,4],[[18,18],4],[[],4],[[18,5],6],[[]],[[]],[[86,87]],0,[[86,51,39,22,22],[[3,[[52,[86]],53]]]],[[86,51,39,22,54],[[3,[[52,[86]],53]]]],[[86,51,22,22],[[3,[53]]]],[[86,51,[57,[39]],54],[[3,[[31,[22]],53]]]],0,[[]],[[]],[88,86],[[86,39,51,[62,[86]]]],[[86,63]],0,[[86,64,65],[[68,[[67,[18,[89,[86]]]]]]]],[[86,90,[31,[30]]]],[[86,20]],0,[[]],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[86,20]],[[]],[[]],0,0,0,[[91,39,22]],[[91,39,[31,[30]],30]],[[91,[72,[71]],[31,[30]]]],[[]],[[]],0,[[91,5],6],[[]],[[91,[31,[30]],[48,[[31,[30]]]],49,30]],0,[[91,51,39,22,22],[[3,[[52,[91]],53]]]],[[91,51,39,22,54],[[3,[[52,[91]],53]]]],[[91,51,22,22],[[3,[53]]]],[[91,51,[57,[39]],54],[[3,[[31,[22]],53]]]],0,[[]],[[86,38,92,69],91],[[91,39,51,[62,[91]]]],[[91,63]],[[91,64,65],[[68,[[93,[[89,[91]]]]]]]],[[91,90,[31,[30]]]],[[91,47]],0,[[91,20]],[[],3],[[],3],[[],8],[[91,20]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],94],[[],94],[[],94],[25,[[57,[95]]]],[96,[[57,[95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[99,[[98,[97]]]]],25],[[[100,[[98,[97]]]]],25],[101,25],[102,25],[103,96],[104,96],[25,[[57,[94]]]],[96,[[57,[94]]]],[105,105],[106,106],[107,107],[[[99,[108]]],[[99,[108]]]],[[[100,[108]]],[[100,[108]]]],[101,101],[109,109],[102,102],[110,110],[111,111],[103,103],[104,104],[112,112],[96,96],[113,113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,20],[96,20],[[[99,[[98,[97]]]]],[[3,[25]]]],[[[100,[[98,[97]]]]],[[3,[25]]]],[101,[[3,[25]]]],[102,[[3,[25]]]],[103,[[3,[96]]]],[104,[[3,[96]]]],[[105,5],6],[[106,5],6],[[107,5],6],[[[99,[35]],5],6],[[[100,[35]],5],6],[[101,5],6],[[109,5],6],[[102,5],6],[[25,5],6],[[25,5],6],[[110,5],6],[[111,5],6],[[103,5],6],[[104,5],6],[[112,5],6],[[96,5],6],[[96,5],6],[[113,5],6],[[113,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,25],[106,25],[107,25],[[[99,[[98,[97]]]]],25],[[[100,[[98,[97]]]]],25],[101,25],[109,25],[102,25],[110,96],[111,96],[103,96],[104,96],[112,96],0,0,[117],[117],[117],[25,[[57,[94]]]],[96,[[57,[94]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],97],[[],97],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[118],[[]],[[]],[[]],[[]],0,0,[118,[[40,[39]]]],[[118,5],6],[[]],[[]],0,[[118,[3,[13,119]]],[[3,[4,25]]]],[[118,[124,[15,[122,[[122,[[122,[120,121]],121]],[123,[121]]]]]],[125,[14]]],[[3,[25]]]],0,[[]],[[]],0,[33,[[3,[118,25]]]],[118,34],[118,39],0,[118,[[3,[25]]]],[[118,22],[[3,[22,25]]]],0,[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[]],[[]],0,0,0,0,0,0,0,0,[[],94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[126,[57,[22]]],126],0,0,[126,[[3,[33,127]]]],[33,33],[126,126],[128,128],[[]],[[]],[[]],[[],126],[[],33],[[],126],[[],128],[[33,5],6],[[127,5],6],[[127,5],6],[[128,5],6],[[]],[[]],[97,127],[[]],[129,127],[[]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[[126,[98,[23]]],126],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[126,[57,[128]]],126],0,0,[[126,9],126],0,0,[117],[[126,[98,[49]]],126],0,0,[[126,40],126],0,0,[[]],[[]],[[]],[[],97],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[27,31],[[3,[37]]]],[[],94],[37,[[57,[95]]]],[[[27,[[0,[36,35]]]]],[[3,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,37],[131,37],[132,37],[133,37],[134,37],[37,[[57,[94]]]],[135,135],[136,136],[137,137],[130,130],[131,131],[138,138],[139,139],[132,132],[140,140],[141,141],[133,133],[142,142],[134,134],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,33],[27,[[3,[[40,[39]],37]]]],[37,20],[[27,39,29],[[3,[37]]]],[[27,[72,[71]],29],[[3,[37]]]],[130,[[3,[37]]]],[131,[[3,[37]]]],[132,[[3,[37]]]],[133,[[3,[37]]]],[134,[[3,[37]]]],[[[27,[35]],5],6],[[143,5],6],[[135,5],6],[[136,5],6],[[137,5],6],[[130,5],6],[[131,5],6],[[138,5],6],[[139,5],6],[[132,5],6],[[140,5],6],[[141,5],6],[[133,5],6],[[142,5],6],[[134,5],6],[[37,5],6],[[37,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,29,30],[[3,[10,37]]]],[[27,29,32],[[3,[10,37]]]],[[27,97,29],[[3,[37]]]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[27,34],0,[[27,[31,[39]]],[[3,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135,37],[136,37],[137,37],[130,37],[131,37],[138,37],[139,37],[132,37],[140,37],[141,37],[133,37],[142,37],[134,37],[27,4],0,0,[[[27,[[0,[36,35]]]]],22],0,[[27,39],[[3,[37]]]],[[27,144]],0,0,[[33,34],[[3,[[27,[[0,[36,35]]]],37]]]],[27],[27,[[3,[34,37]]]],[27,39],0,[27,[[3,[37]]]],[117],[[27,39],[[3,[37]]]],[[27,29,29],[[3,[37]]]],[[27,29,29,32],[[3,[37]]]],[[[27,[[0,[36,35]]]]],143],0,0,0,[143,[[3,[14,37]]]],0,[27,145],0,[[27,13],[[3,[37]]]],[[[27,[[0,[36,35]]]]],[[3,[37]]]],[37,[[57,[94]]]],[[[28,[[27,[81,[0,[36,35]]]]]],[0,[146,115,81]]],82],[[[27,[108]]],108],0,[[27,32,144],[[3,[37]]]],[[27,32,144],[[148,[[147,[82]]]]]],[[27,144],[[3,[37]]]],[[27,97],[[3,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],97],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[27,97],[[3,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[[0,[36,35]],[0,[36,35]]]],34,34,32],[[3,[37]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22],[39,149],[[]],[[]],[[]],[[]],0,[22,22],[39,39],[[]],[[]],[[22,22],150],[[39,39],150],[2,[[3,[22]]]],[2,[[3,[39]]]],[[],22],[[],[[152,[151]]]],[[],[[152,[151]]]],[[22,22],4],[[22,22],4],[[39,39],4],[[],4],[[],4],[[22,5],[[3,[153]]]],[[22,5],[[3,[153]]]],[[39,5],[[3,[153]]]],[[39,5],[[3,[153]]]],[[]],[154,22],[155,22],[156,22],[157,22],[158,39],[158,39],[[]],[[],[[3,[39,159]]]],[160,22],[149,[[3,[39,149]]]],[158,39],[20,[[3,[22,161]]]],[20,[[3,[39]]]],[[22,59]],[[39,59]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[[[0,[114,81,115]]],[[116,[[0,[114,81,115]]]]]],[[]],[[]],[22,162],[22,4],[[39,158],[[57,[4]]]],[22,162],[22,34],0,[[22,22],[[57,[150]]]],[[39,39],[[57,[150]]]],[22,[[57,[154]]]],[[]],[22,163],[[22,154]],[[],39],[[22,34,164],[[57,[22]]]],[[22,7],3],[[39,7],3],[39,97],[39,[[31,[30,165]]]],[[]],[[]],[[],97],[[],97],[22,[[31,[30,165]]]],[97,[[3,[22,161]]]],[[[31,[30,165]]],[[3,[22,161]]]],[20,[[3,[22,161]]]],[[],3],[[],3],[149,[[3,[39]]]],[[[31,[30,165]]],[[3,[39]]]],[22,[[57,[39]]]],[[],3],[[],3],[[],8],[[],8],[[]],[[]],[[22,154],22],[34,22]],"c":[],"p":[[3,"Message"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"],[4,"NetworkNodeType"],[8,"Deserialize"],[4,"ErrorKind"],[3,"Box"],[4,"ClientRequest"],[4,"NetworkEvent"],[4,"NetworkEventInternal"],[4,"DHTEvent"],[4,"Event"],[4,"GossipEvent"],[4,"DMEvent"],[15,"str"],[15,"u16"],[3,"Multiaddr"],[4,"Keypair"],[3,"Boxed"],[4,"NetworkError"],[8,"RngCore"],[3,"NetworkNodeHandle"],[3,"Arc"],[8,"Serialize"],[15,"u8"],[3,"Vec"],[3,"Duration"],[3,"NetworkNodeConfig"],[15,"usize"],[8,"Debug"],[8,"Default"],[4,"NetworkNodeHandleError"],[3,"DHTBehaviour"],[3,"PeerId"],[3,"HashSet"],[3,"HashMap"],[3,"Bootstrap"],[4,"State"],[4,"DHTProgress"],[4,"KademliaEvent"],[3,"KadGetQuery"],[3,"KadPutQuery"],[3,"Sender"],[3,"NonZeroUsize"],[3,"ExponentialBackoff"],[3,"ConnectionId"],[6,"THandler"],[3,"ConnectionDenied"],[4,"Endpoint"],[6,"GetRecordResult"],[3,"QueryId"],[4,"Option"],[6,"PutRecordResult"],[8,"Hasher"],[3,"MemoryStore"],[3,"Kademlia"],[6,"THandlerOutEvent"],[4,"FromSwarm"],[3,"Context"],[8,"PollParameters"],[4,"KademliaHandlerIn"],[4,"ToSwarm"],[4,"Poll"],[3,"DMBehaviour"],[3,"DMRequest"],[3,"DirectMessageResponse"],[3,"ResponseChannel"],[3,"DirectMessageRequest"],[4,"Event"],[3,"DirectMessageCodec"],[3,"Behaviour"],[3,"RequestProtocol"],[3,"DirectMessageProtocol"],[8,"AsyncRead"],[8,"Unpin"],[8,"Send"],[8,"Future"],[3,"Pin"],[8,"AsyncWrite"],[15,"u32"],[3,"GossipBehaviour"],[4,"Event"],[3,"Behaviour"],[6,"THandlerInEvent"],[6,"IdentTopic"],[3,"NetworkDef"],[3,"Behaviour"],[6,"NetworkBehaviourAction"],[8,"Error"],[3,"Backtrace"],[4,"DHTError"],[3,"String"],[8,"Into"],[3,"GossipsubConfigSnafu"],[3,"GossipsubBuildSnafu"],[3,"StreamClosedSnafu"],[3,"NoKnownPeersSnafu"],[3,"DisagreementSnafu"],[3,"NotFoundSnafu"],[3,"DialSnafu"],[3,"TransportSnafu"],[3,"TransportLaunchSnafu"],[8,"Clone"],[3,"PublishSnafu"],[3,"GetRecordSnafu"],[3,"PutRecordSnafu"],[3,"CancelledRequestSnafu"],[4,"GetRecordWrapperError"],[8,"Display"],[8,"Sync"],[3,"IndentedSection"],[3,"Demand"],[3,"NetworkNode"],[3,"RecvError"],[4,"Void"],[3,"Error"],[4,"Either"],[4,"ConnectionHandlerUpgrErr"],[4,"SwarmEvent"],[3,"UnboundedSender"],[3,"NetworkNodeConfigBuilder"],[4,"NetworkNodeConfigBuilderError"],[3,"MeshParams"],[3,"UninitializedFieldError"],[3,"SendSnafu"],[3,"RecvSnafu"],[3,"ConnectTimeoutSnafu"],[3,"KilledSnafu"],[3,"NoSuchTopicSnafu"],[3,"NetworkSnafu"],[3,"SerializationSnafu"],[3,"DeserializationSnafu"],[3,"NodeConfigSnafu"],[3,"TimeoutSnafu"],[3,"DHTSnafu"],[3,"CantKillTwiceSnafu"],[3,"ReceiverEndedSnafu"],[3,"NetworkNodeReceiver"],[8,"FnMut"],[3,"Receiver"],[8,"Fn"],[3,"FuturesOrdered"],[3,"Timeout"],[3,"Multihash"],[4,"Ordering"],[15,"char"],[8,"FromIterator"],[3,"Error"],[4,"Protocol"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"IpAddr"],[4,"PublicKey"],[4,"Error"],[8,"IntoIterator"],[4,"Error"],[3,"Iter"],[3,"ProtoStackIter"],[8,"FnOnce"],[3,"Global"],[13,"DirectRequest"],[13,"PutDHT"],[13,"GetDHT"],[13,"NetworkError"],[13,"SerializationError"],[13,"DeserializationError"],[13,"NodeConfigError"],[13,"TimeoutError"],[13,"DHTError"],[13,"CantKillTwice"],[13,"ReceiverEnded"],[3,"RandomWalk"],[13,"CancelledRequest"],[13,"GetRecord"],[13,"PutRecord"],[13,"GetRecordError"],[13,"GossipsubConfig"],[13,"GossipsubBuild"],[13,"DialError"],[13,"Transport"],[13,"TransportLaunch"],[13,"PublishError"],[4,"__PrivResult"]]},\
"libp2p_orchestrator":{"doc":"","t":"HHAFFAHHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHHDDGIGDDLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLMMLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLFFFMMFFMMMLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CALLSITE","META","infra","main","main","types","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Libp2pRun","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","OrchestratorArgs","OrchestratorClient","Proposal","Run","ValidatingWebCommChannel","ValidatorArgs","WebServerRun","__clone_box","__clone_box","_bootstrap_nodes","_bound_addr","_identity","_node_type","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config_file","connect_to_orchestrator","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config_from_orchestrator","get_network","get_network","get_network","group_id","group_id","host","host","identify_with_orchestrator","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","load_config_from_file","main_entry_point","network","network","parse_dns","parse_ip","port","port","public_ip","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","wait_for_all_nodes_ready","wait_for_fn_from_orchestrator","NodeImpl","ThisLeaf","ThisMembership","ThisNetwork","ThisProposal","ThisRun","ThisVote","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"libp2p_orchestrator"],[6,"libp2p_orchestrator::infra"],[196,"libp2p_orchestrator::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Represents a libp2p-based run","","","","","","","","","","","","","","","","","Arguments passed to the orchestrator","Holds the client connection to the orchestrator","","Defines the behavior of a “run” of the network with a …","Alias for the <code>WebCommChannel</code> for validating consensus.","Arguments passed to the validator","Represents a web server-based run","","","","","for libp2p layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The configuration file to be used for this run","Creates the client that connects to the orchestrator","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","Returns the run configuration from the orchestrator Will …","Returns the network for this run","","","","","The address the orchestrator runs on","The address the orchestrator runs on","Sends an identify message to the server Returns this …","","","","","","Initializes networking, returns self","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","yeesh maybe we should just implement SignatureKey for this…","Reads a network configuration from a given filepath","Main entry point for validators","","","libp2p helper function convert node string into multi addr …","libp2p helper function","The port the orchestrator runs on","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","","","","","","Tells the orchestrator this validator is ready to start …","Generic function that waits for the orchestrator to return …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,18,18,18,18,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,18,19,6,4,5,6,4,5,4,5,4,5,4,5,18,19,4,6,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,18,19,6,4,5,4,5,4,5,50,18,19,6,50,18,19,4,5,4,5,6,18,19,6,4,5,50,18,19,50,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,0,0,0,18,19,0,0,4,5,5,50,0,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,6,6,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,0,0,[5,6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[4,8],9],[[5,8],9],[[]],[[]],[[]],[[]],[[]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[[],13],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[6,20],13],[[]],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[24,[14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[26,[25,14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[],[[28,[27]]]],[[],[[28,[27]]]],0,0,[[6,29],20],[[],7],[[],7],[[],7],[[],7],[[],7],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[33,[[32,[[31,[30]]]]]],[[]],[[]],[[]],[[]],[[]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[37,38],[29,13],[5],0,0,[39,[[12,[40,41]]]],[39,[[12,[40,41]]]],0,0,0,[[33,42],[[32,[[31,[30]]]]]],[4],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[6,37],44],[[6,45]],0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[46,46],[[]],[7],[7],[47,[[12,[46]]]],[7],[[46,8],9],[[]],[[],7],[[]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[48],[[46,49],12],[[]],[[],12],[[],12],[[],43],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"Command"],[3,"OrchestratorArgs"],[3,"ValidatorArgs"],[3,"OrchestratorClient"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"NetworkConfig"],[8,"NodeType"],[8,"NodeImplementation"],[8,"Membership"],[8,"Debug"],[3,"Libp2pRun"],[3,"WebServerRun"],[15,"u16"],[3,"ValidatingLeaf"],[3,"ValidatingProposal"],[4,"QuorumVote"],[3,"Libp2pCommChannel"],[3,"ValidatingConsensus"],[3,"WebCommChannel"],[3,"Id"],[4,"Option"],[3,"String"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Sync"],[3,"Global"],[3,"Arc"],[3,"Rc"],[15,"u64"],[4,"Keypair"],[15,"str"],[3,"Multiaddr"],[4,"Error"],[3,"SystemContextHandle"],[3,"TypeId"],[15,"bool"],[8,"Fn"],[3,"NodeImpl"],[8,"Deserializer"],[3,"ViewNumber"],[8,"Serializer"],[8,"Run"]]},\
"libp2p_validator":{"doc":"","t":"HHAFFAHHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHHDDGIGDDLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLMMLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLFFFMMFFMMMLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CALLSITE","META","infra","main","main","types","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Libp2pRun","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","OrchestratorArgs","OrchestratorClient","Proposal","Run","ValidatingWebCommChannel","ValidatorArgs","WebServerRun","__clone_box","__clone_box","_bootstrap_nodes","_bound_addr","_identity","_node_type","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config_file","connect_to_orchestrator","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config_from_orchestrator","get_network","get_network","get_network","group_id","group_id","host","host","identify_with_orchestrator","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","load_config_from_file","main_entry_point","network","network","parse_dns","parse_ip","port","port","public_ip","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","wait_for_all_nodes_ready","wait_for_fn_from_orchestrator","NodeImpl","ThisLeaf","ThisMembership","ThisNetwork","ThisProposal","ThisRun","ThisVote","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"libp2p_validator"],[6,"libp2p_validator::infra"],[196,"libp2p_validator::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Represents a libp2p-based run","","","","","","","","","","","","","","","","","Arguments passed to the orchestrator","Holds the client connection to the orchestrator","","Defines the behavior of a “run” of the network with a …","Alias for the <code>WebCommChannel</code> for validating consensus.","Arguments passed to the validator","Represents a web server-based run","","","","","for libp2p layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The configuration file to be used for this run","Creates the client that connects to the orchestrator","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","Returns the run configuration from the orchestrator Will …","Returns the network for this run","","","","","The address the orchestrator runs on","The address the orchestrator runs on","Sends an identify message to the server Returns this …","","","","","","Initializes networking, returns self","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","yeesh maybe we should just implement SignatureKey for this…","Reads a network configuration from a given filepath","Main entry point for validators","","","libp2p helper function convert node string into multi addr …","libp2p helper function","The port the orchestrator runs on","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","","","","","","Tells the orchestrator this validator is ready to start …","Generic function that waits for the orchestrator to return …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,18,18,18,18,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,18,19,6,4,5,6,4,5,4,5,4,5,4,5,18,19,4,6,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,18,19,6,4,5,4,5,4,5,50,18,19,6,50,18,19,4,5,4,5,6,18,19,6,4,5,50,18,19,50,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,0,0,0,18,19,0,0,4,5,5,50,0,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,6,6,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,0,0,[5,6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[4,8],9],[[5,8],9],[[]],[[]],[[]],[[]],[[]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[[],13],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[6,20],13],[[]],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[24,[14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[26,[25,14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[],[[28,[27]]]],[[],[[28,[27]]]],0,0,[[6,29],20],[[],7],[[],7],[[],7],[[],7],[[],7],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[33,[[32,[[31,[30]]]]]],[[]],[[]],[[]],[[]],[[]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[37,38],[29,13],[5],0,0,[39,[[12,[40,41]]]],[39,[[12,[40,41]]]],0,0,0,[[33,42],[[32,[[31,[30]]]]]],[4],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[6,37],44],[[6,45]],0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[46,46],[[]],[7],[7],[47,[[12,[46]]]],[7],[[46,8],9],[[]],[[],7],[[]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[48],[[46,49],12],[[]],[[],12],[[],12],[[],43],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"Command"],[3,"OrchestratorArgs"],[3,"ValidatorArgs"],[3,"OrchestratorClient"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"NetworkConfig"],[8,"NodeType"],[8,"NodeImplementation"],[8,"Membership"],[8,"Debug"],[3,"Libp2pRun"],[3,"WebServerRun"],[15,"u16"],[3,"ValidatingLeaf"],[3,"ValidatingProposal"],[4,"QuorumVote"],[3,"Libp2pCommChannel"],[3,"ValidatingConsensus"],[3,"WebCommChannel"],[3,"Id"],[4,"Option"],[3,"String"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Sync"],[3,"Global"],[3,"Arc"],[3,"Rc"],[15,"u64"],[4,"Keypair"],[15,"str"],[3,"Multiaddr"],[4,"Error"],[3,"SystemContextHandle"],[3,"TypeId"],[15,"bool"],[8,"Fn"],[3,"NodeImpl"],[8,"Deserializer"],[3,"ViewNumber"],[8,"Serializer"],[8,"Run"]]},\
"web_server":{"doc":"","t":"FF","n":["main","main"],"q":[[0,"web_server"]],"d":["",""],"i":[0,0],"f":[[[]],[[]]],"c":[],"p":[]},\
"web_server_orchestrator":{"doc":"","t":"HHAFFAHHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHHDDGIGDDLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLMMLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLFFFMMFFMMMLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CALLSITE","META","infra","main","main","types","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Libp2pRun","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","OrchestratorArgs","OrchestratorClient","Proposal","Run","ValidatingWebCommChannel","ValidatorArgs","WebServerRun","__clone_box","__clone_box","_bootstrap_nodes","_bound_addr","_identity","_node_type","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config_file","connect_to_orchestrator","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config_from_orchestrator","get_network","get_network","get_network","group_id","group_id","host","host","identify_with_orchestrator","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","load_config_from_file","main_entry_point","network","network","parse_dns","parse_ip","port","port","public_ip","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","wait_for_all_nodes_ready","wait_for_fn_from_orchestrator","NodeImpl","ThisLeaf","ThisMembership","ThisNetwork","ThisProposal","ThisRun","ThisVote","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"web_server_orchestrator"],[6,"web_server_orchestrator::infra"],[196,"web_server_orchestrator::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Represents a libp2p-based run","","","","","","","","","","","","","","","","","Arguments passed to the orchestrator","Holds the client connection to the orchestrator","","Defines the behavior of a “run” of the network with a …","Alias for the <code>WebCommChannel</code> for validating consensus.","Arguments passed to the validator","Represents a web server-based run","","","","","for libp2p layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The configuration file to be used for this run","Creates the client that connects to the orchestrator","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","Returns the run configuration from the orchestrator Will …","Returns the network for this run","","","","","The address the orchestrator runs on","The address the orchestrator runs on","Sends an identify message to the server Returns this …","","","","","","Initializes networking, returns self","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","yeesh maybe we should just implement SignatureKey for this…","Reads a network configuration from a given filepath","Main entry point for validators","","","libp2p helper function convert node string into multi addr …","libp2p helper function","The port the orchestrator runs on","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","","","","","","Tells the orchestrator this validator is ready to start …","Generic function that waits for the orchestrator to return …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,18,18,18,18,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,18,19,6,4,5,6,4,5,4,5,4,5,4,5,18,19,4,6,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,18,19,6,4,5,4,5,4,5,50,18,19,6,50,18,19,4,5,4,5,6,18,19,6,4,5,50,18,19,50,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,0,0,0,18,19,0,0,4,5,5,50,0,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,6,6,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,0,0,[5,6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[4,8],9],[[5,8],9],[[]],[[]],[[]],[[]],[[]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[[],13],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[6,20],13],[[]],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[24,[14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[26,[25,14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[],[[28,[27]]]],[[],[[28,[27]]]],0,0,[[6,29],20],[[],7],[[],7],[[],7],[[],7],[[],7],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[33,[[32,[[31,[30]]]]]],[[]],[[]],[[]],[[]],[[]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[37,38],[29,13],[5],0,0,[39,[[12,[40,41]]]],[39,[[12,[40,41]]]],0,0,0,[[33,42],[[32,[[31,[30]]]]]],[4],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[6,37],44],[[6,45]],0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[46,46],[[]],[7],[7],[47,[[12,[46]]]],[7],[[46,8],9],[[]],[[],7],[[]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[48],[[46,49],12],[[]],[[],12],[[],12],[[],43],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"Command"],[3,"OrchestratorArgs"],[3,"ValidatorArgs"],[3,"OrchestratorClient"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"NetworkConfig"],[8,"NodeType"],[8,"NodeImplementation"],[8,"Membership"],[8,"Debug"],[3,"Libp2pRun"],[3,"WebServerRun"],[15,"u16"],[3,"ValidatingLeaf"],[3,"ValidatingProposal"],[4,"QuorumVote"],[3,"Libp2pCommChannel"],[3,"ValidatingConsensus"],[3,"WebCommChannel"],[3,"Id"],[4,"Option"],[3,"String"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Sync"],[3,"Global"],[3,"Arc"],[3,"Rc"],[15,"u64"],[4,"Keypair"],[15,"str"],[3,"Multiaddr"],[4,"Error"],[3,"SystemContextHandle"],[3,"TypeId"],[15,"bool"],[8,"Fn"],[3,"NodeImpl"],[8,"Deserializer"],[3,"ViewNumber"],[8,"Serializer"],[8,"Run"]]},\
"web_server_validator":{"doc":"","t":"HHAFFAHHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHHDDGIGDDLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLMMLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLFFFMMFFMMMLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGGGLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CALLSITE","META","infra","main","main","types","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Libp2pRun","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","OrchestratorArgs","OrchestratorClient","Proposal","Run","ValidatingWebCommChannel","ValidatorArgs","WebServerRun","__clone_box","__clone_box","_bootstrap_nodes","_bound_addr","_identity","_node_type","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config_file","connect_to_orchestrator","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config_from_orchestrator","get_network","get_network","get_network","group_id","group_id","host","host","identify_with_orchestrator","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","load_config_from_file","main_entry_point","network","network","parse_dns","parse_ip","port","port","public_ip","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","wait_for_all_nodes_ready","wait_for_fn_from_orchestrator","NodeImpl","ThisLeaf","ThisMembership","ThisNetwork","ThisProposal","ThisRun","ThisVote","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","new_channel_maps","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"web_server_validator"],[6,"web_server_validator::infra"],[196,"web_server_validator::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Represents a libp2p-based run","","","","","","","","","","","","","","","","","Arguments passed to the orchestrator","Holds the client connection to the orchestrator","","Defines the behavior of a “run” of the network with a …","Alias for the <code>WebCommChannel</code> for validating consensus.","Arguments passed to the validator","Represents a web server-based run","","","","","for libp2p layer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The configuration file to be used for this run","Creates the client that connects to the orchestrator","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","Returns the run configuration from the orchestrator Will …","Returns the network for this run","","","","","The address the orchestrator runs on","The address the orchestrator runs on","Sends an identify message to the server Returns this …","","","","","","Initializes networking, returns self","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","yeesh maybe we should just implement SignatureKey for this…","Reads a network configuration from a given filepath","Main entry point for validators","","","libp2p helper function convert node string into multi addr …","libp2p helper function","The port the orchestrator runs on","The port the orchestrator runs on","This node’s public IP address, for libp2p If no IP …","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","","","","","","Tells the orchestrator this validator is ready to start …","Generic function that waits for the orchestrator to return …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,18,18,18,18,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,18,19,6,4,5,6,4,5,4,5,4,5,4,5,18,19,4,6,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,18,19,6,4,5,4,5,4,5,50,18,19,6,50,18,19,4,5,4,5,6,18,19,6,4,5,50,18,19,50,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,0,0,0,18,19,0,0,4,5,5,50,0,4,5,18,19,6,4,5,18,19,6,4,5,18,19,6,4,5,4,5,4,5,18,19,6,4,5,6,6,0,0,0,0,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46],"f":[0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[[]],[[]],[[],3],[[],3],[[],3],[[],3],0,0,0,[5,6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[4,8],9],[[5,8],9],[[]],[[]],[[]],[[]],[[]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[10,[[12,[4,11]]]],[10,[[12,[5,11]]]],[[],13],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],13],[[6,20],13],[[]],[[[18,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[24,[14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[[19,[14,[15,[14]],[0,[[16,[14]],17]]]]],[[26,[25,14,[15,[14]],[22,[14,[21,[14]]]],[23,[14,[21,[14]]]],[0,[[16,[14]],17]]]]]],[[],[[28,[27]]]],[[],[[28,[27]]]],0,0,[[6,29],20],[[],7],[[],7],[[],7],[[],7],[[],7],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[13,[[32,[[31,[30]]]]]],[33,[[32,[[31,[30]]]]]],[[]],[[]],[[]],[[]],[[]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[36,[[36,[2]]]],[37,38],[29,13],[5],0,0,[39,[[12,[40,41]]]],[39,[[12,[40,41]]]],0,0,0,[[33,42],[[32,[[31,[30]]]]]],[4],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[4,10],[[12,[11]]]],[[5,10],[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[6,37],44],[[6,45]],0,0,0,0,0,0,0,[1],[[],2],[[],2],[[]],[[]],[46,46],[[]],[7],[7],[47,[[12,[46]]]],[7],[[46,8],9],[[]],[[],7],[[]],[[[31,[34]]],[[31,[2,34]]]],[35,[[35,[2]]]],[36,[[36,[2]]]],[48],[[46,49],12],[[]],[[],12],[[],12],[[],43],[[]]],"c":[],"p":[[3,"Private"],[8,"Any"],[3,"Command"],[3,"OrchestratorArgs"],[3,"ValidatorArgs"],[3,"OrchestratorClient"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"NetworkConfig"],[8,"NodeType"],[8,"NodeImplementation"],[8,"Membership"],[8,"Debug"],[3,"Libp2pRun"],[3,"WebServerRun"],[15,"u16"],[3,"ValidatingLeaf"],[3,"ValidatingProposal"],[4,"QuorumVote"],[3,"Libp2pCommChannel"],[3,"ValidatingConsensus"],[3,"WebCommChannel"],[3,"Id"],[4,"Option"],[3,"String"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Sync"],[3,"Global"],[3,"Arc"],[3,"Rc"],[15,"u64"],[4,"Keypair"],[15,"str"],[3,"Multiaddr"],[4,"Error"],[3,"SystemContextHandle"],[3,"TypeId"],[15,"bool"],[8,"Fn"],[3,"NodeImpl"],[8,"Deserializer"],[3,"ViewNumber"],[8,"Serializer"],[8,"Run"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
