var searchIndex = JSON.parse('{\
"all_combined":{"doc":"A example program using both the web server and libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"all_combined"],[3,"all_combined::infra"],[175,"all_combined::types"],[230,"dyn_clone::sealed"],[231,"dyn_clone::sealed"],[232,"clap_builder::builder::command"],[233,"core::fmt"],[234,"core::fmt"],[235,"clap_builder"],[236,"core::result"],[237,"hotshot_orchestrator::config"],[238,"hotshot_types::traits::node_implementation"],[239,"hotshot::traits::networking::web_server_network"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::traits::networking::combined_network"],[242,"clap_builder::util::id"],[243,"core::option"],[244,"core::future::future"],[245,"alloc::boxed"],[246,"core::pin"],[247,"core::marker"],[248,"alloc::sync"],[249,"alloc::rc"],[250,"libp2p_identity::keypair"],[251,"hotshot_types::message"],[252,"hotshot::traits::networking::libp2p_network"],[253,"hotshot::types::handle"],[254,"hotshot_testing::block_types"],[255,"alloc::vec"],[256,"core::any"],[257,"core::hash"],[258,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,53,54,55,56,53,54,55,56,53,54,55,56,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",230],[3,"Private",230],[8,"Any",231],[3,"Command",232],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",233],[6,"Result",233],[3,"ArgMatches",234],[6,"Error",235],[4,"Result",236],[3,"NetworkConfig",237],[3,"WebServerDARun",3],[8,"NodeType",238],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",239],[3,"Libp2pCommChannel",240],[3,"CombinedCommChannel",241],[3,"Id",242],[4,"Option",243],[8,"Future",244],[3,"Box",245],[3,"Pin",246],[8,"Sync",247],[3,"Arc",248],[3,"Rc",249],[15,"u8"],[15,"array"],[3,"Keypair",250],[3,"Message",251],[3,"Libp2pNetwork",240],[15,"str"],[3,"ValidatorArgs",252],[3,"SystemContextHandle",253],[3,"TestTransaction",254],[3,"Vec",255],[3,"TypeId",231],[3,"WebServerNetwork",239],[3,"NodeImpl",175],[8,"Deserializer",256],[15,"bool"],[8,"Hash",257],[8,"Sized",247],[8,"BuildHasher",257],[8,"Hasher",257],[8,"Serializer",258],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]],"b":[]},\
"all_libp2p":{"doc":"A example program using libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"all_libp2p"],[3,"all_libp2p::infra"],[175,"all_libp2p::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"all_webserver":{"doc":"A example program using the web server","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"all_webserver"],[3,"all_webserver::infra"],[175,"all_webserver::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"counter":{"doc":"This is dead code, do not use","t":"F","n":["main"],"q":[[0,"counter"]],"d":["dead code"],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]],"b":[]},\
"hotshot":{"doc":"Provides a generic rust implementation of the <code>HotShot</code> BFT …","t":"NNNNRRDEDNNNDNNDNDDNNRLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLMLMMCLLLLLLMLALLLLALLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLMMMMMMMMMMMMNENLLFFFFFFFFLLLLLLFLLLLLLLLLLLLLLLQIQNNQQNQNQQNNQNNQEININQNIQGIQNQNNINKLLLLLKLLKLLKKKKLLLLAKLLLLKKKKKLKKLALLLLLLKAAKLLLLLKALKLLKLKLMMMMMMMADGDLLLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLDDDDDDDDDGDDMMMMMMMMMMMMMMMMMMMNNNNNDDNNEIDDNNNNNNRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLMAAMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLAMMMMMMMDDDLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLGDDDDGRLLLLLMMLLLLLLLLMMLLLLLLLLLLMMLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLMMMLLMLMMMMMLLLLMLLLLLLLLMLLLLLLLLLLLLMLLLLLLLNENDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLMLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDIDIGDGDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLKLLKKLLLLFLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLMLLLLLMLLMLLLLLLLLLLLLLLLLLLLMMLLLLLLMMMMLLLLLLMLLQQIQQIKKKKKKKKNNGIKLKKKADDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLMLLLLLLLLLGGNNNDEDNQQQQNNQIQDNNNLLLLLLLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLAMLLLLLLKKKKLKKKKLALMLLLMLLLLLLLLLLLLMMLMMLKMKLLLLLLLLLLLLKMMLLLMMMMMMMMMMMMMMNNNDENNNNNNMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLMMLLMLLLLLLLL","n":["BlockError","Continue","FailedToBroadcast","FailedToMessageLeader","H_256","H_512","HotShotConsensusApi","HotShotError","HotShotInitializer","InsufficientValidSignatures","InvalidState","LeafNotFound","Memberships","Misc","NetworkFault","Networks","StorageError","SystemContext","SystemContextInner","TimeoutError","ViewTimeoutError","_DERIVE_core_fmt_Debug_FOR_HotShotConsensusApi","__clone_box","__clone_box","__clone_box","__clone_box","_metrics","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone_into","clone_into","config","consensus","consensus","da_membership","da_network","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","documentation","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from_genesis","from_reload","get_consensus","get_decided_leaf","get_decided_state","get_next_view_timeout","get_state","header","id","in_current_span","init","init","init","init","init","init","init","init","inner","inner","inner","instance_state","internal_event_stream","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","max_transactions","memberships","min_transactions","networks","new","output_event_stream","private_key","private_key","propose_max_round_time","propose_min_round_time","public_key","public_key","publish_transaction_async","quorum_membership","quorum_network","rand","run_tasks","send_event","send_external_event","shut_down_networks","source","start_consensus","storage","store_leaf","tasks","to_owned","to_owned","to_string","total_nodes","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get_decided_leaf","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","vid_membership","view_sync_membership","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_networks_ready","context","context","num_valid_signatures","source","source","source","source","source","source","state","threshold","view_number","Dummy","GlobalEvent","Shutdown","__clone_box","__clone_box","add_consensus_task","add_da_task","add_network_event_task","add_network_message_task","add_transaction_task","add_upgrade_task","add_vid_task","add_view_sync_task","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","create_consensus_state","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","to_owned","try_from","try_into","type_id","vzip","BlockHeader","BlockPayload","BlockPayload","CentralizedServer","ChannelSend","CommitteeElectionConfig","CommitteeNetwork","CouldNotDeliver","Encode","Err","Error","Error","FailedToDeserialize","FailedToSerialize","Instance","Libp2p","MemoryNetwork","Metadata","NetworkError","NetworkReliability","NoSuchNode","NodeImplementation","Ok","QuorumNetwork","ShutDown","Storage","Storage","StorageResult","TestableNodeImplementation","Time","Timeout","Transaction","UnableToCancel","UnimplementedFeature","ValidatedState","WebServer","append","append_single_view","as_any","as_any_mut","as_error_source","backtrace","block_genesis","borrow","borrow_mut","builder_commitment","cause","chaos_send_msg","cleanup_storage_up_to_view","commit","committee_election_config_generator","construct_tmp_storage","deref","deref_mut","description","drop","election","encode","fmt","fmt","from","from","from_bytes","from_header","from_transactions","gen_comm_channels","genesis","genesis","get_anchored_view","get_full_state","header","implementations","in_current_span","init","into","into_any","into_any_arc","into_any_rc","leaf_create_random_transaction","networking","node_implementation","on_commit","sample_delay","sample_keep","sample_repeat","scramble","source","state_create_random_transaction","storage","to_string","transaction_commitments","try_from","try_into","txn_count","type_id","validate_and_apply_header","vzip","source","source","source","source","source","source","source","static_committee","GeneralStaticCommittee","StaticCommittee","StaticElectionConfig","__clone_box","__clone_box","__clone_box","__clone_box","_type_phantom","_type_phantom","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committee_nodes_with_stake","committee_nodes_with_stake","create_election","default","default_election_config","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","failure_threshold","fmt","fmt","from","from","get_committee","get_committee_qc_stake_table","get_hash","get_leader","get_stake","has_stake","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","nodes_with_stake","nodes_with_stake","num_nodes","serialize","success_threshold","to_owned","to_owned","total_nodes","try_from","try_from","try_into","try_into","type_id","type_id","upgrade_threshold","vzip","vzip","CombinedCommChannel","CombinedNetworks","Libp2pCommChannel","Libp2pNetwork","MasterMap","MemoryCommChannel","MemoryNetwork","MemoryStorage","NetworkingMetricsValue","PeerInfoVec","WebCommChannel","WebServerNetwork","alloc","connected_peers","id","incoming_broadcast_message_count","incoming_direct_message_count","inner","inner","inner","inner","map","message_cache","message_failed_to_send","networks","outgoing_broadcast_message_count","outgoing_direct_message_count","phantom","primary_down","ptr","server_shutdown_signal","CentralizedServer","ChannelSend","CouldNotDeliver","FailedToDeserialize","FailedToSerialize","FailedToSerializeSnafu","InnerNetworkingMetrics","Libp2p","MemoryNetwork","NetworkError","NetworkReliability","NetworkingMetrics","NetworkingMetricsValue","NoSuchNode","ShutDown","Timeout","UnableToCancel","UnimplementedFeature","WebServer","_DERIVE_core_fmt_Debug_FOR_InnerNetworkingMetrics","_DERIVE_core_fmt_Debug_FOR_NetworkingMetrics","_DERIVE_core_fmt_Debug_FOR_NetworkingMetricsValue","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chaos_send_msg","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","combined_network","connected_peers","counters","create_counter","create_gauge","create_histogram","create_label","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","gauges","histograms","incoming_broadcast_message_count","incoming_direct_message_count","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","labels","libp2p_network","memory_network","message_failed_to_send","new","outgoing_broadcast_message_count","outgoing_direct_message_count","prefix","sample_delay","sample_keep","sample_repeat","scramble","set","set","sub","subgroup","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","values","vzip","vzip","vzip","vzip","web_server_network","source","source","source","source","source","source","source","Cache","CombinedCommChannel","CombinedNetworks","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast_message","calculate_hash_of","capacity","clone","clone","clone","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref_mut","deref_mut","deref_mut","direct_message","drop","drop","drop","fmt","fmt","fmt","from","from","from","generate_network","generator","generator","hashes","in_flight_message_count","in_flight_message_count","init","init","init","inject_consensus_info","inner","insert","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_ready","message_cache","networks","new","new","pause","primary","primary_down","queue_node_lookup","recv_msgs","resume","secondary","shut_down","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_ready","BootstrapAddrs","Empty","Libp2pCommChannel","Libp2pNetwork","Libp2pNetworkInner","PeerInfoVec","QC_TOPIC","__clone_box","__clone_box","__clone_box","__clone_box","_add_known_peers","alloc","alloc","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap_addrs","bootstrap_addrs_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","broadcast_recv","broadcast_send","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dht_timeout","direct_message","direct_message","direct_recv","direct_send","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","generate_network","generator","generator","handle","handle_event_generator","handle_recvd_events_0_1","in_flight_message_count","in_flight_message_count","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_bootstrapped","is_da","is_ready","is_ready","is_ready","latest_seen_view","metrics","new","new","node_lookup_send","pause","phantom","phantom","pk","ptr","ptr","queue_node_lookup","queue_node_lookup","recv_msgs","recv_msgs","reliability_config","resume","serialize","shut_down","shut_down","spawn_connect","spawn_node_lookup","to_owned","to_owned","topic_map","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","wait_for_ready","Broadcast","Combo","Direct","MasterMap","MemoryCommChannel","MemoryNetwork","MemoryNetworkInner","_DERIVE_core_fmt_Debug_FOR_MasterMap","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_input","broadcast_input","broadcast_message","broadcast_message","broadcast_output","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direct_input","direct_input","direct_message","direct_message","direct_output","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_network","generator","generator","id","in_flight_message_count","in_flight_message_count","in_flight_message_count","init","init","init","init","init","inner","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_ready","is_ready","map","master_map","metrics","new","new","new","pause","recv_msgs","recv_msgs","reliability_config","resume","shut_down","shut_down","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","Err","Inner","Ok","RecvMsg","RecvMsgTrait","SendMsg","SendMsgTrait","TaskChannel","TaskMap","TxnResult","WebCommChannel","WebServerNetwork","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_own_key","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","broadcast_poll_queue_0_1","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connected","create","dac_task_map","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","direct_message","direct_message","direct_poll_queue_0_1","drop","drop","drop","drop","drop","drop","endpoint","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","generate_network","generator","generator","get_endpoint","get_endpoint","get_hash","get_message","get_message","get_message","get_message","handle_message_0_1","handle_tx_0_1","hash","hash","in_flight_message_count","in_flight_message_count","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","inner","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_da","is_ready","is_ready","latest_proposal_task","latest_view_sync_certificate_task","message","message","new","parse_post_message","pause","pause","poll_web_server","post_message_to_web_server","proposal_task_map","prune_tasks","recv_msgs","recv_msgs","resume","resume","running","serialize","serialize","server_shutdown_signal","shut_down","shut_down","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_index","txn_task_map","type_id","type_id","type_id","type_id","type_id","type_id","vid_disperse_task_map","view_sync_cert_task_map","view_sync_vote_task_map","vote_task_map","vzip","vzip","vzip","vzip","vzip","vzip","wait_between_polls","wait_for_ready","wait_for_ready","CommitteeElectionConfig","CommitteeNetwork","NodeImplementation","QuorumNetwork","Storage","TestableNodeImplementation","block_genesis","committee_election_config_generator","construct_tmp_storage","gen_comm_channels","get_full_state","leaf_create_random_transaction","state_create_random_transaction","txn_count","Err","Ok","Result","Storage","append","append_single_view","cleanup_storage_up_to_view","commit","get_anchored_view","memory_storage","MemoryStorage","MemoryStorageInternal","__clone_box","__clone_box","append","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cleanup_storage_up_to_view","clone","clone_into","commit","construct_tmp_storage","deref","deref","deref_mut","deref_mut","drop","drop","empty","failed","from","from","get_anchored_view","get_full_state","init","init","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","stored","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BLSPrivKey","BLSPubKey","DAProposal","Decide","Error","Event","EventType","Message","NextLeaderViewTimeout","PrivateKey","PureAssembledSignatureType","QCParams","QCType","QuorumProposal","ReplicaViewTimeout","SignError","SignatureKey","StakeTableEntry","SystemContextHandle","Transactions","UpgradeProposal","ViewFinished","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assemble","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","event","event","fmt","fmt","fmt","from","from","from","from_bytes","from_private","generated_from_seed_indexed","genesis_proposer_pk","get_hash","get_public_key","get_public_parameter","get_sig_proof","get_stake_table_entry","get_view_number","handle","hash","hotshot","init","init","init","internal_event_stream","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","kind","output_event_stream","purpose","registry","sender","serialize","sign","storage","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","version","view_number","vzip","vzip","vzip","block_size","error","leaf_chain","proposal","proposal","proposal","qc","sender","sender","sender","transactions","view_number","view_number","view_number","DAProposal","Decide","Error","Event","EventType","NextLeaderViewTimeout","QuorumProposal","ReplicaViewTimeout","Transactions","UpgradeProposal","ViewFinished","event","view_number","block_size","error","leaf_chain","proposal","proposal","proposal","qc","sender","sender","sender","transactions","view_number","view_number","view_number","SystemContextHandle","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","get_consensus","get_current_view","get_decided_leaf","get_decided_state","get_event_stream","get_event_stream_known_impl","get_internal_event_stream_known_impl","get_leader","get_next_view_timeout","get_public_key","get_state","hotshot","init","internal_event_stream","into","into_any","into_any_arc","into_any_rc","output_event_stream","registry","shut_down","storage","storage","submit_transaction","to_owned","try_from","try_get_decided_leaf","try_into","type_id","vzip","wait_for_networks_ready"],"q":[[0,"hotshot"],[215,"hotshot::HotShotError"],[227,"hotshot::tasks"],[262,"hotshot::traits"],[359,"hotshot::traits::NetworkError"],[366,"hotshot::traits::election"],[367,"hotshot::traits::election::static_committee"],[445,"hotshot::traits::implementations"],[476,"hotshot::traits::networking"],[626,"hotshot::traits::networking::NetworkError"],[633,"hotshot::traits::networking::combined_network"],[733,"hotshot::traits::networking::libp2p_network"],[878,"hotshot::traits::networking::memory_network"],[1020,"hotshot::traits::networking::web_server_network"],[1237,"hotshot::traits::node_implementation"],[1251,"hotshot::traits::storage"],[1261,"hotshot::traits::storage::memory_storage"],[1312,"hotshot::types"],[1439,"hotshot::types::EventType"],[1453,"hotshot::types::event"],[1466,"hotshot::types::event::EventType"],[1480,"hotshot::types::handle"],[1524,"dyn_clone::sealed"],[1525,"dyn_clone::sealed"],[1526,"core::error"],[1527,"snafu::backtrace_shim"],[1528,"core::option"],[1529,"hotshot_types::traits::node_implementation"],[1530,"core::clone"],[1531,"hotshot_types::consensus"],[1532,"async_lock::rwlock"],[1533,"alloc::sync"],[1534,"core::fmt"],[1535,"core::fmt"],[1536,"core::fmt"],[1537,"color_eyre::section"],[1538,"core::fmt"],[1539,"core::marker"],[1540,"hotshot_types::consensus"],[1541,"async_broadcast"],[1542,"async_broadcast"],[1543,"alloc::rc"],[1544,"core::num::nonzero"],[1545,"core::time"],[1546,"core::future::future"],[1547,"core::pin"],[1548,"alloc::string"],[1549,"core::any"],[1550,"hotshot_types::traits::network"],[1551,"hotshot_task_impls::consensus"],[1552,"hotshot_types::traits::storage"],[1553,"alloc::vec"],[1554,"hotshot_types::traits::storage"],[1555,"core::ops::function"],[1556,"hotshot_types::traits::storage"],[1557,"core::iter::traits::iterator"],[1558,"core::iter::traits::collect"],[1559,"rand_core"],[1560,"commit"],[1561,"serde::de"],[1562,"core::cmp"],[1563,"core::num::nonzero"],[1564,"core::hash"],[1565,"core::marker"],[1566,"hotshot_types::traits::metrics"],[1567,"hotshot_types::traits::metrics"],[1568,"multiaddr"],[1569,"hotshot_types::traits::network"],[1570,"libp2p_networking::network"],[1571,"libp2p_networking::network::node::config"],[1572,"async_compatibility_layer::channel::unbounded::inner"],[1573,"url"],[1574,"hotshot_types::message"],[1575,"lru"],[1576,"hotshot_types::traits::network"],[1577,"jf_primitives::errors"],[1578,"primitive_types"],[1579,"bitvec::vec"],[1580,"futures_core::stream"]],"d":["Failure in the block.","Internal value used to drive the state machine","Failed to broadcast a message on the network","Failed to Message the leader in the given stage","Length, in bytes, of a 256 bit hash","Length, in bytes, of a 512 bit hash","A handle that exposes the interface that hotstuff needs to …","Reexport error type Error type for <code>HotShot</code>","initializer struct for creating starting block","Not enough valid signatures for a quorum","Invalid state machine state","Item was not present in storage","Bundle of all the memberships a consensus instance uses","Miscelaneous error TODO fix this with #181 …","Failure in networking layer","Bundle of the networks used in consensus","Error accesing storage","Thread safe, shared view of a <code>HotShot</code>","Holds the state needed to participate in <code>HotShot</code> consensus","HotShot timed out waiting for msgs","HotShot timed out during round","","","","","","the metrics that the implementor is using.","Phantom for TYPES and I","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration items for this hotshot instance","Get access to <code>Consensus</code>","The hotstuff implementation","DA","Network for reaching the DA committee","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","initialize from genesis","reload previous state based on most recent leaf and the …","Returns a copy of the consensus struct","Returns a copy of the last decided leaf","Returns the last decided validated state.","return the timeout for a view for <code>self</code>","Get the validated state from a given <code>view</code>.","","uid for instrumentation","","","","","","","","Initializes a new <code>SystemContext</code> and does the work of …","","the leaf specified initialization","Handle to internal hotshot implementation","Reference to the <code>SystemContextInner</code>","Instance-level state.","access to the internal event stream, in case we need to, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Memberships used by consensus","","Networks used by the instance of hotshot","Creates a new <code>SystemContext</code> with the given configuration …","Access to the output event stream.","","The private key of this node","","","","The public key of this node","Publishes a transaction asynchronously to the network","Quorum Membership","Newtork for reaching all nodes","Reexport rand crate","Spawn all tasks that operate on <code>SystemContextHandle</code>.","","Emit an external event","shut down all networks","","“Starts” consensus by sending a <code>QCFormed</code> event","This <code>HotShot</code> instance’s storage backend","","Provides a number of tasks that run continuously","","","","","Contains traits consumed by <code>SystemContext</code>","","","","","","","","[Non-blocking] instantly returns a copy of the last …","","","","","","","","","","","","","","","Contains types used by the crate","VID","View Sync","","","","","","","","wait for all networks to be ready","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","The underlying block error.","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","dummy (TODO delete later)","event for global event stream","shut everything down","","","add the consensus task","add the Data Availability task","Add the network task to handle events and send messages.","Add the network task to handle messages and publish events.","add the Transaction Handling task","add the Upgrade task.","add the VID task","add the view sync task","","","","","","","Create the consensus task state","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","The type of block header this state is associated with","Abstraction over the full contents of a block","The type of block payload this state is associated with","Centralized server specific errors","Error sending output to consumer of …","Election config for the DA committee","Network for those in the DA committee","Could not deliver a message to a specified recipient","Encoded payload.","Contains the error value","The error type for this type of block","The error type for this particular type of ledger state","Failed to deserealize a network message","Failed to serialize a network message","The type of the instance-level state this state is …","Libp2p specific errors","memory network specific errors","Data created during block building which feeds into the …","Error type for networking","interface describing how reliable the network is","Attempted to deliver a message to an unknown node","Node implementation aggregate trait","Contains the success value","Network for all nodes","The underlying connection has been shut down","Abstraction over on disk persistence of node state","Storage type for this consensus implementation","Result for a storage type","extra functions required on a node implementation to be …","Time compatibility needed for reward collection","A timeout occurred","The type of the transitions we are applying","unable to cancel a request, the request has already been …","unimplemented functionality","Abstraction over the state that blocks modify","Web server specific errors","Append the list of views to this storage","Insert a single view. Shorthand for","","","","","generate a genesis block","","","Generate commitment that builders use to sign block …","","given a message and a way to send the message, decide …","Cleans up the storage up to the given view. The given view …","Commit this storage.","Generates a committee-specific election","Create ephemeral storage Will be deleted/lost immediately …","","","","","Sortition trait elections used for consensus","Encode the payload","","","Returns the argument unchanged.","","Build a payload with the encoded transaction bytes, …","Construct the state with the given block header.","Build a payload and associated metadata with the …","Generate the communication channels for testing","Build the genesis payload and metadata.","Construct a genesis validated state.","Get the latest anchored view","Return the full internal state. This is useful for …","","Module for publicly usable implementations of the traits","","","Calls <code>U::from(self)</code>.","","","","Creates random transaction if possible otherwise panics …","Network access compatibility","Composite trait for node behavior","Gets called to notify the persistence backend that this …","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","number of times to repeat the packet","scramble the packet","","Creates random transaction if possible otherwise panics …","Abstraction over on-disk storage of node state","","List of transaction commitments.","","","the number of transactions in a block","","Check if the proposed block header is valid and apply it …","","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","static (round robin) committee election","Dummy implementation of <code>Membership</code>","static committee using a vrf kp","configuration for static committee. stub for now","","","","","Node type phantom","Node type phantom","","","","","","","","","","","","","The nodes on the static committee and their stake","The nodes on the static committee and their stake","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Clone the public key and corresponding stake table for …","","Index the vector of public keys with the current view …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Creates a new dummy elector","All the nodes participating and their stake","All the nodes participating and their stake","Number of nodes on the committee","","","","","","","","","","","","","","","A communication channel with 2 networks, where we can fall …","Wrapper for the tuple of <code>WebServerNetwork</code> and <code>Libp2pNetwork</code>","libp2p identity communication channel","Networking implementation that uses libp2p generic over <code>M</code> …","Shared state for in-memory mock networking.","memory identity communication channel","In memory only network simulator.","In memory, ephemeral, storage for a <code>SystemContext</code> instance","Contains several <code>NetworkingMetrics</code> that we’re interested …","Type alias for a shared collection of peerid, multiaddrs","Represents the communication channel abstraction for the …","The web server network state","","A <code>Gauge</code> which tracks how many peers are connected","The id of this <code>MemoryNetwork</code> cluster","A <code>Counter</code> which tracks how many messages have been …","A <code>Counter</code> which tracks how many messages have been …","holds the state of the libp2p network","The actual internal state","The inner, core state of the web server network","The inner state of this <code>MemoryStorage</code>","The list of <code>MemoryNetwork</code>s","Last n seen messages to prevent processing duplicates","A <code>Counter</code> which tracks how many messages failed to send","The two networks we’ll use for send/recv","A <code>Counter</code> which tracks how many messages have been send by …","A <code>Counter</code> which tracks how many messages have been send …","","If the primary network is down (0) or not, and for how …","","An optional shutdown signal. This is only used when this …","Centralized server specific errors","Error sending output to consumer of …","Could not deliver a message to a specified recipient","Failed to deserealize a network message","Failed to serialize a network message","SNAFU context selector for the …","the set of counters and gauges for the networking metrics","Libp2p specific errors","memory network specific errors","Error type for networking","interface describing how reliable the network is","The wrapper with a string name for the networking metrics","Contains several <code>NetworkingMetrics</code> that we’re interested …","Attempted to deliver a message to an unknown node","The underlying connection has been shut down","A timeout occurred","unable to cancel a request, the request has already been …","unimplemented functionality","Web server specific errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","given a message and a way to send the message, decide …","","","","","","","","","Networking Implementation that has a primary and a …","A <code>Gauge</code> which tracks how many peers are connected","All the counters of the networking metrics","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All the gauges of the networking metrics","All the histograms of the networking metrics","A <code>Counter</code> which tracks how many messages have been …","A <code>Counter</code> which tracks how many messages have been …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","All the labels of the networking metrics","Libp2p based/production networking implementation This …","In memory network simulator","A <code>Counter</code> which tracks how many messages failed to send","Create a new instance of this <code>NetworkingMetricsValue</code> …","A <code>Counter</code> which tracks how many messages have been send by …","A <code>Counter</code> which tracks how many messages have been send …","a prefix which tracks the name of the metric","sample from uniform distribution to decide whether or not …","Sample from bernoulli distribution to decide whether or …","number of times to repeat the packet","scramble the packet","","","For the creation and naming of gauge, counter, histogram …","","","","","","","","","","","","","","","","","","","a map of values","","","","","A network implementation that connects to a web server.","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","A cache to keep track of the last n messages we’ve seen, …","A communication channel with 2 networks, where we can fall …","Wrapper for the tuple of <code>WebServerNetwork</code> and <code>Libp2pNetwork</code>","","","","","","","","","","","","","","","","","","","","Helper function to calculate a hash of a type that …","The maximum number of items to store in the cache","","","","","","","Check if the cache contains a hash","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The hashes of the messages in the cache, in order of …","Get the number of messages in-flight.","Get the number of messages in-flight.","","","","","The cache itself","Insert a hash into the cache","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Last n seen messages to prevent processing duplicates","The two networks we’ll use for send/recv","Create a new cache with the given capacity","Constructor","","Get a ref to the primary network","If the primary network is down (0) or not, and for how …","","","","Get a ref to the backup network","","","","","","","","","","","","","","","","","","convienence alias for the type for bootstrap addresses …","Stubbed out Ack","libp2p identity communication channel","Networking implementation that uses libp2p generic over <code>M</code> …","The underlying state of the libp2p network","Type alias for a shared collection of peerid, multiaddrs","hardcoded topic of QC used","","","","","make network aware of known peers","","","","","","","","","","","this is really cheating to enable local tests hashset of …","bootstrap","","","","","","","","","","","map of known replica peer ids to public keys","Sender for broadcast messages","","","","","","","","","","","","","max time before dropping message due to DHT error","","","Receiver for direct messages","Sender for direct messages (only used for sending messages …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a boxed function …","Returns a boxed function …","handle to control the network","task to propagate messages to handlers terminates on shut …","Handle events for Version 0.1 of the protocol.","","","","","","","","","holds the state of the libp2p network","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","whether or not we’ve bootstrapped into the DHT yet","if we’re a member of the DA committee or not","","","whether or not the network is ready to send","the latest view number (for node lookup purposes) NOTE: …","The networking metrics we’re keeping track of","Constructs new network for a node. Note that this network …","create a new libp2p communication channel","Sender for node lookup (relevant view number, key of node) …","","","","this node’s public key","","","","","","","reliability_config","","","","","Initiates connection to the outside world","Spawns task for looking up nodes pre-emptively","","","topic map hash(hashset) -&gt; topic btreemap ordered so is …","","","","","","","","","","","","","network protocol version number in use","","","","","Returns when network is ready","","","Broadcast message","Internal enum for combining streams","Direct message","Shared state for in-memory mock networking.","memory identity communication channel","In memory only network simulator.","Internal state for a <code>MemoryNetwork</code> instance","","","","","","","","","","","","","","","","","","","","","","","","","","Send a <code>Vec&lt;u8&gt;</code> message to the inner <code>broadcast_input</code>","Input for broadcast messages","","","Output for broadcast messages","","","","","","","","","","","","","","","Send a <code>Vec&lt;u8&gt;</code> message to the inner <code>direct_input</code>","Input for direct messages","","","Output for direct messages","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The id of this <code>MemoryNetwork</code> cluster","","","Count of messages that are in-flight (send but not …","","","","","","The actual internal state","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The list of <code>MemoryNetwork</code>s","The master map","The networking metrics we’re keeping track of","Create a new, empty, <code>MasterMap</code>","Creates a new <code>MemoryNetwork</code> and hooks it up to the group …","create new communication channel","","","","config to introduce unreliability to the network","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","Represents the core of web server networking","Contains the success value","A message being received from the web server","Trait for messages being received from the web server","A message being sent to the web server","Trait for messages being sent to the web server","<code>TaskChannel</code> is a type alias for an unbounded sender …","<code>TaskMap</code> is a wrapper around a <code>BTreeMap</code> that maps view …","convenience alias alias for the result of getting …","Represents the communication channel abstraction for the …","The web server network state","","","","","","","","","","","Our own key","","","","","","","","","","","","","","","","","","","","","","","","","broadcast message to those listening on the communication …","broadcast message to some subset of nodes blocking","Queue for broadcasted messages","The connectioni to the web server","","","","","","","","","","","The web server connection is ready","Creates a new instance of the <code>WebServerNetwork</code>","Task map for DACs.","","","","","","","","","","","","","","","","","","Sends a direct message to a specific node blocking","Sends a direct message to a specific node blocking","Queue for direct messages","","","","","","","The endpoint to send the message to","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the endpoint to send the message to","","","Returns the actual message being sent","Returns the actual message being received","","","Handle version 0.1 messages","Handle version 0.1 transactions","Note","","","","","","","","","","","","The inner, core state of the web server network","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Whether we are connecting to a DA server","checks if the network is ready nonblocking","checks if the network is ready nonblocking","A handle on the task polling for latest quorum propsal","A handle on the task polling for the latest view sync …","The optional message, or body, to send","The optional message being received","Create new communication channel","Parses a message to find the appropriate endpoint Returns …","","Pauses the underlying network","Pull a web server.","Post a message to the web server and return the result","Task map for quorum proposals.","Prunes tasks that are polling for a view less than or …","Moves out the entire queue of received messages of ’…","Moves out the entire queue of received messages of ’…","","Resumes the underlying network","Client is running","","","An optional shutdown signal. This is only used when this …","Shut down this network. Afterwards this network should no …","Blocks until the network is shut down then returns true","","","","","","","","","","","","","","","","","","The last tx_index we saw from the web server","Task map for transactions","","","","","","","Task map for VID disperse data","Task map for view sync certificates.","Task map for view sync votes.","Task map for quorum votes.","","","","","","","The duration to wait between poll attempts","Blocks until node is successfully initialized into the …","Blocks until the network is successfully initialized","Election config for the DA committee","Network for those in the DA committee","Node implementation aggregate trait","Network for all nodes","Storage type for this consensus implementation","extra functions required on a node implementation to be …","generate a genesis block","Generates a committee-specific election","Create ephemeral storage Will be deleted/lost immediately …","Generate the communication channels for testing","Return the full internal state. This is useful for …","Creates random transaction if possible otherwise panics …","Creates random transaction if possible otherwise panics …","the number of transactions in a block","Contains the error value","Contains the success value","Result for a storage type","Abstraction over on disk persistence of node state","Append the list of views to this storage","Insert a single view. Shorthand for","Cleans up the storage up to the given view. The given view …","Commit this storage.","Get the latest anchored view","<code>HashMap</code> and <code>Vec</code> based implementation of the storage trait","In memory, ephemeral, storage for a <code>SystemContext</code> instance","Internal state for a <code>MemoryStorage</code>","","","","","","","","","","","","","","","","","","","","","","","Create a new instance of the memory storage with the given …","The views that have failed","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The inner state of this <code>MemoryStorage</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The views that have been stored","","","","","","","","","","BLS private key used to sign a message","BLS public key used to verify a signature","DA proposal was received from the network or submitted to …","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","Incoming message","A next leader task was canceled by a timeout interrupt","The private key type for this signature algorithm","The type of the assembled signature, without <code>BitVec</code>","The type of the quorum certificate parameters used for …","The type of the assembled qc: assembled signature + <code>BitVec</code>","Quorum proposal was received from the network or submitted …","A replica task was canceled by a timeout interrupt","Type of error that can occur when signing data","Trait for abstracting public key signatures Self is the …","The type of the entry that contain both public key and …","Event streaming handle for a <code>SystemContext</code> instance …","New transactions were received from the network or …","Upgrade proposal was received from the network or …","The view has finished.  If values were decided on, a <code>Decide</code>…","","","","","","","","","","","","","assemble the signature from the partial signature and the …","","","","","","","check the quorum certificate for the assembled signature","","","","","","","","","","","","","","","","","","","","","","Events that a <code>SystemContext</code> instance can emit","The underlying event","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Deserialize a public key from bytes","Produce a public key from a private key","Generate a new key pair","generates the genesis public key. Meant to be dummy/filler","","only get the public key from the stake table entry","get the public parameter for the assembled signature …","get the assembled signature and the <code>BitVec</code> separately from …","get the stake table entry from the public key and stake …","get the view number out of a message","Provides an event-streaming handle for a <code>SystemContext</code> …","","Internal reference to the underlying <code>SystemContext</code>","","","","access to the internal event stream, in case we need to, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The message kind","The sender and an <code>InactiveReceiver</code> to keep the channel …","","registry for controlling tasks","The sender of this message","","Produce a signature","Our copy of the <code>Storage</code> view for a hotshot","Serialize a public key to bytes","","","","","","","","","","","","","Validate a signature","The version of the protocol in use for this message","The view number that this event originates from","","","","Optional information of the number of transactions in the …","The underlying error","The chain of Leafs that were committed by this decision","Contents of the proposal","Contents of the proposal","Contents of the proposal","The QC signing the most recent leaf in <code>leaf_chain</code>.","Public key of the leader submitting the proposal","Public key of the leader submitting the proposal","Public key of the leader submitting the proposal","The list of transactions","The view that timed out","The view that timed out","The view number that has just finished","DA proposal was received from the network or submitted to …","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","A next leader task was canceled by a timeout interrupt","Quorum proposal was received from the network or submitted …","A replica task was canceled by a timeout interrupt","New transactions were received from the network or …","Upgrade proposal was received from the network or …","The view has finished.  If values were decided on, a <code>Decide</code>…","The underlying event","The view number that this event originates from","Optional information of the number of transactions in the …","The underlying error","The chain of Leafs that were committed by this decision","Contents of the proposal","Contents of the proposal","Contents of the proposal","The QC signing the most recent leaf in <code>leaf_chain</code>.","Public key of the leader submitting the proposal","Public key of the leader submitting the proposal","Public key of the leader submitting the proposal","The list of transactions","The view that timed out","The view that timed out","The view number that has just finished","Event streaming handle for a <code>SystemContext</code> instance …","","","","","","","","","","","","Returns the argument unchanged.","Get the underlying consensus state for this <code>SystemContext</code>","Wrapper to get this node’s current view","Get the last decided leaf of the <code>SystemContext</code> instance.","Get the last decided validated state of the <code>SystemContext</code> …","obtains a stream to expose to the user","HACK so we can know the types when running tests… there …","HACK so we can know the types when running tests… there …","Wrapper for <code>HotShotConsensusApi</code>’s <code>get_leader</code> function","return the timeout for a view of the underlying …","Wrapper to get this node’s public key","Get the validated state from a given <code>view</code>.","Internal reference to the underlying <code>SystemContext</code>","","access to the internal event stream, in case we need to, …","Calls <code>U::from(self)</code>.","","","","The sender and an <code>InactiveReceiver</code> to keep the channel …","registry for controlling tasks","Shut down the the inner hotshot and wait until all …","Provides a reference to the underlying storage for this …","Our copy of the <code>Storage</code> view for a hotshot","Submits a transaction to the backing <code>SystemContext</code> …","","","Tries to get the most recent decided leaf, returning …","","","","Block the underlying quorum (and committee) networking …"],"i":[6,6,6,6,0,0,0,0,0,6,6,6,0,6,6,0,6,0,0,6,6,0,10,10,13,13,135,33,33,32,135,24,6,10,13,33,32,135,24,6,10,13,6,6,33,32,135,24,6,10,13,33,32,135,24,6,10,13,6,10,13,10,13,135,10,135,32,33,33,32,135,24,6,10,13,33,32,135,24,6,10,13,6,0,33,32,135,24,6,10,13,6,6,13,33,32,135,24,6,10,13,24,24,10,10,10,10,10,6,135,6,33,32,135,24,6,10,10,13,24,10,13,24,135,33,32,135,24,6,10,13,33,32,135,24,6,10,13,33,32,135,24,6,10,13,33,32,135,24,6,10,13,13,135,13,135,10,135,13,135,13,13,13,135,10,32,33,0,10,13,10,33,6,10,135,13,0,10,13,6,13,0,33,32,135,24,6,10,13,10,33,32,135,24,6,10,13,33,32,135,24,6,10,13,0,32,32,33,32,135,24,6,10,13,33,136,137,138,139,140,141,142,143,144,145,138,145,50,0,50,50,50,0,0,0,0,0,0,0,0,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,146,0,146,55,55,147,12,55,148,127,148,146,55,55,146,55,55,148,0,0,55,0,127,12,55,0,12,0,0,146,55,148,55,55,0,55,149,149,55,55,55,55,147,55,55,148,55,63,149,149,147,147,55,55,55,55,0,148,55,55,55,55,148,146,148,147,148,146,149,147,55,0,55,55,55,55,55,55,147,0,0,146,63,63,63,63,55,147,0,55,148,55,55,147,55,146,55,150,151,152,153,154,155,156,0,0,0,0,67,67,69,69,157,67,67,69,67,69,67,69,67,69,67,69,67,69,157,67,67,69,67,67,69,67,69,69,67,69,67,67,67,67,67,67,67,69,67,69,67,67,67,67,67,67,67,67,69,67,69,67,69,67,69,67,69,67,157,67,69,69,67,67,69,67,67,69,67,69,67,69,67,67,69,0,0,0,0,0,0,0,0,0,0,0,0,158,82,114,82,82,100,111,96,126,114,91,82,91,82,82,158,91,158,96,55,55,55,55,55,0,0,55,55,0,0,0,0,55,55,55,55,55,55,0,0,0,82,82,80,80,83,83,84,84,80,80,82,80,83,84,82,80,83,84,82,80,83,84,82,80,83,84,63,82,80,83,84,82,80,83,84,0,82,83,80,80,80,80,82,83,82,80,83,84,82,80,83,84,82,80,83,84,82,80,83,84,82,80,83,84,83,83,82,82,82,80,83,84,82,80,83,84,82,80,83,84,82,80,83,84,82,80,83,84,84,83,0,0,82,82,82,82,80,63,63,63,63,80,80,80,80,82,80,83,84,82,80,83,84,82,80,83,84,82,80,83,84,80,80,82,80,83,84,0,150,151,152,153,154,155,156,0,0,0,93,93,91,91,94,94,93,91,94,93,91,94,93,91,94,93,91,94,91,0,93,93,91,94,93,91,94,93,93,91,94,93,91,94,91,93,91,94,93,91,94,93,91,94,91,91,94,93,91,94,93,91,94,91,93,93,93,91,94,93,91,94,93,91,94,93,91,94,91,91,91,93,91,91,91,91,91,91,91,91,91,93,91,94,93,91,94,93,91,94,93,91,94,93,91,94,91,0,0,0,0,0,0,0,100,100,104,104,100,159,158,109,105,100,104,109,105,100,104,105,105,109,105,100,104,109,105,100,104,100,104,105,105,100,104,100,104,109,105,100,104,109,105,100,104,105,100,104,105,105,109,105,100,104,105,100,104,109,105,100,104,104,100,104,105,100,100,100,104,109,105,100,104,100,104,100,109,105,100,104,109,105,100,104,109,105,100,104,109,105,100,104,105,105,100,104,105,105,105,100,104,105,104,159,158,105,159,158,100,104,100,104,105,104,109,100,104,100,100,100,104,105,109,105,100,104,109,105,100,104,109,105,100,104,109,109,105,100,104,100,100,104,160,0,160,0,0,0,0,0,111,111,113,113,160,114,115,111,113,160,114,115,111,113,160,114,115,111,113,160,114,115,111,113,111,115,111,113,115,111,113,111,113,160,114,115,111,113,160,114,115,111,113,111,115,111,113,115,160,114,115,111,113,114,115,111,113,160,114,115,111,113,113,111,113,114,111,113,115,160,114,115,111,113,111,160,114,115,111,113,160,114,115,111,113,160,114,115,111,113,160,114,115,111,113,111,113,114,115,115,114,111,113,113,111,113,115,113,111,113,111,113,160,114,115,111,113,160,114,115,111,113,160,114,115,111,113,160,114,115,111,113,111,113,161,0,161,0,0,0,0,0,0,0,0,0,116,116,96,96,117,117,118,118,119,119,121,116,96,117,121,118,119,116,96,117,121,118,119,116,96,117,121,118,119,116,96,117,121,118,119,116,96,121,121,116,96,117,118,119,116,96,117,118,119,121,96,121,117,116,96,117,117,121,118,119,116,96,117,117,121,118,119,118,119,116,96,121,116,96,117,121,118,119,118,118,119,116,96,117,121,118,119,116,96,117,121,118,119,116,116,96,162,118,119,162,163,118,119,121,121,0,119,116,96,116,96,117,121,118,119,116,96,96,116,96,117,121,118,119,116,96,117,121,118,119,116,96,117,121,118,119,116,96,117,121,118,119,121,116,96,121,121,118,119,116,96,116,96,121,96,121,117,116,96,116,96,121,118,119,96,116,96,116,96,117,118,119,116,96,117,121,118,119,116,96,117,121,118,119,121,121,116,96,117,121,118,119,121,121,121,121,116,96,117,121,118,119,121,116,96,147,12,0,12,12,0,147,147,147,147,147,147,147,147,127,127,0,0,149,149,149,149,149,0,0,0,126,126,126,164,126,164,126,164,126,164,126,126,126,126,126,126,164,126,164,126,164,126,126,164,164,126,126,126,164,126,126,164,126,164,126,164,126,164,126,164,126,164,126,164,126,164,126,164,126,0,0,129,129,129,0,0,0,129,68,68,68,68,129,129,68,0,68,0,129,129,129,43,43,129,129,92,92,43,129,92,43,129,92,68,43,129,92,43,129,92,68,43,129,92,43,129,92,43,129,92,43,129,92,92,43,129,92,92,92,92,92,92,0,43,43,129,92,43,129,92,68,68,68,68,92,68,68,68,68,92,0,92,35,43,129,92,35,43,129,92,43,129,92,43,129,92,43,129,92,92,35,92,35,92,92,68,35,68,43,129,92,43,129,92,43,129,92,43,129,92,68,92,43,43,129,92,165,166,165,167,168,169,165,167,168,169,170,171,172,173,129,129,129,0,0,129,129,129,129,129,129,43,43,165,166,165,167,168,169,165,167,168,169,170,171,172,173,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[[[6,[-1]]],[[8,[7]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[-1]]],[[8,[5]]],9],[[[10,[-1,-2]]],[[10,[-1,-2]]],[11,9],[11,[12,[-1]]]],[[[13,[-1,-2]]],[[13,[-1,-2]]],[11,9],[11,[12,[-1]]]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[[10,[-1,-2]]],[[16,[[15,[[14,[-1]]]]]]],9,[[12,[-1]]]],0,0,0,[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[[[6,[-1]]],18,9],0,[17,2],[17,2],[17,2],[17,2],[17,2],[17,2],[17,2],[[[6,[-1]],19],[[21,[2,20]]],9],[[[6,[-1]],19],[[21,[2,20]]],[22,9]],[[[13,[-1,-2]],19],23,9,[[12,[-1]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[21,[[24,[-1]],[6,[-1]]]]],9],[[[25,[-1]]],[[24,[-1]]],9],[[[10,[-1,-2]]],[[16,[[15,[[14,[-1]]]]]]],9,[[12,[-1]]]],[[[10,[-1,-2]]],[[25,[-1]]],9,[[12,[-1]]]],[[[10,[-1,-2]]],16,9,[[12,[-1]]]],[[[10,[-1,-2]]],26,9,[[12,[-1]]]],[[[10,[-1,-2]]],[[8,[16]]],9,[[12,[-1]]]],[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],0,[-1,[],[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[26,31,[32,[-1]],[33,[-1,-2]],[24,[-1]],34],[[21,[[2,[[35,[-1,-2]],[37,[[36,[-1]]]],[38,[[36,[-1]]]]]],[6,[-1]]]]],9,[[12,[-1]]]],[[],17],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[13,[-1,-2]]],41,9,[[12,[-1]]]],0,[[[13,[-1,-2]]],17,9,[[12,[-1]]]],0,[[26,31,[32,[-1]],[33,[-1,-2]],[24,[-1]],34],[[21,[[10,[-1,-2]],[6,[-1]]]]],9,[[12,[-1]]]],0,[[[13,[-1,-2]]],[],9,[[12,[-1]]]],0,[[[13,[-1,-2]]],42,9,[[12,[-1]]]],[[[13,[-1,-2]]],42,9,[[12,[-1]]]],[[[13,[-1,-2]]],[],9,[[12,[-1]]]],0,[[[10,[-1,-2]]],[[21,[2,[6,[-1]]]]],9,[[12,[-1]]]],0,0,0,[[[10,[-1,-2]]],[[35,[-1,-2]]],9,[[12,[-1]]]],[[[13,[-1,-2]],[43,[-1]]],[[45,[[39,[44]]]]],9,[[12,[-1]]]],[[[10,[-1,-2]],[43,[-1]]],2,9,[[12,[-1]]]],[[[33,[-1,-2]]],2,9,[[12,[-1]]]],[[[6,[-1]]],[[8,[5]]],9],[[[10,[-1,-2]]],2,9,[[12,[-1]]]],0,[[[13,[-1,-2]],[25,[-1]]],[[45,[[39,[44]]]]],9,[[12,[-1]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,46,[]],[[[13,[-1,-2]]],41,9,[[12,[-1]]]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[[10,[-1,-2]]],[[8,[[25,[-1]]]]],9,[[12,[-1]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[-1,-2]]],2,9,[[12,[-1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],[35,[-1,-2]]],2,9,[[12,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],[35,[-1,-2]]],2,9,[[12,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],-2],2,9,[[49,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],-2],2,9,[[49,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],[35,[-1,-2]]],2,9,[[12,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],[35,[-1,-2]]],2,9,[[12,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],[35,[-1,-2]]],2,9,[[12,[-1]]]],[[[16,[48]],[37,[[36,[-1]]]],[38,[[36,[-1]]]],[35,[-1,-2]]],2,9,[[12,[-1]]]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,50],[[-1,-2],2,[],[]],[[[37,[[43,[-1]]]],[35,[-1,-2]]],[[51,[-1,-2,[13,[-1,-2]]]]],9,[[12,[-1]]]],[17,-1,[]],[17,-1,[]],[17,2],[[50,19],23],[-1,-1,[]],[[],17],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,[53,[[52,[-2]]]]],[[45,[[39,[44]]]]],[],[]],[[-1,[54,[-2]]],[[45,[[39,[44]]]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[55,[[8,[7]]]],[[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,56,[]],[55,[[8,[5]]]],[[-1,[53,[57]],[16,[58]]],[[45,[[39,[44]]]]],[]],[-1,[[45,[[39,[44]]]]],[]],[-1,[[45,[[39,[44]]]]],[]],[[],[[39,[58]]]],[[],[[21,[59]]]],[17,-1,[]],[17,-1,[]],[55,18],[17,2],0,[-1,21,[]],[[55,19],[[21,[2,20]]]],[[55,19],[[21,[2,20]]]],[-1,-1,[]],[60,55],[-1,-2,61,[]],[[],-1,[]],[-1,[[21,[[2,[-2]]]]],62,[]],[[17,17,17,[8,[[39,[63]]]]],[[39,[58]]]],[[],[[2,[-1]]],[]],[[],-1,[]],[-1,[[45,[[39,[44]]]]],[]],[[],[[45,[[39,[44]]]]]],[[-1,-2],[[27,[-2,-3]]],[],[28,29,30],[]],0,[-1,[],[]],[[],17],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[25,[-1]],64,26],[],[]],0,0,[-1,2,[]],[-1,42,[]],[-1,65,[]],[-1,17,[]],[[-1,[53,[57]]],[[53,[57]]],[]],[55,[[8,[5]]]],[[8,64,26]],0,[-1,46,[]],[-1,[[53,[66]]],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[[],26],[-1,47,[]],[-1,[[21,[-1]]],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1,-2]]],[[67,[-1,-2]]],11,[11,68]],[69,69],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[53,[[67,[-1,-2]]],9,68],[[],69],[26],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[-1,[[21,[69]]],70],[17,2],[17,2],[[[67,[-1,-2]],[67,[-1,-2]]],65,71,[71,68]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[[67,[-1,-2]]],72,9,68],[[[67,[-1,-2]],19],23,22,[22,68]],[[69,19],23],[-1,-1,[]],[-1,-1,[]],[[[67,[-1,-2]]],73,9,68],[[[67,[-1,-2]]],53,9,68],[[-1,-2],26,[74,75],76],[[[67,[-1,-2]]],-2,9,68],[[[67,[-1,-2]]],8,9,68],[[[67,[-1,-2]],-2],65,9,68],[[[67,[-1,-2]],-3],2,74,[74,68],77],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[78,[-1]],53],[[67,[-2,-1]]],68,[]],0,0,0,[[69,-1],21,79],[[[67,[-1,-2]]],72,9,68],[-1,-2,[],[]],[-1,-2,[],[]],[[[67,[-1,-2]]],17,9,68],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[[[67,[-1,-2]]],72,9,68],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[80,17],2],[[80,81],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[53,[57]],[16,[58]]],[[45,[[39,[44]]]]],[]],[82,82],[80,80],[83,83],[84,84],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[80,46,[8,[46]]],[[39,[85]]]],[[80,46,[8,[46]]],[[39,[86]]]],[[80,46,[8,[46]]],[[39,[87]]]],[[80,46],[[39,[88]]]],[[],82],[[],83],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,2],[17,2],[17,2],[17,2],[[82,19],23],[[80,19],23],[[83,19],23],[[84,19],[[21,[2,20]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[[],17],[[],17],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[84,55],0,0,0,0,[89,82],0,0,0,[-1,42,[]],[-1,65,[]],[-1,17,[]],[[-1,[53,[57]]],[[53,[57]]],[]],[[80,46],2],[[80,17],2],[[80,46],80],[[80,46],[[39,[89]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[80,90],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[91,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],[-1,26,74],0,[93,93],[[[91,[-1]]],[[91,[-1]]],[11,9]],[[[94,[-1]]],[[94,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[93,26],65],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[[[91,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],[17,2],[17,2],[17,2],[[93,19],23],[[[91,[-1]],19],23,[22,9]],[[[94,[-1]],19],23,[22,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],0,[[[91,[-1]]],[[8,[17]]],9],[[[94,[-1]]],[[8,[17]]],9],[[],17],[[],17],[[],17],[[[91,[-1]],95],[[45,[[39,[44]]]]],9],0,[[93,26],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[91,[-1]]],[[45,[[39,[44]]]]],9],0,0,[17,93],[[[16,[[94,[-1]]]]],[[91,[-1]]],9],[[[91,[-1]]],2,9],[[[91,[-1]]],[[96,[-1]]],9],0,[[[91,[-1]],97],[[45,[[39,[44]]]]],9],[[[91,[-1]],98],[[99,[[21,[[53,[[92,[-1]]]],55]]]]],9],[[[91,[-1]]],2,9],[[[91,[-1]]],[[100,[[92,[-1]]]]],9],[[[91,[-1]]],[[99,[2]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[91,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[[100,[-1,-2]],[53,[[2,[[8,[101]],102]]]]],[[21,[2,55]]],103,68],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[100,[-1,-2]],-1,[73,[-2]]],[[45,[[39,[44]]]]],103,68],[[[104,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],0,0,[[[100,[-1,-2]]],[[100,[-1,-2]]],[11,103],[11,68]],[[[104,[-1]]],[[104,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],0,[[[100,[-1,-2]],-1,-2],[[45,[[39,[44]]]]],103,68],[[[104,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],0,0,[17,2],[17,2],[17,2],[17,2],[[[105,[-1,-2]],19],23,[22,103],[22,68]],[[[100,[-1,-2]],19],23,103,68],[[[104,[-1]],19],23,[22,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],0,[[[100,[-1,-2]],[106,[-1]],[106,[-1]]],2,103,68],[[[100,[-1,-2]],107,[106,[-1]],[106,[-1]]],[[21,[2,55]]],103,68],[[[100,[[92,[-1]]]]],[[8,[17]]],9],[[[104,[-1]]],[[8,[17]]],9],[[],17],[[],17],[[],17],[[],17],[[[100,[-1,-2]],[95,[-2]]],[[45,[[39,[44]]]]],103,68],[[[104,[-1]],95],[[45,[[39,[44]]]]],9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],0,0,[[[100,[-1,-2]]],[[45,[[39,[44]]]]],103,68],[[[104,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,[[82,108,-1,[16,[[15,[[53,[[2,[[8,[101]],102]]]]]]]],17,17,[73,[-1]],[8,[[39,[63]]]],[73,[-1]],65],[[21,[[100,[-2,-1]],55]]],68,103],[[[16,[[100,[[92,[-1]]]]]]],[[104,[-1]]],9],0,[[[104,[-1]]],2,9],0,0,0,0,0,[[[100,[-1,-2]],97,-2],[[45,[[39,[44]]]]],103,68],[[[104,[-1]],97],[[45,[[39,[44]]]]],9],[[[100,[-1,-2]],98],[[99,[[21,[[53,[-1]],55]]]]],103,68],[[[104,[-1]],98],[[99,[[21,[[53,[[92,[-1]]]],55]]]]],9],0,[[[104,[-1]]],2,9],[[109,-1],21,79],[[[100,[-1,-2]]],[[99,[2]]],103,68],[[[104,[-1]]],[[99,[2]]],9],[[[100,[-1,-2]],17],2,103,68],[[[100,[-1,-2]],[110,[[8,[[2,[97,-2]]]]]]],2,103,68],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[100,[-1,-2]]],2,103,68],[[[100,[-1,-2]]],[[45,[[39,[44]]]]],103,68],[[[104,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[111,[-1,-2]],[53,[57]]],[[21,[2,[112,[[53,[57]]]]]]],103,68],0,[[[111,[-1,-2]],-1,[73,[-2]]],[[45,[[39,[44]]]]],103,68],[[[113,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],0,[[[111,[-1,-2]]],[[111,[-1,-2]]],[11,103],[11,68]],[[[113,[-1]]],[[113,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[[[111,[-1,-2]],[53,[57]]],[[21,[2,[112,[[53,[57]]]]]]],103,68],0,[[[111,[-1,-2]],-1,-2],[[45,[[39,[44]]]]],103,68],[[[113,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],0,[17,2],[17,2],[17,2],[17,2],[17,2],[[[114,[-1,-2]],19],23,103,68],[[[115,[-1,-2]],19],23,[22,103],[22,68]],[[[111,[-1,-2]],19],23,103,68],[[[113,[-1]],19],23,[22,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],0,[[[111,[[92,[-1]]]]],[[8,[17]]],9],[[[113,[-1]]],[[8,[17]]],9],0,[[],17],[[],17],[[],17],[[],17],[[],17],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[111,[-1,-2]]],[[45,[[39,[44]]]]],103,68],[[[113,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,[[],[[16,[[114,[-1,-2]]]]],103,68],[[-1,82,[16,[[114,[-2,-1]]]],[8,[[39,[63]]]]],[[111,[-2,-1]]],68,103],[[[16,[[111,[[92,[-1]]]]]]],[[113,[-1]]],9],[[[113,[-1]]],2,9],[[[111,[-1,-2]],98],[[99,[[21,[[53,[-1]],55]]]]],103,68],[[[113,[-1]],98],[[99,[[21,[[53,[[92,[-1]]]],55]]]]],9],0,[[[113,[-1]]],2,9],[[[111,[-1,-2]]],[[99,[2]]],103,68],[[[113,[-1]]],[[99,[2]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[111,[-1,-2]]],[[45,[[39,[44]]]]],103,68],[[[113,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[116,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],[[[96,[-1]],[92,[-1]],73],[[45,[[39,[44]]]]],9],0,0,[[[116,[-1]]],[[116,[-1]]],[11,9]],[[[96,[-1]]],[[96,[-1]]],[11,9]],[[[117,[-1]]],[[117,[-1]]],[11,68]],[[[118,[-1]]],[[118,[-1]]],[11,103]],[[[119,[-1]]],[[119,[-1]]],[11,103]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[120,42,65],[[96,[-1]]],9],0,[[],[[117,[-1]]],68],[17,-1,[]],[17,-1,[]],[[[117,[-1]]],[],68],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[[[117,[-1]]],[],68],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[-1,[[21,[[118,[-2]]]]],70,103],[-1,[[21,[[119,[-2]]]]],70,103],[[[116,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],[[[96,[-1]],[92,[-1]]],[[45,[[39,[44]]]]],9],0,[17,2],[17,2],[17,2],[17,2],[17,2],[17,2],0,[[[118,[-1]],[118,[-1]]],65,[71,103]],[[[119,[-1]],[119,[-1]]],65,[71,103]],[[[116,[-1]],19],23,[22,9]],[[[96,[-1]],19],23,[22,9]],[[[117,[-1]],19],23,[22,68]],[[[121,[-1]],19],23,[22,9]],[[[118,[-1]],19],23,[22,103]],[[[119,[-1]],19],23,[22,103]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],[[17,17,17,17,65,[8,[[39,[63]]]]],[[39,[58]]]],[-1,46,[]],[[[118,[-1]]],46,103],[[-1,-2],26,[74,75],76],[-1,[[8,[-2]]],[],[]],[-1,[[8,[-2]]],[],[]],[[[118,[-1]]],[[8,[-1]]],103],[[[119,[-1]]],[[8,[-1]]],103],[[[121,[-1]],[53,[57]],26,122,26,[123,[26,2]],[123,[26,2]]],65,9],[[[121,[-1]],[53,[57]],26,26],2,9],[-1,26,74],[[[119,[-1]],-2],2,[74,103],77],[[[116,[-1]]],[[8,[17]]],9],[[[96,[-1]]],[[8,[17]]],9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[116,[-1]],95],[[45,[[39,[44]]]]],9],[[[96,[-1]],95],[[45,[[39,[44]]]]],9],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],0,[[[116,[-1]]],[[45,[[39,[44]]]]],9],[[[96,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,0,[[[16,[[96,[-1]]]]],[[116,[-1]]],9],[[[92,[-1]]],[[21,[[118,[[92,[-1]]]],124]]],9],[[[116,[-1]]],2,9],[[[96,[-1]]],2,9],[[[121,[-1]],[110,[95]],122,26,42],[[21,[2,55]]],9],[[[96,[-1]],[118,[[92,[-1]]]]],[[21,[2,55]]],9],0,[[[117,[-1]],26],2,68],[[[116,[-1]],98],[[99,[[21,[[53,[[92,[-1]]]],55]]]]],9],[[[96,[-1]],98],[[99,[[21,[[53,[[92,[-1]]]],55]]]]],9],[[[116,[-1]]],2,9],[[[96,[-1]]],2,9],0,[[[118,[-1]],-2],21,[125,103],79],[[[119,[-1]],-2],21,[125,103],79],0,[[[116,[-1]]],[[99,[2]]],9],[[[96,[-1]]],[[99,[2]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],0,0,[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[116,[-1]]],[[45,[[39,[44]]]]],9],[[[96,[-1]]],[[45,[[39,[44]]]]],9],0,0,0,0,0,0,[[]],[[],[[39,[58]]]],[[],[[21,[59]]]],[[17,17,17,[8,[[39,[63]]]]],[[39,[58]]]],[[],[[45,[[39,[44]]]]]],[[[25,[-1]],64,26],[],[]],[[8,64,26]],[[],26],0,0,0,0,[[-1,[53,[[52,[-2]]]]],[[45,[[39,[44]]]]],[],[]],[[-1,[54,[-2]]],[[45,[[39,[44]]]]],[],[]],[-1,[[45,[[39,[44]]]]],[]],[-1,[[45,[[39,[44]]]]],[]],[-1,[[45,[[39,[44]]]]],[]],0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[[126,[-1]],[53,[[52,[-1]]]]],[[45,[[39,[44]]]]],9],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[126,[-1]]],[[45,[[39,[44]]]]],9],[[[126,[-1]]],[[126,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[[126,[-1]]],[[45,[[39,[44]]]]],9],[[],[[127,[[126,[-1]]]]],9],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,2],[17,2],[[],[[126,[-1]]],9],0,[-1,-1,[]],[-1,-1,[]],[[[126,[-1]]],[[45,[[39,[44]]]]],9],[[[126,[-1]]],[[45,[[39,[44]]]]],9],[[],17],[[],17],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],0,[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[128,78]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[78,[57]]],65],[[[43,[-1]]],[[43,[-1]]],[11,9]],[[[129,[-1]]],[[129,[-1]]],[11,9]],[[[92,[-1]]],[[92,[-1]]],[11,9]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[17,-1,[]],[-1,[[21,[[92,[-2]]]]],70,9],[17,2],[17,2],[17,2],[[[92,[-1]],[92,[-1]]],65,[71,9]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],[[-1,-2],65,[],[]],0,0,[[[43,[-1]],19],[[21,[2,20]]],[22,9]],[[[129,[-1]],19],[[21,[2,20]]],[22,9]],[[[92,[-1]],19],[[21,[2,20]]],[22,9]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[78,[57]]],[[21,[-1,130]]],[]],[[],-1,[]],[[[131,[57]],26],[[2,[-1]]],[]],[[],-1,[]],[[-1,-2],26,[74,75],76],[[],-1,[]],[[53,132]],[[],[[2,[133]]]],[[-1,26],[],[]],[[[92,[-1]]],[],9],0,[[[92,[-1]],-2],2,[74,9],77],0,[[],17],[[],17],[[],17],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],0,0,[[[92,[-1]]],122,9],0,0,[[[92,[-1]],-2],21,9,79],[[[78,[57]]],21],0,[-1,[[53,[57]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[[-1,[78,[57]]],65,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[35,[-1,-2]]],[[35,[-1,-2]]],[11,9],[11,[12,[-1]]]],[[-1,-2],2,[],[]],[17,-1,[]],[17,-1,[]],[17,2],[-1,-1,[]],[[[35,[-1,-2]]],[[16,[[15,[[14,[-1]]]]]]],9,[[12,[-1]]]],[[[35,[-1,-2]]],[],9,[[12,[-1]]]],[[[35,[-1,-2]]],[[25,[-1]]],9,[[12,[-1]]]],[[[35,[-1,-2]]],16,9,[[12,[-1]]]],[[[35,[-1,-2]]],[[0,[134]]],9,[[12,[-1]]]],[[[35,[-1,-2]]],[[38,[[43,[-1]]]]],9,[[12,[-1]]]],[[[35,[-1,-2]]],[[38,[[36,[-1]]]]],9,[[12,[-1]]]],[[[35,[-1,-2]]],[],9,[[12,[-1]]]],[[[35,[-1,-2]]],26,9,[[12,[-1]]]],[[[35,[-1,-2]]],[],9,[[12,[-1]]]],[[[35,[-1,-2]]],[[8,[16]]],9,[[12,[-1]]]],0,[[],17],0,[-1,-2,[],[]],[[[39,[-1]]],[[39,[4]]],[]],[[[16,[-1]]],[[16,[4]]],[]],[[[40,[-1]]],[[40,[4]]],[]],0,0,[[[35,[-1,-2]]],[[99,[2]]],9,[[12,[-1]]]],[[[35,[-1,-2]]],[],9,[[12,[-1]]]],0,[[[35,[-1,-2]]],[[21,[2,[6,[-1]]]]],9,[[12,[-1]]]],[-1,-2,[],[]],[-1,[[21,[-2]]],[],[]],[[[35,[-1,-2]]],[[8,[[25,[-1]]]]],9,[[12,[-1]]]],[-1,[[21,[-2]]],[],[]],[-1,47,[]],[-1,-2,[],[]],[[[35,[-1,-2]]],2,9,[[12,[-1]]]]],"c":[],"p":[[3,"Private",1524],[15,"tuple"],[3,"Private",1524],[8,"Any",1525],[8,"Error",1526],[4,"HotShotError",0],[3,"Backtrace",1527],[4,"Option",1528],[8,"NodeType",1529],[3,"SystemContext",0],[8,"Clone",1530],[8,"NodeImplementation",262],[3,"HotShotConsensusApi",0],[3,"Consensus",1531],[3,"RwLock",1532],[3,"Arc",1533],[15,"usize"],[15,"str"],[3,"Formatter",1534],[3,"Error",1534],[4,"Result",1535],[8,"Debug",1534],[6,"Result",1534],[3,"HotShotInitializer",0],[3,"Leaf",1536],[15,"u64"],[3,"IndentedSection",1537],[8,"Display",1534],[8,"Send",1538],[8,"Sync",1538],[3,"HotShotConfig",1539],[3,"Memberships",0],[3,"Networks",0],[3,"ConsensusMetricsValue",1531],[3,"SystemContextHandle",1480],[4,"HotShotEvent",1540],[3,"Sender",1541],[3,"Receiver",1541],[3,"Box",1542],[3,"Rc",1543],[3,"NonZeroUsize",1544],[3,"Duration",1545],[3,"Event",1312],[8,"Future",1546],[3,"Pin",1547],[3,"String",1548],[3,"TypeId",1525],[3,"TaskRegistry",1549],[8,"CommunicationChannel",1550],[4,"GlobalEvent",227],[3,"ConsensusTaskState",1551],[4,"ViewEntry",1552],[3,"Vec",1553],[3,"StoredView",1552],[4,"NetworkError",262],[3,"BuilderCommitment",1554],[15,"u8"],[8,"Fn",1555],[4,"StorageError",1552],[4,"NetworkNodeHandleError",1556],[8,"Iterator",1557],[8,"IntoIterator",1558],[8,"NetworkReliability",262],[8,"RngCore",1559],[15,"bool"],[3,"Commitment",1560],[3,"GeneralStaticCommittee",367],[8,"SignatureKey",1312],[3,"StaticElectionConfig",367],[8,"Deserializer",1561],[8,"PartialEq",1562],[3,"NonZeroU64",1544],[3,"BTreeSet",1563],[8,"Hash",1564],[8,"Sized",1538],[8,"BuildHasher",1564],[8,"Hasher",1564],[15,"slice"],[8,"Serializer",1565],[3,"NetworkingMetrics",476],[15,"f64"],[3,"NetworkingMetricsValue",476],[3,"InnerNetworkingMetrics",476],[3,"FailedToSerializeSnafu",476],[8,"Counter",1566],[8,"Gauge",1566],[8,"Histogram",1566],[8,"Label",1566],[8,"Metrics",1566],[15,"i64"],[3,"CombinedCommChannel",633],[3,"Message",1312],[3,"Cache",633],[3,"CombinedNetworks",633],[4,"ConsensusIntentEvent",1550],[3,"WebServerNetwork",1020],[3,"ViewNumber",1536],[4,"TransmitType",1550],[6,"BoxSyncFuture",1539],[3,"Libp2pNetwork",733],[3,"PeerId",1567],[3,"Multiaddr",1568],[8,"NetworkMsg",1550],[3,"Libp2pCommChannel",733],[3,"Libp2pNetworkInner",733],[3,"UnboundedSender",1569],[4,"NetworkEvent",1570],[3,"NetworkNodeConfig",1571],[3,"Empty",733],[3,"UnboundedReceiver",1569],[3,"MemoryNetwork",878],[3,"SendError",1572],[3,"MemoryCommChannel",878],[3,"MasterMap",878],[3,"MemoryNetworkInner",878],[3,"WebCommChannel",1020],[3,"TaskMap",1020],[3,"SendMsg",1020],[3,"RecvMsg",1020],[3,"Url",1573],[3,"Inner",1020],[4,"MessagePurpose",1574],[3,"LruCache",1575],[4,"WebServerNetworkError",1550],[8,"Serialize",1565],[3,"MemoryStorage",1261],[6,"StorageResult",262],[3,"BitSlice",1576],[4,"EventType",1312],[4,"PrimitivesError",1577],[15,"array"],[3,"U256",1578],[3,"BitVec",1579],[8,"Stream",1580],[3,"SystemContextInner",0],[13,"Misc",215],[13,"InvalidState",215],[13,"InsufficientValidSignatures",215],[13,"StorageError",215],[13,"TimeoutError",215],[13,"FailedToMessageLeader",215],[13,"FailedToBroadcast",215],[13,"BlockError",215],[13,"NetworkFault",215],[13,"ViewTimeoutError",215],[8,"ValidatedState",262],[8,"TestableNodeImplementation",262],[8,"BlockPayload",262],[8,"Storage",262],[13,"Libp2p",626],[13,"MemoryNetwork",626],[13,"CentralizedServer",626],[13,"WebServer",626],[13,"FailedToSerialize",626],[13,"FailedToDeserialize",626],[13,"Timeout",626],[6,"StaticCommittee",367],[6,"PeerInfoVec",733],[6,"BootstrapAddrs",733],[4,"Combo",878],[6,"TxnResult",1020],[8,"SendMsgTrait",1020],[8,"RecvMsgTrait",1020],[3,"MemoryStorageInternal",1261],[13,"Decide",1466],[13,"Error",1466],[13,"DAProposal",1466],[13,"QuorumProposal",1466],[13,"UpgradeProposal",1466],[13,"Transactions",1466],[13,"ReplicaViewTimeout",1466],[13,"NextLeaderViewTimeout",1466],[13,"ViewFinished",1466]],"b":[[91,"impl-Display-for-HotShotError%3CTYPES%3E"],[92,"impl-Debug-for-HotShotError%3CTYPES%3E"],[320,"impl-Debug-for-NetworkError"],[321,"impl-Display-for-NetworkError"],[599,"impl-Label-for-NetworkingMetrics"],[600,"impl-Gauge-for-NetworkingMetrics"],[875,"impl-Libp2pNetwork%3CM,+K%3E"],[876,"impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E"]]},\
"hotshot_constants":{"doc":"configurable constants for hotshot","t":"RRRRRRRDLLLLLLLLLLMMLLLLL","n":["COMBINED_NETWORK_CACHE_SIZE","COMBINED_NETWORK_MIN_PRIMARY_FAILURES","COMBINED_NETWORK_PRIMARY_CHECK_INTERVAL","EVENT_CHANNEL_SIZE","KAD_DEFAULT_REPUB_INTERVAL_SEC","LOOK_AHEAD","VERSION_0_1","Version","borrow","borrow_mut","clone","clone_into","deserialize","eq","fmt","from","hash","into","major","minor","serialize","to_owned","try_from","try_into","type_id"],"q":[[0,"hotshot_constants"],[25,"core::result"],[26,"serde::de"],[27,"core::fmt"],[28,"core::fmt"],[29,"serde::ser"],[30,"core::any"]],"d":["the number of messages to cache in the combined network","the number of messages to attempt to send over the primary …","the number of messages to send over the secondary network …","Default Channel Size for consensus event sharing","the default kademlia record republication interval (in …","the number of views to gather information for ahead of time","Constant for protocol version 0.1.","Type for protocol version number","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","major version number","minor version number","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[-1,[[3,[1]]],4],[[1,1],5],[[1,6],7],[-1,-1,[]],[[1,-1],2,8],[-1,-2,[],[]],0,0,[[1,-1],3,9],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[3,"Version",0],[15,"tuple"],[4,"Result",25],[8,"Deserializer",26],[15,"bool"],[3,"Formatter",27],[6,"Result",27],[8,"Hasher",28],[8,"Serializer",29],[3,"TypeId",30]],"b":[]},\
"hotshot_orchestrator":{"doc":"Orchestrator for manipulating nodes and recording results …","t":"IDLLLLLLALLAMLFLLLLKLLLLLLFLMKLKLKLFMLLLLLDDDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLMMMLLLLLLLLLLLLLLLMMLLLLLNNNDDDDEDERRRRNNNDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLMMMMLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMM","n":["OrchestratorApi","OrchestratorState","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","client","clone","clone_into","config","config","default","define_api","deref","deref_mut","drop","from","get_start","get_start","init","into","into_any","into_any_arc","into_any_rc","libp2p_generate_indexed_identity","new","nodes_connected","post_getconfig","post_getconfig","post_ready","post_ready","post_run_results","post_run_results","run_orchestrator","start","to_owned","try_from","try_into","type_id","vzip","MultiValidatorArgs","OrchestratorClient","ValidatorArgs","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_multi_args","get_config","group_id","group_id","identity","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","network_config_file","network_config_file","new","num_nodes","public_ip","public_ip","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","url","vzip","vzip","vzip","wait_for_all_nodes_ready","wait_for_fn_from_orchestrator","DeserializeError","FailedToCreatePath","File","HotShotConfigFile","Libp2pConfig","Libp2pConfigFile","NetworkConfig","NetworkConfigError","NetworkConfigFile","NetworkConfigSource","ORCHESTRATOR_DEFAULT_NUM_ROUNDS","ORCHESTRATOR_DEFAULT_START_DELAY_SECONDS","ORCHESTRATOR_DEFAULT_TRANSACTIONS_PER_ROUND","ORCHESTRATOR_DEFAULT_TRANSACTION_SIZE","Orchestrator","ReadFromFileError","SerializeError","ValidatorConfigFile","WebServerConfig","WriteToFileError","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","base_port","base_port","bootstrap_mesh_n","bootstrap_mesh_n","bootstrap_mesh_n_high","bootstrap_mesh_n_high","bootstrap_mesh_n_low","bootstrap_mesh_n_low","bootstrap_mesh_outbound_min","bootstrap_mesh_outbound_min","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_nodes","config","config","da_web_server_config","da_web_server_config","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","election_config_type_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_file","from_file","from_file_or_orchestrator","header","in_current_span","index_ports","index_ports","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key_type_name","known_nodes_with_stake","libp2p_config","libp2p_config","max_transactions","mesh_n","mesh_n","mesh_n_high","mesh_n_high","mesh_n_low","mesh_n_low","mesh_outbound_min","mesh_outbound_min","min_transactions","my_own_validator_config","next_view_timeout","next_view_timeout","next_view_timeout","node_id","node_index","node_index","node_index","num_bootrap","num_bootstrap","num_bootstrap_nodes","num_txn_per_round","online_time","online_time","propose_max_round_time","propose_max_round_time","propose_max_round_time","propose_min_round_time","propose_min_round_time","propose_min_round_time","public_ip","round_start_delay","rounds","rounds","seed","seed","seed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start_delay","start_delay_seconds","start_delay_seconds","timeout_ratio","to_file","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_nodes","transaction_size","transaction_size","transactions_per_round","transactions_per_round","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_between_polls","web_server_config","web_server_config"],"q":[[0,"hotshot_orchestrator"],[42,"hotshot_orchestrator::client"],[140,"hotshot_orchestrator::config"],[456,"dyn_clone::sealed"],[457,"dyn_clone::sealed"],[458,"core::clone"],[459,"hotshot_types::traits::signature_key"],[460,"hotshot_types::traits::election"],[461,"core::default"],[462,"tide_disco::error"],[463,"tide_disco::api"],[464,"tide_disco::api"],[465,"core::marker"],[466,"core::marker"],[467,"tide_disco::method"],[468,"alloc::boxed"],[469,"alloc::sync"],[470,"alloc::rc"],[471,"libp2p_identity::keypair"],[472,"url"],[473,"std::io::error"],[474,"core::any"],[475,"core::fmt"],[476,"core::fmt"],[477,"clap_builder"],[478,"alloc::string"],[479,"clap_builder::util::id"],[480,"core::option"],[481,"core::ops::function"],[482,"core::error"],[483,"serde::de"],[484,"core::fmt"],[485,"core::fmt"]],"d":["An api exposed by the orchestrator","The state of the orchestrator","","","","","","","The orchestrator’s clients","","","Configuration for the orchestrator","The network configuration","","Sets up all API routes","","","","Returns the argument unchanged.","get endpoint for whether or not the run has started","","","Calls <code>U::from(self)</code>.","","","","Generate an keypair based on a <code>seed</code> and an <code>index</code>","create a new <code>OrchestratorState</code>","The total nodes that have posted they are ready to start","post endpoint for each node’s config","","post endpoint for whether or not all nodes are ready","","post endpoint for the results of the run","","Runs the orchestrator","Whether nodes should start their HotShot instances Will be …","","","","","","arguments to run multiple validators","Holds the client connection to the orchestrator","Arguments passed to the validator","","","","","","","","","","","","","","","","","","","","","the client","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Constructs <code>ValidatorArgs</code> from <code>MultiValidatorArgs</code> and a …","Sends an identify message to the orchestrator and attempts …","","","the identity","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","An optional network config file to save to/load from …","An optional network config file to save to/load from …","Creates the client that will connect to the orchestrator","Number of validators to run","This node’s public IP address, for libp2p If no IP …","This node’s public IP address, for libp2p If no IP …","","","","","","","","","","","","","","","","The address the orchestrator runs on","The address the orchestrator runs on","","","","Tells the orchestrator this validator is ready to start …","Generic function that waits for the orchestrator to return …","Failed to deserialize loaded NetworkConfig","Failed to recursively create path to NetworkConfig","we source the network configuration from a config file on …","Holds configuration for a <code>HotShot</code>","Configuration describing a libp2p node","configuration serialized into a file","a network configuration","a network configuration error","a network config stored in a file","the source of the network config","default number of rounds to run","default delay before beginning consensus","default number of transactions per round","default size of transactions","we source the network configuration from the orchestrator","Failed to read NetworkConfig from file","Failed to serialize NetworkConfig","Holds configuration for a validator node","configuration for a web server","Failed to write NetworkConfig to file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","port to run libp2p on","port to run libp2p on","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","corresponds to libp2p DHT parameter of the same name for …","bootstrap nodes (socket, serialized public key)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of committee nodes","the hotshot config","the hotshot config file","the data availability web server config","the data availability web server config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","election config type (for debugging)","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Loads a <code>NetworkConfig</code> from a file.","read the validator config from a file","Asynchronously retrieves a <code>NetworkConfig</code> either from a …","","","whether or not to index ports","whether or not to index ports","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","name of the key type (for debugging)","The known nodes’ public key and stake value","the libp2p config","the libp2p config","Maximum transactions per block","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","corresponds to libp2p DHT parameter of the same name","Minimum transactions per block","My own public key, secret key, stake value","timeout before starting the next view","timeout before starting the next view","Base duration for next-view timeout, in milliseconds","The validator’s index, which can be treated as another …","global index of node (for testing purposes a uid)","global index of node (for testing purposes a uid)","global index of node (for testing purposes a uid)","number of bootstrap nodes","Number of network bootstrap nodes","number of bootstrap nodes","number of transactions per view","time node has been running","time node has been running","maximum time to wait for a view","maximum time to wait for a view","The maximum amount of time a leader can wait to start a …","minimum time to wait for a view","minimum time to wait for a view","The minimum amount of time a leader has to wait to start a …","public ip of this node","The delay a leader inserts before starting pre-commit, in …","number of views to run","number of views to run","unique seed (for randomness? TODO)","unique seed (for randomness? TODO)","The validator’s seed","","","","","","","","Delay after init before starting consensus, in milliseconds","delay before beginning consensus","delay before beginning consensus","The exponential backoff ration for the next-view timeout","Serializes the <code>NetworkConfig</code> and writes it to a file.","","","","","","","","","Total number of nodes in the network","size of transactions","size of transactions","number of transactions per view","number of transactions per view","","","","","","","","","","","","","","","","","","","","","","","","","","","","the url to run on","","","","","","","","","","the time to wait between polls","the webserver config","the webserver config"],"i":[0,0,5,5,5,5,5,5,0,5,5,0,5,5,0,5,5,5,5,60,5,5,5,5,5,5,0,5,5,60,5,60,5,60,5,0,5,5,5,5,5,5,0,0,0,34,34,35,35,40,34,35,40,34,35,34,35,34,35,40,34,35,40,34,35,40,34,35,34,35,34,35,34,35,40,34,35,40,34,35,40,34,35,34,35,40,34,35,34,35,34,35,34,40,34,35,40,40,34,35,40,34,35,40,34,35,40,34,35,40,34,35,34,35,40,35,34,35,34,35,40,34,35,40,34,35,40,34,35,34,35,34,35,34,35,40,34,35,40,40,53,53,56,0,0,0,0,0,0,0,0,0,0,0,56,53,53,0,0,53,46,46,47,47,48,48,28,28,49,49,50,50,51,51,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,53,46,47,46,47,46,47,46,47,46,47,46,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,46,47,48,28,49,50,51,46,47,48,28,49,50,51,50,28,49,28,49,28,50,51,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,46,47,48,28,49,50,51,56,46,47,48,53,28,49,50,51,28,46,47,48,53,53,28,49,50,51,56,46,47,48,53,28,28,49,50,51,28,51,28,53,53,46,47,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,28,50,28,49,50,46,47,46,47,46,47,46,47,50,50,46,28,50,51,46,28,49,28,50,46,46,46,47,46,28,50,46,28,50,46,50,28,49,28,49,51,46,47,48,28,49,50,51,50,28,49,50,28,46,47,48,28,49,50,51,53,50,28,49,28,49,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,56,46,47,48,53,28,49,50,51,48,56,46,47,48,53,28,49,50,51,48,28,49],"f":[0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[5,[-1,-2]]],[[5,[-1,-2]]],[6,7],[6,8]],[[-1,-2],2,[],[]],0,0,[[],[[5,[-1,-2]]],[9,7],[9,8]],[[],[[13,[[11,[-1,10]],12]]],[14,15,16,17]],[18,-1,[]],[18,-1,[]],[18,2],[-1,-1,[]],[-1,[[13,[19,10]]],[]],[[[5,[-1,-2]]],[[13,[19,10]]],[20,6,7],[20,6,14,8]],[[],18],[-1,-2,[],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[25,[24]],26],27],[[[28,[-1,-2]]],[[5,[-1,-2]]],7,8],0,[[-1,29],[[13,[[28,[-2,-3]],10]]],[],[],[]],[[[5,[-1,-2]],29],[[13,[[28,[-1,-2]],10]]],[20,6,7],[20,6,14,8]],[-1,[[13,[2,10]]],[]],[[[5,[-1,-2]]],[[13,[2,10]]],[20,6,7],[20,6,14,8]],[-1,[[13,[2,10]]],[]],[[[5,[-1,-2]]],[[13,[2,10]]],[20,6,7],[20,6,14,8]],[[[28,[-1,-2]],30],[[31,[2]]],[7,20],[8,20]],0,[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,32,[]],[-1,-2,[],[]],0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[33,33],[33,33],[33,33],[33,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[34,34],[35,35],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],33],[[],33],[[],33],[[],33],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,2],[18,2],[18,2],[[34,36],37],[[35,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[38,[[13,[34,39]]]],[38,[[13,[35,39]]]],[38,[[13,[34,39]]]],[38,[[13,[35,39]]]],[[35,29],34],[[40,41],[[28,[-1,-2]]],7,8],[[],[[43,[42]]]],[[],[[43,[42]]]],0,[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],0,0,[[34,41],40],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[[34,38],[[13,[2,39]]]],[[35,38],[[13,[2,39]]]],[[34,38],[[13,[2,39]]]],[[35,38],[[13,[2,39]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[40,26],19],[[40,-1],-2,44,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,45,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[46,46],[47,47],[48,48],[[[28,[-1,-2]]],[[28,[-1,-2]]],[6,7],[6,8]],[[[49,[-1]]],[[49,[-1]]],[6,7]],[[[50,[-1]]],[[50,[-1]]],[6,7]],[51,51],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,0,0,[[],[[28,[-1,-2]]],7,8],[[],[[50,[-1]]],7],[[],51],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[18,-1,[]],[-1,[[13,[46]]],52],[-1,[[13,[47]]],52],[-1,[[13,[48]]],52],[-1,[[13,[[28,[-2,-3]]]]],52,7,8],[-1,[[13,[[49,[-2]]]]],52,7],[-1,[[13,[[50,[-2]]]]],52,7],[-1,[[13,[51]]],52],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],[18,2],0,[[46,36],37],[[47,36],37],[[48,36],37],[[53,36],37],[[53,36],37],[[[28,[-1,-2]],36],37,[54,7],[54,8]],[[[49,[-1]],36],37,[54,7]],[[[50,[-1]],36],37,[54,7]],[[51,36],37],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[49,[-1]]],[[28,[-1,-2]]],7,8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[41,[[13,[[28,[-1,-2]],53]]],7,8],[55,51],[[40,[43,[41]]],[[2,[[28,[-1,-2]],56]]],7,8],[[-1,-2],[[57,[-2,-3]]],[],[58,14,15],[]],[-1,[],[]],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[21,[-1]]],[[21,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[22,[-1]]],[[22,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],[[[23,[-1]]],[[23,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[46,-1],13,59],[[47,-1],13,59],[[48,-1],13,59],[[[28,[-1,-2]],-3],13,[20,7],[20,8],59],[[[49,[-1]],-2],13,[20,7],59],[[[50,[-1]],-2],13,7,59],[[51,-1],13,59],0,0,0,0,[[[28,[-1,-2]],41],[[13,[2,53]]],7,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],0,0,0,0,0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0],"c":[],"p":[[3,"Private",456],[15,"tuple"],[3,"Private",456],[8,"Any",457],[3,"OrchestratorState",0],[8,"Clone",458],[8,"SignatureKey",459],[8,"ElectionConfig",460],[8,"Default",461],[3,"ServerError",462],[3,"Api",463],[4,"ApiError",463],[4,"Result",464],[8,"Send",465],[8,"Sync",465],[8,"ReadState",466],[8,"WriteState",466],[15,"usize"],[15,"bool"],[8,"Serialize",467],[3,"Box",468],[3,"Arc",469],[3,"Rc",470],[15,"u8"],[15,"array"],[15,"u64"],[3,"Keypair",471],[3,"NetworkConfig",140],[15,"u16"],[3,"Url",472],[6,"Result",473],[3,"TypeId",457],[3,"Command",474],[3,"ValidatorArgs",42],[3,"MultiValidatorArgs",42],[3,"Formatter",475],[6,"Result",475],[3,"ArgMatches",476],[6,"Error",477],[3,"OrchestratorClient",42],[3,"String",478],[3,"Id",479],[4,"Option",480],[8,"Fn",481],[8,"Error",482],[3,"Libp2pConfig",140],[3,"Libp2pConfigFile",140],[3,"WebServerConfig",140],[3,"NetworkConfigFile",140],[3,"HotShotConfigFile",140],[3,"ValidatorConfigFile",140],[8,"Deserializer",483],[4,"NetworkConfigError",140],[8,"Debug",475],[15,"str"],[4,"NetworkConfigSource",140],[3,"IndentedSection",484],[8,"Display",475],[8,"Serializer",467],[8,"OrchestratorApi",0]],"b":[[282,"impl-Display-for-NetworkConfigError"],[283,"impl-Debug-for-NetworkConfigError"]]},\
"hotshot_stake_table":{"doc":"This crate contains some stake table implementations for …","t":"AAAARDLLLLLLLLLLALLLLLLMLLLLLLLMMLALLLLMLLLLMLLLLLLLLLLLLLGGRNNNDINNDGEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLMLFLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMMMMMMMMSIKFDDLLLLLLLLLMMLLLLMLLLLLLALLLLLLLLLLLLMMMLLLLLLLLLLLLLMMLLLLLLLLLLMMMLLLLLLLLMLLLMLLLLLLLLLLLLLGDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["config","mt_based","utils","vec_based","STAKE_TABLE_CAPACITY","StakeTable","__clone_box","__clone_box","advance","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","commitment","config","contains_key","deref","deref_mut","deregister","deserialize","drop","epoch_start","eq","equivalent","equivalent","equivalent","fmt","from","get_root","head","height","init","internal","into","into_any","into_any_arc","into_any_rc","last_epoch_start","len","lookup","lookup_with_aux_and_proof","lookup_with_proof","mapping","new","register","sample","serialize","set_value","to_owned","total_stake","try_from","try_into","try_iter","type_id","update","vzip","Digest","FieldType","TREE_BRANCH","Branch","Branch","Empty","IntoIter","Key","Leaf","Leaf","MerkleCommitment","MerklePath","MerklePathEntry","MerkleProof","PersistentMerkleNode","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch_check","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","comm","commitment","compute_root","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_with_mode","digest","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_merkle_path","from_str","get_key","get_key_by_stake","get_key_value","get_value","hash","hash","hash","hash","header","height","index","index","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","len","lookup","multiunzip","multiunzip","new","new","next","num_keys","path","register","serialize","serialize","serialize","serialize","serialize_with_mode","serialized_size","set_value","simple_lookup","size","size","tag","to_merkle_path","to_owned","to_owned","to_owned","to_owned","to_string","total_stakes","tree_height","tree_height","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unvisited","update","verify","vzip","vzip","vzip","vzip","vzip","key","pos","siblings","value","children","comm","comm","key","num_keys","total_stakes","value","SIZE","ToFields","to_fields","u256_to_field","StakeTable","StakeTableSnapshot","__clone_box","__clone_box","__clone_box","__clone_box","advance","as_any","as_any","as_any_mut","as_any_mut","bls_keys","bls_mapping","borrow","borrow","borrow_mut","borrow_mut","capacity","clone","clone","clone_into","clone_into","commitment","compute_head_comm","config","contains_key","default","default","deref","deref","deref_mut","deref_mut","deregister","deserialize","deserialize","drop","drop","epoch_start","epoch_start_comm","epoch_start_total_stake","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","get_version","head","head_total_stake","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","last_epoch_start","last_epoch_start_comm","last_epoch_start_total_stake","len","lookup","lookup_pos","lookup_with_aux_and_proof","lookup_with_proof","new","register","sample","schnorr_keys","serialize","serialize","set_value","stake_amount","to_owned","to_owned","total_stake","try_from","try_from","try_into","try_into","try_iter","type_id","type_id","update","vzip","vzip","FieldType","QCVerKey","StateVerKey","__clone_box","__clone_box","as_any","as_any_mut","assemble","batch_check","borrow","borrow_mut","check","check","clone","clone_into","cmp","deref","deref_mut","deserialize","deserialize_with_mode","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_bytes","from_private","from_str","generated_from_seed_indexed","genesis_proposer_pk","get_public_key","get_public_parameter","get_sig_proof","get_stake_table_entry","hash","header","init","internal","into","into_any","into_any_arc","into_any_rc","partial_cmp","serialize","serialize_with_mode","serialized_size","sign","tag","to_affine","to_bytes","to_fields","to_fields","to_fields","to_owned","to_string","try_from","try_from","try_from","try_into","type_id","validate","verify","vzip","zeroize"],"q":[[0,"hotshot_stake_table"],[4,"hotshot_stake_table::config"],[5,"hotshot_stake_table::mt_based"],[58,"hotshot_stake_table::mt_based::config"],[61,"hotshot_stake_table::mt_based::internal"],[258,"hotshot_stake_table::mt_based::internal::MerklePathEntry"],[262,"hotshot_stake_table::mt_based::internal::PersistentMerkleNode"],[269,"hotshot_stake_table::utils"],[273,"hotshot_stake_table::vec_based"],[367,"hotshot_stake_table::vec_based::config"],[435,"dyn_clone::sealed"],[436,"dyn_clone::sealed"],[437,"core::clone"],[438,"hotshot_types::traits::stake_table"],[439,"hotshot_types::traits::stake_table"],[440,"serde::de"],[441,"core::cmp"],[442,"core::fmt"],[443,"core::fmt"],[444,"alloc::boxed"],[445,"alloc::rc"],[446,"core::option"],[447,"rand_core"],[448,"rand_core"],[449,"primitive_types"],[450,"core::any"],[451,"core::iter::traits::iterator"],[452,"core::marker"],[453,"ark_bn254::fields::fq"],[454,"serde::de"],[455,"ark_serialize"],[456,"core::hash"],[457,"core::hash"],[458,"core::fmt"],[459,"alloc::vec"],[460,"tagged_base64"],[461,"ark_ff::fields::prime"],[462,"jf_primitives::rescue"],[463,"core::cmp"],[464,"bitvec::slice"],[465,"core::cmp"],[466,"jf_primitives::errors"],[467,"bitvec::vec"],[468,"ark_ec::models::short_weierstrass::group"],[469,"ark_ec::models::short_weierstrass::affine"],[470,"jf_primitives::signatures::bls_over_bn254"]],"d":["Configuration file for stake table","A stake table implementation that’s based on Append-only …","Utilities to help building a stake table.","A vector based stake table implementation. The commitment …","Capacity of a stake table","Locally maintained stake table, generic over public key …","","","Update the stake table when the epoch number advances, …","","","","","","","","Config file for stake table","","","","","","","The snapshot of stake table at the beginning of the …","","","","","","Returns the argument unchanged.","returns the root of stake table at <code>version</code>","The most up-to-date stake table, where the incoming …","Height of the underlying merkle tree, determines the …","","Utilities and internals for maintaining a local stake table","Calls <code>U::from(self)</code>.","","","","The stake table used for leader election.","","","","","The mapping from public keys to their location in the …","Initiating an empty stake table. Overall capacity is …","","Almost uniformly samples a key weighted by its stake from …","","Set the stake withheld by <code>key</code> to be <code>value</code>. Return the …","","","","","","","","","Hash algorithm used in Merkle tree, using a RATE-3 rescue","Internal type of Merkle node value(commitment)","Branch of merkle tree. Set to 3 because we are currently …","A branch","A branch","Empty","An owning iterator over the (key, value) entries of a …","Common trait bounds for generic key type <code>K</code> for …","A leaf","A leaf","A succint commitment for Merkle tree","Path from a Merkle root to a leaf","A compressed Merkle node for Merkle path","An existential proof","A persistent merkle tree tailored for the stake table. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Merkle tree digest","Returns the succint commitment of this subtree","Compute the root of this Merkle proof.","","","","","","","","","","","","","","","","Returns the digest of the tree","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a list of Merkle path branches back to an index","","Returns the public key of the associated stake table …","Imagine that the keys in this subtree is sorted, returns …","Returns the associated stake table entry, if there’s any.","Returns the stake amount of the associated stake table …","","","","","","Height of a tree","Returns the index of the given key","Index for the given key","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns a Merkle proof to the given location","","","create a new merkle tree iterator from a <code>root</code>. This …","Creates a new merkle commitment","","Returns the total number of keys in this subtree","A Merkle path for the given leaf","Insert a new <code>key</code> into the Merkle tree","","","","","","","Set the stake of <code>key</code> to be <code>value</code>. Return the previous stake","Returns the stakes withhelded by a public key, None if the …","Returns the number of leaves","Number of leaves","","Convert an index to a list of Merkle path branches","","","","","","Returns the total stakes in this subtree","Returns the height of the tree","Returns the height of the tree","","","","","","","","","","","","","","","","","","The unvisited key values","Update the stake of the <code>key</code> with …","Verify the Merkle proof against the provided Merkle …","","","","","","the key","Position in tree","Siblings","the value","children","field type","field type","the key","number of keys","total stake","the value","The number of field elements needed to represent the given …","A trait that converts into a field element.","Convert the given struct into a list of field elements.","convert a U256 to a field element.","Locally maintained stake table, generic over public key …","a snapshot of the stake table","","","","","Update the stake table when the epoch number advances, …","","","","","bls keys","The mapping from public keys to their location in the …","","","","","upper bound on table size","","","","","","Helper function to recompute the stake table commitment …","Config file for stake table","","","","","","","","","","","","","The snapshot of stake table at the beginning of the …","Commitment of the stake table snapshot version <code>EpochStart</code> …","Total stakes in the snapshot version <code>EpochStart</code>","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","returns the snapshot version","The most up-to-date stake table, where the incoming …","Total stakes in the most update-to-date stake table","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","The stake table used for leader election.","Commitment of the stake table snapshot version …","Total stakes in the snapshot version <code>LastEpochStart</code>","","","Return the index of a given key. Err if the key doesn’t …","","","Initiating an empty stake table.","","","schnorr","","","Set the stake withheld by <code>key</code> to be <code>value</code>. Return the …","amount of stake","","","","","","","","","","","","","","Type for commitment","BLS verification key as indexing key Signature public …","Schnorr verification key as auxiliary information …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Get the internal of verifying key, namely a curve Point","Calls <code>U::from(self)</code>.","","","","","","","","","","Convert the verification key into the affine form.","","","","","","","","","","","","","Signature verification function","",""],"i":[0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,18,32,18,0,0,18,32,0,0,0,0,0,18,18,32,32,33,33,31,31,46,18,32,33,31,46,18,32,33,31,31,46,18,32,33,31,46,18,32,33,31,75,31,18,32,33,31,18,32,33,31,31,18,33,46,18,32,33,31,46,18,32,33,31,18,32,33,31,31,31,46,18,32,33,31,18,32,33,31,18,18,18,32,32,32,33,33,33,31,31,31,18,32,33,31,31,46,18,32,33,31,0,31,33,18,33,33,18,32,33,31,31,31,33,33,46,18,32,33,31,46,18,32,33,31,46,18,32,33,31,46,18,32,33,31,46,18,32,33,31,46,18,75,18,46,46,46,31,46,18,33,18,18,32,33,31,31,31,18,18,31,31,31,0,18,32,33,31,31,18,33,31,46,18,32,33,31,31,31,46,18,32,33,31,46,18,32,33,31,46,18,33,46,18,32,33,31,76,77,77,76,78,78,79,79,78,78,79,56,0,56,0,0,0,58,58,53,53,53,58,53,58,53,58,53,58,53,58,53,53,58,53,58,53,53,53,0,53,58,53,58,53,58,53,53,58,53,58,53,53,53,53,58,53,58,58,58,53,53,53,58,53,58,53,53,53,53,58,53,58,53,58,53,58,53,58,53,53,53,53,53,53,53,53,53,53,53,53,58,58,53,53,58,58,53,53,58,53,58,53,53,58,53,53,58,53,0,0,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,71,61,61,61,61,61,61,61,61,61,61,61,61,61],"f":[0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[[4,[-1]]],2,5],[-1,6,[]],[-1,6,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[4,[-1]]],[[4,[-1]]],[7,5]],[[-1,-2],2,[],[]],[[[4,[-1]],8],[[10,[9]]],5],0,[[[4,[-1]]],11,5],[12,-1,[]],[12,-1,[]],[[[4,[-1]]],[[10,[2,9]]],5],[-1,[[10,[[4,[-2]]]]],13,5],[12,2],0,[[[4,[-1]],[4,[-1]]],11,[14,5]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[4,[-1]],15],16,[17,5]],[-1,-1,[]],[[[4,[-1]],8],[[10,[[19,[[18,[-1]]]],9]]],5],0,0,[[],12],0,[-1,-2,[],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],0,[[[4,[-1]],8],[[10,[12,9]]],5],[[[4,[-1]],8,-1],[[10,[9]]],5],[[[4,[-1]],8],[[10,[2,9]]],5],[[[4,[-1]],8],[[10,[2,9]]],5],0,[12,[[4,[-1]]],5],[[[4,[-1]]],[[10,[2,9]]],5],[[[4,[-1]],-2],[[22,[2]]],5,[23,24]],[[[4,[-1]],-2],10,5,25],[[[4,[-1]],-1,26],[[10,[26,9]]],5],[-1,-2,[],[]],[[[4,[-1]],8],[[10,[9]]],5],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[4,[-1]],8],[[10,[9]]],5],[-1,27,[]],[[[4,[-1]],11],[[10,[9]]],5],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,[[10,[2,28]]],[29,30]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[31,[[10,[2,28]]]],[[[18,[-1]]],[[18,[-1]]],[7,5]],[[[32,[-1]]],[[32,[-1]]],7],[[[33,[-1]]],[[33,[-1]]],7],[31,31],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[[18,[-1]]],34,5],[[[33,[-1]]],[[10,[34,9]]],5],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[-1,[[10,[[18,[-2]]]]],13,5],[-1,[[10,[[32,[-2]]]]],13,35],[-1,[[10,[[33,[-2]]]]],13,35],[-1,[[10,[31]]],13],[[-1,36,37],[[10,[31,28]]],38],[31,34],[12,2],[12,2],[12,2],[12,2],[12,2],[[[18,[-1]],[18,[-1]]],11,[14,5]],[[[32,[-1]],[32,[-1]]],11,14],[[[33,[-1]],[33,[-1]]],11,14],[[31,31],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[18,[-1]],15],16,[17,5]],[[[32,[-1]],15],16,17],[[[33,[-1]],15],16,17],[[31,15],16],[[31,15],16],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[39,[12]]],12],[40,[[10,[31]]]],[[[33,[-1]]],[[22,[-1]]],5],[[[18,[-1]],26],[[22,[[2,[-1,26]]]]],5],[[[33,[-1]]],[[22,[[2,[-1,26]]]]],5],[[[33,[-1]]],[[22,[26]]],5],[[[18,[-1]],-2],2,[41,5],42],[[[32,[-1]],-2],2,41,42],[[[33,[-1]],-2],2,41,42],[[31,-1],2,42],[[-1,-2],[[43,[-2,-3]]],[],[44,30,45],[]],0,[[[33,[-1]]],12,5],0,[[],12],[[],12],[[],12],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[-1,-2,[],[]],[[[18,[-1]]],[],5],0,[[[18,[-1]],12,[39,[12]]],[[10,[[33,[-1]],9]]],5],[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[-1,[[2,[-2,-3,-4]]],[],[],[],[]],[[[19,[[18,[-1]]]]],[[46,[-1]]],5],[[34,12,12],31],[[[46,[-1]]],22,5],[[[18,[-1]]],12,5],0,[[[18,[-1]],12,[39,[12]],-1,26],[[10,[[19,[[18,[-1]]]],9]]],5],[[[18,[-1]],-2],10,5,25],[[[32,[-1]],-2],10,47,25],[[[33,[-1]],-2],10,47,25],[[31,-1],10,25],[[31,-1,36],[[10,[2,28]]],48],[[31,36],12],[[[18,[-1]],12,[39,[12]],-1,26],[[10,[[2,[[19,[[18,[-1]]]],26]],9]]],5],[[[18,[-1]],12,[39,[12]]],[[10,[26,9]]],5],[31,12],0,[[],49],[[12,12],[[50,[12]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,49,[]],[[[18,[-1]]],26,5],[[[33,[-1]]],12,5],[31,12],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[51,[[10,[31]]]],[-1,[[10,[-2]]],[],[]],[51,[[10,[31]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,[[[18,[-1]],12,[39,[12]],-1,26,11],[[10,[[2,[[19,[[18,[-1]]]],26]],9]]],5],[[[33,[-1]],31],[[10,[2,9]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[50,[-2]]],[],[]],[26,-1,52],0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[[53,[-2,-3,-1]]],2,54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[-1,6,[]],[-1,6,[]],[-1,6,[]],[-1,6,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[58,[-1,-2]]],[[58,[-1,-2]]],7,7],[[[53,[-2,-3,-1]]],[[53,[-2,-3,-1]]],[54,7],[55,41,7,[56,[-1]],7],[55,41,7,57,[56,[-1]],7]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[53,[-2,-3,-1]],8],[[10,[9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]]],[[2,[-1,-1,-1]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],0,[[[53,[-2,-3,-1]]],11,54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[],[[58,[-1,-2]]],[],[]],[[],[[53,[-2,-3,-1]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[[[53,[-2,-3,-1]]],[[10,[2,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[-1,[[10,[[58,[-2,-3]]]]],13,35,35],[-1,[[10,[[53,[-3,-4,-2]]]]],13,[54,35],[55,41,7,[56,[-2]],35,57],[55,41,7,57,[56,[-2]],35]],[12,2],[12,2],0,0,0,[[[58,[-1,-2]],[58,[-1,-2]]],11,14,14],[[[53,[-2,-3,-1]],[53,[-2,-3,-1]]],11,[54,14],[55,41,7,[56,[-1]],14],[55,41,7,57,[56,[-1]],14]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[[58,[-1,-2]],15],16,17,17],[[[53,[-2,-3,-1]],15],16,[54,17],[55,41,7,[56,[-1]],17],[55,41,7,57,[56,[-1]],17]],[-1,-1,[]],[-1,-1,[]],[[[53,[-2,-3,-1]],8],[[10,[[58,[-2,-3]],9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],0,0,[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],0,0,0,[[[53,[-2,-3,-1]],8],[[10,[12,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]],8],[[10,[9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]],-2],[[10,[12,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]],8],[[10,[2,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]],8],[[10,[2,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[12,[[53,[-2,-3,-1]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]]],[[10,[2,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[[[53,[-2,-3,-1]],-4],[[22,[2]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]],[23,24]],0,[[[58,[-1,-2]],-3],10,47,47,25],[[[53,[-2,-3,-1]],-4],10,[54,47],[55,41,7,[56,[-1]],47],[55,41,7,57,[56,[-1]],47],25],[[[53,[-2,-3,-1]],-2,26],[[10,[26,9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[53,[-2,-3,-1]],8],[[10,[9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[53,[-2,-3,-1]],8],[[10,[9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[-1,27,[]],[-1,27,[]],[[[53,[-2,-3,-1]],11],[[10,[9]]],54,[55,41,7,[56,[-1]]],[55,41,7,57,[56,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[-1,6,[]],[-1,6,[]],[[59,39]],[-1,[[10,[2,28]]],[29,30]],[-1,-2,[],[]],[-1,-2,[],[]],[[[39,[60]]],11],[61,[[10,[2,28]]]],[61,61],[[-1,-2],2,[],[]],[[61,61],62],[12,-1,[]],[12,-1,[]],[-1,[[10,[61]]],13],[[-1,36,37],[[10,[61,28]]],38],[12,2],[[61,61],11],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[-1,-2],11,[],[]],[[61,15],[[10,[2,63]]]],[[61,15],[[10,[2,63]]]],[64,61],[-1,-1,[]],[[[39,[60]]],[[10,[61,65]]]],[[],61],[40,[[10,[61]]]],[[[66,[60]],67],[[2,[61]]]],[[],61],[[],61],[[50,26]],[[],[[2,[68]]]],[[61,67]],[[61,-1],2,42],[[-1,-2],[[43,[-2,-3]]],[],[44,30,45],[]],[[],12],[61,69],[-1,-2,[],[]],[[[20,[-1]]],[[20,[6]]],[]],[[[19,[-1]]],[[19,[6]]],[]],[[[21,[-1]]],[[21,[6]]],[]],[[61,61],[[22,[62]]]],[[61,-1],10,25],[[61,-1,36],[[10,[2,28]]],48],[[61,36],12],[[[39,[60]]],10],[[],49],[61,70],[61,[[50,[60]]]],[71,[[50,[72]]]],[61,[[50,[72]]]],[61,[[50,[34]]]],[-1,-2,[],[]],[-1,49,[]],[51,[[10,[61]]]],[51,[[10,[61]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,27,[]],[[61,[39,[60]]],11],[[61,[39,[60]],73,-1],[[10,[2,65]]],[[74,[[39,[60]]]]]],[-1,-2,[],[]],[61,2]],"c":[],"p":[[3,"Private",435],[15,"tuple"],[3,"Private",435],[3,"StakeTable",5],[8,"Key",61],[8,"Any",436],[8,"Clone",437],[4,"SnapshotVersion",438],[4,"StakeTableError",438],[4,"Result",439],[15,"bool"],[15,"usize"],[8,"Deserializer",440],[8,"PartialEq",441],[3,"Formatter",442],[6,"Result",442],[8,"Debug",442],[4,"PersistentMerkleNode",61],[3,"Arc",443],[3,"Box",444],[3,"Rc",445],[4,"Option",446],[8,"SeedableRng",447],[8,"CryptoRngCore",447],[8,"Serializer",448],[3,"U256",449],[3,"TypeId",436],[4,"SerializationError",450],[8,"Iterator",451],[8,"Send",452],[3,"MerkleCommitment",61],[4,"MerklePathEntry",61],[3,"MerkleProof",61],[6,"Fq",453],[8,"Deserialize",440],[4,"Compress",454],[4,"Validate",454],[8,"Read",455],[15,"slice"],[15,"str"],[8,"Hash",456],[8,"Hasher",456],[3,"IndentedSection",457],[8,"Display",442],[8,"Sync",452],[3,"IntoIter",61],[8,"Serialize",448],[8,"Write",455],[3,"String",458],[3,"Vec",459],[3,"TaggedBase64",460],[8,"PrimeField",461],[3,"StakeTable",273],[8,"RescueParameter",462],[8,"Eq",441],[8,"ToFields",269],[8,"Default",463],[3,"StakeTableSnapshot",273],[3,"BitSlice",464],[15,"u8"],[3,"QCVerKey",367],[4,"Ordering",441],[3,"Error",442],[3,"SignKey",465],[4,"PrimitivesError",466],[15,"array"],[15,"u64"],[3,"BitVec",467],[3,"Projective",468],[3,"Affine",469],[6,"StateVerKey",367],[6,"FieldType",367],[3,"Signature",465],[8,"AsRef",470],[6,"MerklePath",61],[13,"Leaf",258],[13,"Branch",258],[13,"Branch",262],[13,"Leaf",262]],"b":[[155,"impl-Display-for-MerkleCommitment"],[156,"impl-Debug-for-MerkleCommitment"],[237,"impl-TryFrom%3CTaggedBase64%3E-for-MerkleCommitment"],[239,"impl-TryFrom%3C%26TaggedBase64%3E-for-MerkleCommitment"],[378,"impl-SignatureKey-for-VerKey"],[379,"impl-Valid-for-VerKey"],[392,"impl-Display-for-VerKey"],[393,"impl-Debug-for-VerKey"],[422,"impl-ToFields%3CFp%3CMontBackend%3CFrConfig,+4%3E,+4%3E%3E-for-VerKey"],[423,"impl-ToFields%3CFp%3CMontBackend%3CFqConfig,+4%3E,+4%3E%3E-for-VerKey"],[426,"impl-TryFrom%3CTaggedBase64%3E-for-VerKey"],[427,"impl-TryFrom%3C%26TaggedBase64%3E-for-VerKey"]]},\
"hotshot_task":{"doc":"Task primatives for <code>HotShot</code>","t":"AAADIIDDLLLLLLLLLLKLLLMMMLLLLLLLLMLLLLLLLLLLLDIQLLMLMKLLLLLLQQQQQDDIDILLLLLLLLMMLLLLKKLLLLLMLLLMLLLLLLLKLLLLMLLLMMLLLLLLLLL","n":["dependency","dependency_task","task","AndDependency","CombineDependencies","Dependency","EventDependency","OrDependency","add_dep","add_dep","add_deps","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","completed","completed","completed","completed","deps","deps","event_rx","from","from","from","from_deps","from_deps","into","into","into","match_fn","new","or","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","DependencyTask","HandleDepOutput","Output","borrow","borrow_mut","dep","from","handle","handle_dep_result","into","new","run","try_from","try_into","type_id","Event","Message","Output","Output","State","Task","TaskRegistry","TaskState","TestTask","TestTaskState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone_sender","default","event_receiver","event_sender","filter","from","from","from","handle_event","handle_message","handle_result","into","into","into","join_all","message_receivers","new","new","register","registry","run","run","run_sub_task","run_task","send","send_event","sender","should_shutdown","shutdown","shutdown","spawn_dependency_task","state","state","state_mut","state_mut","subscribe","task","task_handles","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"hotshot_task"],[3,"hotshot_task::dependency"],[45,"hotshot_task::dependency_task"],[60,"hotshot_task::task"],[123,"core::clone"],[124,"core::marker"],[125,"core::marker"],[126,"alloc::vec"],[127,"core::option"],[128,"async_broadcast"],[129,"core::ops::function"],[130,"alloc::boxed"],[131,"core::result"],[132,"core::any"],[133,"async_std::task::join_handle"],[134,"async_broadcast"],[135,"async_broadcast"]],"d":["Simple Dependecy types","Task which can uses dependencies","Basic task types","Defines a dependency that completes when all of its deps …","Used to combine dependencies to create <code>AndDependency</code>s or …","Type which describes the idea of waiting for a dependency …","A dependency that listens on a chanel for an event that …","Defines a dependency that complets when one of it’s …","Add another dependency","Add another dependecy","Add multiple dependencies","Create an and dependency from this dependency and another","","","","","","","Complete will wait until it gets some value <code>T</code> then return …","Returns a vector of all of the results from it’s …","Returns the value of the first completed dependency","","Dependencies being combined","Dependencies being combined","Channel of incomming events","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create from a vec of deps","Creat an <code>OrDependency</code> from a vec of dependencies","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Closure which returns true if the incoming <code>T</code> is the thing …","Create a new <code>EventDependency</code>","Create an or dependency from this dependency and another","","","","","","","","","","A task that runs until it’s dependency completes and it …","Defines a type that can handle the result of a dependency","Type we expect from completed dependency","","","Dependency this taks waits for","Returns the argument unchanged.","Handles the results returned from …","Called once when the Dependency completes handles the …","Calls <code>U::from(self)</code>.","Create a new <code>DependencyTask</code>","Spawn the dependency task","","","","Type of event sent and received by the task","Message type handled by the task","The result returned when this task compeltes","Result returned by the test task on completion","The state type","A basic task which loops waiting for events to come from …","A collection of tasks which can handle shutdown","Type for mutable task state that can be used as the state …","Similar to <code>Task</code> but adds functionality for testing.  …","Task state for a test.  Similar to <code>TaskState</code> but it handles","","","","","","","Clone the sender handle","","Receives events that are broadcast from any task, …","Sends events all tasks including itself","Return true if the event should be filtered","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handle event and update state.  Return true if the task is …","Handle and incoming message and return <code>Some</code> if the task is …","Do something with the result of the task before it shuts …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wait for the results of all the tasks registered","Receivers for outside events","Create a new task","Create a test task","Add a task to the registry","Contains this task, used to register any spawned tasks","Spawn the task loop, consuming self.  Will continue until …","Runs the task, taking events from the the test events and …","Spawn a new task adn register it.  It will get all events …","Take a task, run it, and register it","Broadcast a message to all listening tasks","Send an event to other listening test tasks","Get a new sender handle for events","Return true if the event should shut the task down","Handle anything before the task is completely shutdown","Try to cancel/abort the task this registry has","Create a new <code>DependencyTask</code> run it, and register it","Get a ref to state","The state of the task.  It is fed events from <code>event_sender</code> …","Get a mutable reference to this tasks state","Get a mutable ref to state","Create a new event <code>Receiver</code> from this Task’s receiver. …","Task which handles test events","Tasks this registry controls","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,7,1,6,1,7,12,1,7,12,6,1,7,12,1,7,12,1,7,12,1,7,1,7,12,12,12,6,1,7,12,1,7,12,1,7,12,0,0,19,18,18,18,18,18,19,18,18,18,18,18,18,23,29,23,29,29,0,0,0,0,0,21,27,24,21,27,24,21,24,21,21,23,21,27,24,23,29,23,21,27,24,24,27,21,27,24,21,21,27,21,24,21,27,21,23,23,24,24,27,21,21,27,21,27,24,21,27,24,21,27,24,21,27,24],"f":[0,0,0,0,0,0,0,0,[[[1,[-1]],-2],2,[3,4,5],[[6,[-1]],4]],[[[7,[-1]],-2],2,[3,4,5],[[6,[-1]],4]],[[[1,[-1]],[1,[-1]]],2,[3,4,5]],[[-1,-3],[[1,[-2]]],[8,4],[4,5,3],[[6,[-2]],4]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[0,[9,4]]],[]],[[[1,[-1]]],[[11,[[10,[-1]]]]],[3,4,5]],[[[7,[-1]]],[[11,[-1]]],[3,4,5]],[[[12,[-1]]],[[11,[-1]]],[3,4,5]],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[10,[-2]]],[[1,[-1]]],[3,4,5],[[6,[-1]],4]],[[[10,[-2]]],[[7,[-1]]],[3,4,5],[[6,[-1]],4]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[13,[-1]],[15,[14]]],[[12,[-1]]],[3,4,5]],[[-1,-3],[[7,[-2]]],[8,4],[4,5,3],[[6,[-2]],4]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-1,[]],0,[-1,[[0,[9,4]]],[]],[-1,-2,[],[]],[[-1,-2],[[18,[-1,-2]]],[6,4],[19,4]],[[[18,[-1,-2]]],[[20,[2]]],[6,4],19],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[21,[-1]]],22,[23,4]],[[],24],0,0,[-1,25,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[21,[-1]]],[[0,[9,4]]],8],[[26,[27,[-1]]],[[0,[9,4]]],8],[-1,[[0,[9,4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,[[10,[2]]]],0,[[22,13,[28,[24]],-1],[[21,[-1]]],[23,4]],[[[21,[-1]],[10,[13]]],[[27,[-1,-2]]],[23,4],[29,4,5]],[[24,[20,[2]]],2],0,[[[21,[-1]]],[[20,[2]]],[23,4]],[[[27,[-1,-2]]],20,[23,4],[29,4,5]],[[[21,[-1]],-1],2,[23,4]],[[24,[21,[-1]]],2,[23,4]],[[[21,[-1]]],[[16,[11,30]]],[23,4]],[[[27,[-1,-2]]],2,[23,4],[29,4,5]],[[[21,[-1]]],22,[23,4]],[[],25],[-1,[[0,[9,4]]],[]],[24,2],[[24,-2,-3],2,[],[[6,[-1]],4],19],[[[27,[-1,-2]]],-1,[23,4],[29,4,5]],0,[[[21,[-1]]],-1,[23,4]],[[[27,[-1,-2]]],-1,[23,4],[29,4,5]],[[[21,[-1]]],13,[23,4]],0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]]],"c":[],"p":[[3,"AndDependency",3],[15,"tuple"],[8,"Clone",123],[8,"Send",124],[8,"Sync",124],[8,"Dependency",3],[3,"OrDependency",3],[8,"Sized",124],[8,"Future",125],[3,"Vec",126],[4,"Option",127],[3,"EventDependency",3],[3,"Receiver",128],[8,"Fn",129],[3,"Box",130],[4,"Result",131],[3,"TypeId",132],[3,"DependencyTask",45],[8,"HandleDepOutput",45],[3,"JoinHandle",133],[3,"Task",60],[3,"Sender",128],[8,"TaskState",60],[3,"TaskRegistry",60],[15,"bool"],[15,"usize"],[3,"TestTask",60],[3,"Arc",134],[8,"TestTaskState",60],[3,"SendError",128]],"b":[]},\
"hotshot_task_impls":{"doc":"The consensus layer for hotshot. This currently implements …","t":"AAAAAAAAAAADDDDNNGLLMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMLLMMMMMLLLLLLLLLLLLLLLMMLLLLLDDDNNGLLMLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMLLLNNNNNNNEDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLLMLFLLLLLLFLLLLLFFDDLLLLLLLLLLMLLFLLLLLLMLLMLLLLLLLLLLLLLLLLMFLLLLLLLLLFMFLLGDDDLLMLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMMLLLLMLLLLLLLLLLLLLDDNNDGLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLMLLLDDDLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMLLLNNNNGEDDDDLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMMMLMLLLMLLLLLLLLLLLLLLLLLLMMLLLLLDIGIGGGGGGDDDLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKKLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLKMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLMMMMMMMMMLLLL","n":["consensus","da","events","harness","helpers","network","transactions","upgrade","vid","view_sync","vote","CommitmentAndMetadata","ConsensusTaskError","ConsensusTaskSnafu","ConsensusTaskState","None","Some","VoteCollectorOption","__clone_box","__clone_box","_pd","api","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","commitment","committee_membership","committee_network","consensus","cur_view","current_proposal","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","fail","filter","fmt","fmt","fmt","from","from","from","from","genesis_leaf","handle","handle_event","header","id","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","is_genesis","metadata","output_event_stream","payload_commitment_and_metadata","private_key","public_key","publish_proposal_if_able","quorum_membership","quorum_network","should_shutdown","source","timeout","timeout_cert","timeout_membership","timeout_task","timeout_vote_collector","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_view","vid_shares","vote_collector","vote_if_able","vzip","vzip","vzip","vzip","ConsensusTaskError","ConsensusTaskSnafu","DATaskState","None","Some","VoteCollectorOption","__clone_box","__clone_box","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","consensus","cur_view","da_membership","da_network","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","filter","fmt","fmt","fmt","from","from","from","handle","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","private_key","public_key","quorum_membership","should_shutdown","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_collector","vzip","vzip","vzip","BlockReady","DACRecv","DACSend","DAProposalRecv","DAProposalSend","DAVoteRecv","DAVoteSend","HotShotEvent","HotShotTaskCompleted","LeafDecided","QCFormed","QuorumProposalRecv","QuorumProposalSend","QuorumVoteRecv","QuorumVoteSend","SendPayloadCommitmentAndMetadata","Shutdown","Timeout","TimeoutVoteRecv","TimeoutVoteSend","TransactionSend","TransactionsRecv","TransactionsSequenced","UpgradeCertificateFormed","UpgradeProposalRecv","UpgradeProposalSend","UpgradeVoteRecv","UpgradeVoteSend","VidDisperseRecv","VidDisperseSend","ViewChange","ViewSyncCommitCertificate2Recv","ViewSyncCommitCertificate2Send","ViewSyncCommitVoteRecv","ViewSyncCommitVoteSend","ViewSyncFinalizeCertificate2Recv","ViewSyncFinalizeCertificate2Send","ViewSyncFinalizeVoteRecv","ViewSyncFinalizeVoteSend","ViewSyncPreCommitCertificate2Recv","ViewSyncPreCommitCertificate2Send","ViewSyncPreCommitVoteRecv","ViewSyncPreCommitVoteSend","ViewSyncTimeout","ViewSyncTrigger","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TestHarnessState","allow_extra_output","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","expected_output","from","handle_event","handle_event","init","into","into_any","into_any_arc","into_any_rc","run_harness","should_shutdown","try_from","try_into","type_id","vzip","broadcast_event","cancel_task","NetworkEventTaskState","NetworkMessageTaskState","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","channel","clone","clone_into","committee_filter","deref","deref","deref_mut","deref_mut","drop","drop","event_stream","filter","filter","filter","from","from","handle_event","handle_event","handle_event","handle_messages","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","membership","quorum_filter","should_shutdown","should_shutdown","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vid_filter","view","view_sync_filter","vzip","vzip","CommitmentMap","ConsensusTaskError","ConsensusTaskSnafu","TransactionTaskState","__clone_box","__clone_box","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","base","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","consensus","cur_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","filter","fmt","fmt","fmt","from","from","from","handle","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","membership","network","private_key","public_key","seen_transactions","should_shutdown","source","to_owned","to_string","transactions","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_transactions","ConsensusTaskError","ConsensusTaskSnafu","None","Some","UpgradeTaskState","VoteCollectorOption","__clone_box","__clone_box","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","cur_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","filter","fmt","fmt","fmt","from","from","from","handle","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","private_key","public_key","quorum_membership","quorum_network","should_shutdown","should_vote","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_collector","vzip","vzip","vzip","ConsensusTaskError","ConsensusTaskSnafu","VIDTaskState","__clone_box","__clone_box","api","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","consensus","cur_view","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","filter","fmt","fmt","fmt","from","from","from","handle","handle_event","header","id","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","membership","network","private_key","public_key","should_shutdown","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_collector","vzip","vzip","vzip","Commit","Finalize","None","PreCommit","RelayMap","ViewSyncPhase","ViewSyncReplicaTaskState","ViewSyncTaskError","ViewSyncTaskSnafu","ViewSyncTaskState","__clone_box","__clone_box","__clone_box","__clone_box","api","api","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","base","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","commit_relay_map","current_view","current_view","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","fail","filter","filter","finalize_relay_map","finalized","fmt","fmt","fmt","fmt","from","from","from","from","from","handle","handle","handle_event","handle_event","hash","header","id","id","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","last_garbage_collected_view","membership","membership","network","network","next_view","next_view","num_timeouts_tracked","partial_cmp","pre_commit_relay_map","private_key","private_key","public_key","public_key","relay","replica_task_map","send_to_or_create_replica","sent_view_change_event","should_shutdown","should_shutdown","source","timeout_task","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","view_sync_timeout","view_sync_timeout","vzip","vzip","vzip","vzip","vzip","AccumulatorInfo","AggregatableVote","DAVoteState","HandleVoteEvent","QuorumVoteState","TimeoutVoteState","UpgradeVoteState","ViewSyncCommitVoteState","ViewSyncFinalizeVoteState","ViewSyncPreCommitState","VoteCollectionTaskState","VoteTaskError","VoteTaskSnafu","__clone_box","__clone_box","accumulate_vote","accumulator","accumulator","accumulator","accumulator","accumulator","accumulator","accumulator","accumulator","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone_into","create_vote_accumulator","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","fail","filter","filter","filter","filter","filter","filter","filter","filter","fmt","fmt","fmt","from","from","from","from","get_leader","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","header","id","id","id","id","id","id","id","id","id","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","make_cert_event","membership","membership","membership","membership","membership","membership","membership","membership","membership","public_key","public_key","public_key","public_key","public_key","public_key","public_key","public_key","public_key","should_shutdown","source","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view","view","view","view","view","view","view","view","view","vzip","vzip","vzip","vzip"],"q":[[0,"hotshot_task_impls"],[11,"hotshot_task_impls::consensus"],[137,"hotshot_task_impls::da"],[227,"hotshot_task_impls::events"],[328,"hotshot_task_impls::harness"],[352,"hotshot_task_impls::helpers"],[354,"hotshot_task_impls::network"],[412,"hotshot_task_impls::transactions"],[502,"hotshot_task_impls::upgrade"],[591,"hotshot_task_impls::vid"],[677,"hotshot_task_impls::view_sync"],[841,"hotshot_task_impls::vote"],[1007,"dyn_clone::sealed"],[1008,"dyn_clone::sealed"],[1009,"core::error"],[1010,"snafu::backtrace_shim"],[1011,"core::option"],[1012,"core::result"],[1013,"hotshot_types::traits::node_implementation"],[1014,"hotshot_types::traits::node_implementation"],[1015,"core::fmt"],[1016,"core::fmt"],[1017,"async_broadcast"],[1018,"hotshot_task::task"],[1019,"color_eyre::section"],[1020,"core::fmt"],[1021,"core::marker"],[1022,"alloc::sync"],[1023,"alloc::rc"],[1024,"hotshot_types::simple_certificate"],[1025,"alloc::string"],[1026,"core::any"],[1027,"core::cmp"],[1028,"core::fmt"],[1029,"core::hash"],[1030,"std::collections::hash::map"],[1031,"hotshot_task::task"],[1032,"hotshot_types::traits::network"],[1033,"hotshot_types::message"],[1034,"core::cmp"],[1035,"hotshot_types::vote"],[1036,"core::pin"],[1037,"hotshot_types::simple_vote"],[1038,"hotshot_types::simple_certificate"]],"d":["the task which implements the main parts of consensus","The task which implements the main parts of data …","Defines the events passed between tasks","Defines the types to run unit tests for a task.","Helper functions used by any task","The task which implements the network.","The task which implements all transaction handling","Task for handling upgrades","The task which implements verifiable information dispersal","The task which implements view synchronization","Generic task for collecting votes","Alias for the block payload commitment and the associated …","Error returned by the consensus task","SNAFU context selector for the <code>ConsensusTaskError</code> error","The state for the consensus task.  Contains all of the …","No value.","Some value of type <code>T</code>.","Alias for Optional type for Vote Collectors","","","needed to typecheck","Consensus api","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Vid Commitment","Membership for DA committee Votes/certs","Network for DA committee","Reference to consensus. The replica will require a write …","View number this view is executing in.","The most recent proposal we have, will correspond to the …","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Handles a consensus event received on the event stream","","","The node’s id","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Flag for if this data represents the genesis block","Metadata for the block payload","Output events to application","The commitment to the current block payload and its …","Our Private Key","Our public key","Sends a proposal if possible from the high qc we have","Membership for Quorum Certs/votes","Network for all nodes","","","View timeout from config.","last Timeout Certificate this node formed","Membership for Timeout votes/certs","timeout task handle","Current timeout vote collection task with its view","","","","","","","","","","","","","","","Must only update the view and GC if the view actually …","All the VID shares we’ve received for current and future …","Current Vote collection task, with it’s view.","","","","","","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","Tracks state of a DA task","No value.","Some value of type <code>T</code>.","Alias for Optional type for Vote Collectors","","","The state’s api","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Reference to consensus. Leader will require a read lock on …","View number this view is executing in.","Membership for the DA committee","Network for DA","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This Nodes private key","This Nodes public key","Membership for the quorum committee We need this only for …","","","","","","","","","","","","","","The current vote collection task, if there is one.","","","","Event when the transactions task has a block formed","A Data Availability Certificate (DAC) has been recieved by …","The DA leader has collected enough votes to form a DAC; …","A DA proposal has been received from the network; handled …","Send a DA proposal to the DA committee; emitted by the DA …","A DA vote has been received by the network; handled by the …","Send a DA vote to the DA leader; emitted by DA committee …","All of the possible events that can be passed between …","Marker that the task completed","Event when consensus decided on a leaf","The next leader has collected enough votes to form a QC; …","A quorum proposal has been received from the network; …","Send a quorum proposal to the network; emitted by the …","A quorum vote has been received from the network; handled …","Send a quorum vote to the next leader; emitted by a …","Event to send block payload commitment and metadata from …","Shutdown the task","A consensus view has timed out; emitted by a replica in …","A timeout vote recevied from the network; handled by …","Send a timeout vote to the network; emitted by consensus …","Send transactions to the network","Receive transactions from the network","Event when the transactions task has sequenced …","Upgrade certificate has been sent to the network","Upgrade proposal has been received from the network","Upgrade proposal has been sent to the network","Upgrade vote has been received from the network","Upgrade vote has been sent to the network","Vid disperse data has been received from the network; …","Send VID shares to VID storage nodes; emitted by the DA …","The current view has changed; emitted by the replica in …","Receive a <code>ViewSyncCommitCertificate2</code> from the network; …","Send a <code>ViewSyncCommitCertificate2</code> from the network; …","Receive a <code>ViewSyncCommitVote</code> from the network; received by …","Send a <code>ViewSyncCommitVote</code> from the network; emitted by a …","Receive a <code>ViewSyncFinalizeCertificate2</code> from the network; …","Send a <code>ViewSyncFinalizeCertificate2</code> from the network; …","Receive a <code>ViewSyncFinalizeVote</code> from the network; received …","Send a <code>ViewSyncFinalizeVote</code> from the network; emitted by a …","Receive a <code>ViewSyncPreCommitCertificate2</code> from the network; …","Send a <code>ViewSyncPreCommitCertificate2</code> from the network; …","Receive a <code>ViewSyncPreCommitVote</code> from the network; received …","Send a <code>ViewSyncPreCommitVote</code> from the network; emitted by …","Timeout for the view sync protocol; emitted by a replica …","Trigger the start of the view sync protocol; emitted by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The state for the test harness task. Keeps track of which …","If true we won’t fail the test if extra events come in","","","","","","","","The expected events we get from the test.  Maps an event …","Returns the argument unchanged.","Handles an event for the Test Harness Task.  If the event …","","","Calls <code>U::from(self)</code>.","","","","Runs a test by building the task using <code>build_fn</code> and then …","","","","","","Helper function to send events and log errors","Cancel a task","network event task state","the network message task state","","","","","","","","","","","comm channel","","","committee filter","","","","","","","Sender to send internal events this task generates to …","","","Filter which returns false for the events that this …","Returns the argument unchanged.","Returns the argument unchanged.","","Handle the given event.","","Handle the message.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","membership for the channel","quorum filter","","","","","","","","","","vid filter","view number","view sync filter","","","A type alias for <code>HashMap&lt;Commitment&lt;T&gt;, T&gt;</code>","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","Tracks state of a Transaction task","","","The state’s api","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Reference to consensus. Leader will require a read lock on …","View number this view is executing in.","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Membership for teh quorum","Network for all nodes","Our Private Key","This Nodes Public Key","A list of transactions we’ve seen decided, but didn’t …","","","","","A list of undecided transactions","","","","","","","","","","","","","","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","No value.","Some value of type <code>T</code>.","Tracks state of a DA task","Alias for Optional type for Vote Collectors","","","The state’s api","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","View number this view is executing in.","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This Nodes private key","This Nodes public key","Membership for Quorum Certs/votes","Network for all nodes","","Whether we should vote affirmatively on a given upgrade …","","","","","","","","","","","","","The current vote collection task, if there is one.","","","","Error type for consensus tasks","SNAFU context selector for the <code>ConsensusTaskError</code> error","Tracks state of a VID task","","","The state’s api","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Reference to consensus. Leader will require a read lock on …","View number this view is executing in.","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","main task event handler","","","This state’s ID","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Membership for the quorum","Network for all nodes","Our Private Key","This Nodes Public Key","","","","","","","","","","","","","","The view and ID of the current vote collection task, if …","","","","Commit phase","Finalize phase","No phase; before the protocol has begun","PreCommit phase","Type alias for a map from View Number to Relay to Vote Task","Phases of view sync","State of a view sync replica task","Stub of a view sync error","SNAFU context selector for the <code>ViewSyncTaskError</code> error","Main view sync task state","","","","","HotShot consensus API","HotShot consensus API","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","Map of commit vote accumulates for the relay","View HotShot is currently in","Current round HotShot is in","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","Map of finalize vote accumulates for the relay","Whether we have seen a finalized certificate","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handles incoming events for the main view sync task","Handle incoming events for the view sync replica task","","","","","Our node id; for logging","Our node id; for logging","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Last view we garbage collected old tasks","Membership for teh quorum","Membership for teh quorum","Network for all nodes","Network for all nodes","View HotShot wishes to be in","Round HotShot wishes to be in","How many timeouts we’ve seen in a row; is reset upon a …","","Map of pre-commit vote accumulates for the relay","Our Private Key","Our Private Key","This Nodes Public Key","This Nodes Public Key","The relay index we are currently on","Map of running replica tasks","Handles incoming events for the main view sync task","Whether we have already sent a view change event for …","","","","Timeout task handle, when it expires we try the next relay","","","","","","","","","","","","","","","","","","","Timeout duration for view sync rounds","Timeout for view sync rounds","","","","","","Info needed to create a vote accumulator task","Describes the functions a vote must implement for it to be …","Alias for DA vote accumulator","Trait for types which will handle a vote event.","Alias for Quorum vote accumulator","Alias for Timeout vote accumulator","Alias for upgrade vote accumulator","Alias for View Sync Commit vote accumulator","Alias for View Sync Finalize vote accumulator","Alias for View Sync Pre Commit vote accumulator","Task state for collecting votes of one type and emiting a …","Stub of a vote error","SNAFU context selector for the <code>VoteTaskError</code> error","","","Take one vote and accumultate it. Returns either the cert …","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","accumulator handles aggregating the votes","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","Generic function for spawnnig a vote task.  Returns the …","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Event filter to use for this event","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","return the leader for this votes","Handle a vote event","","","","","","","","","","Node id","This nodes id","Node id","Node id","Node id","Node id","Node id","Node id","Node id","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","return the Hotshot event for the completion of this CERT","Membership for voting","Membership we are accumulation votes for","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Membership for voting","Public key for this node.","This nodes Pub Key","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","Public key for this node.","","","","","","","","","","","","","","","","","The view which we are collecting votes for","View of the votes we are collecting","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","The view which we are collecting votes for","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,89,0,9,9,13,13,90,13,6,9,90,13,6,9,6,6,90,13,6,9,90,13,6,9,9,6,9,9,90,13,13,13,13,13,90,13,6,9,90,13,6,9,6,90,13,6,9,9,13,6,6,9,90,13,6,9,13,13,13,6,13,6,90,13,6,9,90,13,6,9,90,13,6,9,90,13,6,9,90,13,6,9,9,90,90,13,13,13,13,13,13,13,13,6,13,13,13,13,13,9,6,90,13,6,9,90,13,6,9,90,13,6,9,13,13,13,13,90,13,6,9,0,0,0,91,91,0,35,35,36,36,34,35,36,34,35,34,34,36,34,35,36,34,35,35,34,35,35,36,36,36,36,36,34,35,36,34,35,34,36,34,35,35,36,34,34,35,36,34,35,36,36,34,36,34,36,34,35,36,34,35,36,34,35,36,34,35,36,34,35,35,36,36,36,36,34,35,34,36,34,35,36,34,35,36,34,35,36,36,34,35,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,37,37,14,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,37,37,14,14,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,37,14,0,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,0,43,43,43,43,43,0,0,0,0,48,48,49,48,49,48,49,48,49,48,49,48,48,0,49,48,49,48,49,48,48,49,48,49,49,48,49,49,48,48,49,48,49,48,49,48,49,48,49,48,49,0,49,48,48,49,48,49,48,49,48,0,49,0,49,48,0,0,0,0,53,53,54,54,52,53,54,52,53,52,52,92,54,52,53,54,52,53,53,52,53,53,54,54,54,52,53,54,52,53,52,54,52,53,53,54,52,52,53,54,52,53,54,54,52,54,52,54,52,53,54,52,53,54,52,53,54,52,53,54,52,53,53,54,54,54,54,54,54,52,53,52,54,54,52,53,54,52,53,54,52,53,54,52,53,54,0,0,93,93,0,0,56,56,57,57,55,56,57,55,56,55,55,57,55,56,57,55,56,56,55,56,56,57,57,55,56,57,55,56,55,57,55,56,56,57,55,55,56,57,55,56,57,57,55,57,55,57,55,56,57,55,56,57,55,56,57,55,56,57,55,56,56,57,57,57,57,57,57,55,56,55,57,55,56,57,55,56,57,55,56,57,57,55,56,0,0,0,59,59,60,60,58,59,60,58,59,58,58,60,58,59,60,58,59,59,58,59,59,60,60,60,58,59,60,58,59,58,60,58,59,59,60,58,58,59,60,58,59,60,60,58,60,58,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,59,60,60,60,60,60,58,59,58,60,58,59,60,58,59,60,58,59,60,60,58,59,63,63,63,63,0,0,0,0,0,0,63,63,62,62,64,65,64,65,63,61,62,64,65,63,61,62,61,61,94,64,65,63,61,62,64,65,63,61,62,62,61,63,62,63,62,64,64,65,64,65,63,61,62,64,65,63,61,62,61,64,65,63,61,62,63,63,63,63,62,64,65,64,65,63,61,61,62,64,65,63,61,62,64,65,64,65,63,61,64,65,61,64,65,63,61,62,64,65,63,61,62,64,65,63,61,62,64,65,63,61,62,64,65,63,61,62,62,64,64,65,64,65,64,65,64,63,64,64,65,64,65,65,64,64,65,64,65,61,65,63,62,61,64,65,63,61,62,64,65,63,61,62,64,65,63,61,62,64,65,64,65,63,61,62,0,0,0,0,0,0,0,0,0,0,0,0,0,69,69,67,67,95,96,97,98,99,100,101,67,70,68,69,67,70,68,69,68,68,67,70,68,69,67,70,68,69,69,68,69,69,0,67,70,68,69,67,70,68,69,68,67,70,68,69,69,102,67,67,67,67,67,67,67,68,68,69,67,70,68,69,72,102,67,67,67,67,67,67,67,67,68,67,70,95,96,97,98,99,100,101,68,67,70,68,69,67,70,68,69,67,70,68,69,67,70,68,69,67,70,68,69,69,72,67,70,95,96,97,98,99,100,101,67,70,95,96,97,98,99,100,101,67,68,69,68,67,70,68,69,67,70,68,69,67,70,68,69,67,70,95,96,97,98,99,100,101,67,70,68,69],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[6,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,6],[6,[[8,[5]]]],[9,9],[[-1,-2],2,[],[]],0,0,0,0,0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[6,11],[10,2],[10,2],[10,2],[10,2],[9,[[12,[-1,6]]],[]],[[[13,[-1,-2,-3]],[14,[-1]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],[[6,19],20],[[6,19],20],[[9,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[13,[-1,-2,-3]]],[[8,[[21,[-1]]]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[[13,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],2,16,[[17,[-1]]],[[18,[-1,-2]]]],[[[23,[[13,[-1,-2,-3]]]]],[[8,[2]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,[-1,[],[]],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[9,6],0,0,0,0,0,0,[[[13,[-1,-2,-3]],[8,[[31,[-1]]]],[22,[[14,[-1]]]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],0,0,[[],15],[6,[[8,[5]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,32,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[[13,[-1,-2,-3]],[22,[[14,[-1]]]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],0,0,[[[13,[-1,-2,-3]],[22,[[14,[-1]]]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[34,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,34],[34,[[8,[5]]]],[35,35],[[-1,-2],2,[],[]],0,0,0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[34,11],[10,2],[10,2],[10,2],[35,[[12,[-1,34]]],[]],[[[36,[-1,-2,-3]],[14,[-1]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],[[34,19],20],[[34,19],20],[[35,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[36,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[[23,[[36,[-1,-2,-3]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,[-1,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[35,34],0,0,0,[[],15],[34,[[8,[5]]]],[-1,-2,[],[]],[-1,32,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,37],[[[14,[-1]]],[[14,[-1]]],[38,16]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,2],[10,2],[[37,37],15],[[[14,[-1]],[14,[-1]]],15,[39,16]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[37,19],20],[[[14,[-1]],19],20,[40,16]],[-1,-1,[]],[-1,-1,[]],[[37,-1],2,41],[[[14,[-1]],-2],2,[42,16],41],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,-1,[]],[10,-1,[]],[10,2],0,[-1,-1,[]],[[[14,[-1]],[23,[[43,[-1]]]],15],[[8,[37]]],16],[[[23,[[43,[-1]]]]],[[8,[37]]],16],[[],10],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[44,[[14,[-1]]]],[45,[[14,[-1]],10]],-2,15],2,16,[26,46]],[[],15],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],[[-1,[22,[-1]]],2,[38,40]],[[[47,[-1]]],2,[]],0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[48,[-1]]],[[48,[-1]]],[38,16]],[[-1,-2],2,[],[]],[[[14,[-1]]],15,16],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,2],[10,2],0,[[[49,[-1,-2]]],15,16,[[50,[-1]]]],[[[48,[-1]]],15,16],0,[-1,-1,[]],[-1,-1,[]],[[[23,[[49,[-1,-2]]]]],[[8,[37]]],16,[[50,[-1]]]],[[[49,[-1,-2]],[14,[-1]]],[[8,[37]]],16,[[50,[-1]]]],[[[23,[[48,[-1]]]]],[[8,[2]]],16],[[[48,[-1]],[44,[[51,[-1]]]]],2,16],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[[14,[-1]]],15,16],[[],15],[[],15],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[[[14,[-1]]],15,16],0,[[[14,[-1]]],15,16],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[52,[[8,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,52],[52,[[8,[5]]]],[53,53],[[-1,-2],2,[],[]],0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[52,11],[10,2],[10,2],[10,2],[53,[[12,[-1,52]]],[]],[[[54,[-1,-2,-3]],[14,[-1]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],[[52,19],20],[[52,19],20],[[53,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[54,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[[23,[[54,[-1,-2,-3]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,[-1,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[53,52],0,0,0,0,0,[[],15],[52,[[8,[5]]]],[-1,-2,[],[]],[-1,32,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[54,[-1,-2,-3]],[21,[-1]]],[[8,[44]]],16,[[17,[-1]]],[[18,[-1,-2]]]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[55,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,55],[55,[[8,[5]]]],[56,56],[[-1,-2],2,[],[]],0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[55,11],[10,2],[10,2],[10,2],[56,[[12,[-1,55]]],[]],[[[57,[-1,-2,-3]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],[[55,19],20],[[55,19],20],[[56,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[57,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[[23,[[57,[-1,-2,-3]]]]],8,16,[[17,[-1]]],[[18,[-1,-2]]]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,[-1,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[56,55],0,0,0,0,[[],15],0,[55,[[8,[5]]]],[-1,-2,[],[]],[-1,32,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[58,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,58],[58,[[8,[5]]]],[59,59],[[-1,-2],2,[],[]],0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[58,11],[10,2],[10,2],[10,2],[59,[[12,[-1,58]]],[]],[[[60,[-1,-2,-3]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],[[58,19],20],[[58,19],20],[[59,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[60,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[[23,[[60,[-1,-2,-3]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,[-1,[],[]],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[59,58],0,0,0,0,[[],15],[58,[[8,[5]]]],[-1,-2,[],[]],[-1,32,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[61,[[8,[7]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,61],[61,[[8,[5]]]],[63,63],[62,62],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[61,11],[10,2],[10,2],[10,2],[10,2],[10,2],[[63,63],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[62,[[12,[-1,61]]],[]],[[[64,[-1,-2,-3]]],15,16,[[17,[-1]]],[[18,[-1,-2]],38]],[[[65,[-1,-2,-3]]],15,16,[[17,[-1]]],[[18,[-1,-2]]]],0,0,[[63,19],20],[[61,19],20],[[61,19],20],[[62,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[64,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],2,16,[[17,[-1]]],[[18,[-1,-2]],38]],[[[65,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],[[8,[37]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[[23,[[64,[-1,-2,-3]]]]],[[8,[2]]],16,[[17,[-1]]],[[18,[-1,-2]],38]],[[[23,[[65,[-1,-2,-3]]]]],[[8,[2]]],16,[[17,[-1]]],[[18,[-1,-2]]]],[[63,-1],2,41],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,0,[-1,[],[]],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[62,61],0,0,0,0,0,0,0,0,[[63,63],[[8,[66]]]],0,0,0,0,0,0,0,[[[64,[-1,-2,-3]],[14,[-1]],[22,[[14,[-1]]]]],2,16,[[17,[-1]]],[[18,[-1,-2]],38]],0,[[],15],[[],15],[61,[[8,[5]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[[67,[-1,-2,-3]],-2,[22,[[14,[-1]]]]],[[8,[37]]],16,[],[]],0,0,0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,5,[]],[68,[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[69,68],[68,[[8,[5]]]],[69,69],[[-1,-2],2,[],[]],[[[70,[-1]],-2,[14,[-1]],[22,[[14,[-1]]]]],[[8,[[67,[-1,-2,-3]]]]],16,[71,72,26,27],[73,40,26,27]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[68,11],[10,2],[10,2],[10,2],[10,2],[69,[[12,[-1,68]]],[]],[[[14,[-1]]],15,[]],[[[14,[-1]]],15,16],[[[14,[-1]]],15,16],[[[14,[-1]]],15,16],[[[14,[-1]]],15,16],[[[14,[-1]]],15,16],[[[14,[-1]]],15,16],[[[14,[-1]]],15,16],[[68,19],20],[[68,19],20],[[69,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[],[]],[[-1,[14,[-2]],[22,[[14,[-2]]]]],[[75,[[28,[74]]]]],[],[]],[[[67,[-1,[76,[-1]],[77,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[[67,[-1,[78,[-1]],[79,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[[67,[-1,[80,[-1]],[81,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[[67,[-1,[82,[-1]],[31,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[[67,[-1,[83,[-1]],[84,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[[23,[[67,[-1,-2,-3]]]]],8,16,[71,72,26,27],[73,40,26,27]],[[[67,[-1,[85,[-1]],[86,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[[67,[-1,[87,[-1]],[88,[-1]]]],[14,[-1]],[22,[[14,[-1]]]]],[[75,[[28,[74]]]]],16],[[-1,-2],[[24,[-2,-3]]],[],[25,26,27],[]],0,0,0,0,0,0,0,0,0,[-1,[],[]],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[69,68],[-1,[[14,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],15],[68,[[8,[5]]]],[-1,-2,[],[]],[-1,32,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",1007],[15,"tuple"],[3,"Private",1007],[8,"Any",1008],[8,"Error",1009],[3,"ConsensusTaskError",11],[3,"Backtrace",1010],[4,"Option",1011],[3,"ConsensusTaskSnafu",11],[15,"usize"],[15,"str"],[4,"Result",1012],[3,"ConsensusTaskState",11],[4,"HotShotEvent",227],[15,"bool"],[8,"NodeType",1013],[8,"NodeImplementation",1013],[8,"ConsensusApi",1014],[3,"Formatter",1015],[6,"Result",1015],[3,"Leaf",1016],[3,"Sender",1017],[3,"Task",1018],[3,"IndentedSection",1019],[8,"Display",1015],[8,"Send",1020],[8,"Sync",1020],[3,"Box",1021],[3,"Arc",1022],[3,"Rc",1023],[6,"TimeoutCertificate",1024],[3,"String",1025],[3,"TypeId",1008],[3,"ConsensusTaskError",137],[3,"ConsensusTaskSnafu",137],[3,"DATaskState",137],[3,"HotShotTaskCompleted",227],[8,"Clone",1026],[8,"PartialEq",1027],[8,"Debug",1015],[8,"Hasher",1028],[8,"Hash",1028],[3,"TestHarnessState",328],[3,"Vec",1029],[3,"HashMap",1030],[8,"TaskState",1018],[3,"JoinHandle",1031],[3,"NetworkMessageTaskState",354],[3,"NetworkEventTaskState",354],[8,"CommunicationChannel",1032],[3,"Message",1033],[3,"ConsensusTaskError",412],[3,"ConsensusTaskSnafu",412],[3,"TransactionTaskState",412],[3,"ConsensusTaskError",502],[3,"ConsensusTaskSnafu",502],[3,"UpgradeTaskState",502],[3,"ConsensusTaskError",591],[3,"ConsensusTaskSnafu",591],[3,"VIDTaskState",591],[3,"ViewSyncTaskError",677],[3,"ViewSyncTaskSnafu",677],[4,"ViewSyncPhase",677],[3,"ViewSyncTaskState",677],[3,"ViewSyncReplicaTaskState",677],[4,"Ordering",1027],[3,"VoteCollectionTaskState",841],[3,"VoteTaskError",841],[3,"VoteTaskSnafu",841],[3,"AccumulatorInfo",841],[8,"Vote",1034],[8,"AggregatableVote",841],[8,"Certificate",1034],[8,"Future",1035],[3,"Pin",1036],[6,"ViewSyncCommitVote",1037],[6,"ViewSyncCommitCertificate2",1024],[6,"ViewSyncFinalizeVote",1037],[6,"ViewSyncFinalizeCertificate2",1024],[6,"ViewSyncPreCommitVote",1037],[6,"ViewSyncPreCommitCertificate2",1024],[6,"TimeoutVote",1037],[6,"UpgradeVote",1037],[6,"UpgradeCertificate",1024],[6,"DAVote",1037],[6,"DACertificate",1024],[6,"QuorumVote",1037],[6,"QuorumCertificate",1024],[6,"VoteCollectorOption",11],[3,"CommitmentAndMetadata",11],[6,"VoteCollectorOption",137],[6,"CommitmentMap",412],[6,"VoteCollectorOption",502],[6,"RelayMap",677],[6,"QuorumVoteState",841],[6,"DAVoteState",841],[6,"TimeoutVoteState",841],[6,"UpgradeVoteState",841],[6,"ViewSyncPreCommitState",841],[6,"ViewSyncCommitVoteState",841],[6,"ViewSyncFinalizeVoteState",841],[8,"HandleVoteEvent",841]],"b":[[65,"impl-Debug-for-ConsensusTaskError"],[66,"impl-Display-for-ConsensusTaskError"],[180,"impl-Debug-for-ConsensusTaskError"],[181,"impl-Display-for-ConsensusTaskError"],[382,"impl-TaskState-for-NetworkEventTaskState%3CTYPES,+COMMCHANNEL%3E"],[383,"impl-NetworkEventTaskState%3CTYPES,+COMMCHANNEL%3E"],[452,"impl-Debug-for-ConsensusTaskError"],[453,"impl-Display-for-ConsensusTaskError"],[542,"impl-Display-for-ConsensusTaskError"],[543,"impl-Debug-for-ConsensusTaskError"],[629,"impl-Debug-for-ConsensusTaskError"],[630,"impl-Display-for-ConsensusTaskError"],[751,"impl-Display-for-ViewSyncTaskError"],[752,"impl-Debug-for-ViewSyncTaskError"],[903,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[904,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+DAData%3E,+SimpleCertificate%3CTYPES,+DAData,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+DAData%3E,+SimpleCertificate%3CTYPES,+DAData,+SuccessThreshold%3E%3E"],[905,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+UpgradeProposalData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+UpgradeProposalData%3CTYPES%3E,+UpgradeThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+UpgradeProposalData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+UpgradeProposalData%3CTYPES%3E,+UpgradeThreshold%3E%3E"],[906,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncCommitData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncCommitData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[907,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E,+OneHonestThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E,+OneHonestThreshold%3E%3E"],[908,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+QuorumData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+QuorumData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+QuorumData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+QuorumData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[909,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+TimeoutData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+TimeoutData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+TimeoutData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+TimeoutData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[910,"impl-Debug-for-VoteTaskError"],[911,"impl-Display-for-VoteTaskError"],[919,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncCommitData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncCommitData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[920,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncFinalizeData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[921,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E,+OneHonestThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+ViewSyncPreCommitData%3CTYPES%3E,+OneHonestThreshold%3E%3E"],[922,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+TimeoutData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+TimeoutData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+TimeoutData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+TimeoutData%3CTYPES%3E,+SuccessThreshold%3E%3E"],[923,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+UpgradeProposalData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+UpgradeProposalData%3CTYPES%3E,+UpgradeThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+UpgradeProposalData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+UpgradeProposalData%3CTYPES%3E,+UpgradeThreshold%3E%3E"],[924,"impl-TaskState-for-VoteCollectionTaskState%3CTYPES,+VOTE,+CERT%3E"],[925,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+DAData%3E,+SimpleCertificate%3CTYPES,+DAData,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+DAData%3E,+SimpleCertificate%3CTYPES,+DAData,+SuccessThreshold%3E%3E"],[926,"impl-HandleVoteEvent%3CTYPES,+SimpleVote%3CTYPES,+QuorumData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+QuorumData%3CTYPES%3E,+SuccessThreshold%3E%3E-for-VoteCollectionTaskState%3CTYPES,+SimpleVote%3CTYPES,+QuorumData%3CTYPES%3E%3E,+SimpleCertificate%3CTYPES,+QuorumData%3CTYPES%3E,+SuccessThreshold%3E%3E"]]},\
"hotshot_testing":{"doc":"Testing infrastructure for <code>HotShot</code>","t":"ENLLLLALLLLALLLLLLLLLLAAAAAAAALLLALALDDDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLDEDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLDDDGGGGGGGGGGGDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDNDNDNDNDNDDEDDGNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDNNNDDDDGNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDCDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFFFFFFFDDLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLMLLLLMLLMMLLGGGDDGLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLNEDNNNDNNIDLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLNNDEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLNNENDEDDNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["GlobalTestEvent","ShutDown","__clone_box","__clone_box","as_any","as_any_mut","block_types","borrow","borrow_mut","clone","clone_into","completion_task","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","node_types","overall_safety_task","spinning_task","state_types","task_helpers","test_builder","test_launcher","test_runner","to_owned","try_from","try_into","txn_task","type_id","view_sync_task","vzip","TestBlockHeader","TestBlockPayload","TestTransaction","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","block_number","block_number","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder_commitment","clone","clone","clone","clone_into","clone_into","clone_into","commit","commit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","encode","encode","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_transactions","genesis","genesis","genesis","genesis","genesis_vid_commitment","get_hash","get_hash","get_hash","hash","hash","hash","header","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","metadata","new","payload_commitment","payload_commitment","serialize","serialize","serialize","tag","tag","to_owned","to_owned","to_owned","to_string","transaction_commitments","transactions","try_from","try_from","try_from","try_into","try_into","try_into","txn_count","type_id","type_id","type_id","vzip","vzip","vzip","CompletionTask","CompletionTaskDescription","CompletionTaskErr","CompletionTaskErrSnafu","TimeBasedCompletionTaskBuilder","TimeBasedCompletionTaskDescription","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","duration","duration","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","handles","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","run","rx","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","wait_for_shutdown","CombinedImpl","Libp2pImpl","MemoryImpl","StaticCombinedDAComm","StaticCombinedQuorumComm","StaticLibp2pDAComm","StaticLibp2pQuorumComm","StaticMembership","StaticMemoryDAComm","StaticMemoryQuorumComm","StaticMemoryVIDComm","StaticMemoryViewSyncComm","StaticWebDAComm","StaticWebQuorumComm","TestTypes","WebImpl","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_type_phantom","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","committee_nodes_with_stake","compare","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","message_cache","message_cache","networks","networks","nodes_with_stake","partial_cmp","primary_down","primary_down","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Err","Failed","InProgress","InconsistentBlocks","InconsistentBlocksSnafu","InconsistentStates","InconsistentStatesSnafu","InconsistentTxnsNum","InconsistentTxnsNumSnafu","MismatchedLeaf","MismatchedLeafSnafu","NotEnoughDecides","NotEnoughDecidesSnafu","Ok","OverallSafetyPropertiesDescription","OverallSafetyTask","OverallSafetyTaskErr","RoundCtx","RoundResult","StateAndBlock","TooManyFailures","TooManyFailuresSnafu","ViewStatus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","check_block","check_if_failed","check_leaf","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","ctx","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","expected","fail","fail","fail","fail","fail","fail","failed_nodes","failed_views","failed_views","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","gen_leaves","got","handle_event","handle_message","handles","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","insert_error_to_context","insert_into_result","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","leaf_map","map","num_failed_views","num_successful_views","num_txns_map","properties","round_results","should_shutdown","source","status","success_nodes","successful_views","threshold_calculator","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_threshold","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_status","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected","failed_views","got","map","ChangeNode","Down","NetworkDown","NetworkUp","SpinningTask","SpinningTaskDescription","SpinningTaskErr","SpinningTaskErrSnafu","StateAndBlock","Up","UpDown","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","changes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","handle_event","handle_message","handles","header","idx","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","late_start","latest_view","node_changes","should_shutdown","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","updown","vzip","vzip","vzip","vzip","vzip","vzip","TestInstanceState","TestTypes","TestValidatedState","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","create_random_transaction","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_header","get_hash","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","on_commit","prev_state_commitment","serialize","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate_and_apply_header","vzip","vzip","build_assembled_sig","build_cert","build_quorum_proposal","build_quorum_proposal_and_signature","build_system_handle","key_pair_for_id","vid_init","TestMetadata","TimingData","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","completion_task_description","da_committee_size","default","default","default_more_nodes","default_multiple_rounds","default_stress","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","gen_launcher","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","min_transactions","next_view_timeout","num_bootstrap_nodes","overall_safety_properties","propose_max_round_time","propose_min_round_time","round_start_delay","spinning_properties","start_delay","start_nodes","timeout_ratio","timing_data","to_owned","to_owned","total_nodes","try_from","try_from","try_into","try_into","txn_description","type_id","type_id","unreliable_network","view_sync_properties","vzip","vzip","CommitteeNetworkGenerator","Generator","Networks","ResourceGenerators","TestLauncher","ViewSyncNetworkGenerator","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","channel_generator","config","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","launch","metadata","modify_default_config","resource_generator","storage","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","HotShotTaskCompleted","LateStartNode","LostReturnValue","LostState","MissingHandler","Node","ShutDown","StreamsDied","TaskErr","TestRunner","__clone_box","__clone_box","__clone_box","__clone_box","_pd","add_node_with_config","add_nodes","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","context","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","handle","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","late_start","launcher","networks","networks","next_node_id","node_id","nodes","run_test","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DistributionBased","RoundRobinTimeBased","TxnTask","TxnTaskDescription","TxnTaskErr","TxnTaskErrSnafu","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","duration","fail","fmt","fmt","fmt","fmt","from","from","from","from","handles","header","in_current_span","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","next_node_idx","run","shutdown_chan","source","submit_tx","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Ignore","No","ShouldHitViewSync","Threshold","ViewSyncTask","ViewSyncTaskDescription","ViewSyncTaskErr","ViewSyncTaskErrSnafu","Yes","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","handle_event","handle_message","header","hit_view_sync","hit_view_sync","hit_view_sync","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","should_shutdown","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"hotshot_testing"],[37,"hotshot_testing::block_types"],[163,"hotshot_testing::completion_task"],[292,"hotshot_testing::node_types"],[481,"hotshot_testing::overall_safety_task"],[824,"hotshot_testing::overall_safety_task::OverallSafetyTaskErr"],[828,"hotshot_testing::spinning_task"],[988,"hotshot_testing::state_types"],[1055,"hotshot_testing::task_helpers"],[1062,"hotshot_testing::test_builder"],[1134,"hotshot_testing::test_launcher"],[1181,"hotshot_testing::test_runner"],[1283,"hotshot_testing::txn_task"],[1388,"hotshot_testing::view_sync_task"],[1526,"dyn_clone::sealed"],[1527,"dyn_clone::sealed"],[1528,"core::fmt"],[1529,"core::fmt"],[1530,"alloc::sync"],[1531,"alloc::rc"],[1532,"core::result"],[1533,"core::any"],[1534,"commit"],[1535,"serde::de"],[1536,"alloc::vec"],[1537,"hotshot_types::data"],[1538,"core::iter::traits::iterator"],[1539,"core::iter::traits::collect"],[1540,"core::hash"],[1541,"core::marker"],[1542,"core::hash"],[1543,"core::fmt"],[1544,"alloc::string"],[1545,"core::error"],[1546,"snafu::backtrace_shim"],[1547,"core::option"],[1548,"async_std::task::join_handle"],[1549,"hotshot_types::traits::node_implementation"],[1550,"hotshot_types::traits::node_implementation"],[1551,"std::collections::hash::map"],[1552,"core::convert"],[1553,"std::collections::hash::set"],[1554,"core::clone"],[1555,"core::fmt"],[1556,"hotshot_task::task"],[1557,"hotshot_types::simple_certificate"],[1558,"rand_core"],[1559,"commit"],[1560,"hotshot::types::handle"],[1561,"hotshot_types::data"],[1562,"hotshot_types::signature_key"],[1563,"hotshot_task_impls::events"],[1564,"async_broadcast"],[1565,"async_broadcast"],[1566,"core::ops::function"],[1567,"hotshot"],[1568,"hotshot_types"],[1569,"hotshot_types"]],"d":["global event at the test level","the test is shutting down","","","","","block types","","","","","task that decides when things are complete","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","node types","task that’s consuming events and asserting safety","task to spin nodes up and down","Implementations for testing/examples Implementations for …","Helpers for initializing system context handle and …","builder","launcher","runner","","","","task that’s submitting transactions to the stream","","task for checking if view sync got activated","","A <code>BlockHeader</code> that commits to <code>TestBlockPayload</code>.","A <code>BlockPayload</code> that contains a list of <code>TestTransaction</code>.","The transaction in a <code>TestBlockPayload</code>.","","","","","","","","","","","","","","Block number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode a list of transactions into bytes.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a genesis block payload with bytes <code>vec![0]</code>, to be …","","","","Computes the (empty) genesis VID commitment The number of …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","VID commitment to the payload.","","","","","","","","","","","List of transactions.","","","","","","","","","","","","","","Completion task state","Description for a completion task.","the idea here is to run as long as we want Completion Task …","SNAFU context selector for the <code>CompletionTaskErr</code> error","Time-based completion task.","Description for a time-based completion task.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","Duration of the task.","Duration of the task.","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","handles to the nodes in the test","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combined Network implementation (libp2p + web sever)","Libp2p network implementation","Memory network implementation","combined network","combined network (libp2p + web server)","libp2p network","libp2p comm channel","static committee type alias","memory network","memory comm channel","memory network","memory network","web server network communication channel","web server comm channel","filler struct to implement node type and allow us to …","Web server network implementation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","safety violation","failure","in progress","mismatched blocks for a view","SNAFU context selector for the …","mismatched states for a view","SNAFU context selector for the …","inconsistent txn nums","SNAFU context selector for the …","mismatched leaves for a view","SNAFU context selector for the …","not enough decides","SNAFU context selector for the …","success","cross node safety properties","Data availability task state","possible errors","context for a round TODO eventually we want these to just …","Result of running a round of consensus","convenience type alias for state and block","too many failed  views","SNAFU context selector for the …","the status of a view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","block -&gt; # entries decided on that block","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","whether or not to check the block","check if the test failed due to not enough nodes getting …","whether or not to check the leaf","","","","","","","","","","","","","","","","","","","ctx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Nodes that failed to commit this round","","during the run view refactor","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generate leaves","","","","handles","","","","","","","","","","","","","","","inserts an error into the context","insert into round result","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","NOTE: technically a map is not needed left one anyway for …","","num of total rounds allowed to fail","required number of successful views","node idx -&gt; number transactions","configure properties","results from previous rounds view number -&gt; round result","","","whether or not the round succeeded (for a custom defn of …","Transactions that were submitted Nodes that committed this …","successful views","threshold calculator. Given number of live and total …","","","","","","","","","","","whether or not to check that we have threshold amounts of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","determines whether or not the round passes also do a …","","","","","","","","","","","","","expected number of decides","vec of failed views","acutal number of decides","node idx -&gt; number transactions","denotes a change in node state","spin the node down","spin the node’s network down","spin the node’s network up","Spinning task state","description of the spinning task (used to build a spinning …","error for the spinning task","SNAFU context selector for the <code>SpinningTaskErr</code> error","convience type for state and block","spin the node up","Spin the node up or down","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","time based changes","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","handle to the nodes","","the index of the node","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","late start nodes","most recent view seen by spinning task","the changes in node status, time -&gt; changes","","","","","","","","","","","","","","","","","","","","","","","","","","spin the node or node’s network up or down","","","","","","","Instance-level state implementation for testing purposes.","","Validated state implementation for testing purposes.","","","","","","","","","the block height","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","the previous state commitment","","","","","","","","","","","","","","create signature","create certificate","create a quorum proposal","build a quorum proposal and signature","create the <code>SystemContextHandle</code> from a node id","get the keypair for a node id","initialize VID","metadata describing a test","data describing how a round should be timed.","","","","","","","","","","","","","","","","","completion task","Size of the DA committee for the test","","by default, just a single round","Default setting with 20 nodes and 8 views of successful …","the default metadata for multiple rounds","the default metadata for a stress test","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","turn a description of a test (e.g. a <code>TestMetadata</code>) into a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Minimum transactions required for a block","Base duration for next-view timeout, in milliseconds","number of bootstrap nodes (libp2p usage only)","overall safety property description","The maximum amount of time a leader can wait to start a …","The minimum amount of time a leader has to wait to start a …","The delay a leader inserts before starting pre-commit, in …","spinning properties","Delay after init before starting consensus, in milliseconds","nodes available at start","The exponential backoff ration for the next-view timeout","timing data","","","Total number of nodes in the test","","","","","txns timing","","","unrelabile networking metadata","view sync check task","","","Wrapper Type for committee function that takes a …","Wrapper for a function that takes a <code>node_id</code> and returns an …","convience type alias for the networks available","generators for resources used by each node","test launcher","Wrapper Type for view sync function that takes a …","","","","","","","","","generate channels","configuration used to generate each hotshot node","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","launch the test","metadasta used for tasks","Modifies the config used when generating nodes with <code>f</code>","generator for resources","generate a new storage for each node","","","","","","","","","the task encountered an error","enum describing how the tasks completed","A yet-to-be-started node that participates in tests","lost the return value somehow","we somehow lost the state this is definitely a bug.","Stream exists but missing handler","a node participating in a test","the task shut down successfully","the streams the task was listening for died","","The runner of a test network spin up and down nodes, …","","","","","Phantom for N","add a specific node with a config","add nodes","","","","","","","","","","","","","","","","","","","","","The context to which we will use to launch HotShot when it…","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The handle to the node’s internals","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","nodes with a late start","test launcher, contains a bunch of useful metadata and …","The underlying networks belonging to the node","The underlying networks belonging to the node","the next node unique identifier","The node’s unique identifier","nodes in the test","excecute test","","","","","","","","","","","","","","","","","","","TODO","submit transactions in a round robin style using every …","state of task that decides when things are completed","build the transaction task","Data Availability task error","SNAFU context selector for the <code>TxnTaskErr</code> error","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","time to wait between txns","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handles for all nodes.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Optional index of the next node.","","","","","","","","","","","","","","","","","","","","","","","","don’t care if the node should hit view sync","the node should not hit view sync","enum desecribing whether a node should hit view sync","(min, max) number nodes that may hit view sync, inclusive","<code>ViewSync</code> task state","Description for a view sync task.","<code>ViewSync</code> Task error","SNAFU context selector for the <code>ViewSyncTaskErr</code> error","the node should hit view sync","","","","","","","","","Phantom data for TYPES and I","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","properties of task","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","nodes that hit view sync","set of node ids that hit view sync","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,5,5,5,0,5,0,5,0,0,0,18,18,16,16,14,14,18,16,14,18,16,14,14,14,18,16,14,18,16,14,16,18,16,14,18,16,14,18,14,18,18,16,14,18,16,14,18,16,14,18,16,14,18,16,18,16,14,18,18,18,18,16,16,16,16,14,14,14,14,18,16,16,14,18,16,14,16,16,16,16,16,14,0,18,16,14,18,16,14,16,18,16,14,18,16,14,18,16,14,18,16,14,18,16,14,14,14,14,14,18,16,14,18,14,18,16,14,16,16,16,18,16,14,18,16,14,16,18,16,14,18,16,14,0,0,0,0,44,0,42,42,43,43,44,44,46,39,42,43,44,46,39,42,43,44,39,39,46,39,42,43,44,46,39,42,43,44,42,39,42,43,44,42,43,44,46,39,42,43,44,46,39,42,43,44,39,46,39,42,43,44,46,43,42,39,39,42,43,44,46,39,42,43,44,46,39,39,46,39,42,43,44,46,39,42,43,44,46,39,42,43,44,46,39,42,43,44,46,39,42,43,44,42,46,46,39,42,43,44,39,46,39,42,43,44,46,39,42,43,44,46,46,39,42,43,44,46,39,42,43,44,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,52,52,53,53,54,54,55,55,123,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,123,51,51,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,124,125,124,125,123,51,124,125,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,51,52,53,54,55,68,68,68,57,0,57,0,57,0,57,0,57,0,68,0,0,0,0,0,0,57,0,0,68,68,57,57,58,58,61,61,63,63,64,64,65,65,66,66,70,70,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,57,57,67,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,58,61,63,64,65,66,57,70,67,70,68,57,58,61,63,64,65,66,70,68,57,58,61,63,64,65,66,70,74,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,57,74,68,57,58,61,63,64,65,66,67,71,70,63,58,61,63,64,65,66,67,61,71,68,57,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,67,63,74,74,74,57,57,74,68,57,58,61,63,64,65,66,67,71,70,71,67,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,58,61,63,64,65,66,67,58,70,70,67,74,71,74,57,67,67,71,70,68,57,58,61,63,64,65,66,70,57,70,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,74,68,57,58,61,63,64,65,66,67,71,70,67,74,68,57,58,61,63,64,65,66,67,71,70,126,127,126,128,0,81,81,81,0,0,0,0,0,81,0,80,80,81,81,82,82,83,83,84,79,80,81,82,83,84,79,80,81,82,83,79,79,84,79,80,81,82,83,84,79,80,81,82,83,80,79,84,80,81,82,83,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,79,84,79,80,81,82,83,80,79,79,80,81,82,83,84,79,80,81,82,83,84,84,84,79,82,79,84,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,80,84,84,83,84,79,80,81,82,83,79,84,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,82,84,79,80,81,82,83,0,0,0,85,85,86,86,85,86,85,86,86,85,86,85,86,85,86,85,86,86,86,86,85,86,85,86,86,85,86,86,86,86,86,86,85,86,85,86,86,86,86,85,86,85,86,85,86,85,86,85,86,86,86,86,86,85,86,85,86,85,86,85,86,86,85,86,0,0,0,0,0,0,0,0,0,100,100,101,101,100,101,100,101,100,101,100,101,100,101,100,101,101,101,100,101,101,101,101,100,101,100,101,100,101,100,101,100,101,101,100,101,100,101,100,101,100,101,100,101,101,100,101,101,100,100,100,101,100,101,100,101,100,101,101,100,101,100,101,101,100,101,101,101,100,101,0,0,0,0,0,0,129,102,129,102,129,102,129,102,129,129,129,102,129,102,129,102,129,102,129,102,129,102,129,102,129,102,129,102,102,102,102,102,129,129,102,129,102,129,102,129,102,47,0,0,47,47,47,0,47,47,0,0,112,112,113,113,104,104,104,104,47,112,113,104,47,112,113,104,47,112,113,104,47,112,113,112,113,112,113,113,104,47,112,113,104,47,112,113,104,47,112,113,104,47,112,113,112,104,47,112,113,104,47,112,113,104,47,112,113,104,47,112,113,104,47,112,113,104,104,112,113,104,112,104,104,112,113,104,47,112,113,104,47,112,113,104,47,112,113,104,47,112,113,116,116,0,0,0,0,115,115,116,116,117,114,115,116,117,114,115,116,114,114,117,114,115,116,117,114,115,116,115,114,115,116,115,116,117,114,115,116,117,114,115,116,114,117,114,115,116,117,115,114,114,115,116,117,114,115,116,117,114,114,117,114,115,116,117,114,115,116,117,114,115,116,117,114,115,116,117,114,115,116,115,117,117,117,114,117,115,116,114,117,114,115,116,117,114,115,116,117,114,115,116,117,114,115,116,120,120,0,121,0,0,0,0,120,118,118,119,119,120,120,121,121,122,122,118,119,120,121,122,118,119,120,121,118,118,122,118,119,120,121,122,118,119,120,121,119,118,118,119,120,121,118,119,120,121,122,118,119,120,121,122,118,119,120,121,118,122,122,118,119,120,121,119,118,118,119,120,121,122,118,119,120,121,122,122,118,122,118,119,118,122,118,119,120,121,122,118,119,120,121,122,118,119,120,121,122,118,119,120,121,122,118,119,120,121,119,122,118,118,119,120,121,118,122,118,119,120,121,122,118,119,120,121,122,118,119,120,121,122,118,119,120,121],"f":[0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,2],[[5,7],8],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,13,[]],0,[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[14,15],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,17],[18,18],[16,16],[14,14],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[18,[[19,[18]]]],[14,[[19,[14]]]],[[],18],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[12,[18]]],20],[-1,[[12,[16]]],20],[-1,[[12,[14]]],20],[6,2],[6,2],[6,2],[[[21,[18]]],[[12,[[21,[22]],23]]]],[16,12],[[18,18],24],[[16,16],24],[[14,14],24],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[18,7],8],[[16,7],8],[[16,7],8],[[14,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,16,25],[-1,[[12,[[2,[16]]]]],26],[[],16],[[],16],[[],[[2,[16]]]],[[],[[2,[14]]]],[[]],[[-1,-2],15,[27,28],29],[[-1,-2],15,[27,28],29],[[-1,-2],15,[27,28],29],[[18,-1],2,30],[[16,-1],2,30],[[14,-1],2,30],[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[14],[[14,35],14],[14,35],0,[[18,-1],12,36],[[16,-1],12,36],[[14,-1],12,36],[[],37],[[],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[16,[[21,[19]]]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[16,15],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,38,[]],[39,[[41,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,39],[39,[[41,[38]]]],[42,42],[43,43],[44,44],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[39,45],[6,2],[6,2],[6,2],[6,2],[6,2],0,0,[42,[[12,[-1,39]]],[]],[[39,7],8],[[39,7],8],[[42,7],8],[[43,7],8],[[44,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[42,39],[[[46,[-1,-2]]],[[48,[47]]],49,[[50,[-1]]]],0,[39,[[41,[38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[46,[-1,-2]]],2,49,[[50,[-1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,51],[52,52],[53,53],[54,54],[55,55],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[51,51],56],0,[[-1,-2],56,[],[]],[[],51],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[12,[51]]],20],[-1,[[12,[52]]],20],[-1,[[12,[53]]],20],[-1,[[12,[54]]],20],[-1,[[12,[55]]],20],[6,2],[6,2],[6,2],[6,2],[6,2],[[51,51],24],[[52,52],24],[[53,53],24],[[54,54],24],[[55,55],24],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[51,7],8],[[52,7],8],[[53,7],8],[[54,7],8],[[55,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],15,[27,28],29],[[-1,-2],15,[27,28],29],[[-1,-2],15,[27,28],29],[[-1,-2],15,[27,28],29],[[-1,-2],15,[27,28],29],[[51,-1],2,30],[[52,-1],2,30],[[53,-1],2,30],[[54,-1],2,30],[[55,-1],2,30],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],0,0,0,0,0,[[51,51],[[41,[56]]]],0,0,[[51,-1],12,36],[[52,-1],12,36],[[53,-1],12,36],[[54,-1],12,36],[[55,-1],12,36],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,38,[]],[[[57,[-1]]],[[41,[40]]],49],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[58,[-1]]],[[57,[-2]]],[[60,[[59,[15,6]]]]],49],[[[61,[-1]]],[[57,[-2]]],[[60,[62]]],49],[[[63,[-1,-2]]],[[57,[-3]]],[[60,[6]]],[[60,[6]]],49],[64,[[57,[-1]]],49],[65,[[57,[-1]]],49],[66,[[57,[-1]]],49],[[[57,[-1]]],[[41,[38]]],49],0,[[[67,[-1]],6,6],24,49],0,[[[68,[-1]]],[[68,[-1]]],[69,49]],[[[57,[-1]]],[[57,[-1]]],[69,49]],[[[58,[-1]]],[[58,[-1]]],69],[[[61,[-1]]],[[61,[-1]]],69],[[[63,[-1,-2]]],[[63,[-1,-2]]],69,69],[64,64],[65,65],[66,66],[70,70],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],[[67,[-1]]],49],[[],[[71,[-1]]],49],[[],70],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[[[57,[-1]]],45,49],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],0,[[[58,[-1]]],[[12,[-2,[57,[-3]]]]],[[60,[[59,[15,6]]]]],[],49],[[[61,[-1]]],[[12,[-2,[57,[-3]]]]],[[60,[62]]],[],49],[[[63,[-1,-2]]],[[12,[-3,[57,[-4]]]]],[[60,[6]]],[[60,[6]]],[],49],[64,[[12,[-1,[57,[-2]]]]],[],49],[65,[[12,[-1,[57,[-2]]]]],[],49],[66,[[12,[-1,[57,[-2]]]]],[],49],0,0,0,[[[68,[-1]],7],8,[72,49]],[[[57,[-1]],7],8,[72,49]],[[[57,[-1]],7],8,49],[[[58,[-1]],7],8,72],[[[61,[-1]],7],8,72],[[[63,[-1,-2]],7],8,72,72],[[64,7],8],[[65,7],8],[[66,7],8],[[[67,[-1]],7],8,[72,49]],[[[71,[-1]],7],8,[72,49]],[[70,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[67,[-1]]],[[59,[[73,[-1]],6]]],49],0,[[[75,[[74,[-1,-2]]]]],41,49,[[50,[-1]]]],[[6,[76,[[74,[-1,-2]]]]],41,49,[[50,[-1]]]],0,[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[71,[-1]],6,[10,[[77,[-1]]]]],2,49],[[[67,[-1]],6,[2,[[21,[[73,[-1]]]],[78,[-1]]]],[41,[15]]],[[41,[[73,[-1]]]]],49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[58,[-1]]],[[57,[-2]]],[[60,[[59,[15,6]]]]],49],[[[61,[-1]]],[[57,[-2]]],[[60,[62]]],49],[[[63,[-1,-2]]],[[57,[-3]]],[[60,[6]]],[[60,[6]]],49],[64,[[57,[-1]]],49],[65,[[57,[-1]]],49],[66,[[57,[-1]]],49],0,0,0,0,0,0,0,[[],24],[[[57,[-1]]],[[41,[38]]],49],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[[[67,[-1]],6,6,[73,[-1]],24,24,15],2,49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,38,[]],[79,[[41,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,79],[79,[[41,[38]]]],0,[80,80],[81,81],[82,82],[83,83],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[79,45],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[80,[[12,[-1,79]]],[]],[[79,7],8],[[79,7],8],[[80,7],8],[[81,7],8],[[82,7],8],[[83,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[75,[[84,[-1,-2]]]]],41,49,[[50,[-1]]]],[[6,[76,[[84,[-1,-2]]]]],41,49,[[50,[-1]]]],0,[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],0,[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[80,79],0,0,0,[[],24],[79,[[41,[38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,85],[86,86],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[86,[[19,[86]]]],[[[41,[86]],87,15]],[[],86],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[-1,[[12,[86]]],20],[6,2],[6,2],[[86,86],24],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[-1,-2],24,[],[]],[[85,7],8],[[86,7],8],[-1,-1,[]],[-1,-1,[]],[[],86],[[-1,-2],15,[27,28],29],[[86,-1],2,30],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[86,2],0,[[86,-1],12,36],[[],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[86,[[12,[86]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[],[88,69,89,27,90,72]],[-1,-3,[88,69,89,27,90,72],49,[[91,[-2]]]],[[[92,[51,52]],15],[[94,[51,[93,[51]]]]]],[[[92,[51,52]],95,15],[[2,[[93,[51]]]]]],[15,[[2,[[92,[51,52]],[97,[[96,[51]]]],[98,[[96,[51]]]]]]]],[15,[[2,[95]]]],[[],99],0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[100,100],[101,101],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[],100],[[],101],[[],101],[[],101],[[],101],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[[100,7],8],[[101,7],8],[-1,-1,[]],[-1,-1,[]],[[101,15],[[102,[-1,-2]]],49,[[103,[-1]],[50,[-1]]]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,13,[]],[-1,13,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[-1,-1,[]],[-1,-1,[]],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[102,[-1,-2]]],[[104,[-1,-2,-3]]],49,[[50,[-1]]],[[105,[-1]]]],0,[[[102,[-1,-2]],-3],[[102,[-1,-2]]],49,[[50,[-1]]],106],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[[[104,[-1,-2,-3]],[107,[-1,-2]],[108,[-1]],109,110],[[111,[-1,-2]]],49,[[50,[-1]],[103,[-1]],[50,[-1]]],[[105,[-1]]]],[[[104,[-1,-2,-3]],6,[62,[15]]],[[21,[15]]],49,[[50,[-1]],[103,[-1]],[50,[-1]]],[[105,[-1]]]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[112,[-1,-2]]],[[112,[-1,-2]]],[69,49],[69,[50,[-1]]]],[[[113,[-1,-2]]],[[113,[-1,-2]]],[69,49],[69,[50,[-1]]]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,2],[6,2],[6,2],[6,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],0,0,0,0,0,0,0,[[[104,[-1,-2,-3]]],2,49,[[50,[-1]],[103,[-1]],[50,[-1]]],[[105,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,38,[]],[114,[[41,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,114],[114,[[41,[38]]]],[115,115],[116,116],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[114,45],[6,2],[6,2],[6,2],[6,2],0,[115,[[12,[-1,114]]],[]],[[114,7],8],[[114,7],8],[[115,7],8],[[116,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[115,114],0,[[[117,[-1,-2]]],[[48,[47]]],49,[[50,[-1]]]],0,[114,[[41,[38]]]],[[[117,[-1,-2]]],2,49,[[50,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,38,[]],[118,[[41,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[119,[-1]]],118,[[60,[[62,[6]]]]]],[118,[[41,[38]]]],[118,118],[[[119,[-1]]],[[119,[-1]]],69],[120,120],[121,121],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[6,-1,[]],[118,45],0,[6,2],[6,2],[6,2],[6,2],[6,2],[[[119,[-1]]],[[12,[-2,118]]],[[60,[[62,[6]]]]],[]],[[118,7],8],[[118,7],8],[[[119,[-1]],7],8,72],[[120,7],8],[[121,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[75,[[122,[-1,-2]]]]],41,49,[[50,[-1]]]],[[6,[76,[[122,[-1,-2]]]]],[[41,[47]]],49,[[50,[-1]]]],[[-1,-2],[[31,[-2,-3]]],[],[32,33,34],[]],0,0,0,[-1,[],[]],[[],6],[[],6],[[],6],[[],6],[[],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[9,[-1]]],[[9,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[10,[-1]]],[[10,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[11,[-1]]],[[11,[4]]],[]],[[[119,[-1]]],118,[[60,[[62,[6]]]]]],[[],24],[118,[[41,[38]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,37,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Private",1526],[15,"tuple"],[3,"Private",1526],[8,"Any",1527],[4,"GlobalTestEvent",0],[15,"usize"],[3,"Formatter",1528],[6,"Result",1528],[3,"Box",1529],[3,"Arc",1530],[3,"Rc",1531],[4,"Result",1532],[3,"TypeId",1527],[3,"TestBlockHeader",37],[15,"u64"],[3,"TestBlockPayload",37],[3,"BuilderCommitment",1533],[3,"TestTransaction",37],[3,"Commitment",1534],[8,"Deserializer",1535],[3,"Vec",1536],[15,"u8"],[4,"BlockError",1537],[15,"bool"],[8,"Iterator",1538],[8,"IntoIterator",1539],[8,"Hash",1540],[8,"Sized",1541],[8,"BuildHasher",1540],[8,"Hasher",1540],[3,"IndentedSection",1542],[8,"Display",1528],[8,"Send",1541],[8,"Sync",1541],[6,"VidCommitment",1537],[8,"Serializer",1543],[3,"String",1544],[8,"Error",1545],[3,"CompletionTaskErr",163],[3,"Backtrace",1546],[4,"Option",1547],[3,"CompletionTaskErrSnafu",163],[3,"TimeBasedCompletionTaskDescription",163],[4,"CompletionTaskDescription",163],[15,"str"],[3,"CompletionTask",163],[4,"HotShotTaskCompleted",1181],[3,"JoinHandle",1548],[8,"NodeType",1549],[8,"TestableNodeImplementation",1549],[3,"TestTypes",292],[3,"MemoryImpl",292],[3,"Libp2pImpl",292],[3,"WebImpl",292],[3,"CombinedImpl",292],[4,"Ordering",1550],[4,"OverallSafetyTaskErr",481],[3,"InconsistentTxnsNumSnafu",481],[3,"HashMap",1551],[8,"Into",1552],[3,"TooManyFailuresSnafu",481],[3,"HashSet",1553],[3,"NotEnoughDecidesSnafu",481],[3,"MismatchedLeafSnafu",481],[3,"InconsistentStatesSnafu",481],[3,"InconsistentBlocksSnafu",481],[3,"RoundResult",481],[4,"ViewStatus",481],[8,"Clone",1554],[3,"OverallSafetyPropertiesDescription",481],[3,"RoundCtx",481],[8,"Debug",1528],[3,"Leaf",1537],[3,"OverallSafetyTask",481],[3,"Task",1555],[3,"TestTask",1555],[4,"HotShotError",1556],[6,"QuorumCertificate",1557],[3,"SpinningTaskErr",828],[3,"SpinningTaskErrSnafu",828],[4,"UpDown",828],[3,"ChangeNode",828],[3,"SpinningTaskDescription",828],[3,"SpinningTask",828],[3,"TestInstanceState",988],[3,"TestValidatedState",988],[8,"RngCore",1558],[8,"Committable",1534],[8,"Eq",1550],[8,"Serialize",1543],[8,"Certificate",1559],[3,"SystemContextHandle",1560],[3,"QuorumProposal",1537],[3,"Proposal",1561],[6,"BLSPubKey",1562],[4,"HotShotEvent",1563],[3,"Sender",1564],[3,"Receiver",1564],[6,"VidScheme",1537],[3,"TimingData",1062],[3,"TestMetadata",1062],[3,"TestLauncher",1134],[8,"NodeImplementation",1549],[3,"TestRunner",1181],[8,"CommunicationChannel",1565],[8,"FnMut",1566],[6,"Networks",1134],[3,"HotShotInitializer",1567],[3,"HotShotConfig",1568],[3,"ValidatorConfig",1568],[3,"SystemContext",1567],[3,"Node",1181],[3,"LateStartNode",1181],[3,"TxnTaskErr",1283],[3,"TxnTaskErrSnafu",1283],[4,"TxnTaskDescription",1283],[3,"TxnTask",1283],[3,"ViewSyncTaskErr",1388],[3,"ViewSyncTaskErrSnafu",1388],[4,"ShouldHitViewSync",1388],[4,"ViewSyncTaskDescription",1388],[3,"ViewSyncTask",1388],[6,"StaticMembership",292],[6,"StaticCombinedDAComm",292],[6,"StaticCombinedQuorumComm",292],[13,"NotEnoughDecides",824],[13,"TooManyFailures",824],[13,"InconsistentTxnsNum",824],[3,"ResourceGenerators",1134]],"b":[[100,"impl-Debug-for-TestBlockPayload"],[101,"impl-Display-for-TestBlockPayload"],[108,"impl-TestBlockPayload"],[109,"impl-TestableBlock-for-TestBlockPayload"],[110,"impl-BlockPayload-for-TestBlockPayload"],[224,"impl-Display-for-CompletionTaskErr"],[225,"impl-Debug-for-CompletionTaskErr"],[653,"impl-Debug-for-OverallSafetyTaskErr%3CTYPES%3E"],[654,"impl-Display-for-OverallSafetyTaskErr%3CTYPES%3E"],[904,"impl-Display-for-SpinningTaskErr"],[905,"impl-Debug-for-SpinningTaskErr"],[1332,"impl-Display-for-TxnTaskErr"],[1333,"impl-Debug-for-TxnTaskErr"],[1456,"impl-Display-for-ViewSyncTaskErr"],[1457,"impl-Debug-for-ViewSyncTaskErr"]]},\
"hotshot_testing_macros":{"doc":"Macros for testing over all network implementations and …","t":"DDEDDEINNNNLLLLLLLLLLLLLLLLLLLLLLLLOFLLLLLLLLLLLLLLLLLLLLLMMMMLMMLMMLLLLLLLALLMMMMLLLMMMMKLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CrossTestData","CrossTestDataBuilder","CrossTestDataBuilderError","TestData","TestDataBuilder","TestDataBuilderError","ToLowerSnakeStr","UninitializedField","UninitializedField","ValidationError","ValidationError","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_empty","create_empty","cross_tests","cross_tests_internal","default","default","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","generate_test","ignore","ignore","ignore","ignore","ignore","ignore","impls","impls","impls","imply","imply","imply","into","into","into","into","into","into","is_ready","keywords","metadata","metadata","metadata","metadata","metadata","metadata","parse","test_name","test_name","test_name","test_name","test_name","test_name","to_lower_snake_str","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","types","types","types","Ignore","Impls","Metadata","TestName","Types","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","display","display","display","display","display","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","parse","parse","parse","parse","parse","peek","peek","peek","peek","peek","span","span","span","span","span","span","span","span","span","span","to_owned","to_owned","to_owned","to_owned","to_owned","to_tokens","to_tokens","to_tokens","to_tokens","to_tokens","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"hotshot_testing_macros"],[120,"hotshot_testing_macros::keywords"],[225,"core::result"],[226,"proc_macro"],[227,"core::fmt"],[228,"core::fmt"],[229,"alloc::string"],[230,"proc_macro2"],[231,"syn::lit"],[232,"syn::expr"],[233,"syn::expr"],[234,"syn::error"],[235,"proc_macro2"],[236,"syn::__private"],[237,"syn::__private"],[238,"syn::buffer"],[239,"proc_macro2"]],"d":["description of a crosstest","Builder for <code>CrossTestData</code>.","Error type for CrossTestDataBuilder","requisite data to generate a single test","Builder for <code>TestData</code>.","Error type for TestDataBuilder","trait make a string lower and snake case","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","","","","","","","","","","","","","Builds a new <code>CrossTestData</code>.","Builds a new <code>TestData</code>.","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Generate a cartesian product of tests across all types …","Helper function to do the actual code gen allow panic …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","generate the code for a single test","whether or not to ignore","whether or not to ignore the test","whether or not to ignore","whether or not to ignore","whether or not to ignore the test","whether or not to ignore the test","imlementations","imlementations","imlementations","impl","impl","impl","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","if we’ve extracted all the metadata","macro specific custom keywords","test description/spec","test description","test description/spec","test description/spec","test description","test description","allow panic because this is a compiler error","name of the test","name of test","name of the test","name of the test","name of test","name of test","make a lower and snake case string","","","","","","","","","","","","","","","","","","","type","type","type","","","","","","","types","types","types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,3,7,3,7,2,1,3,6,5,7,2,1,3,6,5,7,1,5,2,1,6,5,2,1,6,5,1,5,0,0,1,5,2,3,3,6,7,7,2,1,3,3,3,6,5,7,7,7,6,1,5,2,1,6,5,1,2,1,5,6,5,2,1,3,6,5,7,1,0,1,5,2,1,6,5,2,1,5,2,1,6,5,37,2,1,6,5,3,7,2,1,3,6,5,7,2,1,3,6,5,7,5,6,5,2,1,3,6,5,7,1,2,1,0,0,0,0,0,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28,24,25,26,27,28],"f":[0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[2,3]]]],[5,[[4,[6,7]]]],[2,2],[1,1],[6,6],[5,5],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[],1],[[],5],0,[2,9],[[],1],[[],5],[[2,10],11],[[3,10],11],[[3,10],11],[[6,10],11],[[7,10],11],[[7,10],11],[-1,-1,[]],[-1,-1,[]],[12,3],[-1,-1,[]],[13,3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,7],[13,7],[6,14],[[1,15],1],[[5,15],5],0,0,0,0,[[1,16],1],0,0,[[5,17],5],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,18],0,[[1,19],1],[[5,19],5],0,0,0,0,[20,[[21,[2]]]],[[1,22],1],[[5,22],5],0,0,0,0,[-1,13,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,[]],[-1,13,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[5,17],5],0,0,[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[[1,16],1],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,24],[25,25],[26,26],[27,27],[28,28],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],29],[[],29],[[],29],[[],29],[[24,24],30],[[25,25],30],[[26,26],30],[[27,27],30],[[28,28],30],[[24,31],32],[[25,31],32],[[26,31],32],[[27,31],32],[[28,31],32],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[24,-1],8,33],[[25,-1],8,33],[[26,-1],8,33],[[27,-1],8,33],[[28,-1],8,33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[20,[[21,[24]]]],[20,[[21,[25]]]],[20,[[21,[26]]]],[20,[[21,[27]]]],[20,[[21,[28]]]],[34,18],[34,18],[34,18],[34,18],[34,18],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[24,36],8],[[25,36],8],[[26,36],8],[[27,36],8],[[28,36],8],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[-1,23,[]]],"c":[],"p":[[3,"CrossTestDataBuilder",0],[3,"CrossTestData",0],[4,"CrossTestDataBuilderError",0],[4,"Result",225],[3,"TestDataBuilder",0],[3,"TestData",0],[4,"TestDataBuilderError",0],[15,"tuple"],[3,"TokenStream",226],[3,"Formatter",227],[6,"Result",227],[3,"UninitializedFieldError",228],[3,"String",229],[3,"TokenStream",230],[3,"LitBool",231],[3,"ExprArray",232],[3,"ExprPath",232],[15,"bool"],[4,"Expr",232],[6,"ParseStream",233],[6,"Result",234],[3,"Ident",230],[3,"TypeId",235],[3,"Metadata",120],[3,"Ignore",120],[3,"TestName",120],[3,"Types",120],[3,"Impls",120],[15,"str"],[6,"bool",236],[6,"Formatter",236],[6,"FmtResult",236],[8,"Hasher",237],[3,"Cursor",238],[3,"Span",230],[6,"TokenStream2",236],[8,"ToLowerSnakeStr",0]],"b":[[40,"impl-Debug-for-CrossTestDataBuilderError"],[41,"impl-Display-for-CrossTestDataBuilderError"],[43,"impl-Display-for-TestDataBuilderError"],[44,"impl-Debug-for-TestDataBuilderError"],[47,"impl-From%3CUninitializedFieldError%3E-for-CrossTestDataBuilderError"],[49,"impl-From%3CString%3E-for-CrossTestDataBuilderError"],[53,"impl-From%3CUninitializedFieldError%3E-for-TestDataBuilderError"],[54,"impl-From%3CString%3E-for-TestDataBuilderError"]]},\
"hotshot_types":{"doc":"Types and Traits for the <code>HotShot</code> consensus module","t":"GNEDNDRRLLLLLLLLLLLLFLLLLLLFLLLLLLAMALLLLLLLLLLLLLMAAMLLLLLLLLLLLLLLLLLLLLLLLLMAMAMMMMMMMMAMLLLAAAAMMMMLLLLMALLLLLLLLLAALLLGDDDDCCRRLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLMLLLLLLLLLLLLLLLLMMMMMMMLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLEQQDNDNDNDDQDQIGGDGDGIDRRRLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKMMMMLMMLMMMMFKLLLLLLFLLMLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKMMMMMMLLLLLLLLLLNDNDNDNDENDNDNNNNNNDNDNDNNNNENDNNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMMMMMMMNNNDENNNNNNLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMMMMMMMMMGDDGGMDGGDGDGLLLLLLLLLLMLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLENNNNNNNNNNEENNNNDEEDEEGDNNNNDNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLDDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLGGGLLLLLLLLLLLLLGDGDDIGGDGGGLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLMMMMMMMMKLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMLLLLDGDGDDGDGDDGDGDGILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMALLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMMMMMMMMLLLLLLLLLIDLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLCCAAAAAAAAAAAIIQQQQQIIQKKKKKKKKKKKKKFIKKKKKKKKKIENDINDLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLKLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLKLLLIIIIIDLLKLKLLLLLLLLKLKLKLKLLLLLLLLLLLLKKLLKLLLLLKLLDNNNNNNNNNNNEDNDDNDNDIIENDNNDNDNDNDNDNEDQEEIINDNDNNDDNNNNNNNNNNNDNDDIINDENDNDINEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMMLLLKKLLKKMMKLLLLLLLLLLLLLLKKLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKMMMMMMMQQQQIQQQIIQQQIQQQKKKKLKKKKKKQQQQIQKKKKQQQQQIQIKKKKKKKKKKKKKKQQNQNNNNQQNNQNNNNENEINRLLLLLLLLLLLLKKLLLLKLLLLLLLLLLLLLLLLLLKKKKKKLKLLLLKLLKLLQQQQIIQIKKLKKNNNDNGIEDDNIELLLLLLKLLLLLLLLLLLLLMMLLLLLLLLLLLLKLLLLLLKKLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLLLLLLLLLLLLLLLLLMLLLLLDNNNNNGDGEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMIQIGQIDGQLLLMMLLKLLLLKKKKKKKLLLLLKMMKLLLML","n":["BoxSyncFuture","Continuous","ExecutionType","HotShotConfig","Incremental","ValidatorConfig","_DERIVE_Display_FOR_ValidatorConfig","_DERIVE_core_fmt_Debug_FOR_HotShotConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","assert_future","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boxed_sync","clone","clone","clone","clone_into","clone_into","clone_into","consensus","da_committee_size","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","election_config","error","event","execution_type","fmt","fmt","fmt","fmt","from","from","from","generated_from_seed_indexed","header","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","known_nodes_with_stake","light_client","max_transactions","message","min_transactions","my_own_validator_config","next_view_timeout","num_bootstrap","private_key","propose_max_round_time","propose_min_round_time","public_key","qc","round_start_delay","serialize","serialize","serialize","signature_key","simple_certificate","simple_vote","stake_table","stake_value","start_delay","state_key_pair","timeout_ratio","to_owned","to_owned","to_owned","to_string","total_nodes","traits","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vote","vzip","vzip","vzip","CommitmentMap","Consensus","ConsensusMetrics","ConsensusMetricsValue","InnerConsensusMetrics","View","ViewInner","_DERIVE_Display_FOR_InnerConsensusMetrics","_DERIVE_core_fmt_Debug_FOR_Consensus","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add","add_point","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","base","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","collect_garbage","counters","create_counter","create_gauge","create_histogram","create_label","cur_view","current_view","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","gauges","get_decided_leaf","get_decided_state","get_state","header","high_qc","histograms","increment_view","init","init","init","init","instance_state","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","invalid_qc","labels","last_decided_view","last_decided_view","last_synced_block_height","locked_view","metrics","new","number_of_timeouts","number_of_views_per_decide_event","number_of_views_since_last_decide","outstanding_transactions","outstanding_transactions_memory_size","prefix","saved_da_certs","saved_leaves","saved_payloads","set","set","sub","subgroup","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","validated_state_map","values","visit_leaf_ancestors","vzip","vzip","vzip","vzip","BlockError","Commit","Common","DAProposal","InconsistentPayloadCommitment","InconsistentPayloadCommitmentSnafu","InvalidBlockHeader","InvalidBlockHeaderSnafu","InvalidTransactionLength","InvalidTransactionLengthSnafu","Leaf","NodeType","QuorumProposal","Share","TestableLeaf","Transaction","TxnCommitment","UpgradeProposal","VidCommitment","VidDisperse","VidScheme","VidSchemeTrait","ViewNumber","_DERIVE_core_fmt_Debug_FOR_DAProposal","_DERIVE_core_fmt_Debug_FOR_QuorumProposal","_DERIVE_core_fmt_Debug_FOR_UpgradeProposal","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","add","add_assign","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","batch_check","block_header","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","check","ck","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit","commit","commit_only","common","create_random_transaction","create_random_transaction","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_with_mode","disperse","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoded_transactions","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval_domain","fail","fail","fail","fake_commitment","fill_block_payload","fill_block_payload_unchecked","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_membership","from_stored_view","genesis","genesis","get_block_header","get_block_payload","get_height","get_justify_qc","get_num_storage_nodes","get_parent_commitment","get_payload_byte_len","get_payload_commitment","get_proposer_id","get_u64","get_view_number","get_view_number","get_view_number","get_view_number","get_view_number","hash","hash","hash","hash","hash","hash","header","header","in_current_span","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","is_consistent","justify_qc","justify_qc","metadata","multi_open_domain","new","num_storage_nodes","parent_commitment","partial_cmp","payload_chunk_size","payload_commitment","proposer_id","proposer_id","random_commitment","recover_payload","serialize","serialize","serialize","serialize","serialize","serialize","serialize_signature2","serialize_with_mode","serialized_size","shares","source","sub","test_srs","timeout_certificate","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade_proposal","verify_share","view_number","view_number","view_number","view_number","view_number","vk","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockError","BlockSnafu","Continue","ContinueSnafu","FailedToBroadcast","FailedToBroadcastSnafu","FailedToMessageLeader","FailedToMessageLeaderSnafu","HotShotError","InsufficientValidSignatures","InsufficientValidSignaturesSnafu","InvalidState","InvalidStateSnafu","LeaderMinRoundTimeNotReached","LeaderWaitingForCommitVotes","LeaderWaitingForHighQC","LeaderWaitingForPreCommitVotes","LeaderWaitingForPrepareVotes","LeafNotFound","LeafNotFoundSnafu","Misc","MiscSnafu","NetworkFault","NetworkFaultSnafu","ReplicaWaitingForCommit","ReplicaWaitingForDecide","ReplicaWaitingForPreCommit","ReplicaWaitingForPrepare","RoundTimedoutState","StorageError","StorageSnafu","TestCollectRoundEventsTimedOut","TimeoutError","TimeoutSnafu","ViewTimeoutError","ViewTimeoutSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","context","context","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","num_valid_signatures","source","state","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","context","context","num_valid_signatures","source","source","source","source","source","source","state","threshold","view_number","DAProposal","Decide","Error","Event","EventType","NextLeaderViewTimeout","QuorumProposal","ReplicaViewTimeout","Transactions","UpgradeProposal","ViewFinished","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","event","fmt","fmt","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view_number","vzip","vzip","block_size","error","leaf_chain","proposal","proposal","proposal","qc","sender","sender","sender","transactions","view_number","view_number","view_number","CircuitField","GenericLightClientState","GenericPublicInput","LightClientState","PublicInput","R","StateKeyPair","StateSignKey","StateSignature","StateSignatureRequestBody","StateSignatureScheme","StateSignaturesBundle","StateVerKey","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","accumulated_weight","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bits","as_ref","batch_check","batch_check","block_comm_root","block_comm_root","block_comm_root","block_height","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","curve_param","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_with_mode","deserialize_with_mode","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","equivalent","equivalent","fee_ledger_comm","fee_ledger_comm","fee_ledger_comm","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","generate","generate_from_seed","generate_from_seed_indexed","hash","header","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","key","partial_cmp","qc_key_comm","s","serialize","serialize","serialize","serialize","serialize_with_mode","serialize_with_mode","serialized_size","serialized_size","signature","signatures","stake_amount_comm","stake_table_comm","stake_table_comm","stake_table_comm","state","state","state_key_comm","tag","threshold","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","view_number","view_number","view_number","vzip","vzip","vzip","vzip","vzip","CommitteeConsensusMessage","Consensus","DAC","DACertificate","DACertificate","DAProposal","DAProposal","DAVote","DAVote","Data","Data","DataMessage","GeneralConsensusMessage","Internal","LatestProposal","LatestViewSyncCertificate","Left","Message","MessageKind","MessagePurpose","Messages","ProcessedCommitteeConsensusMessage","ProcessedGeneralConsensusMessage","ProcessedSequencingMessage","Proposal","Proposal","Proposal","Proposal","Right","SequencingMessage","SubmitTransaction","TimeoutVote","Upgrade","UpgradeProposal","UpgradeVote","VidDisperse","VidDisperseMsg","VidDisperseMsg","ViewSyncCertificate","ViewSyncCommitCertificate","ViewSyncCommitVote","ViewSyncFinalizeCertificate","ViewSyncFinalizeVote","ViewSyncPreCommitCertificate","ViewSyncPreCommitVote","ViewSyncVote","Vote","Vote","Vote","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_consensus_message","get_view_number","get_view_number","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kind","new","new","purpose","purpose","purpose","sender","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BitVectorQC","QCParams","__clone_box","__clone_box","agg_sig_pp","as_any","as_any","as_any_mut","as_any_mut","assemble","borrow","borrow","borrow_mut","borrow_mut","check","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","fmt","from","from","hash","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","serialize","serialize","sign","stake_entries","threshold","to_owned","trace","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BLSPrivKey","BLSPubKey","BLSPublicParam","assemble","check","from_bytes","from_private","generated_from_seed_indexed","genesis_proposer_pk","get_public_key","get_public_parameter","get_sig_proof","get_stake_table_entry","sign","to_bytes","validate","DACertificate","OneHonestThreshold","QuorumCertificate","SimpleCertificate","SuccessThreshold","Threshold","TimeoutCertificate","UpgradeCertificate","UpgradeThreshold","ViewSyncCommitCertificate2","ViewSyncFinalizeCertificate2","ViewSyncPreCommitCertificate2","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_pd","_pd","_pd","_pd","_pd","_pd","_pd","_pd","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_signed_certificate","data","data","data","data","data","data","data","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","genesis","genesis","get_data","get_data_commitment","get_view_number","hash","hash","hash","hash","header","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_genesis","is_valid_cert","serialize","serialize","serialize","serialize","signatures","signatures","signatures","signatures","signatures","signatures","signatures","signatures","threshold","threshold","threshold","threshold","threshold","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view_number","view_number","view_number","view_number","view_number","view_number","view_number","view_number","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vote_commitment","vzip","vzip","vzip","vzip","DAData","DAVote","QuorumData","QuorumVote","SimpleVote","TimeoutData","TimeoutVote","UpgradeProposalData","UpgradeVote","VIDData","ViewSyncCommitData","ViewSyncCommitVote","ViewSyncFinalizeData","ViewSyncFinalizeVote","ViewSyncPreCommitData","ViewSyncPreCommitVote","Voteable","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commit","commit","commit","commit","commit","commit","commit","create_signed_vote","data","data","data","data","data","data","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_data","get_data_commitment","get_signature","get_signing_key","get_view_number","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","leaf_commit","new_version","new_version_first_block","new_version_hash","old_version","old_version_last_block","payload_commit","payload_commit","relay","relay","relay","round","round","round","sealed","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signature","signature","signature","signature","signature","signature","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view_and_relay_commit","view_number","view_number","view_number","view_number","view_number","view_number","view_number","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Sealed","StakeTableEntry","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","from","get_key","get_stake","hash","init","into","into_any","into_any_arc","into_any_rc","serialize","stake_amount","stake_key","to_owned","try_from","try_into","type_id","vzip","BlockPayload","ValidatedState","block_contents","consensus_api","election","metrics","network","node_implementation","qc","signature_key","stake_table","states","storage","BlockHeader","BlockPayload","Encode","Error","Metadata","Payload","State","TestableBlock","Transaction","Transaction","block_number","builder_commitment","encode","from_bytes","from_transactions","genesis","genesis","genesis","metadata","new","payload_commitment","transaction_commitments","txn_count","vid_commitment","ConsensusApi","max_transactions","min_transactions","private_key","propose_max_round_time","propose_min_round_time","public_key","send_event","store_leaf","total_nodes","ElectionConfig","ElectionError","MathError","MathSnafu","Membership","StubError","StubSnafu","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone_into","clone_into","create_election","default_election_config","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","fail","failure_threshold","fmt","fmt","fmt","fmt","from","from","from","get_committee","get_committee_qc_stake_table","get_leader","get_stake","has_stake","header","in_current_span","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","source","success_threshold","to_owned","to_owned","to_string","total_nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upgrade_threshold","vzip","vzip","vzip","Counter","Gauge","Histogram","Label","Metrics","NoMetrics","__clone_box","__clone_box","add","add","add_point","add_point","as_any","as_any_mut","borrow","borrow_mut","boxed","clone","clone_into","create_counter","create_counter","create_gauge","create_gauge","create_histogram","create_histogram","create_label","create_label","default","deref","deref_mut","drop","fmt","from","init","into","into_any","into_any_arc","into_any_rc","set","set","set","set","subgroup","subgroup","to_owned","try_from","try_into","type_id","update","update","vzip","AsynchronousNetwork","Broadcast","CancelPollForDAC","CancelPollForLatestProposal","CancelPollForLatestViewSyncCertificate","CancelPollForProposal","CancelPollForTransactions","CancelPollForVIDDisperse","CancelPollForViewSyncCertificate","CancelPollForViewSyncVotes","CancelPollForVotes","CentralizedServer","CentralizedServerNetworkError","CentralizedServerSnafu","ChannelSend","ChannelSendSnafu","ChaosNetwork","ClientDisconnected","ClientDisconnectedSnafu","ClientError","ClientSnafu","CommunicationChannel","ConnectedNetwork","ConsensusIntentEvent","CouldNotDeliver","CouldNotDeliverSnafu","Direct","EndpointError","EndpointSnafu","FailedToDeserialize","FailedToDeserializeSnafu","FailedToSerialize","FailedToSerializeSnafu","IncorrectConsensusData","IncorrectConsensusDataSnafu","Libp2p","Libp2pSnafu","MemoryNetwork","MemoryNetworkError","MemoryNetworkSnafu","NETWORK","NetworkChange","NetworkError","NetworkMsg","NetworkReliability","NoMessagesInQueue","NoMessagesInQueueSnafu","NoSuchNode","NoSuchNodeSnafu","NodeConnected","NodeDisconnected","PartiallySynchronousNetwork","PerfectNetwork","PollForDAC","PollForLatestProposal","PollForLatestViewSyncCertificate","PollForProposal","PollForTransactions","PollForVIDDisperse","PollForViewSyncCertificate","PollForViewSyncVotes","PollForVotes","PollFutureLeader","ShutDown","ShutDownSnafu","Stub","StubSnafu","SynchronousNetwork","TestableChannelImplementation","TestableNetworkingImplementation","Timeout","TimeoutSnafu","TransmitType","UnableToCancel","UnableToCancelSnafu","UnimplementedFeature","UnimplementedFeatureSnafu","ViewMessage","WebServer","WebServerNetworkError","WebServerSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","as_error_source","as_error_source","as_error_source","asynchronous","backtrace","backtrace","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","build","build","build","build","build","build","build","build","build","build","build","build","cause","cause","cause","cause","chaos_send_msg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","delay_high_ms","delay_high_ms","delay_high_ms","delay_low_ms","delay_low_ms","delay_low_ms","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","description","description","deserialize","direct_message","direct_message","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_network","generator","get_view_number","gst","header","header","header","header","in_current_span","in_current_span","in_current_span","in_current_span","in_flight_message_count","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inject_consensus_info","inject_consensus_info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_ready","is_ready","keep_denominator","keep_denominator","keep_numerator","keep_numerator","new","new","new","pause","purpose","queue_node_lookup","queue_node_lookup","recv_msgs","recv_msgs","repeat_high","repeat_low","resume","sample_delay","sample_delay","sample_delay","sample_delay","sample_delay","sample_keep","sample_keep","sample_keep","sample_keep","sample_keep","sample_repeat","sample_repeat","scramble","serialize","shut_down","shut_down","source","source","source","source","start","synchronous","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_ready","wait_for_ready","source","source","source","source","source","source","source","BlockHeader","BlockPayload","CommitteeElectionConfig","CommitteeNetwork","ConsensusTime","ElectionConfigType","InstanceState","Membership","NodeImplementation","NodeType","QuorumNetwork","SignatureKey","Storage","TestableNodeImplementation","Time","Transaction","ValidatedState","block_genesis","committee_election_config_generator","construct_tmp_storage","gen_comm_channels","genesis","get_full_state","get_u64","leaf_create_random_transaction","new","state_create_random_transaction","txn_count","MessageLength","QC","QCProverParams","QCVerifierParams","QuorumCertificateScheme","QuorumSize","assemble","check","sign","trace","PrivateKey","PureAssembledSignatureType","QCParams","QCType","SignError","SignatureKey","StakeTableEntry","StakeTableEntryType","assemble","check","from_bytes","from_private","generated_from_seed_indexed","genesis_proposer_pk","get_public_key","get_public_parameter","get_sig_proof","get_stake","get_stake_table_entry","sign","to_bytes","validate","Amount","Aux","BlockNum","Commitment","EpochStart","ExistingKey","Head","InsufficientFund","IntoIter","Key","KeyNotFound","LastEpochStart","LookupProof","MalformedProof","MismatchedKey","RescueError","SnapshotUnsupported","SnapshotVersion","StakeOverflow","StakeTableError","StakeTableScheme","VerificationError","_DERIVE_Display_FOR_StakeTableError","as_any","as_any","as_any_mut","as_any_mut","as_error_source","batch_deregister","batch_register","batch_update","borrow","borrow","borrow_mut","borrow_mut","commitment","contains_key","deref","deref","deref_mut","deref_mut","deregister","drop","drop","fmt","fmt","from","from","header","in_current_span","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","len","lookup","lookup_with_aux_and_proof","lookup_with_proof","register","sample","to_string","total_stake","try_from","try_from","try_into","try_into","try_iter","type_id","type_id","update","vzip","vzip","BlockHeader","BlockPayload","Error","Instance","InstanceState","TestableState","Time","ValidatedState","create_random_transaction","from_header","genesis","on_commit","validate_and_apply_header","Err","Failed","NoGenesisView","NoGenesisViewSnafu","Ok","Result","Storage","StorageError","StorageState","StoredView","Success","TestableStorage","ViewEntry","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","append","append_single_view","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_error_source","backtrace","block_header","block_payload","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","cleanup_storage_up_to_view","clone","clone","clone","clone_into","clone_into","clone_into","commit","construct_tmp_storage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","eq","eq","eq","fail","failed","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_qc_block_and_state","get_anchored_view","get_full_state","header","in_current_span","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_error","justify_qc","parent","proposer_id","source","stored","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","view_number","vzip","vzip","vzip","vzip","vzip","BuilderCommitment","DA","Exclusive","Failed","Inclusive","Leaf","LeafCommitment","RoundFinishedEvent","Sha256Digest","Terminator","View","ViewInner","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","batch_check","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_with_mode","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_raw_digest","from_str","get_leaf","get_leaf_commitment","get_payload_commitment","get_state","hash","header","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","serialize","serialize_with_mode","serialized_size","tag","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","view_inner","view_number","vzip","vzip","vzip","vzip","vzip","leaf","payload_commitment","state","Certificate","Commitment","HasViewNumber","SignersMap","Threshold","Vote","VoteAccumulator","VoteMap2","Voteable","accumulate","as_any","as_any_mut","base","base","borrow","borrow_mut","create_signed_certificate","deref","deref_mut","drop","from","get_data","get_data","get_data_commitment","get_data_commitment","get_signature","get_signing_key","get_view_number","init","into","into_any","into_any_arc","into_any_rc","is_valid_cert","phantom","signers","threshold","try_from","try_into","type_id","vote_outcomes","vzip"],"q":[[0,"hotshot_types"],[123,"hotshot_types::consensus"],[268,"hotshot_types::data"],[655,"hotshot_types::error"],[1047,"hotshot_types::error::HotShotError"],[1059,"hotshot_types::event"],[1118,"hotshot_types::event::EventType"],[1132,"hotshot_types::light_client"],[1332,"hotshot_types::message"],[1708,"hotshot_types::qc"],[1763,"hotshot_types::signature_key"],[1779,"hotshot_types::simple_certificate"],[1974,"hotshot_types::simple_vote"],[2316,"hotshot_types::simple_vote::sealed"],[2317,"hotshot_types::stake_table"],[2352,"hotshot_types::traits"],[2365,"hotshot_types::traits::block_contents"],[2389,"hotshot_types::traits::consensus_api"],[2399,"hotshot_types::traits::election"],[2496,"hotshot_types::traits::metrics"],[2547,"hotshot_types::traits::network"],[3459,"hotshot_types::traits::network::NetworkError"],[3466,"hotshot_types::traits::node_implementation"],[3494,"hotshot_types::traits::qc"],[3504,"hotshot_types::traits::signature_key"],[3526,"hotshot_types::traits::stake_table"],[3604,"hotshot_types::traits::states"],[3617,"hotshot_types::traits::storage"],[3769,"hotshot_types::utils"],[3915,"hotshot_types::utils::ViewInner"],[3918,"hotshot_types::vote"],[3960,"dyn_clone::sealed"],[3961,"dyn_clone::sealed"],[3962,"core::future::future"],[3963,"core::marker"],[3964,"core::marker"],[3965,"core::result"],[3966,"serde::de"],[3967,"core::fmt"],[3968,"core::fmt"],[3969,"core::fmt"],[3970,"alloc::sync"],[3971,"alloc::rc"],[3972,"serde::ser"],[3973,"serde::ser"],[3974,"core::any"],[3975,"core::ops::function"],[3976,"core::error"],[3977,"snafu::backtrace_shim"],[3978,"ark_serialize::error"],[3979,"core::iter::traits::iterator"],[3980,"core::cmp"],[3981,"commit"],[3982,"jf_primitives::vid"],[3983,"core::convert"],[3984,"rand_core"],[3985,"ark_serialize"],[3986,"ark_serialize"],[3987,"jf_primitives::vid"],[3988,"core::hash"],[3989,"std::io"],[3990,"bitvec::slice"],[3991,"bitvec::order"],[3992,"ark_ff::fields::prime"],[3993,"core::cmp"],[3994,"core::iter::traits::collect"],[3995,"ark_ed_on_bn254::curves"],[3996,"jf_primitives::signatures::schnorr"],[3997,"core::cmp"],[3998,"tagged_base64"],[3999,"serde::de"],[4000,"generic_array"],[4001,"serde::de"],[4002,"rand_core"],[4003,"bitvec::vec"],[4004,"core::iter::traits::collect"],[4005,"core::pin"],[4006,"alloc::collections::btree::set"],[4007,"libp2p_networking::network::node::handle"],[4008,"core::ops::function"]],"d":["Pinned future that is Send and Sync","constantly increment view as soon as view finishes","the type of consensus to run. Either: wait for a signal to …","Holds configuration for a <code>HotShot</code>","wait for a signal","config for validator, including public key, private key, …","","","","","","","","","","","","","","","yoinked from futures crate","","","","","","","yoinked from futures crate, adds sync bound that we need","","","","","","","Provides the core consensus types","List of DA committee nodes for static DA committe","Provides types useful for representing <code>HotShot</code>’s data …","","","","","","","","","","","","","","the election configuration","Error type for <code>HotShot</code>","Events that a <code>HotShot</code> instance can emit","Whether to run one view or continuous views","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generate validator config from input seed, index and stake …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","List of known node’s public keys and stake value for …","Types and structs associated with light client state","Maximum transactions per block","Network message types","Minimum transactions per block","My own validator config, including my public key, private …","Base duration for next-view timeout, in milliseconds","Number of network bootstrap nodes","The validator’s private key, should be in the mempool, …","The maximum amount of time a leader can wait to start a …","The minimum amount of time a leader has to wait to start a …","The validator’s public key and stake value","Implementation for <code>BitVectorQC</code> that uses BLS signature + …","The delay a leader inserts before starting pre-commit, in …","","","","Types and structs for the hotshot signature keys","Implementations of the simple certificate type.  Used for …","Implementations of the simple vote types.","Types and structs related to the stake table","The validator’s stake","Delay after init before starting consensus, in milliseconds","the validator’s key pairs for state signing/verification","The exponential backoff ration for the next-view timeout","","","","","Total number of nodes in the network","Common traits for the <code>HotShot</code> protocol","","","","","","","","","","Utility functions, type aliases, helper structs and enum …","Vote, Accumulator, and Certificate Types","","","","A type alias for <code>HashMap&lt;Commitment&lt;T&gt;, T&gt;</code>","A reference to the consensus algorithm","The wrapper with a string name for the networking metrics","Contains several <code>ConsensusMetrics</code> that we’re interested …","the set of counters and gauges for the networking metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Garbage collects based on state change right now, this …","All the counters of the networking metrics","","","","","cur_view from pseudocode","The current view","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All the gauges of the networking metrics","Gets the last decided leaf.","Gets the last decided validated state.","Gets the validated state with the given view number, if in …","","the highqc per spec","All the histograms of the networking metrics","increment the current view NOTE may need to do gc here","","","","","Immutable instance-level state.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Number of invalid QCs we’ve seen since the last commit.","All the labels of the networking metrics","last view had a successful decide event","The number of last decided view","The number of last synced block height","The <code>locked_qc</code> view number","A reference to the metrics trait","Create a new instance of this <code>ConsensusMetricsValue</code> …","Number of views that timed out","Number of views that are in-flight since the last anchor …","Number of views that are in-flight since the last decided …","Number of outstanding transactions","Memory size in bytes of the serialized transactions still …","a prefix which tracks the name of the metric","All the DA certs we’ve received for current and future …","Map of leaf hash -&gt; leaf","Saved payloads.","","","For the creation and naming of gauge, counter, histogram …","","","","","","","","","","","","","","","","","","","The validated states that are currently loaded in memory.","a map of values","gather information from the parent chain of leafs","","","","","The error type for block and its transactions.","Payload commitment.","Common data sent to all storage nodes.","A proposal to start providing data availability for a …","Inconsistent payload commitment.","SNAFU context selector for the …","Invalid block header.","SNAFU context selector for the …","Invalid transaction length.","SNAFU context selector for the …","This is the consensus-internal analogous concept to a …","Type of nodes participating in the network.","Proposal to append a block.","Share-specific data sent to a storage node.","Additional functions required to use a <code>Leaf</code> with …","The <code>Transaction</code> type associated with a <code>ValidatedState</code>, as …","<code>Commitment</code> to the <code>Transaction</code> type associated with a …","A proposal to upgrade the network","VID commitment.","VID dispersal data","The VID scheme type used in <code>HotShot</code>.","VID: Verifiable Information Dispersal","Type-safe wrapper around <code>u64</code> so we know the thing we’re …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The block header to append","Block header.","Optional block payload.","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","Compute a payload commitment","VID common data sent to all storage nodes","Create a transaction that can be added to the block …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute shares to send to the storage nodes","","","","","","","","","","","Encoded transactions in the block to be applied.","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Fake the thing a genesis block points to. Needed to avoid …","Fill this leaf with the block payload.","Fill this leaf with the block payload, without checking …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create VID dispersal from a specified membership Uses the …","Create a leaf from information stored about a view.","Create a genesis view number (0)","Create a new leaf from its components.","The block header contained in this leaf.","Optional block payload.","Height of this leaf in the chain.","The QC linking this leaf to its parent in the chain.","Extract the number of storage nodes from a …","Commitment to this leaf’s parent.","Extract the payload byte length data from a …","A commitment to the block payload contained in this leaf.","Identity of the network participant who proposed this leaf.","Returen the u64 format","","","","","Time when this leaf was created.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check that a <code>VidScheme::Common</code> is consistent with a …","Per spec, justification","Per spec, justification","Metadata of the block to be applied.","","Create a new <code>ViewNumber</code> with the given value.","","The hash of the parent <code>Leaf</code> So we can ask if it extends","","","Block payload commitment","the propser id","the proposer id of the leaf","create a random commitment","Recover payload from shares. Do not verify shares or check …","","","","","","","Serialization for the QC assembled signature","","","A storage node’s key and its corresponding VID share","","","Trusted KZG setup for VID.","Possible timeout certificate.  Only present if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The information about which version we are upgrading to.","Verify a share. Used by both storage node and retrieval …","View this proposal applies to","View this proposal applies to","The view number for which this VID data is intended","CurView from leader when proposing leaf","CurView from leader when proposing leaf","","","","","","","","","","","","Failure in the block.","SNAFU context selector for the <code>HotShotError::BlockError</code> …","Internal value used to drive the state machine","SNAFU context selector for the <code>HotShotError::Continue</code> …","Failed to broadcast a message on the network","SNAFU context selector for the …","Failed to Message the leader in the given stage","SNAFU context selector for the …","Error type for <code>HotShot</code>","Not enough valid signatures for a quorum","SNAFU context selector for the …","Invalid state machine state","SNAFU context selector for the <code>HotShotError::InvalidState</code> …","Leader is in a Prepare phase and timed out before the …","Leader is waiting for commit votes","Leader is in a Prepare phase and is waiting for a HighQC","Leader is waiting for precommit votes","Leader is waiting for prepare votes","Item was not present in storage","SNAFU context selector for the <code>HotShotError::LeafNotFound</code> …","Miscelaneous error TODO fix this with #181 …","SNAFU context selector for the <code>HotShotError::Misc</code> variant","Failure in networking layer","SNAFU context selector for the <code>HotShotError::NetworkFault</code> …","Replica is waiting for a commit message","Replica is waiting for a decide message","Replica is waiting for a pre-commit message","Replica is waiting for a prepare message","Contains information about what the state of the …","Error accesing storage","SNAFU context selector for the <code>HotShotError::StorageError</code> …","HotShot-testing tried to collect round events, but it …","HotShot timed out waiting for msgs","SNAFU context selector for the <code>HotShotError::TimeoutError</code> …","HotShot timed out during round","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","Context","Number of valid signatures","Underlying error","source of error","The underlying network fault","The underlying network fault","The underlying block error.","Underlying network fault","The state that the round was in when it timed out","Threshold of signatures needed for a quorum","view number","DA proposal was received from the network or submitted to …","A new decision event was issued","A view encountered an error and was interrupted","A status event emitted by a <code>HotShot</code> instance","The type and contents of a status event emitted by a …","A next leader task was canceled by a timeout interrupt","Quorum proposal was received from the network or submitted …","A replica task was canceled by a timeout interrupt","New transactions were received from the network or …","Upgrade proposal was received from the network or …","The view has finished.  If values were decided on, a <code>Decide</code>…","","","","","","","","","","","","","","","","","","","","","","","The underlying event","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The view number that this event originates from","","","Optional information of the number of transactions in the …","The underlying error","The chain of Leafs that were committed by this decision","Contents of the proposal","Contents of the proposal","Contents of the proposal","The QC signing the most recent leaf in <code>leaf_chain</code>.","Public key of the leader submitting the proposal","Public key of the leader submitting the proposal","Public key of the leader submitting the proposal","The list of transactions","The view that timed out","The view that timed out","The view number that has just finished","Base field in the prover circuit","A light client state","Public input to the light client state prover service","Concrete type for light client state","Concrete for circuit’s public input","","Key pairs for signing/verifying a light client state","Signing key for signing a light client state","Signatures","Request body to send to the state relay server","Signature scheme","The state signatures bundle is a light client state and …","Verification key for verifying state signatures","","","","","","","","","","","Total stakes associated with the signer","","","","","","","","","","","","","","","Return the block commitment root of the light client state","Root of the block commitment tree","Root of the block commitment tree","Return the block height of the light client state","Current block height","Current block height","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the fee ledger commitment of the light client state","Commitment for fee ledger","Commitment for fee ledger","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Generate key pairs from <code>thread_rng()</code>","Generate key pairs from seed","Generate key pairs from an index and a seed","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The public key associated with this request","","Return the qc key commitment of the light client state","","","","","","","","","","The associated signature of the light client state","The collected signatures","Return the stake amount commitment of the light client …","Return the stake table commitment of the light client state","Commitment for the stake table","Commitment for the stake table","The associated light client state","The state for this signatures bundle","Return the state key commitment of the light client state","","Return the threshold","","","","","","","","","","","","","","","","","","","","","","","","","Return the view number of the light client state","Current view number","Current view number","","","","","","Messages related to the sequencing consensus protocol for …","Messages related to the consensus protocol","Message with a DAC.","Certificate for the DA.","Certificate data is available","Proposal for the DA committee.","Proposal for data availability committee","Vote from the DA committee.","vote for data availability committee","Data message","Messages relating to sharing data between nodes","Messages related to sending data between nodes","Messages related to both validating and sequencing …","Message for internal use","Message with most recent [quorum/DA] proposal the server …","Message with most recent view sync certificate the server …","A value of type <code>L</code>.","Incoming message","Enum representation of any message type","A message type agnostic description of a message’s …","A wrapper type for implementing <code>PassType</code> on a vector of …","A processed consensus message for the DA committee in …","A processed consensus message for both validating and …","A processed consensus message for sequencing consensus.","Prepare qc from the leader","Message with a [quorum/DA] proposal.","Message with a quorum proposal.","Message with a quorum proposal.","A value of type <code>R</code>.","Messages for sequencing consensus.","Contains a transaction to be submitted TODO rethink this …","Message with a Timeout vote","Message with an upgrade proposal.","Message with an upgrade proposal","Message with an upgrade vote","VID disperse, like <code>Proposal</code>.","VID dispersal data. Like <code>DAProposal</code>","Initiate VID dispersal.","Message with a view sync certificate.","Message with a view sync commit certificate","Message with a view sync commit vote","Message with a view sync finalize certificate","Message with a view sync finalize vote","Message with a view sync pre-commit certificate","Message with a view sync pre-commit vote","Message with a view sync vote.","Message with a quorum vote.","Message with a quorum vote.","Message with a quorum vote.","","","","","","","","","","","","","","","","","","","","","","","Phantom for TYPES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The data being proposed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a <code>MessageKind</code> from <code>SequencingMessage</code>.","get the view number out of a message","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The message kind","Create a <code>ProcessedGeneralConsensusMessage</code> from a …","Create a <code>ProcessedCommitteeConsensusMessage</code> from a …","","","Get the message purpos","The sender of this message","","","","","","","","","","The proposal must be signed by the view leader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the protocol in use for this message","Get the view number this message relates to","","","","","","","","","","","","An implementation of QC using BLS signature and a …","Public parameters of <code>BitVectorQC</code>","","","public parameter for the aggregated signature scheme","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","the stake table (snapshot) this QC is verified against","threshold for the accumulated “weight” of votes to …","","","","","","","","","","","BLS private key used to sign a message","BLS public key used to verify a signature","Public parameters for BLS signature scheme","","","","","","","","","","","","","","Type alias for a DA certificate over <code>DAData</code>","Defines a threshold which is f + 1 (i.e at least one of …","Type alias for a <code>QuorumCertificate</code>, which is a …","A certificate which can be created by aggregating many …","Defines a threshold which is 2f + 1 (Amount needed for …","Trait which allows use to inject different threshold …","Type alias for a Timeout certificate over a view number","Type alias for a <code>UpgradeCertificate</code>, which is a …","Defines a threshold which is 0.9n + 1 (i.e. over 90% of …","Type alias for a <code>ViewSyncCommit</code> certificate over a view …","Type alias for a <code>ViewSyncFinalize</code> certificate over a view …","Type alias for a <code>ViewSyncPreCommit</code> certificate over a view …","","","","","","","","","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","phantom data for <code>THRESHOLD</code> and <code>TYPES</code>","","","","","","","","","","","","","","","","","","","","","","","","","","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","The data this certificate is for.  I.e the thing that was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creat the Genisis certificate","Creat the Genisis certificate","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","If this QC is for the genesis block","","","","","","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","assembled signature for certificate aggregation","Calculate a threshold based on the membership","","","","","","","","","","","","","","","","","","","","","","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","Which view this QC relates to","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","commitment of all the votes this cert should be signed over","","","","","Data used for a DA vote.","DA vote type alias","Data used for a yes vote.","Quorum vote Alias","A simple yes vote over some votable type.","Data used for a timeout vote.","Timeout Vote type alias","Data used for a Upgrade vote.","Upgrade proposal vote","Data used for a VID vote.","Data used for a Commit vote.","View Sync Commit Vote type alias","Data used for a Finalize vote.","View Sync Finalize Vote type alias","Data used for a Pre Commit vote.","View Sync Pre Commit Vote type alias","Marker trait for data or commitments that can be voted on. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates and signs a simple vote","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","The leaf commitment being voted on.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commitment to the leaf","The new version that we are upgrading to.","The first block for which the new version will be in …","A unique identifier for the specific protocol being voted …","The old version that we are upgrading from.","The last block for which the old version will be in effect.","Commitment to a block payload","Commitment to the block payload the VID vote is on.","The relay this vote is intended for","The relay this vote is intended for","The relay this vote is intended for","The view number we are trying to sync on","The view number we are trying to sync on","The view number we are trying to sync on","Sealed is used to make sure no other files can implement …","","","","","","","","","","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","The signature share associated with this vote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","View the timeout is for","This implements commit for all the types which contain a …","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","The view this vote was cast for","","","","","","","","","","Only structs in this file can impl <code>Sealed</code>","Stake table entry","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Get the public key","Get the stake amount","","","Calls <code>U::from(self)</code>.","","","","","The associated stake amount","The public key","","","","","","","","Abstraction over the contents of a block","Contains the <code>ConsensusApi</code> trait.","The election trait, used to decide which node is the …","The <code>Metrics</code> trait is used to collect information from …","Network access compatibility","Composite trait for node behavior","The quorum certificate (QC) trait is a certificate of a …","Minimal compatibility over public key signatures","Trait for stake table data structures","Abstractions over the immutable instance-level state and …","Abstraction over on-disk storage of node state","Header of a block, which commits to a <code>BlockPayload</code>.","Abstraction over the full contents of a block","Encoded payload.","The error type for this type of block","Data created during block building which feeds into the …","Block payload associated with the commitment.","Validated state.","extra functions required on block to be usable by …","Abstraction over any type of transaction. Used by …","The type of the transitions we are applying","Get the block number.","Generate commitment that builders use to sign block …","Encode the payload","Build a payload with the encoded transaction bytes, …","Build a payload and associated metadata with the …","Build the genesis payload and metadata.","generate a genesis block","Build the genesis header, payload, and metadata.","Get the metadata.","Build a header with the payload commitment, metadata, …","Get the payload commitment.","List of transaction commitments.","the number of transactions in this block","Compute the VID payload commitment.","The API that tasks use to talk to the system TODO we plan …","Retuns the maximum transactions allowed in a block","Returns the minimum transactions that must be in a block","Get a reference to the private key.","The maximum amount of time a leader can wait before …","The minimum amount of time a leader has to wait before …","Get a reference to the public key.","Notify the system of an event within <code>hotshot-consensus</code>.","Store a leaf in the storage","Total number of nodes in the network. Also known as <code>n</code>.","election config","Error for election problems","Math error doing something NOTE: it would be better to …","SNAFU context selector for the <code>ElectionError::MathError</code> …","A protocol for determining membership in and participating …","stub error to be filled in","SNAFU context selector for the <code>ElectionError::StubError</code> …","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","create an election TODO may want to move this to a …","generate a default election configuration","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Returns the threshold for a specific <code>Membership</code> …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The members of the committee for view <code>view_number</code>.","Clone the public key and corresponding stake table for …","The leader of the committee for view <code>view_number</code>.","Get the stake table entry for a public key, returns <code>None</code> …","Check if a key has stake","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the threshold for a specific <code>Membership</code> …","","","","Returns the number of total nodes in the committee","","","","","","","","","","Returns the threshold required to upgrade the network …","","","","An ever-incrementing counter","A gauge that stores the latest value.","A histogram which will record a series of points.","A label that stores the last string value.","The metrics type.","Use this if you’re not planning to use any metrics. All …","","","Add a value to the counter","","Add a point to this histogram.","","","","","","Create a new <code>Box&lt;dyn Metrics&gt;</code> with this <code>NoMetrics</code>","","","Create a <code>Counter</code> with an optional <code>unit_label</code>.","","Create a <code>Gauge</code> with an optional <code>unit_label</code>.","","Create a <code>Histogram</code> with an optional <code>unit_label</code>.","","Create a <code>Label</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Set the gauge value","Set the label value","","","Create a subgroup with a specified prefix.","","","","","","Update the guage value","","","An asynchronous network. Packets may be dropped entirely …","broadcast the message to all","Cancal polling for DAC.","Cancel polling for the latest proposal.","Cancel polling for the latest view sync certificate","Cancel polling for proposals.","Cancel polling for transactions","Cancel polling for VID disperse data","Cancel polling for view sync certificate.","Cancel polling for view sync votes.","Cancel polling for votes","Centralized server specific errors","Centralized server specific errors","SNAFU context selector for the …","Error sending output to consumer of …","SNAFU context selector for the <code>NetworkError::ChannelSend</code> …","A chaotic network using all the networking calls","Client disconnected","SNAFU context selector for the …","The client returned an error","SNAFU context selector for the …","API for interacting directly with a consensus committee …","represents a networking implmentration exposes low level …","Events to poll or cancel consensus processes.","Could not deliver a message to a specified recipient","SNAFU context selector for the …","directly transmit","Endpoint parsed incorrectly","SNAFU context selector for the …","Failed to deserealize a network message","SNAFU context selector for the …","Failed to serialize a network message","SNAFU context selector for the …","The injected consensus data is incorrect","SNAFU context selector for the …","Libp2p specific errors","SNAFU context selector for the <code>NetworkError::Libp2p</code> variant","memory network specific errors","for any errors we decide to add to memory network","SNAFU context selector for the <code>NetworkError::MemoryNetwork</code> …","Underlying Network implementation’s type","Changes that can occur in the network","Error type for networking","common traits we would like our network messages to …","interface describing how reliable the network is","The centralized server could not find a specific message.","SNAFU context selector for the …","Attempted to deliver a message to an unknown node","SNAFU context selector for the <code>NetworkError::NoSuchNode</code> …","A node is connected","A node is disconnected","An partially synchronous network. Behaves asynchronously …","ideal network","Poll for a DAC for a particular view","Poll for the most recent [quorum/da] proposal the …","Poll for the most recent view sync proposal the webserver …","Poll for a proposal for a particular view","Poll for new transactions","Poll for VID disperse data for a particular view","Poll for view sync proposals (certificates) for a …","Poll for view sync votes starting at a particular view","Poll for votes for a particular view","Poll for future leader","The underlying connection has been shut down","SNAFU context selector for the <code>NetworkError::ShutDown</code> …","stub","SNAFU context selector for the <code>MemoryNetworkError::Stub</code> …","A synchronous network. Packets may be delayed, but are …","Describes additional functionality needed by the test …","Describes additional functionality needed by the test …","A timeout occurred","SNAFU context selector for the <code>NetworkError::Timeout</code> …","the type of transmission","unable to cancel a request, the request has already been …","SNAFU context selector for the <code>NetworkError::UnableToCancel</code>…","unimplemented functionality","SNAFU context selector for the …","a message","Web server specific errors","Web server specific errors","SNAFU context selector for the <code>NetworkError::WebServer</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","asynchronous portion of network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","broadcast message to those listening on the communication …","broadcast message to some subset of nodes blocking","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","given a message and a way to send the message, decide …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max value in milliseconds that a packet may be delayed","highest value in milliseconds that a packet may be delayed","highest value in milliseconds that a packet may be delayed","Lowest value in milliseconds that a packet may be delayed","lowest value in milliseconds that a packet may be delayed","lowest value in milliseconds that a packet may be delayed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends a direct message to a specific node blocking","Sends a direct message to a specific node blocking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","generates the <code>CommunicationChannel</code> given it’s associated …","generates a network given an expected node count","get the view out of the message","time when GST occurs","","","","","","","","","Get the number of messages in-flight.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Injects consensus data such as view number into the …","Injects consensus data such as view number into the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","checks if the network is ready nonblocking","checks if the network is ready nonblocking","denominator for probability of keeping packets","denominator for probability of keeping packets","numerator for probability of keeping packets","numerator for probability of keeping packets","create new <code>SynchronousNetwork</code>","create new <code>AsynchronousNetwork</code>","create new <code>PartiallySynchronousNetwork</code>","Pauses the underlying network","get the purpose of the message","queues looking up a node","queues lookup of a node","Moves out the entire queue of received messages of ’…","Moves out the entire queue of received messages of ’…","highest value of repeats for a message","lowest value of repeats for a message","Resumes the underlying network","sample from uniform distribution to decide whether or not …","","","","","Sample from bernoulli distribution to decide whether or …","never drop a packet","","never drop a packet","","number of times to repeat the packet","","scramble the packet","","Shut down this network. Afterwards this network should no …","Blocks until the network is shut down then returns true","","","","","when the network was started","synchronous portion of network","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the view number of the event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks until node is successfully initialized into the …","Blocks until the network is successfully initialized","source of error","source of error","source of error","source of error","Originating bincode error","originating bincode error","Source of error","The block header type that this hotshot setup is using.","The block type that this hotshot setup is using.","Election config for the DA committee","Network for those in the DA committee","Trait for time compatibility needed for reward collection","The election config type that this hotshot setup is using.","The instance-level state type that this hotshot setup is …","Membership used for this implementation","Node implementation aggregate trait","Trait with all the type definitions that are used in the …","Network for all nodes","The signature key that this hotshot setup is using.","Storage type for this consensus implementation","extra functions required on a node implementation to be …","The time type that this hotshot setup is using.","The transaction type that this hotshot setup is using.","The validated state type that this hotshot setup is using.","generate a genesis block","Generates a committee-specific election","Create ephemeral storage Will be deleted/lost immediately …","Generate the communication channels for testing","Create a new instance of this time unit at time number 0","Return the full internal state. This is useful for …","Get the u64 format of time","Creates random transaction if possible otherwise panics …","Create a new instance of this time unit","Creates random transaction if possible otherwise panics …","the number of transactions in a block","Allows to fix the size of the message at compilation time.","Type of the actual quorum certificate object","Public parameters for generating the QC E.g: snark …","Public parameters for validating the QC E.g: verifying …","Trait for validating a QC built from different signatures …","Type of the quorum size (e.g. number of votes or …","Computes an aggregated signature from a set of partial …","Checks an aggregated signature over some message provided …","Produces a partial signature on a message with a single …","Trace the list of signers given a qc.","The private key type for this signature algorithm","The type of the assembled signature, without <code>BitVec</code>","The type of the quorum certificate parameters used for …","The type of the assembled qc: assembled signature + <code>BitVec</code>","Type of error that can occur when signing data","Trait for abstracting public key signatures Self is the …","The type of the entry that contain both public key and …","Type representing stake table entries in a <code>StakeTable</code>","assemble the signature from the partial signature and the …","check the quorum certificate for the assembled signature","Deserialize a public key from bytes","Produce a public key from a private key","Generate a new key pair","generates the genesis public key. Meant to be dummy/filler","only get the public key from the stake table entry","get the public parameter for the assembled signature …","get the assembled signature and the <code>BitVec</code> separately from …","Get the stake value","get the stake table entry from the public key and stake …","Produce a signature","Serialize a public key to bytes","Validate a signature","type for the staked amount","Auxiliary information associated with the key","at arbitrary block height","type for the commitment to the current stake table","marks the snapshot at the beginning of the current epoch","Key already exists","the latest “Head” where all new changes are applied to","Insufficient fund: the number of stake cannot be negative","type for the iterator over (key, value) entries","type for stake key","Key not found","marks the beginning of the last epoch","type for the proof associated with the lookup result (if …","Malformed Merkle proof","Key mismatched","Internal error caused by Rescue","The historical snapshot requested is not supported.","Snapshots of the stake table","The number of stake exceed U256","Error type for <code>StakeTableScheme</code>","Common interfaces required for a stake table used in …","Verification Error","","","","","","","Batch deregister a list of keys. A default implementation …","Batch register a list of new keys. A default …","Batch update the stake balance of <code>keys</code>. Read documentation …","","","","","Returns the commitment to the <code>version</code> of stake table.","Returns true if <code>key</code> is currently registered, else returns …","","","","","Deregister an existing key from the stake table. Returns …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the number of keys in the <code>version</code> of the table.","Returns the stakes withhelded by a public key.","Return the associated stake amount and auxiliary …","Returns the stakes withhelded by a public key along with a …","Register a new key into the stake table.","Randomly sample a (key, stake amount) pair proportional to …","","Returns the accumulated stakes of all registered keys of …","","","","","Returns an iterator over all (key, value) entries of the …","","","Update the stake of the <code>key</code> with …","","","The type of block header this state is associated with","The type of block payload this state is associated with","The error type for this particular type of ledger state","The type of the instance-level state this state is …","Instance-level state, which allows us to fetch missing …","extra functions required on state to be usable by …","Time compatibility needed for reward collection","Abstraction over the state that blocks modify","Creates random transaction if possible otherwise panics …","Construct the state with the given block header.","Construct a genesis validated state.","Gets called to notify the persistence backend that this …","Check if the proposed block header is valid and apply it …","Contains the error value","A failed view","No genesis view was inserted","SNAFU context selector for the <code>StorageError::NoGenesisView</code> …","Contains the success value","Result for a storage type","Abstraction over on disk persistence of node state","Errors that can occur in the storage layer.","An internal representation of the data stored in a <code>Storage</code>.","A view stored in the <code>Storage</code>","A succeeded view","Extra requirements on Storage implementations required for …","An entry to <code>Storage::append</code>. This makes it possible to …","","","","","","","Append the list of views to this storage","Insert a single view. Shorthand for","","","","","","","","","","","","","Block header.","Optional block payload.","","","","","","","","","","","Consume the selector and return the associated error","","Cleans up the storage up to the given view. The given view …","","","","","","","Commit this storage.","Create ephemeral storage Will be deleted/lost immediately …","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","The views that have failed","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Create a new <code>StoredView</code> from the given QC, <code>BlockHeader</code>, …","Get the latest anchored view","Return the full internal state. This is useful for …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The justify QC of this view. See the hotstuff paper for …","The parent of this view","the proposer id","","The views that have been successful","","","","","","","","","","","","","","","","","","","","The view number of this view","","","","","","Commitment that builders use to sign block options. A thin …","A pending view with an available block but not leaf …","Stop right before this view number","Leaf has failed","Stop including this view number","Undecided view","The hash of a leaf.","A struct containing information about a finished round.","Type alias for byte array of SHA256 digest length","Whether or not to stop inclusively or exclusively when …","This exists so we can perform state transitions mutably","A view’s state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create new commitment for <code>data</code>","Create a new commitment from a raw Sha256 digest","","Return the underlying undecide leaf view if it exists.","return the underlying leaf hash if it exists","return the underlying block paylod commitment if it exists","return the underlying validated state if it exists","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The view data. Wrapped in a struct so we can mutate","The round that finished","","","","","","Proposed leaf","Payload commitment to the available block.","Validated state.","The certificate formed from the collection of signatures a …","Type of data commitment this vote uses.","Any type that is associated with a view","Mapping of vote commitment to sigatures and bitvec","Threshold Functions","A simple vote that has a signer and commitment to the data …","Accumulates votes until a certificate is formed.  This …","Mapping of commitments to vote tokens by key.","The data commitment this certificate certifies.","Add a vote to the total accumulated votes.  Returns the …","","","","","","","Build a certificate from the data commitment and the …","","","","Returns the argument unchanged.","Gets the data which was voted on by this vote","Get the commitment which was voted on","Gets the Data commitment of the vote","Get the vote commitment which the votes commit to","Get the signature of the vote sender","Gets the public signature key of the votes creator/sender","Returns the view number the type refers to.","","Calls <code>U::from(self)</code>.","","","","Checks if the cert is valid","Phantom data to specify the types this accumulator is for","A bitvec to indicate which node is active and send out a …","Returns the amount of stake needed to create this …","","","","Map of all signatures accumlated so far",""],"i":[0,10,0,0,10,0,0,0,10,10,11,11,14,14,10,11,14,10,11,14,0,10,11,14,10,11,14,0,10,11,14,10,11,14,0,14,0,11,10,11,14,10,11,14,10,11,14,10,11,14,14,0,0,14,10,11,11,14,10,11,14,11,11,10,11,14,10,11,14,10,11,14,10,11,14,10,11,14,14,0,14,0,14,14,14,14,11,14,14,11,0,14,10,11,14,0,0,0,0,11,14,11,14,10,11,14,11,14,0,10,11,14,10,11,14,10,11,14,0,0,10,11,14,0,0,0,0,0,0,0,0,0,36,36,34,34,37,37,34,34,38,36,34,37,38,36,34,37,223,38,36,34,37,38,36,34,37,36,34,37,36,34,37,38,37,34,34,34,34,38,36,36,37,38,36,34,37,38,36,34,37,38,36,34,37,38,36,34,37,37,38,36,34,37,37,38,38,38,37,38,37,38,38,36,34,37,38,38,36,34,37,38,36,34,37,38,36,34,37,38,36,34,37,36,37,38,36,36,38,38,36,36,36,36,36,36,34,38,38,38,34,34,34,34,36,34,37,37,38,36,34,37,38,36,34,37,38,36,34,37,34,38,34,38,38,36,34,37,0,224,224,0,54,0,54,0,54,0,0,225,0,224,0,0,0,0,0,0,0,0,0,0,0,0,52,52,61,61,62,62,63,63,64,64,58,58,59,59,60,60,45,45,78,52,52,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,54,54,52,64,45,45,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,58,59,60,54,52,78,52,61,62,63,64,58,59,60,45,52,61,62,63,64,58,59,60,45,52,52,45,224,63,225,45,52,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,54,52,61,62,63,64,45,52,224,52,61,62,63,64,54,58,59,60,45,61,52,61,62,63,64,45,52,52,52,61,61,61,62,62,62,63,63,63,64,64,64,45,45,45,78,58,59,60,0,45,45,52,61,62,63,64,54,54,58,59,60,45,45,52,61,62,63,64,54,58,59,60,45,63,45,52,45,45,45,45,45,224,45,224,45,45,52,61,62,63,64,45,52,61,62,63,64,45,54,45,54,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,58,59,60,224,64,45,61,78,52,78,45,52,78,63,64,45,0,224,52,61,62,63,64,45,0,52,52,63,54,52,0,64,52,61,62,63,64,58,59,60,45,54,45,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,52,61,62,63,64,54,58,59,60,45,62,224,61,62,63,64,45,78,52,61,62,63,64,54,58,59,60,45,50,0,50,0,50,0,50,0,0,50,0,50,0,90,90,90,90,90,50,0,50,0,50,0,90,90,90,90,0,50,0,90,50,0,50,0,95,95,96,96,97,97,98,98,86,86,99,99,87,87,100,100,89,89,91,91,93,93,94,94,90,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,50,50,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,86,87,89,91,93,94,50,95,96,97,98,86,99,87,100,89,91,93,94,90,95,96,97,98,86,99,87,100,89,91,93,94,90,87,93,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,50,95,96,97,98,86,99,87,100,89,91,93,94,50,90,86,87,89,91,93,94,95,96,97,98,86,99,87,100,89,91,93,94,50,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,50,50,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,91,50,89,91,95,96,97,98,86,99,87,100,89,91,93,94,90,50,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,95,96,97,98,86,99,87,100,89,91,93,94,50,90,89,95,96,97,98,86,99,87,100,89,91,93,94,50,90,226,227,228,229,230,231,232,233,234,235,228,235,102,102,102,0,0,102,102,102,102,102,102,101,101,102,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,101,102,236,237,236,238,239,240,236,238,239,240,241,242,243,244,0,0,0,0,0,245,0,0,0,0,0,0,0,109,109,107,107,110,110,108,108,105,105,110,109,107,110,108,105,109,107,110,108,105,105,105,107,108,105,246,108,105,246,108,109,107,110,108,105,109,107,110,108,105,107,108,109,107,110,108,105,109,107,110,108,105,108,247,109,108,109,109,107,110,108,105,109,107,110,108,105,109,107,110,108,107,108,109,107,110,108,105,105,105,108,108,108,108,105,246,108,109,107,110,108,108,105,109,109,107,110,108,105,105,108,109,109,109,108,108,109,107,110,108,105,109,107,110,108,105,109,107,110,108,105,109,107,110,108,105,109,107,110,108,105,107,108,105,245,109,107,110,108,107,108,107,108,107,110,105,105,246,108,107,110,105,108,105,109,107,110,108,105,108,105,109,107,110,108,108,108,105,109,107,110,108,105,109,107,110,108,105,105,246,108,109,107,110,108,105,0,123,122,125,127,125,127,125,127,122,123,0,0,122,122,122,133,0,0,0,0,0,0,0,0,122,124,126,133,0,129,126,122,126,126,122,125,127,122,126,126,126,126,126,126,122,122,124,126,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,123,124,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,122,123,124,125,126,127,128,129,130,120,120,120,123,123,123,126,126,126,127,127,127,128,128,128,129,129,129,130,130,130,120,121,123,124,125,126,127,128,129,130,133,120,121,122,123,123,124,125,126,126,127,127,128,128,129,130,123,120,123,120,123,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,124,125,120,123,128,120,120,123,124,125,126,127,128,129,130,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,121,122,123,124,125,126,127,128,129,130,120,128,120,121,122,123,124,125,126,127,128,129,130,0,0,136,136,136,138,136,138,136,138,138,136,138,136,138,136,136,138,136,138,136,138,136,138,136,136,136,138,136,136,138,136,138,136,138,136,138,136,138,136,138,136,138,136,136,136,138,138,136,138,136,138,136,138,136,0,0,0,141,141,141,141,141,141,141,141,141,141,141,141,141,0,0,0,0,0,0,0,0,0,0,0,0,144,144,145,145,146,146,147,147,80,248,249,250,251,252,253,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,147,80,248,249,250,251,252,253,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,144,144,145,145,145,146,146,146,147,147,147,80,144,145,146,147,144,145,146,147,80,147,147,147,147,144,145,146,147,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,80,248,249,250,251,252,253,147,147,144,145,146,147,80,248,249,250,251,252,253,147,149,144,145,146,147,144,145,146,147,147,144,145,146,147,144,145,146,147,144,145,146,147,80,248,249,250,251,252,253,147,80,248,249,250,251,252,253,147,144,145,146,147,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,150,150,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,254,255,256,257,258,259,260,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,150,150,152,152,152,153,153,153,154,154,154,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,159,159,159,159,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,158,158,158,158,158,152,154,155,156,157,155,156,157,0,150,152,153,154,155,156,157,158,159,254,255,256,257,258,259,260,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,150,152,153,154,155,156,157,158,159,153,0,254,255,256,257,258,259,260,159,150,152,153,154,155,156,157,158,159,0,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,261,261,261,262,262,0,0,261,262,261,261,261,261,261,263,262,262,262,262,261,263,0,0,264,264,264,264,264,264,264,264,264,0,0,166,0,0,166,0,167,167,168,168,166,167,168,166,167,168,166,166,166,167,168,166,167,168,167,168,166,167,168,167,168,151,151,166,167,168,166,167,168,166,166,167,168,167,168,151,166,166,167,168,166,167,168,151,151,151,151,151,166,166,166,167,168,166,167,168,166,167,168,166,167,168,166,167,168,167,168,166,151,167,168,166,151,166,167,168,166,167,168,166,167,168,151,166,167,168,0,0,0,0,0,0,170,170,41,170,43,170,170,170,170,170,170,170,170,46,170,46,170,46,170,46,170,170,170,170,170,170,170,170,170,170,170,170,42,44,170,170,46,170,170,170,170,170,42,170,170,0,187,195,195,195,195,195,195,195,195,195,174,0,0,174,0,0,173,0,173,0,0,0,0,174,0,187,173,0,174,0,174,0,173,0,174,0,174,0,0,265,0,0,0,0,172,0,174,0,201,201,0,0,195,195,195,195,195,195,195,195,195,195,174,0,171,0,0,0,0,174,0,0,174,0,174,0,0,174,0,0,175,175,176,176,177,177,178,178,179,179,180,180,187,187,188,188,189,189,190,190,191,191,181,181,182,182,183,183,192,192,193,193,194,194,184,184,185,185,186,186,195,195,196,196,197,197,198,198,199,199,200,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,171,172,173,174,199,171,172,173,174,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,265,266,175,176,177,178,179,180,181,182,183,184,185,186,171,172,173,174,204,175,176,177,178,179,180,187,188,189,190,191,181,182,183,192,193,194,184,185,186,195,196,197,198,199,200,175,176,177,178,179,180,187,188,189,190,191,181,182,183,192,193,194,184,185,186,195,196,197,198,199,200,196,197,198,199,197,198,200,197,198,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,171,172,173,174,187,265,266,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,176,177,178,179,180,181,182,183,184,185,186,175,171,171,176,172,172,177,178,179,180,173,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,174,195,201,196,197,198,199,200,267,268,269,199,171,172,173,174,171,172,173,174,268,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,265,266,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,176,177,178,179,180,188,189,190,191,181,182,183,192,193,194,184,185,186,265,266,198,200,198,200,197,198,199,265,269,265,266,265,266,200,200,265,204,197,198,199,200,204,197,198,199,200,204,200,204,187,265,266,171,172,173,174,199,199,175,176,177,178,179,180,187,188,189,190,191,181,182,183,192,193,194,184,185,186,195,196,197,198,199,200,171,172,173,174,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,195,175,171,176,172,177,178,179,180,173,187,188,189,190,191,181,182,183,192,193,194,184,185,186,174,195,201,196,197,198,199,200,265,266,270,271,272,273,274,275,276,39,39,277,278,0,39,39,39,0,0,278,39,278,0,39,39,39,277,277,277,277,279,277,279,277,279,277,277,280,280,280,280,0,280,280,280,280,280,13,13,13,13,13,0,13,0,13,13,13,13,13,13,13,13,13,281,13,13,13,13,282,282,208,282,208,207,208,207,282,282,207,208,282,207,207,207,207,0,207,0,0,207,0,208,207,208,207,207,282,282,282,208,207,208,207,282,282,208,207,208,207,282,208,207,207,207,208,207,207,207,208,207,208,207,208,207,208,207,208,207,282,282,282,282,282,282,207,282,208,207,208,207,282,208,207,282,208,207,283,283,283,283,0,0,283,0,284,283,283,283,283,213,211,206,0,213,0,0,0,0,0,211,0,0,212,212,206,206,79,79,285,285,212,206,214,211,79,212,206,214,211,79,206,206,79,79,212,206,214,211,79,212,206,214,211,79,212,206,285,212,206,79,212,206,79,285,286,212,206,214,211,79,212,206,214,211,79,206,212,206,214,211,79,214,211,79,212,214,212,206,206,214,211,79,212,206,214,211,211,211,79,79,79,285,286,206,206,212,206,214,211,79,212,206,214,211,79,212,206,214,211,79,212,206,214,211,79,212,206,214,211,79,212,79,79,79,206,214,212,206,79,206,212,206,214,211,79,212,206,214,211,79,212,206,214,211,79,79,212,206,214,211,79,0,217,48,217,48,217,0,0,0,0,0,0,215,215,48,48,161,161,217,216,215,48,161,217,216,215,48,161,161,161,217,216,215,48,161,217,216,215,48,161,161,215,48,161,215,48,161,217,216,216,215,48,161,217,216,215,48,161,161,161,217,216,215,48,161,161,161,161,161,217,216,215,48,161,161,217,216,215,48,161,161,161,161,217,217,217,217,161,161,217,216,215,48,161,217,216,215,48,161,217,216,215,48,161,217,216,215,48,161,217,216,215,48,161,161,161,161,161,215,48,161,161,217,216,215,48,161,161,161,217,216,215,48,161,217,216,215,48,161,216,215,217,216,215,48,161,287,288,287,0,221,0,0,222,0,0,0,222,219,219,219,289,290,219,219,222,219,219,219,219,221,222,221,222,221,221,131,219,219,219,219,219,222,219,219,222,219,219,219,219,219],"f":[0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-1,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,6,[5,7,8,9]],[10,10],[[[11,[-1]]],[[11,[-1]]],[12,13]],[[[14,[-1,-2]]],[[14,[-1,-2]]],[12,13],[12,15]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,0,[[],[[11,[-1]]],13],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[10]]],18],[-1,[[17,[[11,[-2]]]]],18,13],[-1,[[17,[[14,[-2,-3]]]]],18,13,15],[16,2],[16,2],[16,2],0,0,0,0,[[10,19],20],[[[11,[-1]],19],20,[21,13]],[[[11,[-1]],19],20,13],[[[14,[-1,-2]],19],20,13,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[23,[22]],24,24],[[11,[-1]]],13],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,-1],17,30],[[[11,[-1]],-2],17,[31,13],30],[[[14,[-1,-2]],-3],17,[31,13],[31,15],30],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],0,0,[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[34,16],2],[[34,35],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[36,36],[34,34],[37,37],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[38,[-1]]],2,39],0,[[34,32,[40,[32]]],[[27,[41]]]],[[34,32,[40,[32]]],[[27,[42]]]],[[34,32,[40,[32]]],[[27,[43]]]],[[34,32],[[27,[44]]]],0,0,[[],36],[[],37],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,2],[16,2],[16,2],[16,2],[[[38,[-1]],19],20,39],[[36,19],20],[[34,19],20],[[37,19],20],[[37,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[[38,[-1]]],[[45,[-1]]],39],[[[38,[-1]]],28,39],[[[38,[-1]]],[[40,[28]]],39],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],0,0,[[[38,[-1]]],[],39],[[],16],[[],16],[[],16],[[],16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],0,0,0,0,0,0,0,[46,36],0,0,0,0,0,0,0,0,0,[[34,32],2],[[34,16],2],[[34,32],34],[[34,32],[[27,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[34,47],2],0,0,[[[38,[-1]],48,49,-2],[[17,[2,[50,[-1]]]]],39,51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[[52,24]],[[52,24],2],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,53,[]],[54,[[40,[55]]]],[-1,[[17,[2,56]]],[57,8]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,54],[59,54],[60,54],[54,[[40,[53]]]],[52,[[17,[2,56]]]],0,[52,52],[[[61,[-1]]],[[61,[-1]]],[12,39]],[[[62,[-1]]],[[62,[-1]]],[39,12]],[[[63,[-1]]],[[63,[-1]]],[12,39]],[[[64,[-1]]],[[64,[-1]]],[12,39]],[58,58],[59,59],[60,60],[[[45,[-1]]],[[45,[-1]]],[12,39]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[52,52],65],[52,[[66,[52]]]],[[[45,[-1]]],[[66,[[45,[-1]]]]],39],[[-1,-2],[[17,[67]]],[],[[69,[[68,[22]]]]]],0,[[-1,70,24],[],[]],[[[45,[-1]],70,24],[],39],[16,-1,[]],[52],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[54,71],[-1,[[17,[52]]],18],[-1,[[17,[[61,[-2]]]]],18,39],[-1,[[17,[[62,[-2]]]]],18,39],[-1,[[17,[[63,[-2]]]]],18,39],[-1,[[17,[[64,[-2]]]]],18,39],[-1,[[17,[[45,[-2]]]]],18,39],[[-1,72,73],[[17,[52,56]]],74],[[-1,-2],[[17,[[75,[-1]],67]]],[],[[69,[[68,[22]]]]]],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],0,[[52,52],49],[[[61,[-1]],[61,[-1]]],49,[76,39]],[[[62,[-1]],[62,[-1]]],49,[39,76]],[[[63,[-1]],[63,[-1]]],49,[76,39]],[[[64,[-1]],[64,[-1]]],49,[76,39]],[[[45,[-1]],[45,[-1]]],49,39],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],0,[58,[[17,[-1,54]]],[]],[59,[[17,[-1,54]]],[]],[60,[[17,[-1,54]]],[]],[[],[[66,[-1]]],77],[[[45,[-1]],16],[[17,[2,54]]],39],[[[45,[-1]]],2,39],[[52,19],20],[[[61,[-1]],19],20,39],[[[62,[-1]],19],20,39],[[[63,[-1]],19],20,[21,39]],[[[64,[-1]],19],20,39],[[54,19],20],[[54,19],20],[[58,19],20],[[59,19],20],[[60,19],20],[[[45,[-1]],19],20,39],[[[45,[-1]],19],20,[21,39]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[75,[78]],28],[[63,[-1]]],39],[[[79,[-1]]],[[45,[-1]]],39],[[],52],[[],[[45,[-1]]],39],[[[45,[-1]]],[],39],[[[45,[-1]]],40,39],[[[45,[-1]]],24,39],[[[45,[-1]]],[[80,[-1]]],39],[[],16],[[[45,[-1]]],[[66,[[45,[-1]]]]],39],[[],16],[[[45,[-1]]],81,39],[[[45,[-1]]],[],39],[52,24],[[[61,[-1]]],[],39],[[[62,[-1]]],[],39],[[[63,[-1]]],[],39],[[[64,[-1]]],[],39],[[[45,[-1]]],[],39],[[52,-1],2,82],[[[61,[-1]],-2],2,[83,39],82],[[[62,[-1]],-2],2,[39,83],82],[[[63,[-1]],-2],2,[83,39],82],[[[64,[-1]],-2],2,[83,39],82],[[[45,[-1]],-2],2,39,82],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[-1,[],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[58,54],[59,54],[60,54],[[],[[17,[2,67]]]],0,0,0,0,[24,52],0,0,[[52,52],[[40,[65]]]],0,0,0,0,[70,[[66,[-1]]],77],[[-1,68],[[17,[[84,[22]],67]]],[]],[[52,-1],17,30],[[[61,[-1]],-2],17,39,30],[[[62,[-1]],-2],17,39,30],[[[63,[-1]],-2],17,39,30],[[[64,[-1]],-2],17,[31,39],30],[[[45,[-1]],-2],17,[31,39],30],[[],[[84,[22]]]],[[52,-1,72],[[17,[2,56]]],85],[[52,72],16],0,[54,[[40,[53]]]],[[52,24]],[16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,[[17,[[17,[2,2]],67]]],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,53,[]],[[[50,[-1]]],[[40,[55]]],39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[86,[[50,[-1]]],39],[[[87,[-1]]],[[50,[-2]]],[[88,[32]]],39],[[[89,[-1,-2]]],[[50,[-3]]],88,[[88,[90]]],39],[[[91,[-1,-2]]],[[50,[-3]]],[[88,[16]]],[[88,[92]]],39],[[[93,[-1]]],[[50,[-2]]],[[88,[32]]],39],[94,[[50,[-1]]],39],[[[50,[-1]]],[[40,[53]]],39],[95,95],[96,96],[97,97],[98,98],[86,86],[99,99],[[[87,[-1]]],[[87,[-1]]],12],[100,100],[[[89,[-1,-2]]],[[89,[-1,-2]]],12,12],[[[91,[-1,-2]]],[[91,[-1,-2]]],12,12],[[[93,[-1]]],[[93,[-1]]],12],[94,94],[90,90],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[[[50,[-1]]],71,39],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[86,[[17,[-1,[50,[-2]]]]],[],39],[[[87,[-1]]],[[17,[-2,[50,[-3]]]]],[[88,[32]]],[],39],[[[89,[-1,-2]]],[[17,[-3,[50,[-4]]]]],88,[[88,[90]]],[],39],[[[91,[-1,-2]]],[[17,[-3,[50,[-4]]]]],[[88,[16]]],[[88,[92]]],[],39],[[[93,[-1]]],[[17,[-2,[50,[-3]]]]],[[88,[32]]],[],39],[94,[[17,[-1,[50,[-2]]]]],[],39],[[95,19],20],[[96,19],20],[[97,19],20],[[98,19],20],[[86,19],20],[[99,19],20],[[[87,[-1]],19],20,21],[[100,19],20],[[[89,[-1,-2]],19],20,21,21],[[[91,[-1,-2]],19],20,21,21],[[[93,[-1]],19],20,21],[[94,19],20],[[[50,[-1]],19],20,39],[[[50,[-1]],19],20,[21,39]],[[90,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[-1,[],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[95,[[50,[-1]]],39],[96,[[50,[-1]]],39],[97,[[50,[-1]]],39],[98,[[50,[-1]]],39],[86,[[50,[-1]]],39],[99,[[50,[-1]]],39],[[[87,[-1]]],[[50,[-2]]],[[88,[32]]],39],[100,[[50,[-1]]],39],[[[89,[-1,-2]]],[[50,[-3]]],88,[[88,[90]]],39],[[[91,[-1,-2]]],[[50,[-3]]],[[88,[16]]],[[88,[92]]],39],[[[93,[-1]]],[[50,[-2]]],[[88,[32]]],39],[94,[[50,[-1]]],39],0,[[[50,[-1]]],[[40,[53]]],39],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[101,[-1]]],[[101,[-1]]],[12,39]],[[[102,[-1]]],[[102,[-1]]],[12,39]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,2],[16,2],0,[[[101,[-1]],19],20,[21,39]],[[[102,[-1]],19],20,[21,39]],[-1,-1,[]],[-1,-1,[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,[[103,[-2,-3]]],[],[],104],[[[105,[-1]]],[[68,[-1]]],106],[-1,[[17,[2,56]]],[57,8]],[-1,[[17,[2,56]]],[57,8]],[[[105,[-1]]],-1,106],0,0,[[[105,[-1]]],-1,106],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,[[17,[2,56]]]],[[[108,[-1]]],[[17,[2,56]]],106],[109,109],[107,107],[110,110],[[[108,[-1]]],[[108,[-1]]],[12,106]],[[[105,[-1]]],[[105,[-1]]],[12,106]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[108,[-1]],[108,[-1]]],65,[111,106]],0,[[],109],[[],[[108,[-1]]],[112,106]],[109],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[109]]],18],[-1,[[17,[107]]],18],[-1,[[17,[110]]],18],[-1,[[17,[[108,[-2]]]]],18,106],[[-1,72,73],[[17,[107,56]]],74],[[-1,72,73],[[17,[[108,[-2]],56]]],74,106],[16,2],[16,2],[16,2],[16,2],[16,2],[-1,-2,[],[[114,[113]]]],[-1,-2,[],[[114,[113]]]],[[[108,[-1]],[108,[-1]]],49,[76,106]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[[105,[-1]]],-1,106],0,0,[[109,19],20],[[107,19],20],[[110,19],20],[[[108,[-1]],19],20,[21,106]],[[[108,[-1]],19],20,106],[[[105,[-1]],19],20,[21,106]],[[[116,[115]]],109],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[84,[-1]]],[[105,[-1]]],106],[-1,-1,[]],[71,[[17,[[108,[-1]]]]],106],[[],109],[[[23,[22]]],109],[[[23,[22]],24],109],[[[108,[-1]],-2],2,[83,106],82],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],0,[[[108,[-1]],[108,[-1]]],[[40,[65]]],[117,106]],[[[105,[-1]]],-1,106],0,[[109,-1],17,30],[[107,-1],17,30],[[110,-1],17,30],[[[108,[-1]],-2],17,106,30],[[107,-1,72],[[17,[2,56]]],85],[[[108,[-1]],-2,72],[[17,[2,56]]],106,85],[[107,72],16],[[[108,[-1]],72],16,106],0,0,[[[105,[-1]]],-1,106],[[[105,[-1]]],[[2,[-1,-1,-1]]],106],0,0,0,0,[[[105,[-1]]],-1,106],[[],32],[[[105,[-1]]],-1,106],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[17,[[103,[-2,-3]],[118,[-2]]]]],[],[],104],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[119,[[17,[[108,[-1]]]]],106],[119,[[17,[[108,[-1]]]]],106],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[[105,[-1]]],-1,106],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[120,[-1]]],[[120,[-1]]],[12,39]],[[[121,[-1]]],[[121,[-1]]],[12,39]],[122,122],[[[123,[-1]]],[[123,[-1]]],[12,39]],[[[124,[-1]]],[[124,[-1]]],[12,39]],[[[125,[-1]]],[[125,[-1]]],[12,39]],[[[126,[-1]]],[[126,[-1]]],[12,39]],[[[127,[-1]]],[[127,[-1]]],[12,39]],[[[128,[-1]]],[[128,[-1]]],[12,39]],[[[129,[-1]]],[[129,[-1]]],[12,39]],[[[130,[-1,-2]]],[[130,[-1,-2]]],[12,39],[12,[131,[-1]],132]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[[120,[-2]]]]],18,39],[-1,[[17,[[123,[-2]]]]],18,39],[-1,[[17,[[124,[-2]]]]],18,39],[-1,[[17,[[126,[-2]]]]],18,39],[-1,[[17,[[127,[-2]]]]],18,39],[-1,[[17,[[128,[-2]]]]],18,39],[-1,[[17,[[129,[-2]]]]],18,39],[-1,[[17,[[130,[-2,-3]]]]],18,39,[[131,[-2]],132]],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[[[120,[-1]],[120,[-1]]],49,[76,39]],[[122,122],49],[[[123,[-1]],[123,[-1]]],49,[76,39]],[[[124,[-1]],[124,[-1]]],49,[76,39]],[[[125,[-1]],[125,[-1]]],49,[76,39]],[[[126,[-1]],[126,[-1]]],49,[76,39]],[[[127,[-1]],[127,[-1]]],49,[76,39]],[[[128,[-1]],[128,[-1]]],49,[76,39]],[[[129,[-1]],[129,[-1]]],49,[76,39]],[[[130,[-1,-2]],[130,[-1,-2]]],49,[76,39],[76,[131,[-1]],132]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[[120,[-1]],19],20,[21,39]],[[[121,[-1]],19],20,[21,39]],[[[123,[-1]],19],20,[21,39]],[[[124,[-1]],19],20,[21,39]],[[[125,[-1]],19],20,[21,39]],[[[126,[-1]],19],20,[21,39]],[[[127,[-1]],19],20,[21,39]],[[[128,[-1]],19],20,[21,39]],[[[129,[-1]],19],20,[21,39]],[[[130,[-1,-2]],19],20,[21,39],[21,[131,[-1]],132]],[[[124,[-1]]],[[133,[-1]]],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[129,[-1]]],[[123,[-1]]],39],[-1,-1,[]],[-1,-1,[]],[[[124,[-1]]],[[126,[-1]]],39],[-1,-1,[]],[-1,-1,[]],[[[125,[-1]]],[[127,[-1]]],39],[[[133,[-1]]],[[128,[-1]]],39],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[128,[-1]]],[[123,[-1]]],39],[[[120,[-1]]],[],39],[[[123,[-1]]],[],39],[[[120,[-1]],-2],2,[83,39],82],[[[123,[-1]],-2],2,[83,39],82],[[[126,[-1]],-2],2,[83,39],82],[[[127,[-1]],-2],2,[83,39],82],[[[128,[-1]],-2],2,[83,39],82],[[[129,[-1]],-2],2,[83,39],82],[[[130,[-1,-2]],-3],2,[83,39],[83,[131,[-1]],132],82],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],0,[[[126,[-1]]],[[124,[-1]]],39],[[[127,[-1]]],[[125,[-1]]],39],[[[120,[-1]]],122,39],[[[123,[-1]]],122,39],[[[128,[-1]]],122,39],0,[[[120,[-1]],-2],17,39,30],[[[123,[-1]],-2],17,39,30],[[[124,[-1]],-2],17,[31,39],30],[[[125,[-1]],-2],17,[31,39],30],[[[126,[-1]],-2],17,39,30],[[[127,[-1]],-2],17,39,30],[[[128,[-1]],-2],17,39,30],[[[129,[-1]],-2],17,39,30],[[[130,[-1,-2]],-3],17,39,[31,[131,[-1]],132],30],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[[[128,[-1]]],[],39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,3],2,[]],0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[103,68],[[17,[134]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[135,[[17,[134]]]],[[[136,[-1,-2]]],[[136,[-1,-2]]],[12,13],[12,137]],[[-1,-2],2,[],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[[138,[-2]]]]],18,[139,31,137]],[-1,[[17,[[136,[-2,-3]]]]],18,13,137],[16,2],[16,2],[[[136,[-1,-2]],[136,[-1,-2]]],49,[76,13],[76,137]],[[[136,[-1,-2]],19],20,[21,13],[21,137]],[-1,-1,[]],[-1,-1,[]],[[[136,[-1,-2]],-3],2,[83,13],[83,137],82],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[138,[-1]],-2],17,[139,31,137],30],[[[136,[-1,-2]],-3],17,[31,13],[31,137],30],[[135,-1],[[17,[134]]],[140,70]],0,0,[-1,-2,[],[]],[135,[[17,[84,134]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[103,68]],[[[68,[22]]],49],[[[68,[22]]],[[17,[141,134]]]],[[],141],[[[23,[22]],24],[[2,[141]]]],[[],141],[[],141],[[84,142]],[[],[[2,[143]]]],[[141,24]],[[[68,[22]]],17],[141,[[84,[22]]]],[[141,[68,[22]]],49],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],0,0,0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[144,144],[145,145],[146,146],[[[147,[-1,-2,-3]]],[[147,[-1,-2,-3]]],[12,39],[12,148],[12,[149,[-1]]]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[66,[-1]]],[[147,[-2,-1,-3]]],148,39,[[149,[-2]]]],0,0,0,0,0,0,0,0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[144]]],18],[-1,[[17,[145]]],18],[-1,[[17,[146]]],18],[-1,[[17,[[147,[-2,-3,-4]]]]],18,39,[137,148],[[149,[-2]]]],[16,2],[16,2],[16,2],[16,2],[[144,144],49],[[145,145],49],[[146,146],49],[[[147,[-1,-2,-3]],[147,[-1,-2,-3]]],49,[76,39],[76,148],[76,[149,[-1]]]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[[80,[-1]],19],20,39],[[144,19],20],[[145,19],20],[[146,19],20],[[[147,[-1,-2,-3]],19],20,[21,39],[21,148],[21,[149,[-1]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[80,[-1]]],39],[[],[[147,[-1,[150,[-1]],144]]],39],[[[147,[-1,-2,-3]]],[],39,148,[[149,[-1]]]],[[[147,[-1,-2,-3]]],66,39,148,[[149,[-1]]]],[[[147,[-1,-2,-3]]],[],39,148,[[149,[-1]]]],[[144,-1],2,82],[[145,-1],2,82],[[146,-1],2,82],[[[147,[-1,-2,-3]],-4],2,[83,39],[83,148],[83,[149,[-1]]],82],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],0,0,0,0,0,0,0,0,[[[147,[-1,-2,-3]],-4],49,39,148,[[149,[-1]]],[[151,[-1]]]],[[144,-1],17,30],[[145,-1],17,30],[[146,-1],17,30],[[[147,[-1,-2,-3]],-4],17,39,[31,148],[[149,[-1]]],30],0,0,0,0,0,0,0,0,[-2,24,[],[[151,[-1]]]],[-2,24,39,[[151,[-1]]]],[-2,24,39,[[151,[-1]]]],[-2,24,39,[[151,[-1]]]],[-2,24,39,[[151,[-1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[150,[-1]]],[[150,[-1]]],[12,39]],[152,152],[[[153,[-1]]],[[153,[-1]]],[12,39]],[154,154],[[[155,[-1]]],[[155,[-1]]],[12,39]],[[[156,[-1]]],[[156,[-1]]],[12,39]],[[[157,[-1]]],[[157,[-1]]],[12,39]],[[[158,[-1]]],[[158,[-1]]],[12,39,132]],[[[159,[-1,-2]]],[[159,[-1,-2]]],[12,39],[12,148]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[150,[-1]]],[[66,[[150,[-1]]]]],39],[152,[[66,[152]]]],[[[153,[-1]]],[[66,[[153,[-1]]]]],39],[154,[[66,[154]]]],[[[155,[-1]]],[[66,[[155,[-1]]]]],39],[[[156,[-1]]],[[66,[[156,[-1]]]]],39],[[[157,[-1]]],[[66,[[157,[-1]]]]],39],[[[158,[-1]]],[[66,[[158,[-1]]]]],39],[-1,[[17,[[159,[-2,-1]]]]],148,39],0,0,0,0,0,0,0,0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[[150,[-2]]]]],18,39],[-1,[[17,[152]]],18],[-1,[[17,[[153,[-2]]]]],18,39],[-1,[[17,[154]]],18],[-1,[[17,[[155,[-2]]]]],18,39],[-1,[[17,[[156,[-2]]]]],18,39],[-1,[[17,[[157,[-2]]]]],18,39],[-1,[[17,[[158,[-2]]]]],18,[39,132]],[-1,[[17,[[159,[-2,-3]]]]],18,39,[137,148]],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[[[150,[-1]],[150,[-1]]],49,[76,39]],[[152,152],49],[[[153,[-1]],[153,[-1]]],49,[76,39]],[[154,154],49],[[[155,[-1]],[155,[-1]]],49,[76,39]],[[[156,[-1]],[156,[-1]]],49,[76,39]],[[[157,[-1]],[157,[-1]]],49,[76,39]],[[[158,[-1]],[158,[-1]]],49,[76,39,132]],[[[159,[-1,-2]],[159,[-1,-2]]],49,[76,39],[76,148]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[[150,[-1]],19],20,[21,39]],[[152,19],20],[[[153,[-1]],19],20,[21,39]],[[154,19],20],[[[155,[-1]],19],20,[21,39]],[[[156,[-1]],19],20,[21,39]],[[[157,[-1]],19],20,[21,39]],[[[158,[-1]],19],20,[21,39,132]],[[[159,[-1,-2]],19],20,[21,39],[21,148]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[159,[-1,-2]]],-2,39,148],[[[159,[-1,-2]]],[[66,[-2]]],39,148],[[[159,[-1,-2]]],[],39,148],[[[159,[-1,-2]]],[],39,148],[[[159,[-1,-2]]],[],39,148],[[[150,[-1]],-2],2,[83,39],82],[[152,-1],2,82],[[[153,[-1]],-2],2,[83,39],82],[[154,-1],2,82],[[[155,[-1]],-2],2,[83,39],82],[[[156,[-1]],-2],2,[83,39],82],[[[157,[-1]],-2],2,[83,39],82],[[[158,[-1]],-2],2,[83,39,132],82],[[[159,[-1,-2]],-3],2,[83,39],[83,148],82],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[150,[-1]],-2],17,[31,39],30],[[152,-1],17,30],[[[153,[-1]],-2],17,39,30],[[154,-1],17,30],[[[155,[-1]],-2],17,39,30],[[[156,[-1]],-2],17,39,30],[[[157,[-1]],-2],17,39,30],[[[158,[-1]],-2],17,[39,132],30],[[[159,[-1,-2]],-3],17,39,[31,148],30],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[[24,71],[[66,[-1]]],77],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,3],2,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[160,[-1]]],[[160,[-1]]],[12,13]],[[-1,-2],2,[],[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[[160,[-2]]]]],18,13],[16,2],[[[160,[-1]],[160,[-1]]],49,[76,13]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[[160,[-1]],19],20,[21,13]],[-1,-1,[]],[[[160,[-1]]],-1,13],[[[160,[-1]]],142,13],[[[160,[-1]],-2],2,[83,13],82],[[],16],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[160,[-1]],-2],17,[31,13],30],0,0,[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,24,[]],[-1,161,[]],[-1,17,[]],[-1,-2,57,[]],[-1,[[17,[[2,[-2]]]]],162,[]],[[],[[2,[-1]]],[]],[[],-1,[]],[[],[[2,[-1]]],[]],[-1,[],[]],[[-1,81],-1,[]],[-1,81,[]],[-1,[[84,[66]]],[]],[-1,24,[]],[[[84,[22]],16]],0,[-1,163,[]],[-1,16,[]],[-1,[],[]],[-1,164,[]],[-1,164,[]],[-1,[],[]],[[-1,[101,[-2]]],[[165,[[27,[5]]]]],[],[]],[[-1,[45,[-2]]],[[165,[[27,[5]]]]],[],[]],[-1,163,[]],0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,53,[]],[166,[[40,[55]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,166],[168,166],[166,[[40,[53]]]],[167,167],[168,168],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[84,-1,[]],[24],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[166,71],[16,2],[16,2],[16,2],[167,[[17,[-1,166]]],[]],[168,[[17,[-1,166]]],[]],[-1,92,[]],[[166,19],20],[[166,19],20],[[167,19],20],[[168,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,169,[]],[-1,84,[]],[-1,[],[]],[-1,40,[]],[-1,49,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[-1,[],[]],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[167,166],[168,166],[166,[[40,[53]]]],[-1,92,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,16,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,92,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,16],2,[]],[[170,16],2],[[-1,35],2,[]],[[170,35],2],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[27,[46]]]],[170,170],[[-1,-2],2,[],[]],[[-1,32,[40,[32]]],[[27,[41]]],[]],[[170,32,[40,[32]]],[[27,[41]]]],[[-1,32,[40,[32]]],[[27,[42]]],[]],[[170,32,[40,[32]]],[[27,[42]]]],[[-1,32,[40,[32]]],[[27,[43]]],[]],[[170,32,[40,[32]]],[[27,[43]]]],[[-1,32],[[27,[44]]],[]],[[170,32],[[27,[44]]]],[[],170],[16,-1,[]],[16,-1,[]],[16,2],[[170,19],20],[-1,-1,[]],[[],16],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[-1,16],2,[]],[[-1,32],2,[]],[[170,32],2],[[170,16],2],[[-1,32],[[27,[46]]],[]],[[170,32],[[27,[46]]]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[[-1,47],2,[]],[[170,47],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],0,[171,[[40,[55]]]],[172,[[40,[55]]]],[173,[[40,[55]]]],[174,[[40,[55]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[120,[-2]]],[[165,[[27,[5]]]]],[],[]],[[-1,-2,[169,[-3]]],[[165,[[27,[5]]]]],[],[],[]],[175,171],[176,172],[177,173],[178,173],[179,173],[180,173],[181,174],[182,174],[183,174],[184,174],[185,174],[186,174],[171,[[40,[53]]]],[172,[[40,[53]]]],[173,[[40,[53]]]],[174,[[40,[53]]]],[[-1,[84,[22]],[28,[8]]],[[6,[2]]],[]],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[187,187],[188,188],[189,189],[190,190],[191,191],[181,181],[182,182],[183,183],[192,192],[193,193],[194,194],[184,184],[185,185],[186,186],[[[195,[-1]]],[[195,[-1]]],[12,13]],[196,196],[197,197],[198,198],[199,199],[200,200],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],196],[[],197],[[],198],[[],199],0,0,0,0,0,0,[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[171,71],[172,71],[173,71],[174,71],[-1,[[17,[187]]],18],[[-1,[120,[-2]]],[[165,[[27,[5]]]]],[],[]],[[-1,-2,-3],[[165,[[27,[5]]]]],[],[],[]],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[16,2],[175,[[17,[-1,171]]],[]],[176,[[17,[-1,172]]],[]],[177,[[17,[-1,173]]],[]],[178,[[17,[-1,173]]],[]],[179,[[17,[-1,173]]],[]],[180,[[17,[-1,173]]],[]],[181,[[17,[-1,174]]],[]],[182,[[17,[-1,174]]],[]],[183,[[17,[-1,174]]],[]],[184,[[17,[-1,174]]],[]],[185,[[17,[-1,174]]],[]],[186,[[17,[-1,174]]],[]],[[175,19],20],[[171,19],20],[[171,19],20],[[176,19],20],[[172,19],20],[[172,19],20],[[177,19],20],[[178,19],20],[[179,19],20],[[180,19],20],[[173,19],20],[[173,19],20],[[187,19],20],[[188,19],20],[[189,19],20],[[190,19],20],[[191,19],20],[[181,19],20],[[182,19],20],[[183,19],20],[[192,19],20],[[193,19],20],[[194,19],20],[[184,19],20],[[185,19],20],[[186,19],20],[[174,19],20],[[174,19],20],[[[195,[-1]],19],20,[21,13]],[[[201,[-1]],19],20,[21,13]],[[196,19],20],[[197,19],20],[[198,19],20],[[199,19],20],[[200,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[202,174],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[27,[203]]]],[[16,16,16,16,49,[40,[[27,[204]]]]],[[27,[203]]]],[-1,[],[]],0,[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,[[40,[16]]],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[-1,195],[[165,[[27,[5]]]]],[]],[[-1,[195,[-2]]],[[165,[[27,[5]]]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[175,171],[176,172],[177,173],[178,173],[179,173],[180,173],[188,174],[189,174],[190,174],[191,174],[181,174],[182,174],[183,174],[192,174],[193,174],[194,174],[184,174],[185,174],[186,174],[-1,[[165,[[27,[5]]]]],[]],[-1,[[165,[[27,[5]]]]],[]],0,0,0,0,[[24,24],197],[[205,205,24,24],198],[[198,197,164],199],[-1,2,[]],[-1,122,[]],[[-1,52],[[165,[[27,[5]]]]],[]],[[-1,52,-2],[[165,[[27,[5]]]]],[],[]],[[-1,187],[[6,[[17,[[84,[[120,[-2]]]],174]]]]],[],[]],[[-1,187],[[6,[[17,[[84,[-2]],174]]]]],[],[]],0,0,[-1,2,[]],[-1,164,[]],[197,164],[198,164],[199,164],[200,164],[-1,49,[]],[197,49],[198,49],[199,49],[200,49],[-1,16,[]],[200,16],[[-1,[84,[22]]],[[84,[22]]],[]],[[187,-1],17,30],[-1,[[6,[2]]],[]],[-1,[[6,[2]]],[]],[171,[[40,[53]]]],[172,[[40,[53]]]],[173,[[40,[53]]]],[174,[[40,[53]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[[[195,[-1]]],24,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[165,[[27,[5]]]]],[]],[-1,[[165,[[27,[5]]]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],[[27,[203]]]],[[],[[17,[206]]]],[[16,16,16,[40,[[27,[204]]]]],[[27,[203]]]],[[],-1,[]],[[],[[165,[[27,[5]]]]]],[-1,24,[]],[[[45,[-1]],70,24],[],[]],[24,-1,[]],[[40,70,24]],[[],24],0,0,0,0,0,0,[[103,68],[[17,[134]]]],[135,[[17,[134]]]],[[135,-1],[[17,[134]]],[140,70]],[135,[[17,[84,134]]]],0,0,0,0,0,0,0,0,[[103,68]],[[[68,[22]]],49],[[[68,[22]]],[[17,[-1,134]]],[]],[[],-1,[]],[[[23,[22]],24],[[2,[-1]]],[]],[[],-1,[]],[[],-1,[]],[[84,142]],[[],[[2,[143]]]],[-1,142,[]],[[-1,24],[],[]],[[[68,[22]]],17],[-1,[[84,[22]]],[]],[[-1,[68,[22]]],49,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,53,[]],[[-1,-2],[[17,[2,207]]],[],162],[[-1,-2,-3,-4],[[17,[2,207]]],[],162,162,162],[[-1,68,68,[84,[49]]],[[17,[84,207]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,208],[[17,[207]]],[]],[-1,49,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[2,207]]],[]],[16,2],[16,2],[[207,19],20],[[207,19],20],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[-1,[],[]],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[-1,208],[[17,[16,207]]],[]],[[-1,208],[[17,[207]]],[]],[[-1,208],[[17,[2,207]]],[]],[[-1,208],[[17,[2,207]]],[]],[-1,[[17,[2,207]]],[]],[[-1,-2],[[40,[2]]],[],[209,210]],[-1,32,[]],[[-1,208],[[17,[207]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[-1,208],[[17,[207]]],[]],[-1,33,[]],[-1,33,[]],[[-1,49],[[17,[207]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[[[40,[-1]],70,24],[],[]],[[],-1,[]],[[],-1,[]],[-1,2,[]],[-1,[[17,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,[84,[[211,[-2]]]]],[[165,[[27,[5]]]]],[],[]],[[-1,[79,[-2]]],[[165,[[27,[5]]]]],[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,53,[]],[206,[[40,[55]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[212,206],[206,[[40,[53]]]],[-1,[[165,[[27,[5]]]]],[]],[212,212],[206,206],[[[79,[-1]]],[[79,[-1]]],[12,39]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[-1,[[165,[[27,[5]]]]],[]],[[],[[213,[-1]]],[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[206,71],[16,2],[16,2],[16,2],[16,2],[16,2],[[[214,[-1]],[214,[-1]]],49,[76,39]],[[[211,[-1]],[211,[-1]]],49,[39,76]],[[[79,[-1]],[79,[-1]]],49,[76,39]],[212,[[17,[-1,206]]],[]],0,[[212,19],20],[[206,19],20],[[206,19],20],[[[214,[-1]],19],20,[21,39]],[[[211,[-1]],19],20,[39,21]],[[[79,[-1]],19],20,[21,39]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[45,[-1]]],[[211,[-1]]],39],[-1,-1,[]],[[[79,[-1]]],[[211,[-1]]],39],[-1,-1,[]],[[[45,[-1]]],[[79,[-1]]],39],[[[80,[-1]],40,[66,[[45,[-1]]]]],[[79,[-1]]],39],[-1,[[165,[[27,[5]]]]],[]],[-1,[[165,[[27,[5]]]]],[]],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[-1,[],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[212,206],0,0,0,[206,[[40,[53]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[[-1,3],2,[]],[[-1,1],2,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[161,[[23,[22]]]],[-1,[[17,[2,56]]],[57,8]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[161,[[17,[2,56]]]],[[[215,[-1]]],[[215,[-1]]],[12,39]],[[[48,[-1]]],[[48,[-1]]],12],[161,161],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[16,-1,[]],[[[216,[-1]]],[],39],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[-1,[[17,[161]]],18],[[-1,72,73],[[17,[161,56]]],74],[16,2],[16,2],[16,2],[16,2],[16,2],[[161,161],49],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[-1,-2],49,[],[]],[[[217,[-1]],19],20,[21,39]],[[[216,[-1]],19],20,[21,39]],[[[215,[-1]],19],20,[21,39]],[[[48,[-1]],19],20,21],[[161,19],20],[[161,19],20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,161,[[69,[[68,[22]]]]]],[-1,161,[[88,[[23,[22]]]]]],[71,[[17,[161]]]],[[[217,[-1]]],[[40,[[2,[[218,[-1]],28]]]]],39],[[[217,[-1]]],[[40,[[218,[-1]]]]],39],[[[217,[-1]]],[[40,[81]]],39],[[[217,[-1]]],[[40,[28]]],39],[[161,-1],2,82],[[-1,-2],[[25,[-2,-3]]],[],[26,8,9],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[161,-1],17,30],[[161,-1,72],[[17,[2,56]]],85],[[161,72],16],[[],32],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,32,[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[119,[[17,[161]]]],[-1,[[17,[-2]]],[],[]],[119,[[17,[161]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[219,[-1,-2,-3]],-2],[[220,[2,-3]]],39,[[221,[-1]]],[[222,[-1]]]],[-1,4,[]],[-1,4,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[66,-1,[]],[16,-1,[]],[16,-1,[]],[16,2],[-1,-1,[]],[-1,[],[]],[-1,[],[]],[-1,66,[]],[-1,66,[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[[],16],[-1,-2,[],[]],[[[27,[-1]]],[[27,[4]]],[]],[[[28,[-1]]],[[28,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[-1,-3],49,[],[],[[151,[-2]]]],0,0,[-2,24,[],[[151,[-1]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,33,[]],0,[-1,-2,[],[]]],"c":[],"p":[[3,"Private",3960],[15,"tuple"],[3,"Private",3960],[8,"Any",3961],[8,"Future",3962],[6,"BoxSyncFuture",0],[8,"Sized",3963],[8,"Send",3963],[8,"Sync",3963],[4,"ExecutionType",0],[3,"ValidatorConfig",0],[8,"Clone",3964],[8,"SignatureKey",3504],[3,"HotShotConfig",0],[8,"ElectionConfig",2399],[15,"usize"],[4,"Result",3965],[8,"Deserializer",3966],[3,"Formatter",3967],[6,"Result",3967],[8,"Debug",3967],[15,"u8"],[15,"array"],[15,"u64"],[3,"IndentedSection",3968],[8,"Display",3967],[3,"Box",3969],[3,"Arc",3970],[3,"Rc",3971],[8,"Serializer",3972],[8,"Serialize",3972],[3,"String",3973],[3,"TypeId",3961],[3,"ConsensusMetrics",123],[15,"f64"],[3,"ConsensusMetricsValue",123],[3,"InnerConsensusMetrics",123],[3,"Consensus",123],[8,"NodeType",3466],[4,"Option",3974],[8,"Counter",2496],[8,"Gauge",2496],[8,"Histogram",2496],[8,"Label",2496],[3,"Leaf",268],[8,"Metrics",2496],[15,"i64"],[4,"Terminator",3769],[15,"bool"],[4,"HotShotError",655],[8,"FnMut",3975],[3,"ViewNumber",268],[8,"Error",3976],[4,"BlockError",268],[3,"Backtrace",3977],[4,"SerializationError",3978],[8,"Iterator",3979],[3,"InvalidBlockHeaderSnafu",268],[3,"InvalidTransactionLengthSnafu",268],[3,"InconsistentPayloadCommitmentSnafu",268],[3,"DAProposal",268],[3,"UpgradeProposal",268],[3,"VidDisperse",268],[3,"QuorumProposal",268],[4,"Ordering",3980],[3,"Commitment",3981],[4,"VidError",3982],[15,"slice"],[8,"AsRef",3983],[8,"RngCore",3984],[15,"str"],[4,"Compress",3985],[4,"Validate",3985],[8,"Read",3986],[3,"VidDisperse",3982],[8,"PartialEq",3980],[8,"Committable",3981],[6,"VidScheme",268],[3,"StoredView",3617],[6,"QuorumCertificate",1779],[6,"VidCommitment",268],[8,"Hasher",3987],[8,"Hash",3987],[3,"Vec",3988],[8,"Write",3986],[3,"LeafNotFoundSnafu",655],[3,"InvalidStateSnafu",655],[8,"Into",3983],[3,"ViewTimeoutSnafu",655],[4,"RoundTimedoutState",655],[3,"InsufficientValidSignaturesSnafu",655],[3,"NonZeroU64",3989],[3,"MiscSnafu",655],[3,"ContinueSnafu",655],[3,"FailedToMessageLeaderSnafu",655],[3,"FailedToBroadcastSnafu",655],[3,"BlockSnafu",655],[3,"NetworkFaultSnafu",655],[3,"StorageSnafu",655],[3,"TimeoutSnafu",655],[3,"Event",1059],[4,"EventType",1059],[3,"BitSlice",3990],[8,"BitOrder",3991],[3,"GenericPublicInput",1132],[8,"PrimeField",3992],[3,"StateSignatureRequestBody",1132],[3,"GenericLightClientState",1132],[3,"StateKeyPair",1132],[3,"StateSignaturesBundle",1132],[8,"Ord",3980],[8,"Default",3993],[15,"char"],[8,"FromIterator",3994],[3,"EdwardsConfig",3995],[3,"KeyPair",3996],[8,"PartialOrd",3980],[4,"BitSpanError",3997],[3,"TaggedBase64",3998],[3,"Message",1332],[3,"Messages",1332],[4,"MessagePurpose",1332],[4,"MessageKind",1332],[4,"ProcessedGeneralConsensusMessage",1332],[4,"ProcessedCommitteeConsensusMessage",1332],[4,"GeneralConsensusMessage",1332],[4,"CommitteeConsensusMessage",1332],[3,"SequencingMessage",1332],[4,"DataMessage",1332],[3,"Proposal",1332],[8,"HasViewNumber",3918],[8,"DeserializeOwned",3966],[6,"ProcessedSequencingMessage",1332],[4,"PrimitivesError",3999],[3,"GenericArray",4000],[3,"QCParams",1708],[8,"Deserialize",3966],[3,"BitVectorQC",1708],[8,"AggregateableSignatureSchemes",4001],[8,"CryptoRng",3984],[6,"BLSPubKey",1763],[3,"U256",4002],[3,"BitVec",4003],[3,"SuccessThreshold",1779],[3,"OneHonestThreshold",1779],[3,"UpgradeThreshold",1779],[3,"SimpleCertificate",1779],[8,"Voteable",1974],[8,"Threshold",1779],[3,"QuorumData",1974],[8,"Membership",2399],[3,"DAData",1974],[3,"TimeoutData",1974],[3,"VIDData",1974],[3,"ViewSyncPreCommitData",1974],[3,"ViewSyncCommitData",1974],[3,"ViewSyncFinalizeData",1974],[3,"UpgradeProposalData",1974],[3,"SimpleVote",1974],[3,"StakeTableEntry",2317],[3,"BuilderCommitment",3769],[8,"IntoIterator",3994],[3,"NonZeroUsize",3989],[3,"Duration",4004],[3,"Pin",4005],[4,"ElectionError",2399],[3,"StubSnafu",2399],[3,"MathSnafu",2399],[3,"BTreeSet",4006],[3,"NoMetrics",2496],[4,"MemoryNetworkError",2547],[4,"CentralizedServerNetworkError",2547],[4,"WebServerNetworkError",2547],[4,"NetworkError",2547],[3,"StubSnafu",2547],[3,"NoMessagesInQueueSnafu",2547],[3,"IncorrectConsensusDataSnafu",2547],[3,"ClientSnafu",2547],[3,"EndpointSnafu",2547],[3,"ClientDisconnectedSnafu",2547],[3,"UnimplementedFeatureSnafu",2547],[3,"CouldNotDeliverSnafu",2547],[3,"NoSuchNodeSnafu",2547],[3,"ChannelSendSnafu",2547],[3,"ShutDownSnafu",2547],[3,"UnableToCancelSnafu",2547],[4,"TransmitType",2547],[3,"Libp2pSnafu",2547],[3,"MemoryNetworkSnafu",2547],[3,"CentralizedServerSnafu",2547],[3,"WebServerSnafu",2547],[3,"FailedToSerializeSnafu",2547],[3,"FailedToDeserializeSnafu",2547],[3,"TimeoutSnafu",2547],[4,"ConsensusIntentEvent",2547],[3,"PerfectNetwork",2547],[3,"SynchronousNetwork",2547],[3,"AsynchronousNetwork",2547],[3,"PartiallySynchronousNetwork",2547],[3,"ChaosNetwork",2547],[4,"NetworkChange",2547],[4,"NetworkNodeHandleError",4007],[8,"Fn",3975],[8,"NetworkReliability",2547],[15,"u32"],[4,"StorageError",3617],[4,"StakeTableError",3526],[4,"SnapshotVersion",3526],[8,"SeedableRng",3984],[8,"CryptoRngCore",3984],[4,"ViewEntry",3617],[3,"NoGenesisViewSnafu",3617],[6,"Result",3617],[3,"StorageState",3617],[3,"RoundFinishedEvent",3769],[3,"View",3769],[4,"ViewInner",3769],[6,"LeafCommitment",3769],[3,"VoteAccumulator",3918],[4,"Either",4008],[8,"Vote",3918],[8,"Certificate",3918],[6,"CommitmentMap",123],[8,"VidSchemeTrait",268],[8,"TestableLeaf",268],[13,"Misc",1047],[13,"InvalidState",1047],[13,"InsufficientValidSignatures",1047],[13,"StorageError",1047],[13,"TimeoutError",1047],[13,"FailedToMessageLeader",1047],[13,"FailedToBroadcast",1047],[13,"BlockError",1047],[13,"NetworkFault",1047],[13,"ViewTimeoutError",1047],[13,"Decide",1118],[13,"Error",1118],[13,"DAProposal",1118],[13,"QuorumProposal",1118],[13,"UpgradeProposal",1118],[13,"Transactions",1118],[13,"ReplicaViewTimeout",1118],[13,"NextLeaderViewTimeout",1118],[13,"ViewFinished",1118],[6,"StateSignature",1132],[6,"LightClientState",1132],[6,"StateSignatureScheme",1132],[6,"DACertificate",1779],[6,"TimeoutCertificate",1779],[6,"ViewSyncPreCommitCertificate2",1779],[6,"ViewSyncCommitCertificate2",1779],[6,"ViewSyncFinalizeCertificate2",1779],[6,"UpgradeCertificate",1779],[6,"QuorumVote",1974],[6,"DAVote",1974],[6,"TimeoutVote",1974],[6,"ViewSyncCommitVote",1974],[6,"ViewSyncPreCommitVote",1974],[6,"ViewSyncFinalizeVote",1974],[6,"UpgradeVote",1974],[8,"BlockPayload",2365],[8,"BlockHeader",2365],[8,"TestableBlock",2365],[8,"ConsensusApi",2389],[8,"CommunicationChannel",2547],[8,"ConnectedNetwork",2547],[8,"TestableChannelImplementation",2547],[8,"TestableNetworkingImplementation",2547],[8,"ViewMessage",2547],[13,"Libp2p",3459],[13,"MemoryNetwork",3459],[13,"CentralizedServer",3459],[13,"WebServer",3459],[13,"FailedToSerialize",3459],[13,"FailedToDeserialize",3459],[13,"Timeout",3459],[8,"TestableNodeImplementation",3466],[8,"NodeImplementation",3466],[8,"ConsensusTime",3466],[8,"QuorumCertificateScheme",3494],[8,"StakeTableEntryType",3504],[8,"StakeTableScheme",3526],[8,"ValidatedState",3604],[8,"TestableState",3604],[8,"Storage",3617],[8,"TestableStorage",3617],[13,"Leaf",3915],[13,"DA",3915],[6,"SignersMap",3918],[6,"VoteMap2",3918]],"b":[[55,"impl-Debug-for-ValidatorConfig%3CKEY%3E"],[56,"impl-Display-for-ValidatorConfig%3CKEY%3E"],[188,"impl-Display-for-InnerConsensusMetrics"],[189,"impl-Debug-for-InnerConsensusMetrics"],[240,"impl-Label-for-ConsensusMetrics"],[241,"impl-Gauge-for-ConsensusMetrics"],[469,"impl-Display-for-BlockError"],[470,"impl-Debug-for-BlockError"],[474,"impl-Display-for-Leaf%3CTYPES%3E"],[475,"impl-Debug-for-Leaf%3CTYPES%3E"],[871,"impl-Display-for-HotShotError%3CTYPES%3E"],[872,"impl-Debug-for-HotShotError%3CTYPES%3E"],[1236,"impl-Debug-for-GenericLightClientState%3CF%3E"],[1237,"impl-Display-for-GenericLightClientState%3CF%3E"],[1311,"impl-TryFrom%3C%26TaggedBase64%3E-for-GenericLightClientState%3CF%3E"],[1312,"impl-TryFrom%3CTaggedBase64%3E-for-GenericLightClientState%3CF%3E"],[2446,"impl-Display-for-ElectionError"],[2447,"impl-Debug-for-ElectionError"],[2536,"impl-Label-for-NoMetrics"],[2537,"impl-Gauge-for-NoMetrics"],[3007,"impl-Debug-for-MemoryNetworkError"],[3008,"impl-Display-for-MemoryNetworkError"],[3010,"impl-Debug-for-CentralizedServerNetworkError"],[3011,"impl-Display-for-CentralizedServerNetworkError"],[3016,"impl-Display-for-WebServerNetworkError"],[3017,"impl-Debug-for-WebServerNetworkError"],[3032,"impl-Debug-for-NetworkError"],[3033,"impl-Display-for-NetworkError"],[3570,"impl-Display-for-StakeTableError"],[3571,"impl-Debug-for-StakeTableError"],[3695,"impl-Debug-for-StorageError"],[3696,"impl-Display-for-StorageError"],[3703,"impl-From%3CLeaf%3CTYPES%3E%3E-for-ViewEntry%3CTYPES%3E"],[3705,"impl-From%3CStoredView%3CTYPES%3E%3E-for-ViewEntry%3CTYPES%3E"],[3842,"impl-Display-for-BuilderCommitment"],[3843,"impl-Debug-for-BuilderCommitment"],[3895,"impl-TryFrom%3C%26TaggedBase64%3E-for-BuilderCommitment"],[3897,"impl-TryFrom%3CTaggedBase64%3E-for-BuilderCommitment"]]},\
"hotshot_utils":{"doc":"Contains general utility structures and methods","t":"AAFF","n":["bincode","version","bincode_opts","read_version"],"q":[[0,"hotshot_utils"],[2,"hotshot_utils::bincode"],[3,"hotshot_utils::version"],[4,"bincode::config"],[5,"bincode::config::limit"],[6,"bincode::config"],[7,"bincode::config"],[8,"bincode::config"],[9,"bincode::config"],[10,"core::option"]],"d":["Provides bincode options","Provides version utilities Utilities for reading version …","For the wire format, we use bincode with the following …","Read the version number from a message (passed a byte …"],"i":[0,0,0,0],"f":[0,0,[[],[[9,[[7,[[5,[[3,[1,2]],4]],6]],8]]]],[[[11,[10]]],[[13,[12]]]]],"c":[],"p":[[3,"DefaultOptions",4],[3,"Infinite",5],[3,"WithOtherLimit",4],[3,"LittleEndian",6],[3,"WithOtherEndian",4],[3,"FixintEncoding",7],[3,"WithOtherIntEncoding",4],[3,"RejectTrailing",8],[3,"WithOtherTrailing",4],[15,"u8"],[15,"slice"],[3,"Version",9],[4,"Option",10]],"b":[]},\
"hotshot_web_server":{"doc":"Web server for <code>HotShot</code>","t":"GDGIDMMLLLLLLLLLLAMLFLLLLLLLLLLKLKLKLKLKLKLKLKLKLKLKLLLLLLLLLLLLMMMLMMMMMMMKLKLKLKLKLKLKLKLKLKLKLKLKLMMMFMMMMLLLLMLLLLMMMMMMMMMMMLLLRRRRRRFFFFFFFFFFFFFFFFFFFFFFF","n":["Error","Options","State","WebServerDataSource","WebServerState","_prng","api_path","as_any","as_any","as_any_mut","as_any_mut","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","config","da_certificates","default","define_api","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches_mut","get_da_certificate","get_da_certificate","get_latest_proposal","get_latest_proposal","get_latest_view_sync_certificate","get_latest_view_sync_certificate","get_proposal","get_proposal","get_transactions","get_transactions","get_vid_certificate","get_vid_certificate","get_vid_disperse","get_vid_disperse","get_vid_votes","get_vid_votes","get_view_sync_certificate","get_view_sync_certificate","get_view_sync_votes","get_view_sync_votes","get_votes","get_votes","group_id","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","latest_proposal","latest_view_sync_certificate","message","new","num_txns","oldest_certificate","oldest_vid_certificate","oldest_vid_disperse","oldest_vid_vote","oldest_view_sync_vote","oldest_vote","post_completed_transaction","post_completed_transaction","post_da_certificate","post_da_certificate","post_proposal","post_proposal","post_secret_proposal","post_secret_proposal","post_staketable","post_staketable","post_transaction","post_transaction","post_vid_certificate","post_vid_certificate","post_vid_disperse","post_vid_disperse","post_vid_vote","post_vid_vote","post_view_sync_certificate","post_view_sync_certificate","post_view_sync_vote","post_view_sync_vote","post_vote","post_vote","proposal","proposal","proposals","raw","recent_vid_disperse","run_web_server","shutdown","stake_table","status","transactions","try_from","try_from","try_into","try_into","txn_lookup","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vid_certificates","vid_disperses","vid_vote_index","vid_votes","view_sync_certificate_index","view_sync_certificates","view_sync_vote_index","view_sync_votes","vote_index","votes","vzip","vzip","with_shutdown_signal","DEFAULT_WEB_SERVER_DA_PORT","DEFAULT_WEB_SERVER_PORT","DEFAULT_WEB_SERVER_VIEW_SYNC_PORT","MAX_TXNS","MAX_VIEWS","TX_BATCH_SIZE","get_da_certificate_route","get_latest_proposal_route","get_latest_view_sync_certificate_route","get_proposal_route","get_transactions_route","get_upgrade_route","get_vid_certificate_route","get_vid_disperse_route","get_vid_vote_route","get_view_sync_certificate_route","get_view_sync_vote_route","get_vote_route","post_da_certificate_route","post_proposal_route","post_staketable_route","post_transactions_route","post_upgrade_route","post_vid_certificate_route","post_vid_disperse_route","post_vid_vote_route","post_view_sync_certificate_route","post_view_sync_vote_route","post_vote_route"],"q":[[0,"hotshot_web_server"],[132,"hotshot_web_server::config"],[161,"core::any"],[162,"clap_builder::builder::command"],[163,"tide_disco::error"],[164,"tide_disco::api"],[165,"tide_disco::api"],[166,"core::marker"],[167,"core::marker"],[168,"tide_disco::method"],[169,"clap_builder"],[170,"alloc::vec"],[171,"core::option"],[172,"hotshot_types::traits::signature_key"],[173,"clap_builder::util::id"],[174,"alloc::boxed"],[175,"alloc::sync"],[176,"alloc::rc"],[177,"alloc::string"],[178,"async_compatibility_layer::channel::oneshot::inner"],[179,"url"],[180,"std::io::error"],[181,"core::any"]],"d":["Convience alias for errors in this crate","configurability options for the web server","Convience alias for a lock over the state of the app TODO …","Trait defining methods needed for the <code>WebServerState</code>","State that tracks proposals and votes the server receives …","prng for generating endpoint","path to API","","","","","","","","","","","Configuration for the webserver","view number -&gt; (secret, da_certificates)","","Sets up all API routes","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get da certificate","Return the da certificate the server has received for a …","Get latest quanrum proposal","","Get latest view sync proposal","","Get proposal","Return the proposal the server has received for a …","Get transactions","Return the transaction at the specified index (which will …","Get vid certificates","Return the VID certificate the server has received for a …","Get vid dispersal","Return the VID disperse data that the server has received …","Get vid votes","Return all VID votes the server has received for a …","Get view sync proposal","","Get view sync votes","","Get vote","Return all votes the server has received for a particular …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","view for the most recent proposal to help nodes catchup","view for the most recent view sync proposal","","Create new web server state","highest transaction index","view for the oldest DA certificate","oldest vid certificate view number","view for the oldest vid disperal","oldest vid vote view number","view sync: view number of oldest votes in memory","view number of oldest votes in memory","Post completed transaction","","Post data avaiability certificate","Stores a received DA certificate in the <code>WebServerState</code>","Post proposal","Stores a received proposal in the <code>WebServerState</code>","Post secret proposal","","Post staketable","","Post transaction","Stores a received group of transactions in the …","post vid certificate","","Post vid disperal","","Post vid vote","Stores a received VID vote in the <code>WebServerState</code>","Post view sync certificate","","Post view sync vote","","Post vote","Stores a received vote in the <code>WebServerState</code>","Post proposal","","view number -&gt; (secret, proposal)","","view of most recent vid dispersal","run the web server","shutdown signal","stake table with leader keys","","index -&gt; transaction","","","","","tx hash -&gt; tx index, is currently unused","","","","","","recent_vid_vote view number","view number -&gt; (secret, string)","recent_vid_certificate: u64,","votes that a node got, that is, their VID share","view number -&gt; relay","for view sync: view number -&gt; (relay, certificate)","view_sync: view number -&gt; highest vote index for that view …","view sync: view number -&gt; Vec(relay, vote)","view number -&gt; highest vote index for that view number","view number -&gt; Vec(index, vote)","","","Provide a shutdown signal to the server","the default port on which to serve Data availability …","the default port on which to run the web server","the default port on which to serve View Sync functionality","How many transactions to keep in memory","How many views to keep in memory","How many transactions to return at once","get latest certificate","get latest qc","get latest view sync proposal","get proposal","get transactions","get upgrade route","get vid certificate","get vid dispersal","get vid vote route","get view sync proposal","get view sync vote","get vote","post data availability certificate","post proposal","post stake table","post transactions","post upgrade route","post vid certificate","post vid dispersal","post vid vote route","post view sync proposal","post view sync vote","post vote"],"i":[0,0,0,0,0,20,3,20,3,20,3,3,3,20,3,20,3,0,20,3,0,20,3,20,3,20,3,20,3,3,3,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,3,20,3,20,3,20,3,20,3,20,3,20,20,32,20,20,20,20,20,20,20,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,31,20,20,33,20,0,20,20,32,20,20,3,20,3,20,20,3,3,3,33,20,20,20,20,20,20,20,20,20,20,20,3,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],3],[3,[[7,[[5,[-1,4]],6]]],[8,9,10,11]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,-1,[]],[12,13],[12,13],[-1,-1,[]],[-1,-1,[]],[14,[[7,[3,15]]]],[14,[[7,[3,15]]]],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[-1,[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]]],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[-1,[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]]],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16],[[7,[[19,[[13,[16,[18,[[18,[17]]]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[13,[16,[18,[[18,[17]]]]]]]],4]]],21],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[-1,16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],[]],[[[20,[-1]],16,16],[[7,[[19,[[18,[[18,[17]]]]]],4]]],21],[[],[[19,[22]]]],[[],12],[[],12],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[-1]]],[[23,[1]]],[]],[[[23,[-1]]],[[23,[1]]],[]],[[[24,[-1]]],[[24,[1]]],[]],[[[24,[-1]]],[[24,[1]]],[]],[[[25,[-1]]],[[25,[1]]],[]],[[[25,[-1]]],[[25,[1]]],[]],0,0,0,[[],[[20,[-1]]],21],0,0,0,0,0,0,0,[[-1,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],[18,[17]]],[[7,[13,4]]],21],[[-1,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16,[18,[17]]],[[7,[13,4]]],[]],[[[20,[-1]],16,[18,[17]]],[[7,[13,4]]],21],[[-1,16],[[19,[[13,[26,[18,[17]]]]]]],[]],[[[20,[-1]],16],[[19,[[13,[26,[18,[17]]]]]]],21],0,0,0,[[[19,[[27,[13]]]],28],[[29,[13]]]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],0,[-1,30,[]],[-1,30,[]],[[3,14],[[7,[13,15]]]],[[3,14],[[7,[13,15]]]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1]],[19,[[27,[13]]]]],[[20,[-1]]],21],0,0,0,0,0,0,[16,26],[[],26],[[],26],[16,26],[16,26],[16,26],[16,26],[16,26],[[16,16],26],[[16,16],26],[[16,16],26],[[16,16],26],[16,26],[16,26],[[],26],[[],26],[16,26],[16,26],[16,26],[16,26],[16,26],[16,26],[16,26]],"c":[],"p":[[8,"Any",161],[3,"Command",162],[3,"Options",0],[3,"ServerError",163],[3,"Api",164],[4,"ApiError",164],[4,"Result",165],[8,"Send",166],[8,"Sync",166],[8,"ReadState",167],[8,"WriteState",167],[15,"usize"],[15,"tuple"],[3,"ArgMatches",168],[6,"Error",169],[15,"u64"],[15,"u8"],[3,"Vec",170],[4,"Option",171],[3,"WebServerState",0],[8,"SignatureKey",172],[3,"Id",173],[3,"Box",174],[3,"Arc",175],[3,"Rc",176],[3,"String",177],[3,"OneShotReceiver",178],[3,"Url",179],[6,"Result",180],[3,"TypeId",161],[8,"WebServerDataSource",0],[6,"Error",0],[6,"State",0]],"b":[]},\
"libp2p_networking":{"doc":"Library for p2p communication","t":"AAADLLLLMLLLLLLLMLLMLLLLNNNGNENNNNNNNNNNNNNNNNNNNNNNDDCNEEDDDEDEENNNNNNNNNNNNNNNALLLLLLLLMMLLMALLFMMMLLLALLLLLLLLLLLLLFFFMMMMMMMLLLLMMMMMMMMMAAMMMMMMMMMMMLFFMMMMLLLLLLLLLMMLLLLLLLLMMMMMMMMMMMMMMMMMMAAAAADDEENNNDDDRNNDNEMLLMMMMLMMMLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMMMLLMMMLLMLLMMLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDEDDENDNDNDNDNNRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDEDNNLLLMLLLLLLMMLLLLLLLLLMLLLLLLMMLLMMLLLLLLLLLLLLDDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLFLLFDMLLLLLLLLLLLLLLLMLMMLLLLLDENMLLLLLLLLLLLLLLMLLLLMLLLLLMLLLMLLLLLLLLLLDRLLLLLMLLLMLLLLMLLLLLLLMLLLLLLNDENDNDNNDENDNDENDNDNDNDNDNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMDDDDDDRRCDCCCCCRLLLAMLLLALLMLMCLLLMLLMLLLLRDDDENNRLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLLMMMMLMMLMMLMMLMMLMMLLLLLLLLLLLLLMMLLLLLLLLNDNDNDNDNDNDEDDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLMALLLLMLLLLLMMMLMLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMCCCCCCDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["message","network","reexport","Message","borrow","borrow_mut","clone","clone_into","content","deserialize","eq","equivalent","equivalent","fmt","from","into","sender","serialize","to_owned","topic","try_from","try_into","type_id","vzip","AddKnownPeers","BeginBootstrap","Bootstrap","BoxedTransport","CantKillTwice","ClientRequest","Conductor","ConnectTimeout","DHTError","DHTEvent","DMEvent","DeserializationError","DirectRequest","DirectRequest","DirectResponse","DirectResponse","GetConnectedPeerNum","GetConnectedPeers","GetDHT","GetRoutingTable","GossipEvent","GossipMsg","GossipMsg","IdentifyEvent","IgnorePeers","IsBootstrapped","Killed","LookupPeer","MeshParams","NetworkDef","NetworkError","NetworkError","NetworkEvent","NetworkEventInternal","NetworkNode","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeType","NoSuchTopic","NodeConfigError","Prune","PutDHT","ReceiverEnded","RecvError","Regular","SendError","SerializationError","Shutdown","Subscribe","TimeoutError","UninitializedField","Unsubscribe","ValidationError","behaviours","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","bound_addr","clone","clone_into","config","def","default","deserialize","deserialize_msg","dht","dht_cache_location","dht_cache_location","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","gen_multiaddr","gen_transport","get_random_handle","gossipsub","id","identify","identity","identity","identity","inner","into","into","into","into","listen_addr","listener_id","mesh_n","mesh_n_high","mesh_n_low","mesh_outbound_min","mesh_params","mesh_params","network_config","network_node_handle_error","node","node_type","node_type","peer_id","peer_id","receiver","replication_factor","replication_factor","republication_interval","republication_interval","request_response","send_network","serialize","serialize_msg","spin_up_swarm","state","swarm","to_connect_addrs","to_connect_addrs","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","webui_listeners","contents","key","key","notify","notify","pid","retry_count","retry_count","value","source","source","source","source","source","source","source","source","dht","direct_message","direct_message_codec","exponential_backoff","gossip","Bootstrap","DHTBehaviour","DHTEvent","DHTProgress","Finished","InProgress","IsBootstrapped","KadGetQuery","KadPutQuery","MAX_DHT_QUERY_SIZE","NUM_REPLICATED_TO_TRUST","NotStarted","NotStarted","RandomWalk","Started","State","__private_field","add_address","add_bootstrap_nodes","backoff","backoff","backoff","backoff","begin_bootstrap","begin_bootstrap","bootstrap_nodes","bootstrap_state","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cache","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","dht_handle_event","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_queue","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_record","handle_established_inbound_connection","handle_established_outbound_connection","handle_get_query","handle_pending_inbound_connection","handle_pending_outbound_connection","handle_put_query","hash","in_progress_get_closest_peers","in_progress_get_record_queries","in_progress_put_record_queries","into","into","into","into","into","into","into","into","into","kadem","key","key","lookup_peer","new","notify","notify","num_replicas","on_connection_handler_event","on_swarm_event","peer_id","poll","print_routing_table","progress","progress","put_record","query_closest_peers","queued_get_record_queries","queued_put_record_queries","random_walk","records","replication_factor","retry_count","state","state","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Cache","CacheError","Config","ConfigBuilder","ConfigBuilderError","Deserialization","DeserializationSnafu","Disk","DiskSnafu","GeneralCache","GeneralCacheSnafu","Serialization","SerializationSnafu","UninitializedField","ValidationError","_DERIVE_core_fmt_Debug_FOR_Config","as_error_source","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","create_empty","default","default","default","description","disk_parity_delta","expiries","expiry","expiry","expiry","filename","filename","filename","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get","header","header","in_current_span","in_current_span","inner","insert","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","load","max_disk_parity_delta","max_disk_parity_delta","max_disk_parity_delta","new","prune","save","save_if_necessary","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","source","source","DMBehaviour","DMEvent","DMRequest","DirectRequest","DirectResponse","add_address","add_direct_request","add_direct_response","backoff","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","failed_rr","fmt","from","from","from","handle_dm_event","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","in_progress_rr","into","into","into","new","on_connection_handler_event","on_swarm_event","out_event_queue","peer_id","poll","remove_address","request_response","retry_count","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DirectMessageCodec","DirectMessageProtocol","DirectMessageRequest","DirectMessageResponse","MAX_MSG_SIZE_DM","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","read_length_prefixed","read_request","read_response","read_varint","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_length_prefixed","write_request","write_response","write_varint","ExponentialBackoff","backoff_factor","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","equivalent","fmt","from","hash","into","is_expired","new","reset","reset_val","start_next","started","timeout","to_owned","try_from","try_into","type_id","vzip","GossipBehaviour","GossipEvent","GossipMsg","backoff","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drain_publish_gossips","eq","equivalent","equivalent","fmt","from","from","gossip_handle_event","gossipsub","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","in_progress_gossip","into","into","new","on_connection_handler_event","on_swarm_event","out_event_queue","poll","publish_gossip","subscribe_gossip","subscribed_topics","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsubscribe_gossip","vzip","vzip","NetworkDef","_DERIVE_core_fmt_Debug_FOR_NetworkDef","add_address","add_direct_request","add_direct_response","borrow","borrow_mut","dht","fmt","from","get_record","gossipsub","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","identify","into","new","on_connection_handler_event","on_swarm_event","poll","publish_gossip","put_record","request_response","subscribe_gossip","try_from","try_into","type_id","unsubscribe_gossip","vzip","CancelledRequest","CancelledRequestSnafu","DHTError","DialError","DialSnafu","Disagreement","DisagreementSnafu","GetRecord","GetRecordError","GetRecordSnafu","GetRecordWrapperError","GossipsubBuild","GossipsubBuildSnafu","GossipsubConfig","GossipsubConfigSnafu","NetworkError","NoKnownPeers","NoKnownPeersSnafu","NotFound","NotFoundSnafu","PublishError","PublishSnafu","PutRecord","PutRecordSnafu","StreamClosed","StreamClosedSnafu","Transport","TransportLaunch","TransportLaunchSnafu","TransportSnafu","as_error_source","as_error_source","as_error_source","backtrace","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","description","description","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","header","header","in_current_span","in_current_span","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","message","message","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","source","source","source","source","message","message","source","source","source","source","NetworkSnafu","NodeConfigSnafu","RecvSnafu","SendSnafu","SerializationSnafu","TimeoutSnafu","ESTABLISHED_LIMIT","ESTABLISHED_LIMIT_UNWR","MeshParams","NetworkNode","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","NetworkNodeHandle","NetworkNodeHandleError","_DERIVE_core_fmt_Debug_FOR_NetworkNode","add_known_peers","borrow","borrow_mut","config","config","connected_pids","fmt","from","handle","handle_client_requests","handle_swarm_events","identity","into","listener_id","network_node_handle_error","new","num_connected","peer_id","peer_id","spawn_listeners","start_listen","swarm","try_from","try_into","type_id","vzip","DEFAULT_REPLICATION_FACTOR","MeshParams","NetworkNodeConfig","NetworkNodeConfigBuilder","NetworkNodeConfigBuilderError","UninitializedField","ValidationError","_DERIVE_core_fmt_Debug_FOR_NetworkNodeConfig","as_error_source","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_addr","bound_addr","bound_addr","build","clone","clone","clone","clone_into","clone_into","clone_into","create_empty","default","default","default","dht_cache_location","dht_cache_location","dht_cache_location","fmt","fmt","fmt","fmt","from","from","from","from","from","from","header","identity","identity","identity","in_current_span","into","into","into","into","mesh_n","mesh_n_high","mesh_n_low","mesh_outbound_min","mesh_params","mesh_params","mesh_params","node_type","node_type","node_type","replication_factor","replication_factor","replication_factor","republication_interval","republication_interval","republication_interval","to_connect_addrs","to_connect_addrs","to_connect_addrs","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","ttl","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","CantKillTwice","CantKillTwiceSnafu","ConnectTimeout","ConnectTimeoutSnafu","DHTError","DHTSnafu","DeserializationError","DeserializationSnafu","Killed","KilledSnafu","NetworkError","NetworkNodeHandle","NetworkNodeHandleError","NetworkNodeReceiver","NetworkSnafu","NoSuchTopic","NoSuchTopicSnafu","NodeConfigError","NodeConfigSnafu","ReceiverEnded","ReceiverEndedSnafu","RecvError","RecvSnafu","SendError","SendSnafu","SerializationError","SerializationSnafu","TimeoutError","TimeoutSnafu","add_known_peers","as_error_source","backtrace","begin_bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","connected_pids","description","direct_request","direct_request_no_serialize","direct_response","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_record","get_record_timeout","gossip","gossip_no_serialize","header","id","id","ignore_peers","in_current_span","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_killed","kill_switch","killed","listen_addr","listen_addr","lookup_node","lookup_pid","modify_state","network_config","network_node_handle_error","new","notify_webui","num_connected","peer_id","peer_id","print_routing_table","prune_peer","put_record","put_record_timeout","receiver","receiver","receiver","receiver_spawned","recv","recv_kill","register_webui_listener","send_network","send_request","shutdown","source","spawn_handler","state","state","state_wait_timeout_until","state_wait_timeout_until_with_trigger","state_wait_until","subscribe","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_to_connect","webui_listeners","source","source","source","source","source","source","source","source","NetworkSnafu","NodeConfigSnafu","RecvSnafu","SendSnafu","SerializationSnafu","TimeoutSnafu","Multiaddr","PeerId","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","empty","encode_hex","encode_hex_upper","ends_with","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_iter","from_multihash","from_public_key","from_str","from_str","hash","hash","header","header","into","into","into_iter","is_empty","iter","len","multihash","partial_cmp","partial_cmp","pop","protocol_stack","push","random","replace","serialize","serialize","to_base58","to_bytes","to_owned","to_owned","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with","with_capacity","with_p2p"],"q":[[0,"libp2p_networking"],[3,"libp2p_networking::message"],[24,"libp2p_networking::network"],[181,"libp2p_networking::network::ClientRequest"],[190,"libp2p_networking::network::NetworkNodeHandleError"],[198,"libp2p_networking::network::behaviours"],[203,"libp2p_networking::network::behaviours::dht"],[371,"libp2p_networking::network::behaviours::dht::cache"],[532,"libp2p_networking::network::behaviours::dht::cache::CacheError"],[536,"libp2p_networking::network::behaviours::direct_message"],[587,"libp2p_networking::network::behaviours::direct_message_codec"],[658,"libp2p_networking::network::behaviours::exponential_backoff"],[684,"libp2p_networking::network::behaviours::gossip"],[728,"libp2p_networking::network::def"],[759,"libp2p_networking::network::error"],[1028,"libp2p_networking::network::error::DHTError"],[1031,"libp2p_networking::network::error::GetRecordWrapperError"],[1032,"libp2p_networking::network::error::NetworkError"],[1038,"libp2p_networking::network::network_node_handle_error"],[1044,"libp2p_networking::network::node"],[1080,"libp2p_networking::network::node::config"],[1175,"libp2p_networking::network::node::handle"],[1472,"libp2p_networking::network::node::handle::NetworkNodeHandleError"],[1480,"libp2p_networking::network::node::handle::network_node_handle_error"],[1486,"libp2p_networking::reexport"],[1574,"core::result"],[1575,"serde::de"],[1576,"core::fmt"],[1577,"core::fmt"],[1578,"core::any"],[1579,"bincode::error"],[1580,"alloc::boxed"],[1581,"serde::de"],[1582,"libp2p_identity::keypair"],[1583,"libp2p_core::muxing::boxed"],[1584,"libp2p_core::transport::boxed"],[1585,"alloc::sync"],[1586,"rand_core"],[1587,"alloc::vec"],[1588,"serde::ser"],[1589,"core::option"],[1590,"core::fmt"],[1591,"std::collections::hash::set"],[1592,"std::collections::hash::map"],[1593,"core::num::nonzero"],[1594,"libp2p_kad::behaviour"],[1595,"futures_channel::oneshot"],[1596,"libp2p_swarm::connection"],[1597,"libp2p_swarm"],[1598,"libp2p_swarm"],[1599,"libp2p_kad::behaviour"],[1600,"libp2p_kad::behaviour"],[1601,"libp2p_kad::record::store::memory"],[1602,"libp2p_kad::behaviour"],[1603,"libp2p_swarm"],[1604,"core::task::wake"],[1605,"libp2p_swarm"],[1606,"core::error"],[1607,"snafu::backtrace_shim"],[1608,"derive_builder::error"],[1609,"dashmap::mapref::one"],[1610,"color_eyre::section"],[1611,"core::fmt"],[1612,"core::marker"],[1613,"libp2p_request_response"],[1614,"futures_io::if_std"],[1615,"core::marker"],[1616,"core::pin"],[1617,"std::io::error"],[1618,"libp2p_gossipsub::behaviour"],[1619,"libp2p_gossipsub::behaviour"],[1620,"libp2p_identify::behaviour"],[1621,"async_channel"],[1622,"libp2p_swarm"],[1623,"async_compatibility_layer::channel::unbounded::inner"],[1624,"async_compatibility_layer::channel::bounded::inner"],[1625,"core::ops::function"],[1626,"async_std::stream::stream::timeout"],[1627,"multihash::multihash"],[1628,"core::cmp"],[1629,"core::iter::traits::collect"],[1630,"core::fmt"],[1631,"core::net::ip_addr"],[1632,"libp2p_identity::keypair"],[1633,"core::iter::traits::collect"],[1634,"multiaddr"],[1635,"multiaddr"]],"d":["Example message used by the UI library","Network logic","symbols needed to implement a networking instance over …","example message that may be sent to the swarm. Used in the …","","","","","the content of the message","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","the peerid of the sender","","","the topic associated with the msg","","","","","add vec of known peers or addresses","Start the bootstrap process to kademlia","bootstrap node accepts all connections","<code>BoxedTransport</code> is a type alias for a boxed tuple …","The inner <code>NetworkNode</code> has already been killed","Actions to send from the client to the swarm","conductor node is never pruned","Could not connect to the network in time","Error in the kademlia DHT","a DHT event","a direct message event","Failure to deserialize a message","client request to send a direct serialized message","Recv-ed a direct message from a node","client request to send a direct reply to a message","Recv-ed a direct response from a node (that hopefully was …","Request the number of connected peers","Request the set of connected peers","Get(Key, Chan)","Print the routing  table to stderr, debugging only","a gossip  event","broadcast a serialized message","Recv-ed a broadcast","a identify event. Is boxed because this event is much …","Ignore peers. Only here for debugging purposes. Allows us …","Report that kademlia has successfully bootstrapped into …","The network node has been killed","Get address of peer","NOTE: …","Overarching network behaviour performing:","","Error generating network","events generated by the swarm that we wish to relay to the …","internal representation of the network events only used …","Network definition","describe the configuration of the network","Builder for <code>NetworkNodeConfig</code>.","Error type for NetworkNodeConfigBuilder","A handle containing:","Error wrapper type for interacting with swarm handle","this is mostly to estimate how many network connections a …","no known topic matches the hashset of keys","Error building Node config","prune a peer","Put(Key, Value) into DHT relay success back on channel","The receiver was unable to receive a new message","Error receiving message from network","regular node has a limit to the number of connections to …","Error sending request to network","Failure to serialize a message","kill the swarm","subscribe to a topic","Error waiting for connections","Uninitialized field","unsubscribe from a topic","Custom validation error","networking behaviours wrapping libp2p’s behaviours","","","","","","","","","address to bind to","address to bind to","","","the configuration parameters of the netework","defines the swarm and network definition (internal)","","","Deserialize an arbitrary message","purpose: peer routing purpose: storing pub key &lt;-&gt; peer id …","location of the dht cache, default is None","location of the dht cache, default is None","","","","libp2p network errors Contains the <code>NetworkError</code> snafu types","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Bind all interfaces on port <code>port</code> NOTE we may want …","Generate authenticated transport","Given a slice of handles assumed to be larger than 0, …","purpose: broadcasting messages to many peers NOTE …","human readable id","purpose: identifying the addresses from an outside POV","optional identity","optional identity","pub/private key from with peer_id is derived","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the local address we’re listening on","the listener id we are listening on, if it exists","mesh_n from gossipsub","mesh_n_high from gossipsub","mesh_n_low from gossipsub","mesh_outbound_min from gossipsub","parameters for gossipsub mesh network","parameters for gossipsub mesh network","network configuration","Re-exports of the snafu errors that <code>NetworkNodeHandleError</code> …","functionality of a libp2p network node","The type of node (bootstrap etc)","The type of node (bootstrap etc)","the peer id of the networkbehaviour","peer id of network node","network node receiver","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","republication interval in DHT, must be much less than <code>ttl</code>","republication interval in DHT, must be much less than <code>ttl</code>","purpose: directly messaging peer","send an action to the networkbehaviour","","Serialize an arbitrary message","a single node, connects them to each other and waits for …","the state of the replica","the swarm of networkbehaviours","list of addresses to connect to at initialization","list of addresses to connect to at initialization","","","","","","","","","","expiratiry for records in DHT","expiratiry for records in DHT","","","","","","","","","A list of webui listeners that are listening for changes …","msg contents","Key to publish under","Key to search for","Channel to notify caller of result of publishing","Channel to notify caller of value (or failure to find …","peer id","number of retries","number of retries to make","Value to publish under","source of error","source of error","source of error","source of error","source of error","source of error","dummy source","source of error","Wrapper around Kademlia","Wrapper around <code>RequestResponse</code>","Implementation of a codec for sending messages for …","exponential backoff type","Wrapper around gossipsub","State of bootstrapping","Behaviour wrapping libp2p’s kademlia included:","DHT event enum","represents progress through DHT","Sucessfully completed","The query has been started","Only event tracked currently is when we successfully …","Metadata holder for get query","Metadata holder for get query","the maximum number of nodes to query in the DHT at any one …","the number of nodes required to get an answer from in …","Not in progress","The query has not been started","State of the periodic random walk","In progress","State used for random walk and bootstrapping","","Passthru to kademlia Associate address with kademlia peer","Save in case kademlia forgets about bootstrap nodes","Retry timeout","Retry timeout","Exponential retry backoff","Exponential retry backoff","Begin the bootstrap process","client approval to begin bootstrap","bootstrap nodes","State of bootstrapping","","","","","","","","","","","","","","","","","","","a local caching layer for the DHT key value pairs","kademlia cache","","","","","","","","","","handle a DHT event","","","","","","","","","","List of kademlia events","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a value for a key from the DHT. Value …","","","update state based on recv-ed get query","","","Update state based on put query","","in progress queries for nearby peers","List of in-progress get requests","List of in-progress put requests","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kademlia behaviour","the key to look up","the key to put","query a peer (e.g. obtain its address if it exists)","Create a new DHT behaviour","notify client of result","notify client of result","number of replicas required to replicate over","","","the peer id (useful only for debugging right now)","","print out the routing table to stderr","progress through DHT query","progress through DHT query","Publish a key/value to the kv store. Once replicated upon …","Start a query for the closest peers","List of previously failled get requests","List of previously failled put requests","State of last random walk","already received records","replication factor","the number of remaining retries before giving up","State of random walk","State of bootstrap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the value to put","","","","","","","","","","key value cache","Error wrapper type for cache","configuration describing the cache","Builder for <code>Config</code>.","Error type for ConfigBuilder","Failure to deserialize the cache","SNAFU context selector for the <code>CacheError::Deserialization</code> …","Failed to read or write from disk","SNAFU context selector for the <code>CacheError::Disk</code> variant","General cache error","SNAFU context selector for the <code>CacheError::GeneralCache</code> …","Failure to serialize the cache","SNAFU context selector for the <code>CacheError::Serialization</code> …","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>Config</code>.","","","","","","","","","","","","","","","","the cache’s config","Create an empty builder, with all fields set to <code>None</code> or …","","","","","number of inserts since the last save","the expiries for the dht cache, in order (expiry time -&gt; …","time before entry expires","time before entry expires","time before entry expires","filename to save to","filename to save to","filename to save to","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","get value for <code>key</code> if exists","","","","","the cache for records (key -&gt; value)","insert key and value into cache and experies, then save to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","load from file if configured to do so","max differences with disk before write","max differences with disk before write","max differences with disk before write","create a new cache","prune stale entries","save to file if configured to do so","save to disk if differences is over max disk parity delta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","source of error","source of error","source of error","Wrapper metadata around libp2p’s request response usage: …","Lilst of direct message output events","Request to direct message a peert","We received as Direct Request","We received a Direct Response","Add address to request response behaviour","Add a direct request for a given peer","Add a direct response for a channel","backoff since last attempted request","","","","","","","the data","Failed queries to be retried","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","handle a direct message event","","","","","In progress queries","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new behaviour based on request response","","","lsit of out events for parent behaviour","the recv-ers peer id","","Remove address from request response behaviour","The wrapped behaviour","the number of remaining retries before giving up","","","","","","","","","","","","","Codec for direct messages","Protocol for direct messages","Wrapper type describing a serialized direct message","wrapper type describing the response to direct message","Maximum size of a direct message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reads a length-prefixed message from the given socket.","","","Reads a variable-length integer from the <code>socket</code>.","","","","","","","","","","","","","","","","","","","","","","Writes a message to the given socket with a length prefix …","","","Writes a variable-length integer to the <code>socket</code>.","Track (with exponential backoff) sending of some sort of …","factor to back off by","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Whether or not the timeout is expired","Create new backoff","reset backoff","Value to reset to when reset is called","start next timeout result: whether or not we succeeded if …","when we started the timeout","the current timeout amount","","","","","","wrapper metadata around libp2p’s gossip protocol","Output event","We received a gossip","Timeout trackidng when to retry gossip","","","","","","","Attempt to drain the internal gossip list, publishing each …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","handle a gossip event","The gossip behaviour","","","","","The in progress gossip queries","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new gossip behavioru based on gossipsub","","","Output events to parent behavioru","","Publish a given gossip","Subscribe to a given topic","Set of topics we are subscribed to","","","","","","","","Unsubscribe from a given topic","","","Overarching network behaviour performing:","","Add an address","Add a direct request for a given peer","Add a direct response for a channel","","","purpose: peer routing purpose: storing pub key &lt;-&gt; peer id …","","Returns the argument unchanged.","Retrieve a value for a key from the DHT. Value …","purpose: broadcasting messages to many peers NOTE …","","","","","purpose: identifying the addresses from an outside POV","Calls <code>U::from(self)</code>.","Create a new instance of a <code>NetworkDef</code>","","","","Publish a given gossip","Publish a key/value to the kv store. Once replicated upon …","purpose: directly messaging peer","Subscribe to a given topic","","","","Unsubscribe from a given topic","","request was ignored serverside","SNAFU context selector for the <code>DHTError::CancelledRequest</code> …","Error enum for querying store because for some reason, …","Error initiating dial of peer","SNAFU context selector for the <code>NetworkError::DialError</code> …","nodes disagreed on the value","SNAFU context selector for the <code>DHTError::Disagreement</code> …","Get Record Error","wrapper","SNAFU context selector for the <code>DHTError::GetRecord</code> variant","Wrapper Error enum for <code>libp2p::kad::GetRecordError</code>. …","Error building the gossipsub instance","SNAFU context selector for the <code>NetworkError::GossipsubBuild</code>…","Error building the gossipsub configuration","SNAFU context selector for the …","wrapper type for errors generated by the <code>Network</code>","Error when there are no known peers to bootstrap off","SNAFU context selector for the <code>NetworkError::NoKnownPeers</code> …","could not find 2 or more nodes that had the value","SNAFU context selector for the <code>DHTError::NotFound</code> variant","Error publishing a gossipsub message","SNAFU context selector for the <code>NetworkError::PublishError</code> …","Get Record Error","SNAFU context selector for the <code>DHTError::PutRecord</code> variant","Error if one of the channels to or from the swarm is closed","SNAFU context selector for the <code>NetworkError::StreamClosed</code> …","Error during dialing or listening","Error establishing backend connection","SNAFU context selector for the …","SNAFU context selector for the <code>NetworkError::Transport</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","source of error","source of error","source of error","source of error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","The underlying source of the error","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","SNAFU context selector for the …","Wrapped num of connections","Number of connections to a single peer before logging an …","","Network definition","","","","","","","initialize the DHT with known peers add the peers to …","","","configuration for the libp2p network (e.g. how it should …","the configuration parameters of the netework","return hashset of PIDs this node is connected to","","Returns the argument unchanged.","libp2p network handle allows for control over the libp2p …","event handler for client events currectly supported …","event handler for events emited from the swarm","pub/private key from with peer_id is derived","Calls <code>U::from(self)</code>.","the listener id we are listening on, if it exists","","Creates a new <code>Network</code> with the given settings.","Returns number of peers this node is connected to","Get a reference to the network node’s peer id.","peer id of network node","Spawn a task to listen for requests on the returned channel","starts the swarm listening on <code>listen_addr</code> and optionally …","the swarm of networkbehaviours","","","","","replication factor for kademlia","NOTE: …","describe the configuration of the network","Builder for <code>NetworkNodeConfig</code>.","Error type for NetworkNodeConfigBuilder","Uninitialized field","Custom validation error","","","","","","","","","","","address to bind to","address to bind to","address to bind to","Builds a new <code>NetworkNodeConfig</code>.","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","location of the dht cache, default is None","location of the dht cache, default is None","location of the dht cache, default is None","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","optional identity","optional identity","optional identity","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","mesh_n from gossipsub","mesh_n_high from gossipsub","mesh_n_low from gossipsub","mesh_outbound_min from gossipsub","parameters for gossipsub mesh network","parameters for gossipsub mesh network","parameters for gossipsub mesh network","The type of node (bootstrap etc)","The type of node (bootstrap etc)","The type of node (bootstrap etc)","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","replication factor for entries in the DHT default is …","republication interval in DHT, must be much less than <code>ttl</code>","republication interval in DHT, must be much less than <code>ttl</code>","republication interval in DHT, must be much less than <code>ttl</code>","list of addresses to connect to at initialization","list of addresses to connect to at initialization","list of addresses to connect to at initialization","","","","","","","","","","","","","expiratiry for records in DHT","expiratiry for records in DHT","expiratiry for records in DHT","","","","","","","","","The inner <code>NetworkNode</code> has already been killed","SNAFU context selector for the …","Could not connect to the network in time","SNAFU context selector for the …","Error in the kademlia DHT","SNAFU context selector for the …","Failure to deserialize a message","SNAFU context selector for the …","The network node has been killed","SNAFU context selector for the …","Error generating network","A handle containing:","Error wrapper type for interacting with swarm handle","internal network node receiver","SNAFU context selector for the …","no known topic matches the hashset of keys","SNAFU context selector for the …","Error building Node config","SNAFU context selector for the …","The receiver was unable to receive a new message","SNAFU context selector for the …","Error receiving message from network","SNAFU context selector for the …","Error sending request to network","SNAFU context selector for the …","Failure to serialize a message","SNAFU context selector for the …","Error waiting for connections","SNAFU context selector for the …","Tell libp2p about known network nodes","","","Notify the network to begin the bootstrap process","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a reference to the network config","return hashset of PIDs this node is connected to","","Make a direct request to <code>peer_id</code> containing <code>msg</code>","Make a direct request to <code>peer_id</code> containing <code>msg</code> without …","Reply with <code>msg</code> to a request over <code>chan</code>","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Receive a record from the kademlia DHT if it exists. Must …","Get a record from the kademlia DHT with a timeout","Gossip a message to peers","Gossip a message to peers without serializing","","Get a reference to the network node handle’s id.","human readable id","Ignore <code>peers</code> when pruning e.g. maintain their connection","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns <code>true</code> if the network state is killed","kill the event handler for events from the swarm","whether or not the handle has been killed","Get a reference to the network node handle’s listen addr.","the local address we’re listening on","Looks up a node’s <code>PeerId</code> and attempts to validate routing","Look up a peer’s addresses in kademlia NOTE: this should …","Modify the state. This will automatically call …","network configuration","Re-exports of the snafu errors that <code>NetworkNodeHandleError</code> …","constructs a new node listening on <code>known_addr</code>","Notify the webui that either the <code>state</code> or <code>connection_state</code> …","Returns number of peers this node is connected to","Get a reference to the network node handle’s peer id.","the peer id of the networkbehaviour","Print out the routing table used by kademlia NOTE: only …","Forcefully disconnect from a peer","Insert a record into the kademlia DHT","Insert a record into the kademlia DHT with a timeout","Receives a reference of the internal <code>NetworkNodeReceiver</code>, …","network node receiver","the receiver","whether or not the receiver is started","recv a network event","kill switch","Register a webui listener","send an action to the networkbehaviour","Send a client request to the network","Cleanly shuts down a swarm node This is done by sending a …","","Spawn a handler <code>F</code> that will be notified every time a new …","Get a clone of the internal state","the state of the replica","Call <code>wait_timeout_until</code> on the state’s <code>SubscribableMutex</code>","Call <code>wait_timeout_until_with_trigger</code> on the state’s …","Call <code>wait_until</code> on the state’s <code>SubscribableMutex</code>","Subscribe to a topic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe from a topic","","","","","","","","","","","","","","","","","Wait until at least <code>num_peers</code> have connected, or until …","A list of webui listeners that are listening for changes …","source of error","source of error","source of error","source of error","source of error","source of error","dummy source","source of error","","","","","","","Representation of a Multiaddr.","Identifier of a peer of the network.","","","","","","","","","","","","","","","","Create a new, empty multiaddress.","","","Checks whether the given <code>Multiaddr</code> is a suffix of this …","","","","","","","Convert a Multiaddr to a string","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the length of this multiaddress is 0.","Returns the components of this multiaddress.","Return the length in bytes of this multiaddress.","","","","Pops the last <code>Protocol</code> of this multiaddr, or <code>None</code> if the …","Returns &amp;str identifiers for the protocol names themselves.","Adds an already-parsed address component to the end of …","Generates a random peer ID from a cryptographically secure …","Replace a <code>Protocol</code> at some position in this <code>Multiaddr</code>.","","","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","Return a copy of this <code>Multiaddr</code>’s byte representation.","","","","","","","","","","","","","","Like <code>Multiaddr::push</code> but consumes <code>self</code>.","Create a new, empty multiaddress with the given capacity.","Appends the given <code>PeerId</code> if not yet present at the end of …"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,10,0,40,0,10,40,40,18,18,40,16,17,16,17,16,16,16,16,18,16,17,18,16,17,40,16,0,0,0,40,0,0,0,0,0,0,0,0,0,40,40,16,16,40,40,10,40,40,16,16,40,137,16,137,0,10,16,17,18,10,16,17,18,38,136,10,10,131,0,10,10,0,112,38,136,10,10,10,0,10,16,17,18,10,16,17,18,18,18,18,18,10,0,0,0,112,31,112,38,136,131,174,10,16,17,18,31,131,138,138,138,138,38,136,31,0,0,38,136,31,131,31,38,136,38,136,112,31,10,0,0,31,131,38,136,10,10,16,17,18,10,16,17,18,38,136,10,16,17,18,10,16,17,18,31,175,176,177,176,177,175,175,177,176,178,179,180,181,182,183,184,185,0,0,0,0,0,0,0,0,0,47,48,20,0,0,0,0,47,48,0,47,0,49,43,43,186,46,52,53,43,43,43,43,43,186,49,46,47,20,52,53,48,43,186,49,46,47,20,52,53,48,0,43,46,47,20,48,46,47,20,48,49,43,47,20,48,47,47,20,20,48,48,43,46,47,20,52,53,48,43,186,49,46,47,20,52,53,48,43,43,43,43,43,43,43,48,43,43,43,43,186,49,46,47,20,52,53,48,43,52,53,43,43,52,53,52,43,43,43,43,43,52,53,43,43,43,43,43,52,43,52,186,46,46,47,20,48,43,186,49,46,47,20,52,53,48,43,186,49,46,47,20,52,53,48,43,186,49,46,47,20,52,53,48,53,43,186,49,46,47,20,52,53,48,0,0,0,0,0,74,0,74,0,74,0,74,0,78,78,0,74,78,74,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,83,76,74,79,80,81,82,77,76,83,79,80,81,82,77,76,83,83,76,77,76,83,74,83,83,76,77,76,76,77,76,79,80,81,82,74,74,77,78,78,79,80,81,82,74,77,76,78,78,78,83,83,74,78,74,78,83,83,79,80,81,82,74,77,76,78,83,79,80,81,82,83,76,77,76,83,83,83,83,74,79,80,81,82,77,76,83,74,78,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,83,79,80,81,82,74,77,76,78,83,187,188,189,190,0,0,0,19,19,91,91,91,92,92,91,19,92,91,19,92,91,19,92,91,19,91,91,91,91,91,91,92,91,19,91,91,91,91,92,91,91,91,92,92,91,19,92,91,19,92,91,19,92,91,19,0,0,0,0,0,99,99,97,95,93,99,97,95,93,99,97,95,93,99,97,95,93,97,97,95,93,95,95,93,93,99,97,95,93,99,97,95,93,99,97,95,93,0,97,97,0,97,99,97,95,93,99,97,95,93,99,97,95,93,99,97,95,93,99,97,95,93,0,97,97,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,22,108,108,22,108,22,22,22,108,22,22,22,22,108,22,108,108,108,108,108,108,108,108,22,108,108,108,108,108,108,108,108,22,108,22,108,22,108,22,108,108,22,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,114,0,0,30,0,114,0,114,130,0,0,30,0,30,0,0,30,0,114,0,30,0,114,0,30,0,30,30,0,0,30,114,130,30,114,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,115,117,118,119,120,121,30,114,122,123,124,115,117,118,126,119,127,128,120,121,129,114,130,122,123,124,115,117,118,126,119,127,128,120,121,129,114,130,30,114,115,117,118,119,120,121,122,123,124,115,117,118,126,119,30,30,127,128,120,121,129,114,114,130,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,30,114,130,30,114,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,122,123,124,115,117,118,126,119,127,128,120,121,129,115,117,30,114,122,123,124,115,117,118,126,119,127,128,120,121,129,114,130,30,114,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,122,123,124,115,117,118,126,119,30,127,128,120,121,129,114,130,191,192,193,194,195,196,197,198,199,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,131,0,131,131,131,131,0,131,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,0,0,0,0,0,137,137,0,137,38,136,137,138,38,136,137,138,136,38,136,136,38,136,138,38,136,138,136,38,136,138,136,38,136,38,137,137,138,38,136,137,137,137,138,137,136,38,136,137,38,136,137,138,138,138,138,138,136,38,136,136,38,136,136,38,136,136,38,136,136,38,136,38,136,138,137,38,136,137,138,38,136,137,138,136,38,136,38,136,137,138,38,136,137,138,40,0,40,0,40,0,40,0,40,0,40,0,0,0,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,31,40,40,31,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,139,140,141,142,143,40,144,145,146,139,140,147,148,141,149,150,142,151,143,144,145,146,139,140,147,148,141,149,150,142,151,143,31,31,40,31,31,31,139,140,141,142,143,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,31,31,31,40,31,31,31,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,144,145,146,139,140,147,148,141,149,150,142,151,143,31,152,152,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,152,152,152,152,31,31,31,31,40,31,31,31,31,31,31,31,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,31,152,144,145,146,139,140,147,148,141,149,150,142,151,143,40,31,31,178,179,180,181,182,183,184,185,0,0,0,0,0,0,0,0,25,27,25,27,25,27,25,25,27,25,27,25,27,25,27,25,25,25,25,25,27,25,25,27,27,25,25,27,27,25,25,25,25,25,27,27,27,27,25,27,27,25,27,25,27,25,27,25,27,25,25,25,25,27,25,27,25,25,25,27,25,25,27,27,27,25,27,25,27,25,25,25,25,25,27,27,27,25,27,25,27,25,27,25,25,25],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],0,[-1,[[3,[1]]],4],[[1,1],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[1,6],7],[-1,-1,[]],[-1,-2,[],[]],0,[[1,-1],3,8],[-1,-2,[],[]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[10,10],[[-1,-2],2,[],[]],0,0,[[],10],[-1,[[3,[10]]],4],[[[12,[11]]],[[3,[-1,[14,[13]]]]],15],0,0,0,[[10,10],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[10,6],7],[[16,6],7],[[17,6],7],[[18,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,18],[20,18],[-1,-1,[]],[21,18],[22,18],[23,[[3,[10]]]],[24,25],[26,[[3,[[29,[[2,[27,28]]]],30]]]],[[[12,[[32,[[31,[-1]]]]]],33],[[32,[[31,[-1]]]]],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,-1],3,8],[-1,[[3,[[34,[11]],[14,[13]]]]],35],[[36,[34,[[2,[[37,[27]],25]]]],38,39,[32,[[31,[-1]]]]],[[3,[2,40]]],[41,42]],0,0,0,0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],0,0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,27,25],2],[[43,[45,[27,[44,[25]]]]],2],0,0,0,0,[43,2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[46,46],[47,47],[20,20],[48,48],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[49,50],[[43,51],2],[[47,47],5],[[20,20],5],[[48,48],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,[[46,6],7],[[47,6],7],[[20,6],7],[[52,6],7],[[53,6],7],[[48,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[43,[34,[11]],[54,[[34,[11]]]],50,55,11],2],[[43,56,27,25,25],[[3,[[57,[43]],58]]]],[[43,56,27,25,59],[[3,[[57,[43]],58]]]],[[43,60,61,5],2],[[43,56,25,25],[[3,[2,58]]]],[[43,56,[37,[27]],[12,[25]],59],[[3,[[34,[25]],58]]]],[[43,62,61],2],[[48,-1],2,63],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[43,27,[54,[2]]],2],[[[65,[64]],27,50,[37,[66]]],43],0,0,0,[[43,27,56,[67,[43]]],2],[[43,68],2],0,[[43,69],[[72,[[71,[20,[70,[43]]]]]]]],[43,2],0,0,[[43,53],2],[[43,27],2],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,73,[]],[-1,73,[]],[74,[[37,[75]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,[[3,[77,78]]]],[74,[[37,[73]]]],[79,79],[80,80],[81,81],[82,82],[77,77],[76,76],[83,83],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[],76],[[],77],[[],76],[[],83],[74,23],0,0,[[76,36],76],0,0,[[76,[37,[66]]],76],0,0,[[79,6],7],[[80,6],7],[[81,6],7],[[82,6],7],[[74,6],7],[[74,6],7],[[77,6],7],[[78,6],7],[[78,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[66,78],[-1,-1,[]],[84,78],[-1,-1,[]],[[83,[34,[11]]],[[37,[[85,[[34,[11]],[34,[11]]]]]]]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[-1,[],[]],[-1,[],[]],0,[[83,[34,[11]],[34,[11]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[79,74],[80,74],[81,74],[82,74],[83,[[3,[2,74]]]],[[76,90],76],0,0,[77,83],[83,2],[83,[[3,[2,74]]]],[83,2],[74,[[37,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,66,[]],[-1,66,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[91,27,25],2],[[91,92],2],[[91,[94,[93]],[34,[11]]],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[19,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[91,[96,[95,93]]],2],[[91,56,27,25,25],[[3,[[57,[91]],58]]]],[[91,56,27,25,59],[[3,[[57,[91]],58]]]],[[91,56,25,25],[[3,[2,58]]]],[[91,56,[37,[27]],[12,[25]],59],[[3,[[34,[25]],58]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[98,[97]]],91],[[91,27,56,[67,[91]]],2],[[91,68],2],0,0,[[91,69],[[72,[[71,[19,[70,[91]]]]]]]],[[91,27,25],2],0,0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[99,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,99],[97,97],[95,95],[93,93],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],97],[-1,[[3,[97]]],4],[[95,95],5],[[93,93],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[99,6],7],[[97,6],7],[[95,6],7],[[93,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,39],[[100,[[34,[11]]]]],[101,102]],[[97,99,-1],[[104,[[14,[103]]]]],[101,102,88]],[[97,99,-1],[[104,[[14,[103]]]]],[101,102,88]],[-1,[[3,[39,105]]],[101,102]],[[97,-1],3,8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[3,[2,105]]],[106,102],[[107,[[12,[11]]]]]],[[97,99,-1,95],[[104,[[14,[103]]]]],[106,102,88]],[[97,99,-1,93],[[104,[[14,[103]]]]],[106,102,88]],[[-1,39],[[3,[2,105]]],[106,102]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[55,55],[[-1,-2],2,[],[]],[[],55],[[55,55],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[55,6],7],[-1,-1,[]],[[55,-1],2,63],[-1,-2,[],[]],[55,5],[[90,36],55],[55,2],0,[[55,5],2],0,0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],2,[],[]],[108,5],[[22,22],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[22,6],7],[-1,-1,[]],[-1,-1,[]],[[108,109],2],0,[[108,56,27,25,25],[[3,[[57,[108]],58]]]],[[108,56,27,25,59],[[3,[[57,[108]],58]]]],[[108,56,25,25],[[3,[2,58]]]],[[108,56,[37,[27]],[12,[25]],59],[[3,[[34,[25]],58]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[110,108],[[108,27,56,[67,[108]]],2],[[108,68],2],0,[[108,69],[[72,[[71,[22,[70,[108]]]]]]]],[[108,111,[34,[11]]],2],[[108,23],2],0,[-1,-2,[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[[108,23],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[112,27,25],2],[[112,27,[34,[11]],11],2],[[112,[94,[93]],[34,[11]]],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[[112,6],7],[-1,-1,[]],[[112,[34,[11]],[54,[[34,[11]]]],50,11],2],0,[[112,56,27,25,25],[[3,[[57,[112]],58]]]],[[112,56,27,25,59],[[3,[[57,[112]],58]]]],[[112,56,25,25],[[3,[2,58]]]],[[112,56,[37,[27]],[12,[25]],59],[[3,[[34,[25]],58]]]],0,[-1,-2,[],[]],[[108,43,113,91],112],[[112,27,56,[67,[112]]],2],[[112,68],2],[[112,69],[[72,[[71,[[70,[112]]]]]]]],[[112,111,[34,[11]]],2],[[112,53],2],0,[[112,23],2],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[[112,23],2],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,73,[]],[-1,73,[]],[-1,73,[]],[30,[[37,[75]]]],[114,[[37,[75]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[115,[-1]]],30,[[116,[66]]]],[[[117,[-1]]],30,[[116,[66]]]],[118,30],[119,30],[120,114],[121,114],[30,[[37,[73]]]],[114,[[37,[73]]]],[122,122],[123,123],[124,124],[[[115,[-1]]],[[115,[-1]]],125],[[[117,[-1]]],[[117,[-1]]],125],[118,118],[126,126],[119,119],[127,127],[128,128],[120,120],[121,121],[129,129],[114,114],[130,130],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[30,23],[114,23],[[[115,[-1]]],[[3,[-2,30]]],[[116,[66]]],[]],[[[117,[-1]]],[[3,[-2,30]]],[[116,[66]]],[]],[118,[[3,[-1,30]]],[]],[119,[[3,[-1,30]]],[]],[120,[[3,[-1,114]]],[]],[121,[[3,[-1,114]]],[]],[[122,6],7],[[123,6],7],[[124,6],7],[[[115,[-1]],6],7,41],[[[117,[-1]],6],7,41],[[118,6],7],[[126,6],7],[[119,6],7],[[30,6],7],[[30,6],7],[[127,6],7],[[128,6],7],[[120,6],7],[[121,6],7],[[129,6],7],[[114,6],7],[[114,6],7],[[130,6],7],[[130,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[-1,[],[]],[-1,[],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[122,30],[123,30],[124,30],[[[115,[-1]]],30,[[116,[66]]]],[[[117,[-1]]],30,[[116,[66]]]],[118,30],[126,30],[119,30],[127,114],[128,114],[120,114],[121,114],[129,114],0,0,[30,[[37,[73]]]],[114,[[37,[73]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,66,[]],[-1,66,[]],[-1,66,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[131,[12,[[2,[[37,[27]],25]]]]],2],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[131,[[44,[27]]]],[[131,6],7],[-1,-1,[]],0,[[131,[3,[16,132]]],[[3,[5,30]]]],[[131,[133,[18]],[134,[17]]],[[3,[2,30]]]],0,[-1,-2,[],[]],0,0,[38,[[3,[131,30]]]],[131,39],[131,27],0,[131,[[3,[[2,[[134,[16]],[135,[17]]]],30]]]],[[131,25],[[3,[25,30]]]],0,[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[-1,73,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,[37,[25]]],136],0,0,[136,[[3,[38,137]]]],[38,38],[136,136],[138,138],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],136],[[],38],[[],136],[[],138],[[136,[37,[66]]],136],0,0,[[38,6],7],[[137,6],7],[[137,6],7],[[138,6],7],[-1,-1,[]],[-1,-1,[]],[66,137],[-1,-1,[]],[84,137],[-1,-1,[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[136,-1],136,[[116,[26]]]],0,0,[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[136,[37,[138]]],136],0,0,[[136,10],136],0,0,[[136,-1],136,[[116,[50]]]],0,0,[[136,[37,[36]]],136],0,0,[[136,[44,[[2,[[37,[27]],25]]]]],136],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,66,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[[136,[37,[36]]],136],0,0,[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[31,[-1]],[34,[[2,[[37,[27]],25]]]]],[[3,[2,40]]],[]],[-1,73,[]],[40,[[37,[75]]]],[[[31,[-1]]],[[3,[2,40]]],[42,41]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,40],[140,40],[141,40],[142,40],[143,40],[40,[[37,[73]]]],[144,144],[145,145],[146,146],[139,139],[140,140],[147,147],[148,148],[141,141],[149,149],[150,150],[142,142],[151,151],[143,143],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[31,[-1]]],38,[]],[[[31,[-1]]],[[3,[[44,[27]],40]]],[]],[40,23],[[[31,[-1]],27,-2],[[3,[2,40]]],[],35],[[[31,[-1]],27,[34,[11]]],[[3,[2,40]]],[]],[[[31,[-1]],[94,[93]],-2],[[3,[2,40]]],[],35],[139,[[3,[-1,40]]],[]],[140,[[3,[-1,40]]],[]],[141,[[3,[-1,40]]],[]],[142,[[3,[-1,40]]],[]],[143,[[3,[-1,40]]],[]],[[[31,[-1]],6],7,41],[[152,6],7],[[144,6],7],[[145,6],7],[[146,6],7],[[139,6],7],[[140,6],7],[[147,6],7],[[148,6],7],[[141,6],7],[[149,6],7],[[150,6],7],[[142,6],7],[[151,6],7],[[143,6],7],[[40,6],7],[[40,6],7],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[31,[-1]],-2,11],[[3,[-3,40]]],[],35,15],[[[31,[-1]],-2,36],[[3,[-3,40]]],[],35,15],[[[31,[-1]],66,-2],[[3,[2,40]]],[],35],[[[31,[-1]],66,[34,[11]]],[[3,[2,40]]],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[[31,[-1]]],39,[]],0,[[[31,[-1]],[34,[27]]],[[3,[2,40]]],[]],[-1,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[144,40],[145,40],[146,40],[139,40],[140,40],[147,40],[148,40],[141,40],[149,40],[150,40],[142,40],[151,40],[143,40],[[[31,[-1]]],5,[]],0,0,[[[31,[-1]]],25,[42,41]],0,[[[31,[-1]],-2,36],[[3,[27,40]]],[],[15,35]],[[[31,[-1]],27],[[3,[2,40]]],[]],[[[31,[-1]],-2],2,[],153],0,0,[[38,39],[[3,[[31,[-1]],40]]],[42,41]],[[[31,[-1]]],2,[]],[[[31,[-1]]],[[3,[39,40]]],[]],[[[31,[-1]]],27,[]],0,[[[31,[-1]]],[[3,[2,40]]],[]],[[[31,[-1]],27],[[3,[2,40]]],[]],[[[31,[-1]],-2,-3],[[3,[2,40]]],[],35,35],[[[31,[-1]],-2,-3,36],[[3,[2,40]]],[],35,35],[[[31,[-1]]],152,[42,41]],0,0,0,[152,[[3,[17,40]]]],0,[[[31,[-1]]],[[154,[2]]],[]],0,[[[31,[-1]],16],[[3,[2,40]]],[]],[[[31,[-1]]],[[3,[2,40]]],[42,41]],[40,[[37,[73]]]],[[[32,[[31,[-1]]]],-2],[[0,[103]]],[88,42,41],[155,89,88]],[[[31,[-1]]],-1,125],0,[[[31,[-1]],36,-2],[[3,[2,40]]],[],153],[[[31,[-1]],36,-2],[[157,[[156,[[0,[103]]]]]]],[],153],[[[31,[-1]],-2],[[3,[2,40]]],[],153],[[[31,[-1]],66],[[3,[2,40]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,66,[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[-1,9,[]],[[[31,[-1]],66],[[3,[2,40]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[31,[-1]],39,39,36],[[3,[2,40]]],[42,41,42,41]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,[[12,[11]]]],[27,158],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[25,25],[27,27],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[25,25],159],[[27,27],159],[-1,[[3,[25]]],4],[-1,[[3,[27]]],4],[[],25],[-1,-2,[],[[161,[160]]]],[-1,-2,[],[[161,[160]]]],[[25,25],5],[[25,25],5],[[27,27],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[25,6],[[3,[2,162]]]],[[25,6],[[3,[2,162]]]],[[27,6],[[3,[2,162]]]],[[27,6],[[3,[2,162]]]],[-1,-1,[]],[163,25],[164,25],[165,25],[166,25],[167,27],[167,27],[-1,-1,[]],[[[12,[11]]],[[3,[27,168]]]],[-1,25,169],[158,[[3,[27,158]]]],[167,27],[23,[[3,[25,170]]]],[23,[[3,[27]]]],[[25,-1],2,63],[[27,-1],2,63],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[[-1,-2],[[86,[-2,-3]]],[],[87,88,89],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,171],[25,5],[25,171],[25,39],0,[[25,25],[[37,[159]]]],[[27,27],[[37,[159]]]],[25,[[37,[166]]]],[25,172],[[25,166],2],[[],27],[[25,39,-1],[[37,[25]]],173],[[25,-1],3,8],[[27,-1],3,8],[27,66],[27,[[34,[11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,66,[]],[-1,66,[]],[25,[[34,[11]]]],[-1,[[3,[-2]]],[],[]],[23,[[3,[25,170]]]],[66,[[3,[25,170]]]],[[[34,[11]]],[[3,[25,170]]]],[158,[[3,[27]]]],[[[34,[11]]],[[3,[27]]]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,[[3,[-2]]],[],[]],[-1,9,[]],[-1,9,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,166],25],[39,25],[[25,27],[[3,[25,25]]]]],"c":[],"p":[[3,"Message",3],[15,"tuple"],[4,"Result",1574],[8,"Deserializer",1575],[15,"bool"],[3,"Formatter",1576],[6,"Result",1576],[8,"Serializer",1577],[3,"TypeId",1578],[4,"NetworkNodeType",24],[15,"u8"],[15,"slice"],[4,"ErrorKind",1579],[3,"Box",1580],[8,"Deserialize",1575],[4,"ClientRequest",24],[4,"NetworkEvent",24],[4,"NetworkEventInternal",24],[4,"DMEvent",536],[4,"DHTEvent",203],[4,"Event",1581],[4,"GossipEvent",684],[15,"str"],[15,"u16"],[3,"Multiaddr",1486],[3,"Keypair",1582],[3,"PeerId",1486],[3,"StreamMuxerBox",1583],[3,"Boxed",1584],[4,"NetworkError",759],[3,"NetworkNodeHandle",1175],[3,"Arc",1585],[8,"RngCore",1586],[3,"Vec",1587],[8,"Serialize",1577],[3,"Duration",1588],[4,"Option",1589],[3,"NetworkNodeConfig",1080],[15,"usize"],[4,"NetworkNodeHandleError",1175],[8,"Debug",1576],[8,"Default",1590],[3,"DHTBehaviour",203],[3,"HashSet",1591],[3,"HashMap",1592],[3,"Bootstrap",203],[4,"State",203],[4,"DHTProgress",203],[3,"MAX_DHT_QUERY_SIZE",203],[3,"NonZeroUsize",1593],[4,"Event",1594],[3,"KadGetQuery",203],[3,"KadPutQuery",203],[3,"Sender",1595],[3,"ExponentialBackoff",658],[3,"ConnectionId",1596],[6,"THandler",1597],[3,"ConnectionDenied",1597],[4,"Endpoint",1598],[6,"GetRecordResult",1594],[3,"QueryId",1599],[6,"PutRecordResult",1594],[8,"Hasher",1600],[3,"MemoryStore",1601],[3,"Behaviour",1594],[3,"String",1602],[6,"THandlerOutEvent",1597],[4,"FromSwarm",1603],[3,"Context",1604],[6,"THandlerInEvent",1597],[4,"ToSwarm",1603],[4,"Poll",1605],[8,"Error",1606],[4,"CacheError",371],[3,"Backtrace",1607],[3,"ConfigBuilder",371],[3,"Config",371],[4,"ConfigBuilderError",371],[3,"DiskSnafu",371],[3,"SerializationSnafu",371],[3,"DeserializationSnafu",371],[3,"GeneralCacheSnafu",371],[3,"Cache",371],[3,"UninitializedFieldError",1608],[3,"Ref",1609],[3,"IndentedSection",1610],[8,"Display",1576],[8,"Send",1611],[8,"Sync",1611],[15,"u32"],[3,"DMBehaviour",536],[3,"DMRequest",536],[3,"DirectMessageResponse",587],[3,"ResponseChannel",1612],[3,"DirectMessageRequest",587],[4,"Event",1612],[3,"DirectMessageCodec",587],[3,"Behaviour",1612],[3,"DirectMessageProtocol",587],[6,"Result",1613],[8,"AsyncRead",1614],[8,"Unpin",1611],[8,"Future",1615],[3,"Pin",1616],[3,"Error",1613],[8,"AsyncWrite",1614],[8,"AsRef",1617],[3,"GossipBehaviour",684],[4,"Event",1618],[3,"Behaviour",1618],[6,"IdentTopic",1619],[3,"NetworkDef",728],[3,"Behaviour",1581],[4,"DHTError",759],[3,"GossipsubConfigSnafu",759],[8,"Into",1617],[3,"GossipsubBuildSnafu",759],[3,"StreamClosedSnafu",759],[3,"NoKnownPeersSnafu",759],[3,"DisagreementSnafu",759],[3,"NotFoundSnafu",759],[3,"DialSnafu",759],[3,"TransportSnafu",759],[3,"TransportLaunchSnafu",759],[8,"Clone",1620],[3,"PublishSnafu",759],[3,"GetRecordSnafu",759],[3,"PutRecordSnafu",759],[3,"CancelledRequestSnafu",759],[4,"GetRecordWrapperError",759],[3,"NetworkNode",1044],[3,"RecvError",1621],[4,"SwarmEvent",1597],[3,"UnboundedSender",1622],[3,"UnboundedReceiver",1622],[3,"NetworkNodeConfigBuilder",1080],[4,"NetworkNodeConfigBuilderError",1080],[3,"MeshParams",1080],[3,"SendSnafu",1175],[3,"RecvSnafu",1175],[3,"ConnectTimeoutSnafu",1175],[3,"KilledSnafu",1175],[3,"NoSuchTopicSnafu",1175],[3,"NetworkSnafu",1175],[3,"SerializationSnafu",1175],[3,"DeserializationSnafu",1175],[3,"NodeConfigSnafu",1175],[3,"TimeoutSnafu",1175],[3,"DHTSnafu",1175],[3,"CantKillTwiceSnafu",1175],[3,"ReceiverEndedSnafu",1175],[3,"NetworkNodeReceiver",1175],[8,"FnMut",1623],[3,"Receiver",1624],[8,"Fn",1623],[3,"FuturesOrdered",1625],[3,"Timeout",1626],[3,"Multihash",1627],[4,"Ordering",1628],[15,"char"],[8,"FromIterator",1629],[3,"Error",1576],[4,"IpAddr",1630],[3,"Ipv6Addr",1630],[3,"Ipv4Addr",1630],[4,"Protocol",1631],[3,"PublicKey",1582],[4,"ParseError",1632],[8,"IntoIterator",1629],[4,"Error",1633],[3,"Iter",1634],[3,"ProtoStackIter",1634],[8,"FnOnce",1623],[6,"BoxedTransport",24],[13,"DirectRequest",181],[13,"PutDHT",181],[13,"GetDHT",181],[13,"NetworkError",1472],[13,"SerializationError",1472],[13,"DeserializationError",1472],[13,"NodeConfigError",1472],[13,"TimeoutError",1472],[13,"DHTError",1472],[13,"CantKillTwice",1472],[13,"ReceiverEnded",1472],[3,"RandomWalk",203],[13,"Disk",532],[13,"Serialization",532],[13,"Deserialization",532],[13,"GeneralCache",532],[13,"CancelledRequest",1028],[13,"GetRecord",1028],[13,"PutRecord",1028],[13,"GetRecordError",1031],[13,"GossipsubConfig",1032],[13,"GossipsubBuild",1032],[13,"DialError",1032],[13,"Transport",1032],[13,"TransportLaunch",1032],[13,"PublishError",1032]],"b":[[112,"impl-From%3CDMEvent%3E-for-NetworkEventInternal"],[113,"impl-From%3CDHTEvent%3E-for-NetworkEventInternal"],[115,"impl-From%3CEvent%3E-for-NetworkEventInternal"],[116,"impl-From%3CGossipEvent%3E-for-NetworkEventInternal"],[442,"impl-Display-for-CacheError"],[443,"impl-Debug-for-CacheError"],[445,"impl-Display-for-ConfigBuilderError"],[446,"impl-Debug-for-ConfigBuilderError"],[454,"impl-From%3CString%3E-for-ConfigBuilderError"],[456,"impl-From%3CUninitializedFieldError%3E-for-ConfigBuilderError"],[880,"impl-Debug-for-NetworkError"],[881,"impl-Display-for-NetworkError"],[887,"impl-Display-for-DHTError"],[888,"impl-Debug-for-DHTError"],[889,"impl-Debug-for-GetRecordWrapperError"],[890,"impl-Display-for-GetRecordWrapperError"],[1115,"impl-Debug-for-NetworkNodeConfigBuilderError"],[1116,"impl-Display-for-NetworkNodeConfigBuilderError"],[1120,"impl-From%3CString%3E-for-NetworkNodeConfigBuilderError"],[1122,"impl-From%3CUninitializedFieldError%3E-for-NetworkNodeConfigBuilderError"],[1298,"impl-Display-for-NetworkNodeHandleError"],[1299,"impl-Debug-for-NetworkNodeHandleError"],[1513,"impl-Display-for-Multiaddr"],[1514,"impl-Debug-for-Multiaddr"],[1515,"impl-Display-for-PeerId"],[1516,"impl-Debug-for-PeerId"],[1518,"impl-From%3CIpAddr%3E-for-Multiaddr"],[1519,"impl-From%3CIpv6Addr%3E-for-Multiaddr"],[1520,"impl-From%3CIpv4Addr%3E-for-Multiaddr"],[1521,"impl-From%3CProtocol%3C\'a%3E%3E-for-Multiaddr"],[1522,"impl-From%3CPublicKey%3E-for-PeerId"],[1523,"impl-From%3C%26PublicKey%3E-for-PeerId"],[1559,"impl-TryFrom%3C%26str%3E-for-Multiaddr"],[1560,"impl-TryFrom%3CString%3E-for-Multiaddr"],[1561,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-Multiaddr"],[1562,"impl-TryFrom%3CMultihash%3C64%3E%3E-for-PeerId"],[1563,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-PeerId"]]},\
"multi_validator_combined":{"doc":"A multi-validator using both the web server libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"multi_validator_combined"],[3,"multi_validator_combined::infra"],[175,"multi_validator_combined::types"],[230,"dyn_clone::sealed"],[231,"dyn_clone::sealed"],[232,"clap_builder::builder::command"],[233,"core::fmt"],[234,"core::fmt"],[235,"clap_builder"],[236,"core::result"],[237,"hotshot_orchestrator::config"],[238,"hotshot_types::traits::node_implementation"],[239,"hotshot::traits::networking::web_server_network"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::traits::networking::combined_network"],[242,"clap_builder::util::id"],[243,"core::option"],[244,"core::future::future"],[245,"alloc::boxed"],[246,"core::pin"],[247,"core::marker"],[248,"alloc::sync"],[249,"alloc::rc"],[250,"libp2p_identity::keypair"],[251,"hotshot_types::message"],[252,"hotshot::traits::networking::libp2p_network"],[253,"hotshot::types::handle"],[254,"hotshot_testing::block_types"],[255,"alloc::vec"],[256,"core::any"],[257,"core::hash"],[258,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,53,54,55,56,53,54,55,56,53,54,55,56,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",230],[3,"Private",230],[8,"Any",231],[3,"Command",232],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",233],[6,"Result",233],[3,"ArgMatches",234],[6,"Error",235],[4,"Result",236],[3,"NetworkConfig",237],[3,"WebServerDARun",3],[8,"NodeType",238],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",239],[3,"Libp2pCommChannel",240],[3,"CombinedCommChannel",241],[3,"Id",242],[4,"Option",243],[8,"Future",244],[3,"Box",245],[3,"Pin",246],[8,"Sync",247],[3,"Arc",248],[3,"Rc",249],[15,"u8"],[15,"array"],[3,"Keypair",250],[3,"Message",251],[3,"Libp2pNetwork",240],[15,"str"],[3,"ValidatorArgs",252],[3,"SystemContextHandle",253],[3,"TestTransaction",254],[3,"Vec",255],[3,"TypeId",231],[3,"WebServerNetwork",239],[3,"NodeImpl",175],[8,"Deserializer",256],[15,"bool"],[8,"Hash",257],[8,"Sized",247],[8,"BuildHasher",257],[8,"Hasher",257],[8,"Serializer",258],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]],"b":[]},\
"multi_validator_libp2p":{"doc":"A multi-validator using libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"multi_validator_libp2p"],[3,"multi_validator_libp2p::infra"],[175,"multi_validator_libp2p::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"multi_validator_webserver":{"doc":"A multi-validator using the web server","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"multi_validator_webserver"],[3,"multi_validator_webserver::infra"],[175,"multi_validator_webserver::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"multi_webserver":{"doc":"A multi web server","t":"DLLLLLLLLMMLLLLLLLLLLLLLFLLLLLL","n":["MultiWebServerArgs","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","consensus_url","da_url","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"multi_webserver"],[31,"core::any"],[32,"clap_builder::builder::command"],[33,"core::fmt"],[34,"core::fmt"],[35,"clap_builder"],[36,"core::result"],[37,"clap_builder::util::id"],[38,"core::option"],[39,"alloc::boxed"],[40,"alloc::sync"],[41,"alloc::rc"],[42,"core::any"]],"d":["Arguments to run multiple web servers","","","","","","","","","consensus url","data availability server url","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5],"f":[0,[-1,1,[]],[-1,1,[]],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],0,0,[3,-1,[]],[3,-1,[]],[3,4],[[5,6],7],[-1,-1,[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[[],[[12,[11]]]],[[],3],[-1,-2,[],[]],[[[13,[-1]]],[[13,[1]]],[]],[[[14,[-1]]],[[14,[1]]],[]],[[[15,[-1]]],[[15,[1]]],[]],[[],4],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[[5,8],[[10,[4,9]]]],[[5,8],[[10,[4,9]]]],[-1,-2,[],[]]],"c":[],"p":[[8,"Any",31],[3,"Command",32],[15,"usize"],[15,"tuple"],[3,"MultiWebServerArgs",0],[3,"Formatter",33],[6,"Result",33],[3,"ArgMatches",34],[6,"Error",35],[4,"Result",36],[3,"Id",37],[4,"Option",38],[3,"Box",39],[3,"Arc",40],[3,"Rc",41],[3,"TypeId",31]],"b":[]},\
"orchestrator_combined":{"doc":"Orchestrator using the web server","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"orchestrator_combined"],[3,"orchestrator_combined::infra"],[175,"orchestrator_combined::types"],[230,"dyn_clone::sealed"],[231,"dyn_clone::sealed"],[232,"clap_builder::builder::command"],[233,"core::fmt"],[234,"core::fmt"],[235,"clap_builder"],[236,"core::result"],[237,"hotshot_orchestrator::config"],[238,"hotshot_types::traits::node_implementation"],[239,"hotshot::traits::networking::web_server_network"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::traits::networking::combined_network"],[242,"clap_builder::util::id"],[243,"core::option"],[244,"core::future::future"],[245,"alloc::boxed"],[246,"core::pin"],[247,"core::marker"],[248,"alloc::sync"],[249,"alloc::rc"],[250,"libp2p_identity::keypair"],[251,"hotshot_types::message"],[252,"hotshot::traits::networking::libp2p_network"],[253,"hotshot::types::handle"],[254,"hotshot_testing::block_types"],[255,"alloc::vec"],[256,"core::any"],[257,"core::hash"],[258,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,53,54,55,56,53,54,55,56,53,54,55,56,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",230],[3,"Private",230],[8,"Any",231],[3,"Command",232],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",233],[6,"Result",233],[3,"ArgMatches",234],[6,"Error",235],[4,"Result",236],[3,"NetworkConfig",237],[3,"WebServerDARun",3],[8,"NodeType",238],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",239],[3,"Libp2pCommChannel",240],[3,"CombinedCommChannel",241],[3,"Id",242],[4,"Option",243],[8,"Future",244],[3,"Box",245],[3,"Pin",246],[8,"Sync",247],[3,"Arc",248],[3,"Rc",249],[15,"u8"],[15,"array"],[3,"Keypair",250],[3,"Message",251],[3,"Libp2pNetwork",240],[15,"str"],[3,"ValidatorArgs",252],[3,"SystemContextHandle",253],[3,"TestTransaction",254],[3,"Vec",255],[3,"TypeId",231],[3,"WebServerNetwork",239],[3,"NodeImpl",175],[8,"Deserializer",256],[15,"bool"],[8,"Hash",257],[8,"Sized",247],[8,"BuildHasher",257],[8,"Hasher",257],[8,"Serializer",258],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]],"b":[]},\
"orchestrator_libp2p":{"doc":"An orchestrator using libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"orchestrator_libp2p"],[3,"orchestrator_libp2p::infra"],[175,"orchestrator_libp2p::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"orchestrator_webserver":{"doc":"A orchestrator using the web server","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"orchestrator_webserver"],[3,"orchestrator_webserver::infra"],[175,"orchestrator_webserver::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"validator_combined":{"doc":"A validator using both the web server and libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","message_cache","message_cache","message_cache","message_cache","networks","networks","networks","networks","primary_down","primary_down","primary_down","primary_down","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"validator_combined"],[3,"validator_combined::infra"],[175,"validator_combined::types"],[230,"dyn_clone::sealed"],[231,"dyn_clone::sealed"],[232,"clap_builder::builder::command"],[233,"core::fmt"],[234,"core::fmt"],[235,"clap_builder"],[236,"core::result"],[237,"hotshot_orchestrator::config"],[238,"hotshot_types::traits::node_implementation"],[239,"hotshot::traits::networking::web_server_network"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::traits::networking::combined_network"],[242,"clap_builder::util::id"],[243,"core::option"],[244,"core::future::future"],[245,"alloc::boxed"],[246,"core::pin"],[247,"core::marker"],[248,"alloc::sync"],[249,"alloc::rc"],[250,"libp2p_identity::keypair"],[251,"hotshot_types::message"],[252,"hotshot::traits::networking::libp2p_network"],[253,"hotshot::types::handle"],[254,"hotshot_testing::block_types"],[255,"alloc::vec"],[256,"core::any"],[257,"core::hash"],[258,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,53,54,55,56,53,54,55,56,53,54,55,56,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",230],[3,"Private",230],[8,"Any",231],[3,"Command",232],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",233],[6,"Result",233],[3,"ArgMatches",234],[6,"Error",235],[4,"Result",236],[3,"NetworkConfig",237],[3,"WebServerDARun",3],[8,"NodeType",238],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",239],[3,"Libp2pCommChannel",240],[3,"CombinedCommChannel",241],[3,"Id",242],[4,"Option",243],[8,"Future",244],[3,"Box",245],[3,"Pin",246],[8,"Sync",247],[3,"Arc",248],[3,"Rc",249],[15,"u8"],[15,"array"],[3,"Keypair",250],[3,"Message",251],[3,"Libp2pNetwork",240],[15,"str"],[3,"ValidatorArgs",252],[3,"SystemContextHandle",253],[3,"TestTransaction",254],[3,"Vec",255],[3,"TypeId",231],[3,"WebServerNetwork",239],[3,"NodeImpl",175],[8,"Deserializer",256],[15,"bool"],[8,"Hash",257],[8,"Sized",247],[8,"BuildHasher",257],[8,"Hasher",257],[8,"Serializer",258],[8,"RunDA",3],[6,"ThisRun",175],[6,"DANetwork",175],[6,"VIDNetwork",175],[6,"QuorumNetwork",175],[6,"ViewSyncNetwork",175]],"b":[]},\
"validator_libp2p":{"doc":"A validator using libp2p","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"validator_libp2p"],[3,"validator_libp2p::infra"],[175,"validator_libp2p::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"validator_webserver":{"doc":"A validator using the web server","t":"AFADDDDIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLKLLLKLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLFFFFMMMLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLFGDGGGGLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLMML","n":["infra","main","types","CombinedDARun","ConfigArgs","Libp2pDARun","OrchestratorArgs","RunDA","WebServerDARun","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_num_tx_per_round","clone","clone","clone_into","clone_into","command","command","command_for_update","command_for_update","config","config","config","config_file","config_file","da_channel","da_channel","da_channel","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_config","get_config","get_config","get_config","get_da_channel","get_da_channel","get_da_channel","get_da_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_quorum_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_vid_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","get_view_sync_channel","group_id","group_id","init","init","init","init","init","initialize_networking","initialize_networking","initialize_networking","initialize_networking","initialize_state_and_hotshot","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","libp2p_generate_indexed_identity","libp2p_network_from_config","load_config_from_file","main_entry_point","quorum_channel","quorum_channel","quorum_channel","run_hotshot","run_orchestrator","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","url","vid_channel","vid_channel","vid_channel","view_sync_channel","view_sync_channel","view_sync_channel","vzip","vzip","vzip","vzip","vzip","webserver_network_from_config","DANetwork","NodeImpl","QuorumNetwork","ThisRun","VIDNetwork","ViewSyncNetwork","__clone_box","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","config","da_channel","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","get_hash","hash","init","into","into_any","into_any_arc","into_any_rc","quorum_channel","serialize","to_owned","try_from","try_into","type_id","vid_channel","view_sync_channel","vzip"],"q":[[0,"validator_webserver"],[3,"validator_webserver::infra"],[175,"validator_webserver::types"],[218,"dyn_clone::sealed"],[219,"dyn_clone::sealed"],[220,"clap_builder::builder::command"],[221,"core::fmt"],[222,"core::fmt"],[223,"clap_builder"],[224,"core::result"],[225,"hotshot_orchestrator::config"],[226,"hotshot_types::traits::node_implementation"],[227,"hotshot::traits::networking::web_server_network"],[228,"hotshot::traits::networking::libp2p_network"],[229,"hotshot::traits::networking::combined_network"],[230,"clap_builder::util::id"],[231,"core::option"],[232,"core::future::future"],[233,"alloc::boxed"],[234,"core::pin"],[235,"core::marker"],[236,"alloc::sync"],[237,"alloc::rc"],[238,"libp2p_identity::keypair"],[239,"hotshot_types::message"],[240,"hotshot::traits::networking::libp2p_network"],[241,"hotshot::types::handle"],[242,"hotshot_testing::block_types"],[243,"alloc::vec"],[244,"core::any"],[245,"core::hash"],[246,"core::marker"]],"d":["general infra used for this example","","types used for this example","Represents a combined-network-based run","The configuration file to be used for this run","Represents a libp2p-based run","Arguments passed to the orchestrator","Defines the behavior of a “run” of the network with a …","Represents a web server-based run","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to calculate the nuymber of transactions …","","","","","","","","","the network configuration","the network configuration","the network configuration","The configuration file to be used for this run","The configuration file to be used for this run","data availability channel","data availability channel","data availability channel","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the config for this run","","","","Returns the da network for this run","","","","Returns the quorum network for this run","","","","Returns VID network for this run","","","","Returns view sync network for this run","","","","","","","","","","","Initializes networking, returns self","","","","Initializes the genesis state and HotShot instance; does …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","generate a libp2p identity based on a seed and idx","Create a libp2p network from a config file and public key","Reads a network configuration from a given filepath","Main entry point for validators","quorum channel","quorum channel","quorum channel","Starts HotShot consensus, returns when consensus has …","Runs the orchestrator","","","","","","","","","","","","","","","","","","","","","","The url the orchestrator runs on; this should be in the …","vid channel","vid channel","vid channel","view sync channel","view sync channel","view sync channel","","","","","","create a web server network from a config file + public key","convenience type alias","dummy struct so we can choose types","convenience type alias","convenience type alias","convenience type alias","convenience type alias","","","","","","","","","the network configuration","data availability channel","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","quorum channel","","","","","","vid channel","view sync channel",""],"i":[0,0,0,0,0,0,0,0,0,8,8,9,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,16,18,19,8,9,16,18,19,8,9,0,8,9,8,9,8,9,8,9,16,18,19,8,9,16,18,19,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,16,18,19,8,9,8,9,8,9,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,51,16,18,19,51,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,0,0,0,0,16,18,19,51,0,8,9,16,18,19,8,9,16,18,19,8,9,16,18,19,8,9,8,9,8,9,8,16,18,19,16,18,19,16,18,19,8,9,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,52,52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,52,43,43,43,43,43,52,52,43],"f":[0,[[],1],0,0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[[-1,3],1,[]],[[-1,2],1,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[5,5],[5,5],[5,5],[5,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,7],7],[8,8],[9,9],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,1],[7,1],[7,1],[7,1],[7,1],[[8,10],11],[[9,10],11],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[12,[[14,[8,13]]]],[12,[[14,[9,13]]]],[-1,15,[]],[[[16,[-1]]],15,17],[[[18,[-1]]],15,17],[[[19,[-1]]],15,17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[-1,-2,[],[]],[[[16,[-1]]],[[20,[-1]]],17],[[[18,[-1]]],[[21,[-1]]],17],[[[19,[-1]]],[[22,[-1]]],17],[[],[[24,[23]]]],[[],[[24,[23]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[15,[[27,[[26,[25]]]]]],[-1,[[27,[[26,[25]]]]],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],[[[32,[31]],6],33],[15,[[35,[[34,[-1]]]]],17],[36,15],[37,1],0,0,0,[[-1,[38,[-2,-3]],[40,[39]],6],[[27,[[26,[25]]]]],28,[],[]],[8,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],[[8,12],[[14,[1,13]]]],[[9,12],[[14,[1,13]]]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,[[42,[-1]]],17],0,0,0,0,0,0,[[-1,2],1,[]],[[-1,3],1,[]],[-1,4,[]],[-1,4,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],1,[],[]],0,0,[7,-1,[]],[7,-1,[]],[-1,[[14,[43]]],44],[7,1],[[43,43],45],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[-1,-2],45,[],[]],[[43,10],11],[-1,-1,[]],[[-1,-2],6,[46,47],48],[[43,-1],1,49],[[],7],[-1,-2,[],[]],[[[26,[-1]]],[[26,[4]]],[]],[[[29,[-1]]],[[29,[4]]],[]],[[[30,[-1]]],[[30,[4]]],[]],0,[[43,-1],14,50],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,41,[]],0,0,[-1,-2,[],[]]],"c":[],"p":[[15,"tuple"],[3,"Private",218],[3,"Private",218],[8,"Any",219],[3,"Command",220],[15,"u64"],[15,"usize"],[3,"OrchestratorArgs",3],[3,"ConfigArgs",3],[3,"Formatter",221],[6,"Result",221],[3,"ArgMatches",222],[6,"Error",223],[4,"Result",224],[3,"NetworkConfig",225],[3,"WebServerDARun",3],[8,"NodeType",226],[3,"Libp2pDARun",3],[3,"CombinedDARun",3],[3,"WebCommChannel",227],[3,"Libp2pCommChannel",228],[3,"CombinedCommChannel",229],[3,"Id",230],[4,"Option",231],[8,"Future",232],[3,"Box",233],[3,"Pin",234],[8,"Sync",235],[3,"Arc",236],[3,"Rc",237],[15,"u8"],[15,"array"],[3,"Keypair",238],[3,"Message",239],[3,"Libp2pNetwork",228],[15,"str"],[3,"ValidatorArgs",240],[3,"SystemContextHandle",241],[3,"TestTransaction",242],[3,"Vec",243],[3,"TypeId",219],[3,"WebServerNetwork",227],[3,"NodeImpl",175],[8,"Deserializer",244],[15,"bool"],[8,"Hash",245],[8,"Sized",235],[8,"BuildHasher",245],[8,"Hasher",245],[8,"Serializer",246],[8,"RunDA",3],[6,"ThisRun",175]],"b":[]},\
"webserver":{"doc":"web server example","t":"DLLLLLLLLLLLLLLLLLLLLLFLLLLLML","n":["WebServerArgs","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_any","into_any_arc","into_any_rc","main","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","url","vzip"],"q":[[0,"webserver"],[30,"core::any"],[31,"clap_builder::builder::command"],[32,"core::fmt"],[33,"core::fmt"],[34,"clap_builder"],[35,"core::result"],[36,"clap_builder::util::id"],[37,"core::option"],[38,"alloc::boxed"],[39,"alloc::sync"],[40,"alloc::rc"],[41,"core::any"]],"d":["web server arguments","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","url to run on",""],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5],"f":[0,[-1,1,[]],[-1,1,[]],[2,2],[2,2],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[],2],[3,-1,[]],[3,-1,[]],[3,4],[[5,6],7],[-1,-1,[]],[8,[[10,[5,9]]]],[8,[[10,[5,9]]]],[[],[[12,[11]]]],[[],3],[-1,-2,[],[]],[[[13,[-1]]],[[13,[1]]],[]],[[[14,[-1]]],[[14,[1]]],[]],[[[15,[-1]]],[[15,[1]]],[]],[[],4],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,16,[]],[[5,8],[[10,[4,9]]]],[[5,8],[[10,[4,9]]]],0,[-1,-2,[],[]]],"c":[],"p":[[8,"Any",30],[3,"Command",31],[15,"usize"],[15,"tuple"],[3,"WebServerArgs",0],[3,"Formatter",32],[6,"Result",32],[3,"ArgMatches",33],[6,"Error",34],[4,"Result",35],[3,"Id",36],[4,"Option",37],[3,"Box",38],[3,"Arc",39],[3,"Rc",40],[3,"TypeId",30]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
