# USAGE

Networking library inteded for use with Phaselock. Builds upon abstractions on libp2p-rs.

## CLI Demo

To get very verbose logging:

```bash
RUST_LOG_OUTPUT=OUTFILE RUST_LOG="trace" cargo run --release
```

The idea here is to spin up several such nodes. Something akin to (in separate terminals)

```
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- -p 1111"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/1111 -p 2222"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/2222 -p 3333"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/3333 -p 4444"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/4444 -p 5555"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/5555 -p 6666"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/6666 -p 7777"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/7777 -p 8888"
nix develop -c "RUST_LOG_OUTPUT=OUTFILE_0 RUST_LOG=error cargo run --release -- /ip4/127.0.0.1/tcp/8888 -p 9999"
```

At this point the idea is that each node will continue to attempt to connect to nodes
until it hits at least 5 peers.

Use `Tab` to switch between messages and prompt. Press `Enter` to broadcast a message to all connected nodes.
Press `Right Arrow` to direct-send a message to a randomly selected peer.
Press `q` to quit the program from the messages view.

## Counter Tests

`cargo test --release`

spawns off two tests. One that uses gossipsub to broadcast a counter increment, and another that increments a counter directly.

This often times fails on MacOS due to "too many open files." The fix here is:

```bash
ulimit -n 10240
```
