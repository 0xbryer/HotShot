(function() {var implementors = {};
implementors["counter"] = [{"text":"impl ErrorCompat for <a class=\"enum\" href=\"counter/common/lossy_network/enum.LossyNetworkError.html\" title=\"enum counter::common::lossy_network::LossyNetworkError\">LossyNetworkError</a>","synthetic":false,"types":["counter::common::lossy_network::LossyNetworkError"]},{"text":"impl ErrorCompat for <a class=\"enum\" href=\"counter/common/enum.CounterError.html\" title=\"enum counter::common::CounterError\">CounterError</a>","synthetic":false,"types":["counter::common::CounterError"]}];
implementors["hotshot"] = [{"text":"impl ErrorCompat for <a class=\"enum\" href=\"hotshot/demos/dentry/enum.DEntryError.html\" title=\"enum hotshot::demos::dentry::DEntryError\">DEntryError</a>","synthetic":false,"types":["hotshot::demos::dentry::DEntryError"]}];
implementors["libp2p_networking"] = [{"text":"impl ErrorCompat for <a class=\"enum\" href=\"libp2p_networking/network/error/enum.NetworkError.html\" title=\"enum libp2p_networking::network::error::NetworkError\">NetworkError</a>","synthetic":false,"types":["libp2p_networking::network::error::NetworkError"]},{"text":"impl ErrorCompat for <a class=\"enum\" href=\"libp2p_networking/network/error/enum.DHTError.html\" title=\"enum libp2p_networking::network::error::DHTError\">DHTError</a>","synthetic":false,"types":["libp2p_networking::network::error::DHTError"]},{"text":"impl ErrorCompat for <a class=\"enum\" href=\"libp2p_networking/network/enum.NetworkNodeHandleError.html\" title=\"enum libp2p_networking::network::NetworkNodeHandleError\">NetworkNodeHandleError</a>","synthetic":false,"types":["libp2p_networking::network::node::handle::NetworkNodeHandleError"]}];
implementors["phaselock"] = [{"text":"impl ErrorCompat for <a class=\"enum\" href=\"phaselock/demos/dentry/enum.DEntryError.html\" title=\"enum phaselock::demos::dentry::DEntryError\">DEntryError</a>","synthetic":false,"types":["phaselock::demos::dentry::DEntryError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()