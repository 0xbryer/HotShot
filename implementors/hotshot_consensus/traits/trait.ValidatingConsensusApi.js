(function() {var implementors = {
"hotshot":[["impl&lt;TYPES: NodeType&lt;ConsensusType = ValidatingConsensus&gt;, I: <a class=\"trait\" href=\"hotshot/traits/trait.NodeImplementation.html\" title=\"trait hotshot::traits::NodeImplementation\">NodeImplementation</a>&lt;TYPES, Leaf = ValidatingLeaf&lt;TYPES&gt;, ConsensusMessage = ValidatingMessage&lt;TYPES, I&gt;&gt;&gt; ValidatingConsensusApi&lt;TYPES, &lt;I as <a class=\"trait\" href=\"hotshot/traits/trait.NodeImplementation.html\" title=\"trait hotshot::traits::NodeImplementation\">NodeImplementation</a>&lt;TYPES&gt;&gt;::<a class=\"associatedtype\" href=\"hotshot/traits/trait.NodeImplementation.html#associatedtype.Leaf\" title=\"type hotshot::traits::NodeImplementation::Leaf\">Leaf</a>, I&gt; for <a class=\"struct\" href=\"hotshot/struct.HotShotValidatingConsensusApi.html\" title=\"struct hotshot::HotShotValidatingConsensusApi\">HotShotValidatingConsensusApi</a>&lt;TYPES, I&gt;<span class=\"where fmt-newline\">where\n    I::<a class=\"associatedtype\" href=\"hotshot/traits/trait.NodeImplementation.html#associatedtype.Exchanges\" title=\"type hotshot::traits::NodeImplementation::Exchanges\">Exchanges</a>: ValidatingExchangesType&lt;TYPES, <a class=\"struct\" href=\"hotshot/types/struct.Message.html\" title=\"struct hotshot::types::Message\">Message</a>&lt;TYPES, I&gt;&gt;,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()