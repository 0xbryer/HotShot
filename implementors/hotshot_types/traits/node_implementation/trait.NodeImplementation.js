(function() {var implementors = {
"hotshot_testing":[["impl NodeImplementation&lt;<a class=\"struct\" href=\"hotshot_testing/test_types/struct.VrfTestTypes.html\" title=\"struct hotshot_testing::test_types::VrfTestTypes\">VrfTestTypes</a>&gt; for <a class=\"struct\" href=\"hotshot_testing/test_types/struct.StandardNodeImplType.html\" title=\"struct hotshot_testing::test_types::StandardNodeImplType\">StandardNodeImplType</a>"],["impl NodeImplementation&lt;<a class=\"struct\" href=\"hotshot_testing/test_types/struct.StaticCommitteeTestTypes.html\" title=\"struct hotshot_testing::test_types::StaticCommitteeTestTypes\">StaticCommitteeTestTypes</a>&gt; for <a class=\"struct\" href=\"hotshot_testing/test_types/struct.StaticNodeImplType.html\" title=\"struct hotshot_testing::test_types::StaticNodeImplType\">StaticNodeImplType</a>"]],
"libp2p_orchestrator":[["impl NodeImplementation&lt;<a class=\"struct\" href=\"hotshot/demos/vdemo/struct.VDemoTypes.html\" title=\"struct hotshot::demos::vdemo::VDemoTypes\">VDemoTypes</a>&gt; for <a class=\"struct\" href=\"libp2p_orchestrator/types/struct.NodeImpl.html\" title=\"struct libp2p_orchestrator::types::NodeImpl\">NodeImpl</a>"]],
"libp2p_validator":[["impl NodeImplementation&lt;<a class=\"struct\" href=\"hotshot/demos/vdemo/struct.VDemoTypes.html\" title=\"struct hotshot::demos::vdemo::VDemoTypes\">VDemoTypes</a>&gt; for <a class=\"struct\" href=\"libp2p_validator/types/struct.NodeImpl.html\" title=\"struct libp2p_validator::types::NodeImpl\">NodeImpl</a>"]],
"web_server_orchestrator":[["impl NodeImplementation&lt;<a class=\"struct\" href=\"hotshot/demos/vdemo/struct.VDemoTypes.html\" title=\"struct hotshot::demos::vdemo::VDemoTypes\">VDemoTypes</a>&gt; for <a class=\"struct\" href=\"web_server_orchestrator/types/struct.NodeImpl.html\" title=\"struct web_server_orchestrator::types::NodeImpl\">NodeImpl</a>"]],
"web_server_validator":[["impl NodeImplementation&lt;<a class=\"struct\" href=\"hotshot/demos/vdemo/struct.VDemoTypes.html\" title=\"struct hotshot::demos::vdemo::VDemoTypes\">VDemoTypes</a>&gt; for <a class=\"struct\" href=\"web_server_validator/types/struct.NodeImpl.html\" title=\"struct web_server_validator::types::NodeImpl\">NodeImpl</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()