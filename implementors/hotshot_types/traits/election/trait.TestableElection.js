(function() {var implementors = {
"hotshot":[["impl&lt;TYPES, LEAF: LeafType&lt;NodeType = TYPES&gt;&gt; TestableElection&lt;TYPES&gt; for <a class=\"struct\" href=\"hotshot/traits/election/vrf/struct.VrfImpl.html\" title=\"struct hotshot::traits::election::vrf::VrfImpl\">VrfImpl</a>&lt;TYPES, LEAF, BLSSignatureScheme&lt;Param381&gt;, BLSVRFScheme&lt;Param381&gt;, Hasher, Param381&gt;<span class=\"where fmt-newline\">where\n    TYPES: NodeType&lt;VoteTokenType = <a class=\"struct\" href=\"hotshot/traits/election/vrf/struct.VRFVoteToken.html\" title=\"struct hotshot::traits::election::vrf::VRFVoteToken\">VRFVoteToken</a>&lt;BLSVerKey&lt;Parameters&gt;, BLSSignature&lt;Parameters&gt;&gt;, ElectionConfigType = <a class=\"struct\" href=\"hotshot/traits/election/vrf/struct.VRFStakeTableConfig.html\" title=\"struct hotshot::traits::election::vrf::VRFStakeTableConfig\">VRFStakeTableConfig</a>, SignatureKey = <a class=\"struct\" href=\"hotshot/traits/election/vrf/struct.JfPubKey.html\" title=\"struct hotshot::traits::election::vrf::JfPubKey\">JfPubKey</a>&lt;BLSSignatureScheme&lt;Param381&gt;&gt;&gt;,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()