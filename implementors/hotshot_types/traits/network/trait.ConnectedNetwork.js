(function() {var implementors = {
"hotshot":[["impl&lt;M:&nbsp;NetworkMsg, K:&nbsp;<a class=\"trait\" href=\"hotshot/types/trait.SignatureKey.html\" title=\"trait hotshot::types::SignatureKey\">SignatureKey</a> + 'static, E:&nbsp;ElectionConfig + 'static&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/implementations/struct.CentralizedServerNetwork.html\" title=\"struct hotshot::traits::implementations::CentralizedServerNetwork\">CentralizedServerNetwork</a>&lt;K, E&gt;"],["impl&lt;M:&nbsp;NetworkMsg, K:&nbsp;<a class=\"trait\" href=\"hotshot/types/trait.SignatureKey.html\" title=\"trait hotshot::types::SignatureKey\">SignatureKey</a> + 'static&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/implementations/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::implementations::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;"],["impl&lt;M:&nbsp;NetworkMsg, K:&nbsp;<a class=\"trait\" href=\"hotshot/types/trait.SignatureKey.html\" title=\"trait hotshot::types::SignatureKey\">SignatureKey</a> + 'static&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/implementations/struct.MemoryNetwork.html\" title=\"struct hotshot::traits::implementations::MemoryNetwork\">MemoryNetwork</a>&lt;M, K&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()