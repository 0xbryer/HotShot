(function() {var implementors = {
"hotshot":[["impl&lt;TYPES:&nbsp;NodeType, LEAF:&nbsp;LeafType&lt;NodeType = TYPES&gt;, PROPOSAL:&nbsp;ProposalType&lt;NodeType = TYPES&gt;, ELECTION:&nbsp;Election&lt;TYPES&gt;&gt; TestableNetworkingImplementation&lt;TYPES, LEAF, PROPOSAL, ELECTION&gt; for <a class=\"struct\" href=\"hotshot/traits/implementations/struct.CentralizedCommChannel.html\" title=\"struct hotshot::traits::implementations::CentralizedCommChannel\">CentralizedCommChannel</a>&lt;TYPES, LEAF, PROPOSAL, ELECTION&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TYPES::SignatureKey: TestableSignatureKey,</span>"],["impl&lt;TYPES:&nbsp;NodeType, LEAF:&nbsp;LeafType&lt;NodeType = TYPES&gt;, PROPOSAL:&nbsp;ProposalType&lt;NodeType = TYPES&gt;, ELECTION:&nbsp;Election&lt;TYPES&gt;&gt; TestableNetworkingImplementation&lt;TYPES, LEAF, PROPOSAL, ELECTION&gt; for <a class=\"struct\" href=\"hotshot/traits/implementations/struct.Libp2pCommChannel.html\" title=\"struct hotshot::traits::implementations::Libp2pCommChannel\">Libp2pCommChannel</a>&lt;TYPES, LEAF, PROPOSAL, ELECTION&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TYPES::SignatureKey: TestableSignatureKey,</span>"],["impl&lt;TYPES:&nbsp;NodeType, LEAF:&nbsp;LeafType&lt;NodeType = TYPES&gt;, PROPOSAL:&nbsp;ProposalType&lt;NodeType = TYPES&gt;, ELECTION:&nbsp;Election&lt;TYPES&gt;&gt; TestableNetworkingImplementation&lt;TYPES, LEAF, PROPOSAL, ELECTION&gt; for <a class=\"struct\" href=\"hotshot/traits/implementations/struct.MemoryCommChannel.html\" title=\"struct hotshot::traits::implementations::MemoryCommChannel\">MemoryCommChannel</a>&lt;TYPES, LEAF, PROPOSAL, ELECTION&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;TYPES::SignatureKey: TestableSignatureKey,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()