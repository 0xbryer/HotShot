(function() {var implementors = {
"hotshot":[["impl&lt;TYPES: NodeType, I: <a class=\"trait\" href=\"hotshot/traits/trait.NodeImplementation.html\" title=\"trait hotshot::traits::NodeImplementation\">NodeImplementation</a>&lt;TYPES&gt;, PROPOSAL: ProposalType&lt;NodeType = TYPES&gt;, VOTE: <a class=\"trait\" href=\"hotshot/types/trait.VoteType.html\" title=\"trait hotshot::types::VoteType\">VoteType</a>&lt;TYPES&gt;, MEMBERSHIP: Membership&lt;TYPES&gt;&gt; CommunicationChannel&lt;TYPES, <a class=\"struct\" href=\"hotshot/types/struct.Message.html\" title=\"struct hotshot::types::Message\">Message</a>&lt;TYPES, I&gt;, PROPOSAL, VOTE, MEMBERSHIP&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pCommChannel.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pCommChannel\">Libp2pCommChannel</a>&lt;TYPES, I, PROPOSAL, VOTE, MEMBERSHIP&gt;<span class=\"where fmt-newline\">where\n    MessageKind&lt;TYPES, I&gt;: ViewMessage&lt;TYPES&gt;,</span>"],["impl&lt;TYPES: NodeType, I: <a class=\"trait\" href=\"hotshot/traits/trait.NodeImplementation.html\" title=\"trait hotshot::traits::NodeImplementation\">NodeImplementation</a>&lt;TYPES&gt;, PROPOSAL: ProposalType&lt;NodeType = TYPES&gt;, VOTE: <a class=\"trait\" href=\"hotshot/types/trait.VoteType.html\" title=\"trait hotshot::types::VoteType\">VoteType</a>&lt;TYPES&gt;, MEMBERSHIP: Membership&lt;TYPES&gt;&gt; CommunicationChannel&lt;TYPES, <a class=\"struct\" href=\"hotshot/types/struct.Message.html\" title=\"struct hotshot::types::Message\">Message</a>&lt;TYPES, I&gt;, PROPOSAL, VOTE, MEMBERSHIP&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/memory_network/struct.MemoryCommChannel.html\" title=\"struct hotshot::traits::networking::memory_network::MemoryCommChannel\">MemoryCommChannel</a>&lt;TYPES, I, PROPOSAL, VOTE, MEMBERSHIP&gt;<span class=\"where fmt-newline\">where\n    MessageKind&lt;TYPES, I&gt;: ViewMessage&lt;TYPES&gt;,</span>"],["impl&lt;TYPES: NodeType, I: <a class=\"trait\" href=\"hotshot/traits/trait.NodeImplementation.html\" title=\"trait hotshot::traits::NodeImplementation\">NodeImplementation</a>&lt;TYPES&gt;, PROPOSAL: ProposalType&lt;NodeType = TYPES&gt;, VOTE: <a class=\"trait\" href=\"hotshot/types/trait.VoteType.html\" title=\"trait hotshot::types::VoteType\">VoteType</a>&lt;TYPES&gt;, MEMBERSHIP: Membership&lt;TYPES&gt;&gt; CommunicationChannel&lt;TYPES, <a class=\"struct\" href=\"hotshot/types/struct.Message.html\" title=\"struct hotshot::types::Message\">Message</a>&lt;TYPES, I&gt;, PROPOSAL, VOTE, MEMBERSHIP&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/web_server_network/struct.WebCommChannel.html\" title=\"struct hotshot::traits::networking::web_server_network::WebCommChannel\">WebCommChannel</a>&lt;TYPES, I, PROPOSAL, VOTE, MEMBERSHIP&gt;"],["impl&lt;TYPES: NodeType, I: <a class=\"trait\" href=\"hotshot/traits/trait.NodeImplementation.html\" title=\"trait hotshot::traits::NodeImplementation\">NodeImplementation</a>&lt;TYPES&gt;, PROPOSAL: ProposalType&lt;NodeType = TYPES&gt;, VOTE: <a class=\"trait\" href=\"hotshot/types/trait.VoteType.html\" title=\"trait hotshot::types::VoteType\">VoteType</a>&lt;TYPES&gt;, MEMBERSHIP: Membership&lt;TYPES&gt;&gt; CommunicationChannel&lt;TYPES, <a class=\"struct\" href=\"hotshot/types/struct.Message.html\" title=\"struct hotshot::types::Message\">Message</a>&lt;TYPES, I&gt;, PROPOSAL, VOTE, MEMBERSHIP&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/web_sever_libp2p_fallback/struct.WebServerWithFallbackCommChannel.html\" title=\"struct hotshot::traits::networking::web_sever_libp2p_fallback::WebServerWithFallbackCommChannel\">WebServerWithFallbackCommChannel</a>&lt;TYPES, I, MEMBERSHIP&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()