(function() {var implementors = {};
implementors["threshold_crypto"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.59.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"threshold_crypto/struct.Fr.html\" title=\"struct threshold_crypto::Fr\">Mersenne8</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.59.0/alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>&gt;&gt; for <a class=\"struct\" href=\"threshold_crypto/poly/struct.Poly.html\" title=\"struct threshold_crypto::poly::Poly\">Poly</a>","synthetic":false,"types":["threshold_crypto::poly::Poly"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"threshold_crypto/struct.Fr.html\" title=\"struct threshold_crypto::Fr\">Mersenne8</a>","synthetic":false,"types":["threshold_crypto::mock::ms8::Mersenne8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"threshold_crypto/struct.Fr.html\" title=\"struct threshold_crypto::Fr\">Mersenne8</a>","synthetic":false,"types":["threshold_crypto::mock::ms8::Mersenne8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"threshold_crypto/struct.Fr.html\" title=\"struct threshold_crypto::Fr\">Mersenne8</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.59.0/std/primitive.u32.html\">u32</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"threshold_crypto/struct.G1.html\" title=\"struct threshold_crypto::G1\">Ms8Projective</a>&gt; for <a class=\"struct\" href=\"threshold_crypto/struct.G1Affine.html\" title=\"struct threshold_crypto::G1Affine\">Ms8Affine</a>","synthetic":false,"types":["threshold_crypto::mock::Ms8Affine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"threshold_crypto/struct.G1Affine.html\" title=\"struct threshold_crypto::G1Affine\">Ms8Affine</a>&gt; for <a class=\"struct\" href=\"threshold_crypto/struct.G1.html\" title=\"struct threshold_crypto::G1\">Ms8Projective</a>","synthetic":false,"types":["threshold_crypto::mock::Ms8Projective"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"threshold_crypto/poly/struct.Commitment.html\" title=\"struct threshold_crypto::poly::Commitment\">Commitment</a>&gt; for <a class=\"struct\" href=\"threshold_crypto/struct.PublicKeySet.html\" title=\"struct threshold_crypto::PublicKeySet\">PublicKeySet</a>","synthetic":false,"types":["threshold_crypto::PublicKeySet"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.59.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"threshold_crypto/poly/struct.Poly.html\" title=\"struct threshold_crypto::poly::Poly\">Poly</a>&gt; for <a class=\"struct\" href=\"threshold_crypto/struct.SecretKeySet.html\" title=\"struct threshold_crypto::SecretKeySet\">SecretKeySet</a>","synthetic":false,"types":["threshold_crypto::SecretKeySet"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()