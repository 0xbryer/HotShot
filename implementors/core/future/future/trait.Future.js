(function() {var implementors = {};
implementors["phaselock"] = [{"text":"impl&lt;I:&nbsp;<a class=\"trait\" href=\"phaselock/traits/trait.NodeImplementation.html\" title=\"trait phaselock::traits::NodeImplementation\">NodeImplementation</a>&lt;N&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.58.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"phaselock/state_machine/struct.SequentialRound.html\" title=\"struct phaselock::state_machine::SequentialRound\">SequentialRound</a>&lt;I, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["phaselock::state_machine::SequentialRound"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()