(function() {var implementors = {};
implementors["phaselock"] = [{"text":"impl&lt;S, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/committee/struct.DynamicCommittee.html\" title=\"struct phaselock::committee::DynamicCommittee\">DynamicCommittee</a>&lt;S, N&gt;","synthetic":false,"types":["phaselock::committee::DynamicCommittee"]},{"text":"impl&lt;const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/data/struct.BlockHash.html\" title=\"struct phaselock::data::BlockHash\">BlockHash</a>&lt;N&gt;","synthetic":false,"types":["phaselock::data::BlockHash"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/demos/dentry/struct.DEntryBlock.html\" title=\"struct phaselock::demos::dentry::DEntryBlock\">DEntryBlock</a>","synthetic":false,"types":["phaselock::demos::dentry::DEntryBlock"]},{"text":"impl&lt;NET&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/demos/dentry/struct.DEntryNode.html\" title=\"struct phaselock::demos::dentry::DEntryNode\">DEntryNode</a>&lt;NET&gt;","synthetic":false,"types":["phaselock::demos::dentry::DEntryNode"]},{"text":"impl&lt;B, S, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/traits/implementations/struct.Stateless.html\" title=\"struct phaselock::traits::implementations::Stateless\">Stateless</a>&lt;B, S, N&gt;","synthetic":false,"types":["phaselock::traits::stateful_handler::Stateless"]},{"text":"impl&lt;Block, State, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/traits/implementations/struct.MemoryStorage.html\" title=\"struct phaselock::traits::implementations::MemoryStorage\">MemoryStorage</a>&lt;Block, State, N&gt;","synthetic":false,"types":["phaselock::traits::storage::memory_storage::MemoryStorage"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"phaselock/utility/waitqueue/struct.WaitOnce.html\" title=\"struct phaselock::utility::waitqueue::WaitOnce\">WaitOnce</a>&lt;T&gt;","synthetic":false,"types":["phaselock::utility::waitqueue::WaitOnce"]}];
implementors["threshold_crypto"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"threshold_crypto/struct.Fr.html\" title=\"struct threshold_crypto::Fr\">Mersenne8</a>","synthetic":false,"types":["threshold_crypto::mock::ms8::Mersenne8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"threshold_crypto/struct.G1Affine.html\" title=\"struct threshold_crypto::G1Affine\">Ms8Affine</a>","synthetic":false,"types":["threshold_crypto::mock::Ms8Affine"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"threshold_crypto/struct.G1.html\" title=\"struct threshold_crypto::G1\">Ms8Projective</a>","synthetic":false,"types":["threshold_crypto::mock::Ms8Projective"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"threshold_crypto/struct.SecretKey.html\" title=\"struct threshold_crypto::SecretKey\">SecretKey</a>","synthetic":false,"types":["threshold_crypto::SecretKey"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.56.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"threshold_crypto/struct.SecretKeyShare.html\" title=\"struct threshold_crypto::SecretKeyShare\">SecretKeyShare</a>","synthetic":false,"types":["threshold_crypto::SecretKeyShare"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()