initSidebarItems({"constant":[["BROADCAST_TIMEOUT","timeout before failing to broadcast"],["PADDING_SIZE",""],["SEND_DENOMINATOR","probaiblity denominator that recv-er node sends back timing states"],["SEND_NUMERATOR","probability numerator that recv-er node sends back timing stats"],["SUCCESS_NUMBER",""],["TIMEOUT","the timeout before ending rounding"]],"enum":[["ConductorMessageMethod","ways to send messages between nodes"],["CounterError",""],["CounterRequest","Normal message. Sent amongst [`NetworkNodeType::Regular`] and [`NetworkNodeType::Bootstrap`] nodes"],["EpochType",""],["ExecutionEnvironment","The execution environemnt type"],["Message","overall message"]],"fn":[["conductor_broadcast",""],["conductor_handle_network_event","network event handler for conductor"],["handle_normal_msg","handler for non-conductor nodes for normal messages"],["parse_node","convert node string into multi addr"],["regular_handle_network_event","event handler for events from the swarm"],["start_main","[’bootstrap_addrs`] list of bootstrap multiaddrs. Needed to bootstrap into network [`num_nodes`] total number of nodes. Needed to create pruning rules [`node_type`] the type of this node ['bound_addr`] the address to bind to"]],"mod":[["lossy_network",""],["web",""]],"struct":[["CliOpt",""],["ConductorMessage","A message sent and recv-ed by a [‘NetworkNodeType::Regular’] or [‘NetworkNodeType::Bootstrap’] node that is to be relayed back to a [`NetworkNodeType::Conductor`] node"],["ConductorState",""],["EpochData",""],["FileReadSnafu","SNAFU context selector for the `CounterError::FileRead` variant"],["HandleSnafu","SNAFU context selector for the `CounterError::Handle` variant"],["MissingBootstrapSnafu","SNAFU context selector for the `CounterError::MissingBootstrap` variant"],["NormalMessage","Message sent between non-[`NetworkNodeType::Conductor`] nodes"],["RelayedMessage","A message sent and recv-ed by a [‘NetworkNodeType::Regular’] or [‘NetworkNodeType::Bootstrap’] node that is to be relayed back to a [`NetworkNodeType::Conductor`] node"]],"type":[["CounterState",""],["Epoch",""]]});