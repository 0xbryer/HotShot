(function() {var type_impls = {
"hotshot_task_impls":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HotShotTaskTypes-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"impl\"><a href=\"#impl-HotShotTaskTypes-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ERR, EVENT, ESTREAM, STATE&gt; HotShotTaskTypes for HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;<span class=\"where fmt-newline\">where\n    ERR: TaskErr,\n    EVENT: PassType,\n    ESTREAM: EventStream&lt;EventType = EVENT&gt;,\n    STATE: TS,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Event\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Event\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Event</a> = EVENT</h4></section></summary><div class='docblock'>the event type from the event stream</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">State</a> = STATE</h4></section></summary><div class='docblock'>the state of the task</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.EventStream\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EventStream\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">EventStream</a> = ESTREAM</h4></section></summary><div class='docblock'>the global event stream</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Message\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Message\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Message</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>the message stream to receive</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.MessageStream\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.MessageStream\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">MessageStream</a> = DummyStream</h4></section></summary><div class='docblock'>the steam of messages from other tasks</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ERR</h4></section></summary><div class='docblock'>the error to return</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method trait-impl\"><a href=\"#method.build\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build</a>(\n    builder: TaskBuilder&lt;HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;&gt;\n) -&gt; HST&lt;HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;&gt;<span class=\"where fmt-newline\">where\n    HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>build a task\nNOTE: done here and not on <code>TaskBuilder</code> because\nwe want specific checks done on each variant\nNOTE: all generics implement <code>Sized</code>, but this bound is\nNOT applied to <code>Self</code> unless we specify</div></details></div></details>","HotShotTaskTypes","hotshot_task_impls::consensus::ConsensusTaskTypes","hotshot_task_impls::da::DATaskTypes","hotshot_task_impls::transactions::TransactionsTaskTypes","hotshot_task_impls::network::NetworkEventTaskTypes","hotshot_task_impls::harness::TestHarnessTaskTypes","hotshot_task_impls::view_sync::ViewSyncTaskStateTypes","hotshot_task_impls::view_sync::ViewSyncReplicaTaskStateTypes","hotshot_task_impls::vid::VIDTaskTypes","hotshot_task_impls::vote::VoteTaskStateTypes"],["<section id=\"impl-ImplEventStream-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"impl\"><a href=\"#impl-ImplEventStream-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ERR, EVENT, ESTREAM, STATE&gt; ImplEventStream for HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;<span class=\"where fmt-newline\">where\n    ERR: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>,\n    EVENT: PassType,\n    ESTREAM: EventStream&lt;EventType = EVENT&gt;,\n    STATE: TS,</span></h3></section>","ImplEventStream","hotshot_task_impls::consensus::ConsensusTaskTypes","hotshot_task_impls::da::DATaskTypes","hotshot_task_impls::transactions::TransactionsTaskTypes","hotshot_task_impls::network::NetworkEventTaskTypes","hotshot_task_impls::harness::TestHarnessTaskTypes","hotshot_task_impls::view_sync::ViewSyncTaskStateTypes","hotshot_task_impls::view_sync::ViewSyncReplicaTaskStateTypes","hotshot_task_impls::vid::VIDTaskTypes","hotshot_task_impls::vote::VoteTaskStateTypes"]],
"hotshot_testing":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HotShotTaskTypes-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"impl\"><a href=\"#impl-HotShotTaskTypes-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ERR, EVENT, ESTREAM, STATE&gt; HotShotTaskTypes for HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;<span class=\"where fmt-newline\">where\n    ERR: TaskErr,\n    EVENT: PassType,\n    ESTREAM: EventStream&lt;EventType = EVENT&gt;,\n    STATE: TS,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Event\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Event\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Event</a> = EVENT</h4></section></summary><div class='docblock'>the event type from the event stream</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.State\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.State\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">State</a> = STATE</h4></section></summary><div class='docblock'>the state of the task</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.EventStream\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.EventStream\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">EventStream</a> = ESTREAM</h4></section></summary><div class='docblock'>the global event stream</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Message\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Message\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Message</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>the message stream to receive</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.MessageStream\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.MessageStream\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">MessageStream</a> = DummyStream</h4></section></summary><div class='docblock'>the steam of messages from other tasks</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = ERR</h4></section></summary><div class='docblock'>the error to return</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method trait-impl\"><a href=\"#method.build\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">build</a>(\n    builder: TaskBuilder&lt;HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;&gt;\n) -&gt; HST&lt;HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;&gt;<span class=\"where fmt-newline\">where\n    HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>build a task\nNOTE: done here and not on <code>TaskBuilder</code> because\nwe want specific checks done on each variant\nNOTE: all generics implement <code>Sized</code>, but this bound is\nNOT applied to <code>Self</code> unless we specify</div></details></div></details>","HotShotTaskTypes","hotshot_testing::TestTask"],["<section id=\"impl-ImplEventStream-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"impl\"><a href=\"#impl-ImplEventStream-for-HSTWithEvent%3CERR,+EVENT,+ESTREAM,+STATE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;ERR, EVENT, ESTREAM, STATE&gt; ImplEventStream for HSTWithEvent&lt;ERR, EVENT, ESTREAM, STATE&gt;<span class=\"where fmt-newline\">where\n    ERR: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>,\n    EVENT: PassType,\n    ESTREAM: EventStream&lt;EventType = EVENT&gt;,\n    STATE: TS,</span></h3></section>","ImplEventStream","hotshot_testing::TestTask"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()