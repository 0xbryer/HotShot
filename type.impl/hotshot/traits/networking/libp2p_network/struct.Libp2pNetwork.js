(function() {var type_impls = {
"all_libp2p":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#285\">source</a><a href=\"#impl-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#287\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.wait_for_ready\" class=\"fn\">wait_for_ready</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Returns when network is ready</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#310-322\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.new\" class=\"fn\">new</a>(\n    metrics: <a class=\"struct\" href=\"hotshot/traits/networking/struct.NetworkingMetricsValue.html\" title=\"struct hotshot::traits::networking::NetworkingMetricsValue\">NetworkingMetricsValue</a>,\n    config: <a class=\"struct\" href=\"libp2p_networking/network/node/config/struct.NetworkNodeConfig.html\" title=\"struct libp2p_networking::network::node::config::NetworkNodeConfig\">NetworkNodeConfig</a>,\n    pk: K,\n    bootstrap_addrs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PeerId&gt;, Multiaddr)&gt;&gt;&gt;,\n    bootstrap_addrs_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    committee_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;,\n    da_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;, NetworkError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs new network for a node. Note that this network is unconnected.\nOne must call <code>connect</code> in order to connect.</p>\n<ul>\n<li><code>config</code>: the configuration of the node</li>\n<li><code>pk</code>: public key associated with the node</li>\n<li><code>bootstrap_addrs</code>: rwlock containing the bootstrap addrs</li>\n</ul>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns error in the event that the underlying libp2p network\nis unable to create a network.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This will panic if there are less than 5 bootstrap nodes</p>\n</div></details></div></details>",0,"all_libp2p::types::DANetwork","all_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#625\">source</a><a href=\"#impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#626\">source</a><a href=\"#method.wait_for_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wait_for_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Blocks until the network is successfully initialized</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#631\">source</a><a href=\"#method.pause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pause</a>(&amp;self)</h4></section></summary><div class='docblock'>Pauses the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#635\">source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resumes the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#639\">source</a><a href=\"#method.is_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>checks if the network is ready\nnonblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shut_down\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#644\">source</a><a href=\"#method.shut_down\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shut_down</a>&lt;'a, 'b&gt;(\n    &amp;'a self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Blocks until the network is shut down\nthen returns true</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.broadcast_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#661\">source</a><a href=\"#method.broadcast_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">broadcast_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipients: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>broadcast message to some subset of nodes\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.direct_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#743\">source</a><a href=\"#method.direct_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">direct_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipient: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a direct message to a specific node\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recv_msgs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#817\">source</a><a href=\"#method.recv_msgs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">recv_msgs</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    transmit_type: TransmitType\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;M&gt;, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Moves out the entire queue of received messages of ’transmit_type` <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue_node_lookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#863\">source</a><a href=\"#method.queue_node_lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">queue_node_lookup</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    view_number: ViewNumber,\n    pk: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, SendError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(ViewNumber, K)&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>queues lookup of a node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inject_consensus_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#875\">source</a><a href=\"#method.inject_consensus_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inject_consensus_info</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event: ConsensusIntentEvent&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Injects consensus data such as view number into the networking implementation\nblocking\nIdeally we would pass in the <code>Time</code> type, but that requires making the entire trait generic over NodeType</div></details></div></details>","ConnectedNetwork<M, K>","all_libp2p::types::DANetwork","all_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NetworkMsg,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","all_libp2p::types::DANetwork","all_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#82\">source</a><a href=\"#impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#83\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","all_libp2p::types::DANetwork","all_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#145-148\">source</a><a href=\"#impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TYPES&gt; TestableNetworkingImplementation&lt;TYPES&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;<div class=\"where\">where\n    TYPES: NodeType,\n    MessageKind&lt;TYPES&gt;: ViewMessage&lt;TYPES&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#160-167\">source</a><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>(\n    expected_node_count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    num_bootstrap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _network_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    da_committee_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a boxed function <code>f(node_id, public_key) -&gt; Libp2pNetwork</code>\nwith the purpose of generating libp2p networks.\nGenerates <code>num_bootstrap</code> bootstrap nodes. The remainder of nodes are normal\nnodes with sane defaults.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Returned function may panic either:</p>\n<ul>\n<li>An invalid configuration\n(probably an issue with the defaults of this function)</li>\n<li>An inability to spin up the replica’s network</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_flight_message_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#280\">source</a><a href=\"#method.in_flight_message_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_flight_message_count</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Get the number of messages in-flight. <a>Read more</a></div></details></div></details>","TestableNetworkingImplementation<TYPES>","all_libp2p::types::DANetwork","all_libp2p::types::QuorumNetwork"]],
"hotshot_example_types":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#285\">source</a><a href=\"#impl-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#287\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.wait_for_ready\" class=\"fn\">wait_for_ready</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Returns when network is ready</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#310-322\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.new\" class=\"fn\">new</a>(\n    metrics: <a class=\"struct\" href=\"hotshot/traits/networking/struct.NetworkingMetricsValue.html\" title=\"struct hotshot::traits::networking::NetworkingMetricsValue\">NetworkingMetricsValue</a>,\n    config: <a class=\"struct\" href=\"libp2p_networking/network/node/config/struct.NetworkNodeConfig.html\" title=\"struct libp2p_networking::network::node::config::NetworkNodeConfig\">NetworkNodeConfig</a>,\n    pk: K,\n    bootstrap_addrs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PeerId&gt;, Multiaddr)&gt;&gt;&gt;,\n    bootstrap_addrs_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    committee_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;,\n    da_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;, NetworkError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs new network for a node. Note that this network is unconnected.\nOne must call <code>connect</code> in order to connect.</p>\n<ul>\n<li><code>config</code>: the configuration of the node</li>\n<li><code>pk</code>: public key associated with the node</li>\n<li><code>bootstrap_addrs</code>: rwlock containing the bootstrap addrs</li>\n</ul>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns error in the event that the underlying libp2p network\nis unable to create a network.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This will panic if there are less than 5 bootstrap nodes</p>\n</div></details></div></details>",0,"hotshot_example_types::node_types::StaticLibp2pDAComm","hotshot_example_types::node_types::StaticLibp2pQuorumComm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#625\">source</a><a href=\"#impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#626\">source</a><a href=\"#method.wait_for_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wait_for_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Blocks until the network is successfully initialized</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#631\">source</a><a href=\"#method.pause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pause</a>(&amp;self)</h4></section></summary><div class='docblock'>Pauses the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#635\">source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resumes the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#639\">source</a><a href=\"#method.is_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>checks if the network is ready\nnonblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shut_down\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#644\">source</a><a href=\"#method.shut_down\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shut_down</a>&lt;'a, 'b&gt;(\n    &amp;'a self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Blocks until the network is shut down\nthen returns true</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.broadcast_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#661\">source</a><a href=\"#method.broadcast_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">broadcast_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipients: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>broadcast message to some subset of nodes\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.direct_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#743\">source</a><a href=\"#method.direct_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">direct_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipient: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a direct message to a specific node\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recv_msgs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#817\">source</a><a href=\"#method.recv_msgs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">recv_msgs</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    transmit_type: TransmitType\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;M&gt;, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Moves out the entire queue of received messages of ’transmit_type` <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue_node_lookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#863\">source</a><a href=\"#method.queue_node_lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">queue_node_lookup</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    view_number: ViewNumber,\n    pk: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, SendError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(ViewNumber, K)&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>queues lookup of a node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inject_consensus_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#875\">source</a><a href=\"#method.inject_consensus_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inject_consensus_info</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event: ConsensusIntentEvent&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Injects consensus data such as view number into the networking implementation\nblocking\nIdeally we would pass in the <code>Time</code> type, but that requires making the entire trait generic over NodeType</div></details></div></details>","ConnectedNetwork<M, K>","hotshot_example_types::node_types::StaticLibp2pDAComm","hotshot_example_types::node_types::StaticLibp2pQuorumComm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NetworkMsg,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hotshot_example_types::node_types::StaticLibp2pDAComm","hotshot_example_types::node_types::StaticLibp2pQuorumComm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#82\">source</a><a href=\"#impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#83\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hotshot_example_types::node_types::StaticLibp2pDAComm","hotshot_example_types::node_types::StaticLibp2pQuorumComm"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#145-148\">source</a><a href=\"#impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TYPES&gt; TestableNetworkingImplementation&lt;TYPES&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;<div class=\"where\">where\n    TYPES: NodeType,\n    MessageKind&lt;TYPES&gt;: ViewMessage&lt;TYPES&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#160-167\">source</a><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>(\n    expected_node_count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    num_bootstrap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _network_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    da_committee_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a boxed function <code>f(node_id, public_key) -&gt; Libp2pNetwork</code>\nwith the purpose of generating libp2p networks.\nGenerates <code>num_bootstrap</code> bootstrap nodes. The remainder of nodes are normal\nnodes with sane defaults.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Returned function may panic either:</p>\n<ul>\n<li>An invalid configuration\n(probably an issue with the defaults of this function)</li>\n<li>An inability to spin up the replica’s network</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_flight_message_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#280\">source</a><a href=\"#method.in_flight_message_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_flight_message_count</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Get the number of messages in-flight. <a>Read more</a></div></details></div></details>","TestableNetworkingImplementation<TYPES>","hotshot_example_types::node_types::StaticLibp2pDAComm","hotshot_example_types::node_types::StaticLibp2pQuorumComm"]],
"multi_validator_libp2p":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#285\">source</a><a href=\"#impl-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#287\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.wait_for_ready\" class=\"fn\">wait_for_ready</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Returns when network is ready</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#310-322\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.new\" class=\"fn\">new</a>(\n    metrics: <a class=\"struct\" href=\"hotshot/traits/networking/struct.NetworkingMetricsValue.html\" title=\"struct hotshot::traits::networking::NetworkingMetricsValue\">NetworkingMetricsValue</a>,\n    config: <a class=\"struct\" href=\"libp2p_networking/network/node/config/struct.NetworkNodeConfig.html\" title=\"struct libp2p_networking::network::node::config::NetworkNodeConfig\">NetworkNodeConfig</a>,\n    pk: K,\n    bootstrap_addrs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PeerId&gt;, Multiaddr)&gt;&gt;&gt;,\n    bootstrap_addrs_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    committee_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;,\n    da_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;, NetworkError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs new network for a node. Note that this network is unconnected.\nOne must call <code>connect</code> in order to connect.</p>\n<ul>\n<li><code>config</code>: the configuration of the node</li>\n<li><code>pk</code>: public key associated with the node</li>\n<li><code>bootstrap_addrs</code>: rwlock containing the bootstrap addrs</li>\n</ul>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns error in the event that the underlying libp2p network\nis unable to create a network.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This will panic if there are less than 5 bootstrap nodes</p>\n</div></details></div></details>",0,"multi_validator_libp2p::types::DANetwork","multi_validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#625\">source</a><a href=\"#impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#626\">source</a><a href=\"#method.wait_for_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wait_for_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Blocks until the network is successfully initialized</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#631\">source</a><a href=\"#method.pause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pause</a>(&amp;self)</h4></section></summary><div class='docblock'>Pauses the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#635\">source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resumes the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#639\">source</a><a href=\"#method.is_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>checks if the network is ready\nnonblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shut_down\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#644\">source</a><a href=\"#method.shut_down\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shut_down</a>&lt;'a, 'b&gt;(\n    &amp;'a self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Blocks until the network is shut down\nthen returns true</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.broadcast_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#661\">source</a><a href=\"#method.broadcast_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">broadcast_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipients: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>broadcast message to some subset of nodes\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.direct_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#743\">source</a><a href=\"#method.direct_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">direct_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipient: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a direct message to a specific node\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recv_msgs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#817\">source</a><a href=\"#method.recv_msgs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">recv_msgs</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    transmit_type: TransmitType\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;M&gt;, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Moves out the entire queue of received messages of ’transmit_type` <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue_node_lookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#863\">source</a><a href=\"#method.queue_node_lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">queue_node_lookup</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    view_number: ViewNumber,\n    pk: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, SendError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(ViewNumber, K)&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>queues lookup of a node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inject_consensus_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#875\">source</a><a href=\"#method.inject_consensus_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inject_consensus_info</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event: ConsensusIntentEvent&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Injects consensus data such as view number into the networking implementation\nblocking\nIdeally we would pass in the <code>Time</code> type, but that requires making the entire trait generic over NodeType</div></details></div></details>","ConnectedNetwork<M, K>","multi_validator_libp2p::types::DANetwork","multi_validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NetworkMsg,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","multi_validator_libp2p::types::DANetwork","multi_validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#82\">source</a><a href=\"#impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#83\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","multi_validator_libp2p::types::DANetwork","multi_validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#145-148\">source</a><a href=\"#impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TYPES&gt; TestableNetworkingImplementation&lt;TYPES&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;<div class=\"where\">where\n    TYPES: NodeType,\n    MessageKind&lt;TYPES&gt;: ViewMessage&lt;TYPES&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#160-167\">source</a><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>(\n    expected_node_count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    num_bootstrap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _network_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    da_committee_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a boxed function <code>f(node_id, public_key) -&gt; Libp2pNetwork</code>\nwith the purpose of generating libp2p networks.\nGenerates <code>num_bootstrap</code> bootstrap nodes. The remainder of nodes are normal\nnodes with sane defaults.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Returned function may panic either:</p>\n<ul>\n<li>An invalid configuration\n(probably an issue with the defaults of this function)</li>\n<li>An inability to spin up the replica’s network</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_flight_message_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#280\">source</a><a href=\"#method.in_flight_message_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_flight_message_count</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Get the number of messages in-flight. <a>Read more</a></div></details></div></details>","TestableNetworkingImplementation<TYPES>","multi_validator_libp2p::types::DANetwork","multi_validator_libp2p::types::QuorumNetwork"]],
"orchestrator_libp2p":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#285\">source</a><a href=\"#impl-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#287\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.wait_for_ready\" class=\"fn\">wait_for_ready</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Returns when network is ready</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#310-322\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.new\" class=\"fn\">new</a>(\n    metrics: <a class=\"struct\" href=\"hotshot/traits/networking/struct.NetworkingMetricsValue.html\" title=\"struct hotshot::traits::networking::NetworkingMetricsValue\">NetworkingMetricsValue</a>,\n    config: <a class=\"struct\" href=\"libp2p_networking/network/node/config/struct.NetworkNodeConfig.html\" title=\"struct libp2p_networking::network::node::config::NetworkNodeConfig\">NetworkNodeConfig</a>,\n    pk: K,\n    bootstrap_addrs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PeerId&gt;, Multiaddr)&gt;&gt;&gt;,\n    bootstrap_addrs_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    committee_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;,\n    da_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;, NetworkError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs new network for a node. Note that this network is unconnected.\nOne must call <code>connect</code> in order to connect.</p>\n<ul>\n<li><code>config</code>: the configuration of the node</li>\n<li><code>pk</code>: public key associated with the node</li>\n<li><code>bootstrap_addrs</code>: rwlock containing the bootstrap addrs</li>\n</ul>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns error in the event that the underlying libp2p network\nis unable to create a network.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This will panic if there are less than 5 bootstrap nodes</p>\n</div></details></div></details>",0,"orchestrator_libp2p::types::DANetwork","orchestrator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#625\">source</a><a href=\"#impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#626\">source</a><a href=\"#method.wait_for_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wait_for_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Blocks until the network is successfully initialized</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#631\">source</a><a href=\"#method.pause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pause</a>(&amp;self)</h4></section></summary><div class='docblock'>Pauses the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#635\">source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resumes the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#639\">source</a><a href=\"#method.is_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>checks if the network is ready\nnonblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shut_down\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#644\">source</a><a href=\"#method.shut_down\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shut_down</a>&lt;'a, 'b&gt;(\n    &amp;'a self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Blocks until the network is shut down\nthen returns true</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.broadcast_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#661\">source</a><a href=\"#method.broadcast_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">broadcast_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipients: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>broadcast message to some subset of nodes\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.direct_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#743\">source</a><a href=\"#method.direct_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">direct_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipient: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a direct message to a specific node\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recv_msgs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#817\">source</a><a href=\"#method.recv_msgs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">recv_msgs</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    transmit_type: TransmitType\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;M&gt;, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Moves out the entire queue of received messages of ’transmit_type` <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue_node_lookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#863\">source</a><a href=\"#method.queue_node_lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">queue_node_lookup</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    view_number: ViewNumber,\n    pk: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, SendError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(ViewNumber, K)&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>queues lookup of a node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inject_consensus_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#875\">source</a><a href=\"#method.inject_consensus_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inject_consensus_info</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event: ConsensusIntentEvent&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Injects consensus data such as view number into the networking implementation\nblocking\nIdeally we would pass in the <code>Time</code> type, but that requires making the entire trait generic over NodeType</div></details></div></details>","ConnectedNetwork<M, K>","orchestrator_libp2p::types::DANetwork","orchestrator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NetworkMsg,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","orchestrator_libp2p::types::DANetwork","orchestrator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#82\">source</a><a href=\"#impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#83\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","orchestrator_libp2p::types::DANetwork","orchestrator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#145-148\">source</a><a href=\"#impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TYPES&gt; TestableNetworkingImplementation&lt;TYPES&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;<div class=\"where\">where\n    TYPES: NodeType,\n    MessageKind&lt;TYPES&gt;: ViewMessage&lt;TYPES&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#160-167\">source</a><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>(\n    expected_node_count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    num_bootstrap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _network_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    da_committee_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a boxed function <code>f(node_id, public_key) -&gt; Libp2pNetwork</code>\nwith the purpose of generating libp2p networks.\nGenerates <code>num_bootstrap</code> bootstrap nodes. The remainder of nodes are normal\nnodes with sane defaults.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Returned function may panic either:</p>\n<ul>\n<li>An invalid configuration\n(probably an issue with the defaults of this function)</li>\n<li>An inability to spin up the replica’s network</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_flight_message_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#280\">source</a><a href=\"#method.in_flight_message_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_flight_message_count</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Get the number of messages in-flight. <a>Read more</a></div></details></div></details>","TestableNetworkingImplementation<TYPES>","orchestrator_libp2p::types::DANetwork","orchestrator_libp2p::types::QuorumNetwork"]],
"validator_libp2p":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#285\">source</a><a href=\"#impl-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#287\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.wait_for_ready\" class=\"fn\">wait_for_ready</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Returns when network is ready</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#310-322\">source</a><h4 class=\"code-header\">pub async fn <a href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html#tymethod.new\" class=\"fn\">new</a>(\n    metrics: <a class=\"struct\" href=\"hotshot/traits/networking/struct.NetworkingMetricsValue.html\" title=\"struct hotshot::traits::networking::NetworkingMetricsValue\">NetworkingMetricsValue</a>,\n    config: <a class=\"struct\" href=\"libp2p_networking/network/node/config/struct.NetworkNodeConfig.html\" title=\"struct libp2p_networking::network::node::config::NetworkNodeConfig\">NetworkNodeConfig</a>,\n    pk: K,\n    bootstrap_addrs: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;RwLock&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PeerId&gt;, Multiaddr)&gt;&gt;&gt;,\n    bootstrap_addrs_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    committee_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;,\n    da_pks: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;,\n    is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;, NetworkError&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs new network for a node. Note that this network is unconnected.\nOne must call <code>connect</code> in order to connect.</p>\n<ul>\n<li><code>config</code>: the configuration of the node</li>\n<li><code>pk</code>: public key associated with the node</li>\n<li><code>bootstrap_addrs</code>: rwlock containing the bootstrap addrs</li>\n</ul>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>Returns error in the event that the underlying libp2p network\nis unable to create a network.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>This will panic if there are less than 5 bootstrap nodes</p>\n</div></details></div></details>",0,"validator_libp2p::types::DANetwork","validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#625\">source</a><a href=\"#impl-ConnectedNetwork%3CM,+K%3E-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; ConnectedNetwork&lt;M, K&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait_for_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#626\">source</a><a href=\"#method.wait_for_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">wait_for_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Blocks until the network is successfully initialized</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pause\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#631\">source</a><a href=\"#method.pause\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">pause</a>(&amp;self)</h4></section></summary><div class='docblock'>Pauses the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resume\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#635\">source</a><a href=\"#method.resume\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">resume</a>(&amp;self)</h4></section></summary><div class='docblock'>Resumes the underlying network</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#639\">source</a><a href=\"#method.is_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_ready</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>checks if the network is ready\nnonblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shut_down\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#644\">source</a><a href=\"#method.shut_down\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">shut_down</a>&lt;'a, 'b&gt;(\n    &amp;'a self\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Blocks until the network is shut down\nthen returns true</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.broadcast_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#661\">source</a><a href=\"#method.broadcast_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">broadcast_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipients: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>broadcast message to some subset of nodes\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.direct_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#743\">source</a><a href=\"#method.direct_message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">direct_message</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    message: M,\n    recipient: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Sends a direct message to a specific node\nblocking</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.recv_msgs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#817\">source</a><a href=\"#method.recv_msgs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">recv_msgs</a>&lt;'a, 'b&gt;(\n    &amp;'a self,\n    transmit_type: TransmitType\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;M&gt;, NetworkError&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'b&gt;&gt;<div class=\"where\">where\n    'a: 'b,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'b,</div></h4></section></summary><div class='docblock'>Moves out the entire queue of received messages of ’transmit_type` <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.queue_node_lookup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#863\">source</a><a href=\"#method.queue_node_lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">queue_node_lookup</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    view_number: ViewNumber,\n    pk: K\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, SendError&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(ViewNumber, K)&gt;&gt;&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>queues lookup of a node</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inject_consensus_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#875\">source</a><a href=\"#method.inject_consensus_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inject_consensus_info</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event: ConsensusIntentEvent&lt;K&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Injects consensus data such as view number into the networking implementation\nblocking\nIdeally we would pass in the <code>Time</code> type, but that requires making the entire trait generic over NodeType</div></details></div></details>","ConnectedNetwork<M, K>","validator_libp2p::types::DANetwork","validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#impl-Clone-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NetworkMsg,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#138\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.76.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.76.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","validator_libp2p::types::DANetwork","validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#82\">source</a><a href=\"#impl-Debug-for-Libp2pNetwork%3CM,+K%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, K&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;M, K&gt;<div class=\"where\">where\n    M: NetworkMsg,\n    K: SignatureKey + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#83\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.76.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","validator_libp2p::types::DANetwork","validator_libp2p::types::QuorumNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#145-148\">source</a><a href=\"#impl-TestableNetworkingImplementation%3CTYPES%3E-for-Libp2pNetwork%3CMessage%3CTYPES%3E,+%3CTYPES+as+NodeType%3E::SignatureKey%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;TYPES&gt; TestableNetworkingImplementation&lt;TYPES&gt; for <a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;<div class=\"where\">where\n    TYPES: NodeType,\n    MessageKind&lt;TYPES&gt;: ViewMessage&lt;TYPES&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.generator\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#160-167\">source</a><a href=\"#method.generator\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">generator</a>(\n    expected_node_count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    num_bootstrap: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _network_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    da_committee_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>,\n    _is_da: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.bool.html\">bool</a>,\n    reliability_config: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn NetworkReliability&gt;&gt;\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.76.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.u64.html\">u64</a>) -&gt; (<a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.76.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"struct\" href=\"hotshot/traits/networking/libp2p_network/struct.Libp2pNetwork.html\" title=\"struct hotshot::traits::networking::libp2p_network::Libp2pNetwork\">Libp2pNetwork</a>&lt;Message&lt;TYPES&gt;, &lt;TYPES as NodeType&gt;::SignatureKey&gt;&gt;)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a boxed function <code>f(node_id, public_key) -&gt; Libp2pNetwork</code>\nwith the purpose of generating libp2p networks.\nGenerates <code>num_bootstrap</code> bootstrap nodes. The remainder of nodes are normal\nnodes with sane defaults.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Returned function may panic either:</p>\n<ul>\n<li>An invalid configuration\n(probably an issue with the defaults of this function)</li>\n<li>An inability to spin up the replica’s network</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_flight_message_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot/traits/networking/libp2p_network.rs.html#280\">source</a><a href=\"#method.in_flight_message_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_flight_message_count</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.76.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.76.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Get the number of messages in-flight. <a>Read more</a></div></details></div></details>","TestableNetworkingImplementation<TYPES>","validator_libp2p::types::DANetwork","validator_libp2p::types::QuorumNetwork"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()