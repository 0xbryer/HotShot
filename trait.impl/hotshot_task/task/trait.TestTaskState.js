(function() {var implementors = {
"hotshot_testing":[["impl&lt;TYPES: NodeType&lt;InstanceState = TestInstanceState&gt;, I, N: ConnectedNetwork&lt;Message&lt;TYPES&gt;, TYPES::SignatureKey&gt;&gt; TestTaskState for <a class=\"struct\" href=\"hotshot_testing/spinning_task/struct.SpinningTask.html\" title=\"struct hotshot_testing::spinning_task::SpinningTask\">SpinningTask</a>&lt;TYPES, I&gt;<div class=\"where\">where\n    I: TestableNodeImplementation&lt;TYPES, CommitteeElectionConfig = TYPES::ElectionConfigType&gt; + NodeImplementation&lt;TYPES, QuorumNetwork = N, CommitteeNetwork = N&gt; + TestableNodeImplementation&lt;TYPES&gt;,</div>"],["impl&lt;TYPES: NodeType, I: TestableNodeImplementation&lt;TYPES&gt;&gt; TestTaskState for <a class=\"struct\" href=\"hotshot_testing/view_sync_task/struct.ViewSyncTask.html\" title=\"struct hotshot_testing::view_sync_task::ViewSyncTask\">ViewSyncTask</a>&lt;TYPES, I&gt;"],["impl&lt;TYPES: NodeType, I: TestableNodeImplementation&lt;TYPES&gt;&gt; TestTaskState for <a class=\"struct\" href=\"hotshot_testing/overall_safety_task/struct.OverallSafetyTask.html\" title=\"struct hotshot_testing::overall_safety_task::OverallSafetyTask\">OverallSafetyTask</a>&lt;TYPES, I&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()