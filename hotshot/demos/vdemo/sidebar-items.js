window.SIDEBAR_ITEMS = {"enum":[["VDemoBlock","The block for the validating demo"],["VDemoError","The error type for the validating demo"]],"fn":[["random_quorum_certificate","Provides a random [`QuorumCertificate`]"],["random_validating_leaf","Provides a random [`ValidatingLeaf`]"]],"struct":[["Addition","Records an increase in an account balance"],["GenesisAfterStartSnafu","SNAFU context selector for the `VDemoError::GenesisAfterStart` variant"],["GenesisFailedSnafu","SNAFU context selector for the `VDemoError::GenesisFailed` variant"],["InconsistentTransactionSnafu","SNAFU context selector for the `VDemoError::InconsistentTransaction` variant"],["InsufficentBalanceSnafu","SNAFU context selector for the `VDemoError::InsufficentBalance` variant"],["NoSuchInputAccountSnafu","SNAFU context selector for the `VDemoError::NoSuchInputAccount` variant"],["NoSuchOutputAccountSnafu","SNAFU context selector for the `VDemoError::NoSuchOutputAccount` variant"],["PreviousStateMismatchSnafu","SNAFU context selector for the `VDemoError::PreviousStateMismatch` variant"],["ReusedNonceSnafu","SNAFU context selector for the `VDemoError::ReusedNonce` variant"],["Subtraction","Records a reduction in an account balance"],["VDemoGenesisBlock","initializes the first state on genesis"],["VDemoMetaData","application metadata stub"],["VDemoNode","The node implementation for the validating demo"],["VDemoNormalBlock","Any block after genesis"],["VDemoState","The state for the validating demo NOTE both fields are btrees because we need ordered-ing otherwise commitments will not match"],["VDemoTransaction","The transaction for the validating demo"],["VDemoTypes","Implementation of [`NodeType`] for [`VDemoNode`]"]],"type":[["Account","The account identifier type used by the demo"],["Balance","The account balance type used by the demo"]]};